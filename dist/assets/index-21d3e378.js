function bA(t,e){for(var n=0;n<e.length;n++){const s=e[n];if(typeof s!="string"&&!Array.isArray(s)){for(const r in s)if(r!=="default"&&!(r in t)){const o=Object.getOwnPropertyDescriptor(s,r);o&&Object.defineProperty(t,r,o.get?o:{enumerable:!0,get:()=>s[r]})}}}return Object.freeze(Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}))}(function(){const e=document.createElement("link").relList;if(e&&e.supports&&e.supports("modulepreload"))return;for(const r of document.querySelectorAll('link[rel="modulepreload"]'))s(r);new MutationObserver(r=>{for(const o of r)if(o.type==="childList")for(const a of o.addedNodes)a.tagName==="LINK"&&a.rel==="modulepreload"&&s(a)}).observe(document,{childList:!0,subtree:!0});function n(r){const o={};return r.integrity&&(o.integrity=r.integrity),r.referrerPolicy&&(o.referrerPolicy=r.referrerPolicy),r.crossOrigin==="use-credentials"?o.credentials="include":r.crossOrigin==="anonymous"?o.credentials="omit":o.credentials="same-origin",o}function s(r){if(r.ep)return;r.ep=!0;const o=n(r);fetch(r.href,o)}})();var Wa=typeof globalThis<"u"?globalThis:typeof window<"u"?window:typeof global<"u"?global:typeof self<"u"?self:{};function jk(t){return t&&t.__esModule&&Object.prototype.hasOwnProperty.call(t,"default")?t.default:t}function wA(t){if(t.__esModule)return t;var e=t.default;if(typeof e=="function"){var n=function s(){return this instanceof s?Reflect.construct(e,arguments,this.constructor):e.apply(this,arguments)};n.prototype=e.prototype}else n={};return Object.defineProperty(n,"__esModule",{value:!0}),Object.keys(t).forEach(function(s){var r=Object.getOwnPropertyDescriptor(t,s);Object.defineProperty(n,s,r.get?r:{enumerable:!0,get:function(){return t[s]}})}),n}var Kk={exports:{}},vp={},qk={exports:{}},Be={};/**
 * @license React
 * react.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var ju=Symbol.for("react.element"),vA=Symbol.for("react.portal"),SA=Symbol.for("react.fragment"),kA=Symbol.for("react.strict_mode"),$A=Symbol.for("react.profiler"),CA=Symbol.for("react.provider"),NA=Symbol.for("react.context"),IA=Symbol.for("react.forward_ref"),TA=Symbol.for("react.suspense"),EA=Symbol.for("react.memo"),RA=Symbol.for("react.lazy"),Fw=Symbol.iterator;function DA(t){return t===null||typeof t!="object"?null:(t=Fw&&t[Fw]||t["@@iterator"],typeof t=="function"?t:null)}var Xk={isMounted:function(){return!1},enqueueForceUpdate:function(){},enqueueReplaceState:function(){},enqueueSetState:function(){}},Yk=Object.assign,Qk={};function dl(t,e,n){this.props=t,this.context=e,this.refs=Qk,this.updater=n||Xk}dl.prototype.isReactComponent={};dl.prototype.setState=function(t,e){if(typeof t!="object"&&typeof t!="function"&&t!=null)throw Error("setState(...): takes an object of state variables to update or a function which returns an object of state variables.");this.updater.enqueueSetState(this,t,e,"setState")};dl.prototype.forceUpdate=function(t){this.updater.enqueueForceUpdate(this,t,"forceUpdate")};function Zk(){}Zk.prototype=dl.prototype;function $0(t,e,n){this.props=t,this.context=e,this.refs=Qk,this.updater=n||Xk}var C0=$0.prototype=new Zk;C0.constructor=$0;Yk(C0,dl.prototype);C0.isPureReactComponent=!0;var Lw=Array.isArray,Jk=Object.prototype.hasOwnProperty,N0={current:null},e$={key:!0,ref:!0,__self:!0,__source:!0};function t$(t,e,n){var s,r={},o=null,a=null;if(e!=null)for(s in e.ref!==void 0&&(a=e.ref),e.key!==void 0&&(o=""+e.key),e)Jk.call(e,s)&&!e$.hasOwnProperty(s)&&(r[s]=e[s]);var i=arguments.length-2;if(i===1)r.children=n;else if(1<i){for(var l=Array(i),u=0;u<i;u++)l[u]=arguments[u+2];r.children=l}if(t&&t.defaultProps)for(s in i=t.defaultProps,i)r[s]===void 0&&(r[s]=i[s]);return{$$typeof:ju,type:t,key:o,ref:a,props:r,_owner:N0.current}}function AA(t,e){return{$$typeof:ju,type:t.type,key:e,ref:t.ref,props:t.props,_owner:t._owner}}function I0(t){return typeof t=="object"&&t!==null&&t.$$typeof===ju}function _A(t){var e={"=":"=0",":":"=2"};return"$"+t.replace(/[=:]/g,function(n){return e[n]})}var Pw=/\/+/g;function _m(t,e){return typeof t=="object"&&t!==null&&t.key!=null?_A(""+t.key):e.toString(36)}function nd(t,e,n,s,r){var o=typeof t;(o==="undefined"||o==="boolean")&&(t=null);var a=!1;if(t===null)a=!0;else switch(o){case"string":case"number":a=!0;break;case"object":switch(t.$$typeof){case ju:case vA:a=!0}}if(a)return a=t,r=r(a),t=s===""?"."+_m(a,0):s,Lw(r)?(n="",t!=null&&(n=t.replace(Pw,"$&/")+"/"),nd(r,e,n,"",function(u){return u})):r!=null&&(I0(r)&&(r=AA(r,n+(!r.key||a&&a.key===r.key?"":(""+r.key).replace(Pw,"$&/")+"/")+t)),e.push(r)),1;if(a=0,s=s===""?".":s+":",Lw(t))for(var i=0;i<t.length;i++){o=t[i];var l=s+_m(o,i);a+=nd(o,e,n,l,r)}else if(l=DA(t),typeof l=="function")for(t=l.call(t),i=0;!(o=t.next()).done;)o=o.value,l=s+_m(o,i++),a+=nd(o,e,n,l,r);else if(o==="object")throw e=String(t),Error("Objects are not valid as a React child (found: "+(e==="[object Object]"?"object with keys {"+Object.keys(t).join(", ")+"}":e)+"). If you meant to render a collection of children, use an array instead.");return a}function bh(t,e,n){if(t==null)return t;var s=[],r=0;return nd(t,s,"","",function(o){return e.call(n,o,r++)}),s}function OA(t){if(t._status===-1){var e=t._result;e=e(),e.then(function(n){(t._status===0||t._status===-1)&&(t._status=1,t._result=n)},function(n){(t._status===0||t._status===-1)&&(t._status=2,t._result=n)}),t._status===-1&&(t._status=0,t._result=e)}if(t._status===1)return t._result.default;throw t._result}var On={current:null},sd={transition:null},FA={ReactCurrentDispatcher:On,ReactCurrentBatchConfig:sd,ReactCurrentOwner:N0};function n$(){throw Error("act(...) is not supported in production builds of React.")}Be.Children={map:bh,forEach:function(t,e,n){bh(t,function(){e.apply(this,arguments)},n)},count:function(t){var e=0;return bh(t,function(){e++}),e},toArray:function(t){return bh(t,function(e){return e})||[]},only:function(t){if(!I0(t))throw Error("React.Children.only expected to receive a single React element child.");return t}};Be.Component=dl;Be.Fragment=SA;Be.Profiler=$A;Be.PureComponent=$0;Be.StrictMode=kA;Be.Suspense=TA;Be.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=FA;Be.act=n$;Be.cloneElement=function(t,e,n){if(t==null)throw Error("React.cloneElement(...): The argument must be a React element, but you passed "+t+".");var s=Yk({},t.props),r=t.key,o=t.ref,a=t._owner;if(e!=null){if(e.ref!==void 0&&(o=e.ref,a=N0.current),e.key!==void 0&&(r=""+e.key),t.type&&t.type.defaultProps)var i=t.type.defaultProps;for(l in e)Jk.call(e,l)&&!e$.hasOwnProperty(l)&&(s[l]=e[l]===void 0&&i!==void 0?i[l]:e[l])}var l=arguments.length-2;if(l===1)s.children=n;else if(1<l){i=Array(l);for(var u=0;u<l;u++)i[u]=arguments[u+2];s.children=i}return{$$typeof:ju,type:t.type,key:r,ref:o,props:s,_owner:a}};Be.createContext=function(t){return t={$$typeof:NA,_currentValue:t,_currentValue2:t,_threadCount:0,Provider:null,Consumer:null,_defaultValue:null,_globalName:null},t.Provider={$$typeof:CA,_context:t},t.Consumer=t};Be.createElement=t$;Be.createFactory=function(t){var e=t$.bind(null,t);return e.type=t,e};Be.createRef=function(){return{current:null}};Be.forwardRef=function(t){return{$$typeof:IA,render:t}};Be.isValidElement=I0;Be.lazy=function(t){return{$$typeof:RA,_payload:{_status:-1,_result:t},_init:OA}};Be.memo=function(t,e){return{$$typeof:EA,type:t,compare:e===void 0?null:e}};Be.startTransition=function(t){var e=sd.transition;sd.transition={};try{t()}finally{sd.transition=e}};Be.unstable_act=n$;Be.useCallback=function(t,e){return On.current.useCallback(t,e)};Be.useContext=function(t){return On.current.useContext(t)};Be.useDebugValue=function(){};Be.useDeferredValue=function(t){return On.current.useDeferredValue(t)};Be.useEffect=function(t,e){return On.current.useEffect(t,e)};Be.useId=function(){return On.current.useId()};Be.useImperativeHandle=function(t,e,n){return On.current.useImperativeHandle(t,e,n)};Be.useInsertionEffect=function(t,e){return On.current.useInsertionEffect(t,e)};Be.useLayoutEffect=function(t,e){return On.current.useLayoutEffect(t,e)};Be.useMemo=function(t,e){return On.current.useMemo(t,e)};Be.useReducer=function(t,e,n){return On.current.useReducer(t,e,n)};Be.useRef=function(t){return On.current.useRef(t)};Be.useState=function(t){return On.current.useState(t)};Be.useSyncExternalStore=function(t,e,n){return On.current.useSyncExternalStore(t,e,n)};Be.useTransition=function(){return On.current.useTransition()};Be.version="18.3.1";qk.exports=Be;var ke=qk.exports;const Rg=jk(ke);/**
 * @license React
 * react-jsx-runtime.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var LA=ke,PA=Symbol.for("react.element"),zA=Symbol.for("react.fragment"),MA=Object.prototype.hasOwnProperty,BA=LA.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,VA={key:!0,ref:!0,__self:!0,__source:!0};function s$(t,e,n){var s,r={},o=null,a=null;n!==void 0&&(o=""+n),e.key!==void 0&&(o=""+e.key),e.ref!==void 0&&(a=e.ref);for(s in e)MA.call(e,s)&&!VA.hasOwnProperty(s)&&(r[s]=e[s]);if(t&&t.defaultProps)for(s in e=t.defaultProps,e)r[s]===void 0&&(r[s]=e[s]);return{$$typeof:PA,type:t,key:o,ref:a,props:r,_owner:BA.current}}vp.Fragment=zA;vp.jsx=s$;vp.jsxs=s$;Kk.exports=vp;var T0=Kk.exports;const fi=T0.Fragment,ee=T0.jsx,ie=T0.jsxs;var Dg={},r$={exports:{}},ps={},o$={exports:{}},a$={};/**
 * @license React
 * scheduler.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */(function(t){function e(_,B){var H=_.length;_.push(B);e:for(;0<H;){var X=H-1>>>1,Q=_[X];if(0<r(Q,B))_[X]=B,_[H]=Q,H=X;else break e}}function n(_){return _.length===0?null:_[0]}function s(_){if(_.length===0)return null;var B=_[0],H=_.pop();if(H!==B){_[0]=H;e:for(var X=0,Q=_.length,Z=Q>>>1;X<Z;){var re=2*(X+1)-1,Y=_[re],J=re+1,oe=_[J];if(0>r(Y,H))J<Q&&0>r(oe,Y)?(_[X]=oe,_[J]=H,X=J):(_[X]=Y,_[re]=H,X=re);else if(J<Q&&0>r(oe,H))_[X]=oe,_[J]=H,X=J;else break e}}return B}function r(_,B){var H=_.sortIndex-B.sortIndex;return H!==0?H:_.id-B.id}if(typeof performance=="object"&&typeof performance.now=="function"){var o=performance;t.unstable_now=function(){return o.now()}}else{var a=Date,i=a.now();t.unstable_now=function(){return a.now()-i}}var l=[],u=[],c=1,h=null,d=3,p=!1,f=!1,m=!1,y=typeof setTimeout=="function"?setTimeout:null,g=typeof clearTimeout=="function"?clearTimeout:null,x=typeof setImmediate<"u"?setImmediate:null;typeof navigator<"u"&&navigator.scheduling!==void 0&&navigator.scheduling.isInputPending!==void 0&&navigator.scheduling.isInputPending.bind(navigator.scheduling);function w(_){for(var B=n(u);B!==null;){if(B.callback===null)s(u);else if(B.startTime<=_)s(u),B.sortIndex=B.expirationTime,e(l,B);else break;B=n(u)}}function b(_){if(m=!1,w(_),!f)if(n(l)!==null)f=!0,U(v);else{var B=n(u);B!==null&&j(b,B.startTime-_)}}function v(_,B){f=!1,m&&(m=!1,g(N),N=-1),p=!0;var H=d;try{for(w(B),h=n(l);h!==null&&(!(h.expirationTime>B)||_&&!R());){var X=h.callback;if(typeof X=="function"){h.callback=null,d=h.priorityLevel;var Q=X(h.expirationTime<=B);B=t.unstable_now(),typeof Q=="function"?h.callback=Q:h===n(l)&&s(l),w(B)}else s(l);h=n(l)}if(h!==null)var Z=!0;else{var re=n(u);re!==null&&j(b,re.startTime-B),Z=!1}return Z}finally{h=null,d=H,p=!1}}var k=!1,$=null,N=-1,E=5,T=-1;function R(){return!(t.unstable_now()-T<E)}function z(){if($!==null){var _=t.unstable_now();T=_;var B=!0;try{B=$(!0,_)}finally{B?P():(k=!1,$=null)}}else k=!1}var P;if(typeof x=="function")P=function(){x(z)};else if(typeof MessageChannel<"u"){var W=new MessageChannel,M=W.port2;W.port1.onmessage=z,P=function(){M.postMessage(null)}}else P=function(){y(z,0)};function U(_){$=_,k||(k=!0,P())}function j(_,B){N=y(function(){_(t.unstable_now())},B)}t.unstable_IdlePriority=5,t.unstable_ImmediatePriority=1,t.unstable_LowPriority=4,t.unstable_NormalPriority=3,t.unstable_Profiling=null,t.unstable_UserBlockingPriority=2,t.unstable_cancelCallback=function(_){_.callback=null},t.unstable_continueExecution=function(){f||p||(f=!0,U(v))},t.unstable_forceFrameRate=function(_){0>_||125<_?console.error("forceFrameRate takes a positive int between 0 and 125, forcing frame rates higher than 125 fps is not supported"):E=0<_?Math.floor(1e3/_):5},t.unstable_getCurrentPriorityLevel=function(){return d},t.unstable_getFirstCallbackNode=function(){return n(l)},t.unstable_next=function(_){switch(d){case 1:case 2:case 3:var B=3;break;default:B=d}var H=d;d=B;try{return _()}finally{d=H}},t.unstable_pauseExecution=function(){},t.unstable_requestPaint=function(){},t.unstable_runWithPriority=function(_,B){switch(_){case 1:case 2:case 3:case 4:case 5:break;default:_=3}var H=d;d=_;try{return B()}finally{d=H}},t.unstable_scheduleCallback=function(_,B,H){var X=t.unstable_now();switch(typeof H=="object"&&H!==null?(H=H.delay,H=typeof H=="number"&&0<H?X+H:X):H=X,_){case 1:var Q=-1;break;case 2:Q=250;break;case 5:Q=1073741823;break;case 4:Q=1e4;break;default:Q=5e3}return Q=H+Q,_={id:c++,callback:B,priorityLevel:_,startTime:H,expirationTime:Q,sortIndex:-1},H>X?(_.sortIndex=H,e(u,_),n(l)===null&&_===n(u)&&(m?(g(N),N=-1):m=!0,j(b,H-X))):(_.sortIndex=Q,e(l,_),f||p||(f=!0,U(v))),_},t.unstable_shouldYield=R,t.unstable_wrapCallback=function(_){var B=d;return function(){var H=d;d=B;try{return _.apply(this,arguments)}finally{d=H}}}})(a$);o$.exports=a$;var WA=o$.exports;/**
 * @license React
 * react-dom.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var UA=ke,ls=WA;function ae(t){for(var e="https://reactjs.org/docs/error-decoder.html?invariant="+t,n=1;n<arguments.length;n++)e+="&args[]="+encodeURIComponent(arguments[n]);return"Minified React error #"+t+"; visit "+e+" for the full message or use the non-minified dev environment for full errors and additional helpful warnings."}var i$=new Set,fu={};function Ua(t,e){Gi(t,e),Gi(t+"Capture",e)}function Gi(t,e){for(fu[t]=e,t=0;t<e.length;t++)i$.add(e[t])}var qr=!(typeof window>"u"||typeof window.document>"u"||typeof window.document.createElement>"u"),Ag=Object.prototype.hasOwnProperty,GA=/^[:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD][:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD\-.0-9\u00B7\u0300-\u036F\u203F-\u2040]*$/,zw={},Mw={};function HA(t){return Ag.call(Mw,t)?!0:Ag.call(zw,t)?!1:GA.test(t)?Mw[t]=!0:(zw[t]=!0,!1)}function jA(t,e,n,s){if(n!==null&&n.type===0)return!1;switch(typeof e){case"function":case"symbol":return!0;case"boolean":return s?!1:n!==null?!n.acceptsBooleans:(t=t.toLowerCase().slice(0,5),t!=="data-"&&t!=="aria-");default:return!1}}function KA(t,e,n,s){if(e===null||typeof e>"u"||jA(t,e,n,s))return!0;if(s)return!1;if(n!==null)switch(n.type){case 3:return!e;case 4:return e===!1;case 5:return isNaN(e);case 6:return isNaN(e)||1>e}return!1}function Fn(t,e,n,s,r,o,a){this.acceptsBooleans=e===2||e===3||e===4,this.attributeName=s,this.attributeNamespace=r,this.mustUseProperty=n,this.propertyName=t,this.type=e,this.sanitizeURL=o,this.removeEmptyString=a}var cn={};"children dangerouslySetInnerHTML defaultValue defaultChecked innerHTML suppressContentEditableWarning suppressHydrationWarning style".split(" ").forEach(function(t){cn[t]=new Fn(t,0,!1,t,null,!1,!1)});[["acceptCharset","accept-charset"],["className","class"],["htmlFor","for"],["httpEquiv","http-equiv"]].forEach(function(t){var e=t[0];cn[e]=new Fn(e,1,!1,t[1],null,!1,!1)});["contentEditable","draggable","spellCheck","value"].forEach(function(t){cn[t]=new Fn(t,2,!1,t.toLowerCase(),null,!1,!1)});["autoReverse","externalResourcesRequired","focusable","preserveAlpha"].forEach(function(t){cn[t]=new Fn(t,2,!1,t,null,!1,!1)});"allowFullScreen async autoFocus autoPlay controls default defer disabled disablePictureInPicture disableRemotePlayback formNoValidate hidden loop noModule noValidate open playsInline readOnly required reversed scoped seamless itemScope".split(" ").forEach(function(t){cn[t]=new Fn(t,3,!1,t.toLowerCase(),null,!1,!1)});["checked","multiple","muted","selected"].forEach(function(t){cn[t]=new Fn(t,3,!0,t,null,!1,!1)});["capture","download"].forEach(function(t){cn[t]=new Fn(t,4,!1,t,null,!1,!1)});["cols","rows","size","span"].forEach(function(t){cn[t]=new Fn(t,6,!1,t,null,!1,!1)});["rowSpan","start"].forEach(function(t){cn[t]=new Fn(t,5,!1,t.toLowerCase(),null,!1,!1)});var E0=/[\-:]([a-z])/g;function R0(t){return t[1].toUpperCase()}"accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode xmlns:xlink x-height".split(" ").forEach(function(t){var e=t.replace(E0,R0);cn[e]=new Fn(e,1,!1,t,null,!1,!1)});"xlink:actuate xlink:arcrole xlink:role xlink:show xlink:title xlink:type".split(" ").forEach(function(t){var e=t.replace(E0,R0);cn[e]=new Fn(e,1,!1,t,"http://www.w3.org/1999/xlink",!1,!1)});["xml:base","xml:lang","xml:space"].forEach(function(t){var e=t.replace(E0,R0);cn[e]=new Fn(e,1,!1,t,"http://www.w3.org/XML/1998/namespace",!1,!1)});["tabIndex","crossOrigin"].forEach(function(t){cn[t]=new Fn(t,1,!1,t.toLowerCase(),null,!1,!1)});cn.xlinkHref=new Fn("xlinkHref",1,!1,"xlink:href","http://www.w3.org/1999/xlink",!0,!1);["src","href","action","formAction"].forEach(function(t){cn[t]=new Fn(t,1,!1,t.toLowerCase(),null,!0,!0)});function D0(t,e,n,s){var r=cn.hasOwnProperty(e)?cn[e]:null;(r!==null?r.type!==0:s||!(2<e.length)||e[0]!=="o"&&e[0]!=="O"||e[1]!=="n"&&e[1]!=="N")&&(KA(e,n,r,s)&&(n=null),s||r===null?HA(e)&&(n===null?t.removeAttribute(e):t.setAttribute(e,""+n)):r.mustUseProperty?t[r.propertyName]=n===null?r.type===3?!1:"":n:(e=r.attributeName,s=r.attributeNamespace,n===null?t.removeAttribute(e):(r=r.type,n=r===3||r===4&&n===!0?"":""+n,s?t.setAttributeNS(s,e,n):t.setAttribute(e,n))))}var to=UA.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED,wh=Symbol.for("react.element"),mi=Symbol.for("react.portal"),gi=Symbol.for("react.fragment"),A0=Symbol.for("react.strict_mode"),_g=Symbol.for("react.profiler"),l$=Symbol.for("react.provider"),u$=Symbol.for("react.context"),_0=Symbol.for("react.forward_ref"),Og=Symbol.for("react.suspense"),Fg=Symbol.for("react.suspense_list"),O0=Symbol.for("react.memo"),lo=Symbol.for("react.lazy"),c$=Symbol.for("react.offscreen"),Bw=Symbol.iterator;function Ol(t){return t===null||typeof t!="object"?null:(t=Bw&&t[Bw]||t["@@iterator"],typeof t=="function"?t:null)}var wt=Object.assign,Om;function jl(t){if(Om===void 0)try{throw Error()}catch(n){var e=n.stack.trim().match(/\n( *(at )?)/);Om=e&&e[1]||""}return`
`+Om+t}var Fm=!1;function Lm(t,e){if(!t||Fm)return"";Fm=!0;var n=Error.prepareStackTrace;Error.prepareStackTrace=void 0;try{if(e)if(e=function(){throw Error()},Object.defineProperty(e.prototype,"props",{set:function(){throw Error()}}),typeof Reflect=="object"&&Reflect.construct){try{Reflect.construct(e,[])}catch(u){var s=u}Reflect.construct(t,[],e)}else{try{e.call()}catch(u){s=u}t.call(e.prototype)}else{try{throw Error()}catch(u){s=u}t()}}catch(u){if(u&&s&&typeof u.stack=="string"){for(var r=u.stack.split(`
`),o=s.stack.split(`
`),a=r.length-1,i=o.length-1;1<=a&&0<=i&&r[a]!==o[i];)i--;for(;1<=a&&0<=i;a--,i--)if(r[a]!==o[i]){if(a!==1||i!==1)do if(a--,i--,0>i||r[a]!==o[i]){var l=`
`+r[a].replace(" at new "," at ");return t.displayName&&l.includes("<anonymous>")&&(l=l.replace("<anonymous>",t.displayName)),l}while(1<=a&&0<=i);break}}}finally{Fm=!1,Error.prepareStackTrace=n}return(t=t?t.displayName||t.name:"")?jl(t):""}function qA(t){switch(t.tag){case 5:return jl(t.type);case 16:return jl("Lazy");case 13:return jl("Suspense");case 19:return jl("SuspenseList");case 0:case 2:case 15:return t=Lm(t.type,!1),t;case 11:return t=Lm(t.type.render,!1),t;case 1:return t=Lm(t.type,!0),t;default:return""}}function Lg(t){if(t==null)return null;if(typeof t=="function")return t.displayName||t.name||null;if(typeof t=="string")return t;switch(t){case gi:return"Fragment";case mi:return"Portal";case _g:return"Profiler";case A0:return"StrictMode";case Og:return"Suspense";case Fg:return"SuspenseList"}if(typeof t=="object")switch(t.$$typeof){case u$:return(t.displayName||"Context")+".Consumer";case l$:return(t._context.displayName||"Context")+".Provider";case _0:var e=t.render;return t=t.displayName,t||(t=e.displayName||e.name||"",t=t!==""?"ForwardRef("+t+")":"ForwardRef"),t;case O0:return e=t.displayName||null,e!==null?e:Lg(t.type)||"Memo";case lo:e=t._payload,t=t._init;try{return Lg(t(e))}catch{}}return null}function XA(t){var e=t.type;switch(t.tag){case 24:return"Cache";case 9:return(e.displayName||"Context")+".Consumer";case 10:return(e._context.displayName||"Context")+".Provider";case 18:return"DehydratedFragment";case 11:return t=e.render,t=t.displayName||t.name||"",e.displayName||(t!==""?"ForwardRef("+t+")":"ForwardRef");case 7:return"Fragment";case 5:return e;case 4:return"Portal";case 3:return"Root";case 6:return"Text";case 16:return Lg(e);case 8:return e===A0?"StrictMode":"Mode";case 22:return"Offscreen";case 12:return"Profiler";case 21:return"Scope";case 13:return"Suspense";case 19:return"SuspenseList";case 25:return"TracingMarker";case 1:case 0:case 17:case 2:case 14:case 15:if(typeof e=="function")return e.displayName||e.name||null;if(typeof e=="string")return e}return null}function Do(t){switch(typeof t){case"boolean":case"number":case"string":case"undefined":return t;case"object":return t;default:return""}}function h$(t){var e=t.type;return(t=t.nodeName)&&t.toLowerCase()==="input"&&(e==="checkbox"||e==="radio")}function YA(t){var e=h$(t)?"checked":"value",n=Object.getOwnPropertyDescriptor(t.constructor.prototype,e),s=""+t[e];if(!t.hasOwnProperty(e)&&typeof n<"u"&&typeof n.get=="function"&&typeof n.set=="function"){var r=n.get,o=n.set;return Object.defineProperty(t,e,{configurable:!0,get:function(){return r.call(this)},set:function(a){s=""+a,o.call(this,a)}}),Object.defineProperty(t,e,{enumerable:n.enumerable}),{getValue:function(){return s},setValue:function(a){s=""+a},stopTracking:function(){t._valueTracker=null,delete t[e]}}}}function vh(t){t._valueTracker||(t._valueTracker=YA(t))}function d$(t){if(!t)return!1;var e=t._valueTracker;if(!e)return!0;var n=e.getValue(),s="";return t&&(s=h$(t)?t.checked?"true":"false":t.value),t=s,t!==n?(e.setValue(t),!0):!1}function xd(t){if(t=t||(typeof document<"u"?document:void 0),typeof t>"u")return null;try{return t.activeElement||t.body}catch{return t.body}}function Pg(t,e){var n=e.checked;return wt({},e,{defaultChecked:void 0,defaultValue:void 0,value:void 0,checked:n??t._wrapperState.initialChecked})}function Vw(t,e){var n=e.defaultValue==null?"":e.defaultValue,s=e.checked!=null?e.checked:e.defaultChecked;n=Do(e.value!=null?e.value:n),t._wrapperState={initialChecked:s,initialValue:n,controlled:e.type==="checkbox"||e.type==="radio"?e.checked!=null:e.value!=null}}function p$(t,e){e=e.checked,e!=null&&D0(t,"checked",e,!1)}function zg(t,e){p$(t,e);var n=Do(e.value),s=e.type;if(n!=null)s==="number"?(n===0&&t.value===""||t.value!=n)&&(t.value=""+n):t.value!==""+n&&(t.value=""+n);else if(s==="submit"||s==="reset"){t.removeAttribute("value");return}e.hasOwnProperty("value")?Mg(t,e.type,n):e.hasOwnProperty("defaultValue")&&Mg(t,e.type,Do(e.defaultValue)),e.checked==null&&e.defaultChecked!=null&&(t.defaultChecked=!!e.defaultChecked)}function Ww(t,e,n){if(e.hasOwnProperty("value")||e.hasOwnProperty("defaultValue")){var s=e.type;if(!(s!=="submit"&&s!=="reset"||e.value!==void 0&&e.value!==null))return;e=""+t._wrapperState.initialValue,n||e===t.value||(t.value=e),t.defaultValue=e}n=t.name,n!==""&&(t.name=""),t.defaultChecked=!!t._wrapperState.initialChecked,n!==""&&(t.name=n)}function Mg(t,e,n){(e!=="number"||xd(t.ownerDocument)!==t)&&(n==null?t.defaultValue=""+t._wrapperState.initialValue:t.defaultValue!==""+n&&(t.defaultValue=""+n))}var Kl=Array.isArray;function Ei(t,e,n,s){if(t=t.options,e){e={};for(var r=0;r<n.length;r++)e["$"+n[r]]=!0;for(n=0;n<t.length;n++)r=e.hasOwnProperty("$"+t[n].value),t[n].selected!==r&&(t[n].selected=r),r&&s&&(t[n].defaultSelected=!0)}else{for(n=""+Do(n),e=null,r=0;r<t.length;r++){if(t[r].value===n){t[r].selected=!0,s&&(t[r].defaultSelected=!0);return}e!==null||t[r].disabled||(e=t[r])}e!==null&&(e.selected=!0)}}function Bg(t,e){if(e.dangerouslySetInnerHTML!=null)throw Error(ae(91));return wt({},e,{value:void 0,defaultValue:void 0,children:""+t._wrapperState.initialValue})}function Uw(t,e){var n=e.value;if(n==null){if(n=e.children,e=e.defaultValue,n!=null){if(e!=null)throw Error(ae(92));if(Kl(n)){if(1<n.length)throw Error(ae(93));n=n[0]}e=n}e==null&&(e=""),n=e}t._wrapperState={initialValue:Do(n)}}function f$(t,e){var n=Do(e.value),s=Do(e.defaultValue);n!=null&&(n=""+n,n!==t.value&&(t.value=n),e.defaultValue==null&&t.defaultValue!==n&&(t.defaultValue=n)),s!=null&&(t.defaultValue=""+s)}function Gw(t){var e=t.textContent;e===t._wrapperState.initialValue&&e!==""&&e!==null&&(t.value=e)}function m$(t){switch(t){case"svg":return"http://www.w3.org/2000/svg";case"math":return"http://www.w3.org/1998/Math/MathML";default:return"http://www.w3.org/1999/xhtml"}}function Vg(t,e){return t==null||t==="http://www.w3.org/1999/xhtml"?m$(e):t==="http://www.w3.org/2000/svg"&&e==="foreignObject"?"http://www.w3.org/1999/xhtml":t}var Sh,g$=function(t){return typeof MSApp<"u"&&MSApp.execUnsafeLocalFunction?function(e,n,s,r){MSApp.execUnsafeLocalFunction(function(){return t(e,n,s,r)})}:t}(function(t,e){if(t.namespaceURI!=="http://www.w3.org/2000/svg"||"innerHTML"in t)t.innerHTML=e;else{for(Sh=Sh||document.createElement("div"),Sh.innerHTML="<svg>"+e.valueOf().toString()+"</svg>",e=Sh.firstChild;t.firstChild;)t.removeChild(t.firstChild);for(;e.firstChild;)t.appendChild(e.firstChild)}});function mu(t,e){if(e){var n=t.firstChild;if(n&&n===t.lastChild&&n.nodeType===3){n.nodeValue=e;return}}t.textContent=e}var su={animationIterationCount:!0,aspectRatio:!0,borderImageOutset:!0,borderImageSlice:!0,borderImageWidth:!0,boxFlex:!0,boxFlexGroup:!0,boxOrdinalGroup:!0,columnCount:!0,columns:!0,flex:!0,flexGrow:!0,flexPositive:!0,flexShrink:!0,flexNegative:!0,flexOrder:!0,gridArea:!0,gridRow:!0,gridRowEnd:!0,gridRowSpan:!0,gridRowStart:!0,gridColumn:!0,gridColumnEnd:!0,gridColumnSpan:!0,gridColumnStart:!0,fontWeight:!0,lineClamp:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,tabSize:!0,widows:!0,zIndex:!0,zoom:!0,fillOpacity:!0,floodOpacity:!0,stopOpacity:!0,strokeDasharray:!0,strokeDashoffset:!0,strokeMiterlimit:!0,strokeOpacity:!0,strokeWidth:!0},QA=["Webkit","ms","Moz","O"];Object.keys(su).forEach(function(t){QA.forEach(function(e){e=e+t.charAt(0).toUpperCase()+t.substring(1),su[e]=su[t]})});function y$(t,e,n){return e==null||typeof e=="boolean"||e===""?"":n||typeof e!="number"||e===0||su.hasOwnProperty(t)&&su[t]?(""+e).trim():e+"px"}function x$(t,e){t=t.style;for(var n in e)if(e.hasOwnProperty(n)){var s=n.indexOf("--")===0,r=y$(n,e[n],s);n==="float"&&(n="cssFloat"),s?t.setProperty(n,r):t[n]=r}}var ZA=wt({menuitem:!0},{area:!0,base:!0,br:!0,col:!0,embed:!0,hr:!0,img:!0,input:!0,keygen:!0,link:!0,meta:!0,param:!0,source:!0,track:!0,wbr:!0});function Wg(t,e){if(e){if(ZA[t]&&(e.children!=null||e.dangerouslySetInnerHTML!=null))throw Error(ae(137,t));if(e.dangerouslySetInnerHTML!=null){if(e.children!=null)throw Error(ae(60));if(typeof e.dangerouslySetInnerHTML!="object"||!("__html"in e.dangerouslySetInnerHTML))throw Error(ae(61))}if(e.style!=null&&typeof e.style!="object")throw Error(ae(62))}}function Ug(t,e){if(t.indexOf("-")===-1)return typeof e.is=="string";switch(t){case"annotation-xml":case"color-profile":case"font-face":case"font-face-src":case"font-face-uri":case"font-face-format":case"font-face-name":case"missing-glyph":return!1;default:return!0}}var Gg=null;function F0(t){return t=t.target||t.srcElement||window,t.correspondingUseElement&&(t=t.correspondingUseElement),t.nodeType===3?t.parentNode:t}var Hg=null,Ri=null,Di=null;function Hw(t){if(t=Xu(t)){if(typeof Hg!="function")throw Error(ae(280));var e=t.stateNode;e&&(e=Np(e),Hg(t.stateNode,t.type,e))}}function b$(t){Ri?Di?Di.push(t):Di=[t]:Ri=t}function w$(){if(Ri){var t=Ri,e=Di;if(Di=Ri=null,Hw(t),e)for(t=0;t<e.length;t++)Hw(e[t])}}function v$(t,e){return t(e)}function S$(){}var Pm=!1;function k$(t,e,n){if(Pm)return t(e,n);Pm=!0;try{return v$(t,e,n)}finally{Pm=!1,(Ri!==null||Di!==null)&&(S$(),w$())}}function gu(t,e){var n=t.stateNode;if(n===null)return null;var s=Np(n);if(s===null)return null;n=s[e];e:switch(e){case"onClick":case"onClickCapture":case"onDoubleClick":case"onDoubleClickCapture":case"onMouseDown":case"onMouseDownCapture":case"onMouseMove":case"onMouseMoveCapture":case"onMouseUp":case"onMouseUpCapture":case"onMouseEnter":(s=!s.disabled)||(t=t.type,s=!(t==="button"||t==="input"||t==="select"||t==="textarea")),t=!s;break e;default:t=!1}if(t)return null;if(n&&typeof n!="function")throw Error(ae(231,e,typeof n));return n}var jg=!1;if(qr)try{var Fl={};Object.defineProperty(Fl,"passive",{get:function(){jg=!0}}),window.addEventListener("test",Fl,Fl),window.removeEventListener("test",Fl,Fl)}catch{jg=!1}function JA(t,e,n,s,r,o,a,i,l){var u=Array.prototype.slice.call(arguments,3);try{e.apply(n,u)}catch(c){this.onError(c)}}var ru=!1,bd=null,wd=!1,Kg=null,e_={onError:function(t){ru=!0,bd=t}};function t_(t,e,n,s,r,o,a,i,l){ru=!1,bd=null,JA.apply(e_,arguments)}function n_(t,e,n,s,r,o,a,i,l){if(t_.apply(this,arguments),ru){if(ru){var u=bd;ru=!1,bd=null}else throw Error(ae(198));wd||(wd=!0,Kg=u)}}function Ga(t){var e=t,n=t;if(t.alternate)for(;e.return;)e=e.return;else{t=e;do e=t,e.flags&4098&&(n=e.return),t=e.return;while(t)}return e.tag===3?n:null}function $$(t){if(t.tag===13){var e=t.memoizedState;if(e===null&&(t=t.alternate,t!==null&&(e=t.memoizedState)),e!==null)return e.dehydrated}return null}function jw(t){if(Ga(t)!==t)throw Error(ae(188))}function s_(t){var e=t.alternate;if(!e){if(e=Ga(t),e===null)throw Error(ae(188));return e!==t?null:t}for(var n=t,s=e;;){var r=n.return;if(r===null)break;var o=r.alternate;if(o===null){if(s=r.return,s!==null){n=s;continue}break}if(r.child===o.child){for(o=r.child;o;){if(o===n)return jw(r),t;if(o===s)return jw(r),e;o=o.sibling}throw Error(ae(188))}if(n.return!==s.return)n=r,s=o;else{for(var a=!1,i=r.child;i;){if(i===n){a=!0,n=r,s=o;break}if(i===s){a=!0,s=r,n=o;break}i=i.sibling}if(!a){for(i=o.child;i;){if(i===n){a=!0,n=o,s=r;break}if(i===s){a=!0,s=o,n=r;break}i=i.sibling}if(!a)throw Error(ae(189))}}if(n.alternate!==s)throw Error(ae(190))}if(n.tag!==3)throw Error(ae(188));return n.stateNode.current===n?t:e}function C$(t){return t=s_(t),t!==null?N$(t):null}function N$(t){if(t.tag===5||t.tag===6)return t;for(t=t.child;t!==null;){var e=N$(t);if(e!==null)return e;t=t.sibling}return null}var I$=ls.unstable_scheduleCallback,Kw=ls.unstable_cancelCallback,r_=ls.unstable_shouldYield,o_=ls.unstable_requestPaint,Et=ls.unstable_now,a_=ls.unstable_getCurrentPriorityLevel,L0=ls.unstable_ImmediatePriority,T$=ls.unstable_UserBlockingPriority,vd=ls.unstable_NormalPriority,i_=ls.unstable_LowPriority,E$=ls.unstable_IdlePriority,Sp=null,kr=null;function l_(t){if(kr&&typeof kr.onCommitFiberRoot=="function")try{kr.onCommitFiberRoot(Sp,t,void 0,(t.current.flags&128)===128)}catch{}}var tr=Math.clz32?Math.clz32:h_,u_=Math.log,c_=Math.LN2;function h_(t){return t>>>=0,t===0?32:31-(u_(t)/c_|0)|0}var kh=64,$h=4194304;function ql(t){switch(t&-t){case 1:return 1;case 2:return 2;case 4:return 4;case 8:return 8;case 16:return 16;case 32:return 32;case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:return t&4194240;case 4194304:case 8388608:case 16777216:case 33554432:case 67108864:return t&130023424;case 134217728:return 134217728;case 268435456:return 268435456;case 536870912:return 536870912;case 1073741824:return 1073741824;default:return t}}function Sd(t,e){var n=t.pendingLanes;if(n===0)return 0;var s=0,r=t.suspendedLanes,o=t.pingedLanes,a=n&268435455;if(a!==0){var i=a&~r;i!==0?s=ql(i):(o&=a,o!==0&&(s=ql(o)))}else a=n&~r,a!==0?s=ql(a):o!==0&&(s=ql(o));if(s===0)return 0;if(e!==0&&e!==s&&!(e&r)&&(r=s&-s,o=e&-e,r>=o||r===16&&(o&4194240)!==0))return e;if(s&4&&(s|=n&16),e=t.entangledLanes,e!==0)for(t=t.entanglements,e&=s;0<e;)n=31-tr(e),r=1<<n,s|=t[n],e&=~r;return s}function d_(t,e){switch(t){case 1:case 2:case 4:return e+250;case 8:case 16:case 32:case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:return e+5e3;case 4194304:case 8388608:case 16777216:case 33554432:case 67108864:return-1;case 134217728:case 268435456:case 536870912:case 1073741824:return-1;default:return-1}}function p_(t,e){for(var n=t.suspendedLanes,s=t.pingedLanes,r=t.expirationTimes,o=t.pendingLanes;0<o;){var a=31-tr(o),i=1<<a,l=r[a];l===-1?(!(i&n)||i&s)&&(r[a]=d_(i,e)):l<=e&&(t.expiredLanes|=i),o&=~i}}function qg(t){return t=t.pendingLanes&-1073741825,t!==0?t:t&1073741824?1073741824:0}function R$(){var t=kh;return kh<<=1,!(kh&4194240)&&(kh=64),t}function zm(t){for(var e=[],n=0;31>n;n++)e.push(t);return e}function Ku(t,e,n){t.pendingLanes|=e,e!==536870912&&(t.suspendedLanes=0,t.pingedLanes=0),t=t.eventTimes,e=31-tr(e),t[e]=n}function f_(t,e){var n=t.pendingLanes&~e;t.pendingLanes=e,t.suspendedLanes=0,t.pingedLanes=0,t.expiredLanes&=e,t.mutableReadLanes&=e,t.entangledLanes&=e,e=t.entanglements;var s=t.eventTimes;for(t=t.expirationTimes;0<n;){var r=31-tr(n),o=1<<r;e[r]=0,s[r]=-1,t[r]=-1,n&=~o}}function P0(t,e){var n=t.entangledLanes|=e;for(t=t.entanglements;n;){var s=31-tr(n),r=1<<s;r&e|t[s]&e&&(t[s]|=e),n&=~r}}var Xe=0;function D$(t){return t&=-t,1<t?4<t?t&268435455?16:536870912:4:1}var A$,z0,_$,O$,F$,Xg=!1,Ch=[],bo=null,wo=null,vo=null,yu=new Map,xu=new Map,ho=[],m_="mousedown mouseup touchcancel touchend touchstart auxclick dblclick pointercancel pointerdown pointerup dragend dragstart drop compositionend compositionstart keydown keypress keyup input textInput copy cut paste click change contextmenu reset submit".split(" ");function qw(t,e){switch(t){case"focusin":case"focusout":bo=null;break;case"dragenter":case"dragleave":wo=null;break;case"mouseover":case"mouseout":vo=null;break;case"pointerover":case"pointerout":yu.delete(e.pointerId);break;case"gotpointercapture":case"lostpointercapture":xu.delete(e.pointerId)}}function Ll(t,e,n,s,r,o){return t===null||t.nativeEvent!==o?(t={blockedOn:e,domEventName:n,eventSystemFlags:s,nativeEvent:o,targetContainers:[r]},e!==null&&(e=Xu(e),e!==null&&z0(e)),t):(t.eventSystemFlags|=s,e=t.targetContainers,r!==null&&e.indexOf(r)===-1&&e.push(r),t)}function g_(t,e,n,s,r){switch(e){case"focusin":return bo=Ll(bo,t,e,n,s,r),!0;case"dragenter":return wo=Ll(wo,t,e,n,s,r),!0;case"mouseover":return vo=Ll(vo,t,e,n,s,r),!0;case"pointerover":var o=r.pointerId;return yu.set(o,Ll(yu.get(o)||null,t,e,n,s,r)),!0;case"gotpointercapture":return o=r.pointerId,xu.set(o,Ll(xu.get(o)||null,t,e,n,s,r)),!0}return!1}function L$(t){var e=pa(t.target);if(e!==null){var n=Ga(e);if(n!==null){if(e=n.tag,e===13){if(e=$$(n),e!==null){t.blockedOn=e,F$(t.priority,function(){_$(n)});return}}else if(e===3&&n.stateNode.current.memoizedState.isDehydrated){t.blockedOn=n.tag===3?n.stateNode.containerInfo:null;return}}}t.blockedOn=null}function rd(t){if(t.blockedOn!==null)return!1;for(var e=t.targetContainers;0<e.length;){var n=Yg(t.domEventName,t.eventSystemFlags,e[0],t.nativeEvent);if(n===null){n=t.nativeEvent;var s=new n.constructor(n.type,n);Gg=s,n.target.dispatchEvent(s),Gg=null}else return e=Xu(n),e!==null&&z0(e),t.blockedOn=n,!1;e.shift()}return!0}function Xw(t,e,n){rd(t)&&n.delete(e)}function y_(){Xg=!1,bo!==null&&rd(bo)&&(bo=null),wo!==null&&rd(wo)&&(wo=null),vo!==null&&rd(vo)&&(vo=null),yu.forEach(Xw),xu.forEach(Xw)}function Pl(t,e){t.blockedOn===e&&(t.blockedOn=null,Xg||(Xg=!0,ls.unstable_scheduleCallback(ls.unstable_NormalPriority,y_)))}function bu(t){function e(r){return Pl(r,t)}if(0<Ch.length){Pl(Ch[0],t);for(var n=1;n<Ch.length;n++){var s=Ch[n];s.blockedOn===t&&(s.blockedOn=null)}}for(bo!==null&&Pl(bo,t),wo!==null&&Pl(wo,t),vo!==null&&Pl(vo,t),yu.forEach(e),xu.forEach(e),n=0;n<ho.length;n++)s=ho[n],s.blockedOn===t&&(s.blockedOn=null);for(;0<ho.length&&(n=ho[0],n.blockedOn===null);)L$(n),n.blockedOn===null&&ho.shift()}var Ai=to.ReactCurrentBatchConfig,kd=!0;function x_(t,e,n,s){var r=Xe,o=Ai.transition;Ai.transition=null;try{Xe=1,M0(t,e,n,s)}finally{Xe=r,Ai.transition=o}}function b_(t,e,n,s){var r=Xe,o=Ai.transition;Ai.transition=null;try{Xe=4,M0(t,e,n,s)}finally{Xe=r,Ai.transition=o}}function M0(t,e,n,s){if(kd){var r=Yg(t,e,n,s);if(r===null)qm(t,e,s,$d,n),qw(t,s);else if(g_(r,t,e,n,s))s.stopPropagation();else if(qw(t,s),e&4&&-1<m_.indexOf(t)){for(;r!==null;){var o=Xu(r);if(o!==null&&A$(o),o=Yg(t,e,n,s),o===null&&qm(t,e,s,$d,n),o===r)break;r=o}r!==null&&s.stopPropagation()}else qm(t,e,s,null,n)}}var $d=null;function Yg(t,e,n,s){if($d=null,t=F0(s),t=pa(t),t!==null)if(e=Ga(t),e===null)t=null;else if(n=e.tag,n===13){if(t=$$(e),t!==null)return t;t=null}else if(n===3){if(e.stateNode.current.memoizedState.isDehydrated)return e.tag===3?e.stateNode.containerInfo:null;t=null}else e!==t&&(t=null);return $d=t,null}function P$(t){switch(t){case"cancel":case"click":case"close":case"contextmenu":case"copy":case"cut":case"auxclick":case"dblclick":case"dragend":case"dragstart":case"drop":case"focusin":case"focusout":case"input":case"invalid":case"keydown":case"keypress":case"keyup":case"mousedown":case"mouseup":case"paste":case"pause":case"play":case"pointercancel":case"pointerdown":case"pointerup":case"ratechange":case"reset":case"resize":case"seeked":case"submit":case"touchcancel":case"touchend":case"touchstart":case"volumechange":case"change":case"selectionchange":case"textInput":case"compositionstart":case"compositionend":case"compositionupdate":case"beforeblur":case"afterblur":case"beforeinput":case"blur":case"fullscreenchange":case"focus":case"hashchange":case"popstate":case"select":case"selectstart":return 1;case"drag":case"dragenter":case"dragexit":case"dragleave":case"dragover":case"mousemove":case"mouseout":case"mouseover":case"pointermove":case"pointerout":case"pointerover":case"scroll":case"toggle":case"touchmove":case"wheel":case"mouseenter":case"mouseleave":case"pointerenter":case"pointerleave":return 4;case"message":switch(a_()){case L0:return 1;case T$:return 4;case vd:case i_:return 16;case E$:return 536870912;default:return 16}default:return 16}}var fo=null,B0=null,od=null;function z$(){if(od)return od;var t,e=B0,n=e.length,s,r="value"in fo?fo.value:fo.textContent,o=r.length;for(t=0;t<n&&e[t]===r[t];t++);var a=n-t;for(s=1;s<=a&&e[n-s]===r[o-s];s++);return od=r.slice(t,1<s?1-s:void 0)}function ad(t){var e=t.keyCode;return"charCode"in t?(t=t.charCode,t===0&&e===13&&(t=13)):t=e,t===10&&(t=13),32<=t||t===13?t:0}function Nh(){return!0}function Yw(){return!1}function fs(t){function e(n,s,r,o,a){this._reactName=n,this._targetInst=r,this.type=s,this.nativeEvent=o,this.target=a,this.currentTarget=null;for(var i in t)t.hasOwnProperty(i)&&(n=t[i],this[i]=n?n(o):o[i]);return this.isDefaultPrevented=(o.defaultPrevented!=null?o.defaultPrevented:o.returnValue===!1)?Nh:Yw,this.isPropagationStopped=Yw,this}return wt(e.prototype,{preventDefault:function(){this.defaultPrevented=!0;var n=this.nativeEvent;n&&(n.preventDefault?n.preventDefault():typeof n.returnValue!="unknown"&&(n.returnValue=!1),this.isDefaultPrevented=Nh)},stopPropagation:function(){var n=this.nativeEvent;n&&(n.stopPropagation?n.stopPropagation():typeof n.cancelBubble!="unknown"&&(n.cancelBubble=!0),this.isPropagationStopped=Nh)},persist:function(){},isPersistent:Nh}),e}var pl={eventPhase:0,bubbles:0,cancelable:0,timeStamp:function(t){return t.timeStamp||Date.now()},defaultPrevented:0,isTrusted:0},V0=fs(pl),qu=wt({},pl,{view:0,detail:0}),w_=fs(qu),Mm,Bm,zl,kp=wt({},qu,{screenX:0,screenY:0,clientX:0,clientY:0,pageX:0,pageY:0,ctrlKey:0,shiftKey:0,altKey:0,metaKey:0,getModifierState:W0,button:0,buttons:0,relatedTarget:function(t){return t.relatedTarget===void 0?t.fromElement===t.srcElement?t.toElement:t.fromElement:t.relatedTarget},movementX:function(t){return"movementX"in t?t.movementX:(t!==zl&&(zl&&t.type==="mousemove"?(Mm=t.screenX-zl.screenX,Bm=t.screenY-zl.screenY):Bm=Mm=0,zl=t),Mm)},movementY:function(t){return"movementY"in t?t.movementY:Bm}}),Qw=fs(kp),v_=wt({},kp,{dataTransfer:0}),S_=fs(v_),k_=wt({},qu,{relatedTarget:0}),Vm=fs(k_),$_=wt({},pl,{animationName:0,elapsedTime:0,pseudoElement:0}),C_=fs($_),N_=wt({},pl,{clipboardData:function(t){return"clipboardData"in t?t.clipboardData:window.clipboardData}}),I_=fs(N_),T_=wt({},pl,{data:0}),Zw=fs(T_),E_={Esc:"Escape",Spacebar:" ",Left:"ArrowLeft",Up:"ArrowUp",Right:"ArrowRight",Down:"ArrowDown",Del:"Delete",Win:"OS",Menu:"ContextMenu",Apps:"ContextMenu",Scroll:"ScrollLock",MozPrintableKey:"Unidentified"},R_={8:"Backspace",9:"Tab",12:"Clear",13:"Enter",16:"Shift",17:"Control",18:"Alt",19:"Pause",20:"CapsLock",27:"Escape",32:" ",33:"PageUp",34:"PageDown",35:"End",36:"Home",37:"ArrowLeft",38:"ArrowUp",39:"ArrowRight",40:"ArrowDown",45:"Insert",46:"Delete",112:"F1",113:"F2",114:"F3",115:"F4",116:"F5",117:"F6",118:"F7",119:"F8",120:"F9",121:"F10",122:"F11",123:"F12",144:"NumLock",145:"ScrollLock",224:"Meta"},D_={Alt:"altKey",Control:"ctrlKey",Meta:"metaKey",Shift:"shiftKey"};function A_(t){var e=this.nativeEvent;return e.getModifierState?e.getModifierState(t):(t=D_[t])?!!e[t]:!1}function W0(){return A_}var __=wt({},qu,{key:function(t){if(t.key){var e=E_[t.key]||t.key;if(e!=="Unidentified")return e}return t.type==="keypress"?(t=ad(t),t===13?"Enter":String.fromCharCode(t)):t.type==="keydown"||t.type==="keyup"?R_[t.keyCode]||"Unidentified":""},code:0,location:0,ctrlKey:0,shiftKey:0,altKey:0,metaKey:0,repeat:0,locale:0,getModifierState:W0,charCode:function(t){return t.type==="keypress"?ad(t):0},keyCode:function(t){return t.type==="keydown"||t.type==="keyup"?t.keyCode:0},which:function(t){return t.type==="keypress"?ad(t):t.type==="keydown"||t.type==="keyup"?t.keyCode:0}}),O_=fs(__),F_=wt({},kp,{pointerId:0,width:0,height:0,pressure:0,tangentialPressure:0,tiltX:0,tiltY:0,twist:0,pointerType:0,isPrimary:0}),Jw=fs(F_),L_=wt({},qu,{touches:0,targetTouches:0,changedTouches:0,altKey:0,metaKey:0,ctrlKey:0,shiftKey:0,getModifierState:W0}),P_=fs(L_),z_=wt({},pl,{propertyName:0,elapsedTime:0,pseudoElement:0}),M_=fs(z_),B_=wt({},kp,{deltaX:function(t){return"deltaX"in t?t.deltaX:"wheelDeltaX"in t?-t.wheelDeltaX:0},deltaY:function(t){return"deltaY"in t?t.deltaY:"wheelDeltaY"in t?-t.wheelDeltaY:"wheelDelta"in t?-t.wheelDelta:0},deltaZ:0,deltaMode:0}),V_=fs(B_),W_=[9,13,27,32],U0=qr&&"CompositionEvent"in window,ou=null;qr&&"documentMode"in document&&(ou=document.documentMode);var U_=qr&&"TextEvent"in window&&!ou,M$=qr&&(!U0||ou&&8<ou&&11>=ou),ev=String.fromCharCode(32),tv=!1;function B$(t,e){switch(t){case"keyup":return W_.indexOf(e.keyCode)!==-1;case"keydown":return e.keyCode!==229;case"keypress":case"mousedown":case"focusout":return!0;default:return!1}}function V$(t){return t=t.detail,typeof t=="object"&&"data"in t?t.data:null}var yi=!1;function G_(t,e){switch(t){case"compositionend":return V$(e);case"keypress":return e.which!==32?null:(tv=!0,ev);case"textInput":return t=e.data,t===ev&&tv?null:t;default:return null}}function H_(t,e){if(yi)return t==="compositionend"||!U0&&B$(t,e)?(t=z$(),od=B0=fo=null,yi=!1,t):null;switch(t){case"paste":return null;case"keypress":if(!(e.ctrlKey||e.altKey||e.metaKey)||e.ctrlKey&&e.altKey){if(e.char&&1<e.char.length)return e.char;if(e.which)return String.fromCharCode(e.which)}return null;case"compositionend":return M$&&e.locale!=="ko"?null:e.data;default:return null}}var j_={color:!0,date:!0,datetime:!0,"datetime-local":!0,email:!0,month:!0,number:!0,password:!0,range:!0,search:!0,tel:!0,text:!0,time:!0,url:!0,week:!0};function nv(t){var e=t&&t.nodeName&&t.nodeName.toLowerCase();return e==="input"?!!j_[t.type]:e==="textarea"}function W$(t,e,n,s){b$(s),e=Cd(e,"onChange"),0<e.length&&(n=new V0("onChange","change",null,n,s),t.push({event:n,listeners:e}))}var au=null,wu=null;function K_(t){J$(t,0)}function $p(t){var e=wi(t);if(d$(e))return t}function q_(t,e){if(t==="change")return e}var U$=!1;if(qr){var Wm;if(qr){var Um="oninput"in document;if(!Um){var sv=document.createElement("div");sv.setAttribute("oninput","return;"),Um=typeof sv.oninput=="function"}Wm=Um}else Wm=!1;U$=Wm&&(!document.documentMode||9<document.documentMode)}function rv(){au&&(au.detachEvent("onpropertychange",G$),wu=au=null)}function G$(t){if(t.propertyName==="value"&&$p(wu)){var e=[];W$(e,wu,t,F0(t)),k$(K_,e)}}function X_(t,e,n){t==="focusin"?(rv(),au=e,wu=n,au.attachEvent("onpropertychange",G$)):t==="focusout"&&rv()}function Y_(t){if(t==="selectionchange"||t==="keyup"||t==="keydown")return $p(wu)}function Q_(t,e){if(t==="click")return $p(e)}function Z_(t,e){if(t==="input"||t==="change")return $p(e)}function J_(t,e){return t===e&&(t!==0||1/t===1/e)||t!==t&&e!==e}var rr=typeof Object.is=="function"?Object.is:J_;function vu(t,e){if(rr(t,e))return!0;if(typeof t!="object"||t===null||typeof e!="object"||e===null)return!1;var n=Object.keys(t),s=Object.keys(e);if(n.length!==s.length)return!1;for(s=0;s<n.length;s++){var r=n[s];if(!Ag.call(e,r)||!rr(t[r],e[r]))return!1}return!0}function ov(t){for(;t&&t.firstChild;)t=t.firstChild;return t}function av(t,e){var n=ov(t);t=0;for(var s;n;){if(n.nodeType===3){if(s=t+n.textContent.length,t<=e&&s>=e)return{node:n,offset:e-t};t=s}e:{for(;n;){if(n.nextSibling){n=n.nextSibling;break e}n=n.parentNode}n=void 0}n=ov(n)}}function H$(t,e){return t&&e?t===e?!0:t&&t.nodeType===3?!1:e&&e.nodeType===3?H$(t,e.parentNode):"contains"in t?t.contains(e):t.compareDocumentPosition?!!(t.compareDocumentPosition(e)&16):!1:!1}function j$(){for(var t=window,e=xd();e instanceof t.HTMLIFrameElement;){try{var n=typeof e.contentWindow.location.href=="string"}catch{n=!1}if(n)t=e.contentWindow;else break;e=xd(t.document)}return e}function G0(t){var e=t&&t.nodeName&&t.nodeName.toLowerCase();return e&&(e==="input"&&(t.type==="text"||t.type==="search"||t.type==="tel"||t.type==="url"||t.type==="password")||e==="textarea"||t.contentEditable==="true")}function eO(t){var e=j$(),n=t.focusedElem,s=t.selectionRange;if(e!==n&&n&&n.ownerDocument&&H$(n.ownerDocument.documentElement,n)){if(s!==null&&G0(n)){if(e=s.start,t=s.end,t===void 0&&(t=e),"selectionStart"in n)n.selectionStart=e,n.selectionEnd=Math.min(t,n.value.length);else if(t=(e=n.ownerDocument||document)&&e.defaultView||window,t.getSelection){t=t.getSelection();var r=n.textContent.length,o=Math.min(s.start,r);s=s.end===void 0?o:Math.min(s.end,r),!t.extend&&o>s&&(r=s,s=o,o=r),r=av(n,o);var a=av(n,s);r&&a&&(t.rangeCount!==1||t.anchorNode!==r.node||t.anchorOffset!==r.offset||t.focusNode!==a.node||t.focusOffset!==a.offset)&&(e=e.createRange(),e.setStart(r.node,r.offset),t.removeAllRanges(),o>s?(t.addRange(e),t.extend(a.node,a.offset)):(e.setEnd(a.node,a.offset),t.addRange(e)))}}for(e=[],t=n;t=t.parentNode;)t.nodeType===1&&e.push({element:t,left:t.scrollLeft,top:t.scrollTop});for(typeof n.focus=="function"&&n.focus(),n=0;n<e.length;n++)t=e[n],t.element.scrollLeft=t.left,t.element.scrollTop=t.top}}var tO=qr&&"documentMode"in document&&11>=document.documentMode,xi=null,Qg=null,iu=null,Zg=!1;function iv(t,e,n){var s=n.window===n?n.document:n.nodeType===9?n:n.ownerDocument;Zg||xi==null||xi!==xd(s)||(s=xi,"selectionStart"in s&&G0(s)?s={start:s.selectionStart,end:s.selectionEnd}:(s=(s.ownerDocument&&s.ownerDocument.defaultView||window).getSelection(),s={anchorNode:s.anchorNode,anchorOffset:s.anchorOffset,focusNode:s.focusNode,focusOffset:s.focusOffset}),iu&&vu(iu,s)||(iu=s,s=Cd(Qg,"onSelect"),0<s.length&&(e=new V0("onSelect","select",null,e,n),t.push({event:e,listeners:s}),e.target=xi)))}function Ih(t,e){var n={};return n[t.toLowerCase()]=e.toLowerCase(),n["Webkit"+t]="webkit"+e,n["Moz"+t]="moz"+e,n}var bi={animationend:Ih("Animation","AnimationEnd"),animationiteration:Ih("Animation","AnimationIteration"),animationstart:Ih("Animation","AnimationStart"),transitionend:Ih("Transition","TransitionEnd")},Gm={},K$={};qr&&(K$=document.createElement("div").style,"AnimationEvent"in window||(delete bi.animationend.animation,delete bi.animationiteration.animation,delete bi.animationstart.animation),"TransitionEvent"in window||delete bi.transitionend.transition);function Cp(t){if(Gm[t])return Gm[t];if(!bi[t])return t;var e=bi[t],n;for(n in e)if(e.hasOwnProperty(n)&&n in K$)return Gm[t]=e[n];return t}var q$=Cp("animationend"),X$=Cp("animationiteration"),Y$=Cp("animationstart"),Q$=Cp("transitionend"),Z$=new Map,lv="abort auxClick cancel canPlay canPlayThrough click close contextMenu copy cut drag dragEnd dragEnter dragExit dragLeave dragOver dragStart drop durationChange emptied encrypted ended error gotPointerCapture input invalid keyDown keyPress keyUp load loadedData loadedMetadata loadStart lostPointerCapture mouseDown mouseMove mouseOut mouseOver mouseUp paste pause play playing pointerCancel pointerDown pointerMove pointerOut pointerOver pointerUp progress rateChange reset resize seeked seeking stalled submit suspend timeUpdate touchCancel touchEnd touchStart volumeChange scroll toggle touchMove waiting wheel".split(" ");function Uo(t,e){Z$.set(t,e),Ua(e,[t])}for(var Hm=0;Hm<lv.length;Hm++){var jm=lv[Hm],nO=jm.toLowerCase(),sO=jm[0].toUpperCase()+jm.slice(1);Uo(nO,"on"+sO)}Uo(q$,"onAnimationEnd");Uo(X$,"onAnimationIteration");Uo(Y$,"onAnimationStart");Uo("dblclick","onDoubleClick");Uo("focusin","onFocus");Uo("focusout","onBlur");Uo(Q$,"onTransitionEnd");Gi("onMouseEnter",["mouseout","mouseover"]);Gi("onMouseLeave",["mouseout","mouseover"]);Gi("onPointerEnter",["pointerout","pointerover"]);Gi("onPointerLeave",["pointerout","pointerover"]);Ua("onChange","change click focusin focusout input keydown keyup selectionchange".split(" "));Ua("onSelect","focusout contextmenu dragend focusin keydown keyup mousedown mouseup selectionchange".split(" "));Ua("onBeforeInput",["compositionend","keypress","textInput","paste"]);Ua("onCompositionEnd","compositionend focusout keydown keypress keyup mousedown".split(" "));Ua("onCompositionStart","compositionstart focusout keydown keypress keyup mousedown".split(" "));Ua("onCompositionUpdate","compositionupdate focusout keydown keypress keyup mousedown".split(" "));var Xl="abort canplay canplaythrough durationchange emptied encrypted ended error loadeddata loadedmetadata loadstart pause play playing progress ratechange resize seeked seeking stalled suspend timeupdate volumechange waiting".split(" "),rO=new Set("cancel close invalid load scroll toggle".split(" ").concat(Xl));function uv(t,e,n){var s=t.type||"unknown-event";t.currentTarget=n,n_(s,e,void 0,t),t.currentTarget=null}function J$(t,e){e=(e&4)!==0;for(var n=0;n<t.length;n++){var s=t[n],r=s.event;s=s.listeners;e:{var o=void 0;if(e)for(var a=s.length-1;0<=a;a--){var i=s[a],l=i.instance,u=i.currentTarget;if(i=i.listener,l!==o&&r.isPropagationStopped())break e;uv(r,i,u),o=l}else for(a=0;a<s.length;a++){if(i=s[a],l=i.instance,u=i.currentTarget,i=i.listener,l!==o&&r.isPropagationStopped())break e;uv(r,i,u),o=l}}}if(wd)throw t=Kg,wd=!1,Kg=null,t}function lt(t,e){var n=e[sy];n===void 0&&(n=e[sy]=new Set);var s=t+"__bubble";n.has(s)||(eC(e,t,2,!1),n.add(s))}function Km(t,e,n){var s=0;e&&(s|=4),eC(n,t,s,e)}var Th="_reactListening"+Math.random().toString(36).slice(2);function Su(t){if(!t[Th]){t[Th]=!0,i$.forEach(function(n){n!=="selectionchange"&&(rO.has(n)||Km(n,!1,t),Km(n,!0,t))});var e=t.nodeType===9?t:t.ownerDocument;e===null||e[Th]||(e[Th]=!0,Km("selectionchange",!1,e))}}function eC(t,e,n,s){switch(P$(e)){case 1:var r=x_;break;case 4:r=b_;break;default:r=M0}n=r.bind(null,e,n,t),r=void 0,!jg||e!=="touchstart"&&e!=="touchmove"&&e!=="wheel"||(r=!0),s?r!==void 0?t.addEventListener(e,n,{capture:!0,passive:r}):t.addEventListener(e,n,!0):r!==void 0?t.addEventListener(e,n,{passive:r}):t.addEventListener(e,n,!1)}function qm(t,e,n,s,r){var o=s;if(!(e&1)&&!(e&2)&&s!==null)e:for(;;){if(s===null)return;var a=s.tag;if(a===3||a===4){var i=s.stateNode.containerInfo;if(i===r||i.nodeType===8&&i.parentNode===r)break;if(a===4)for(a=s.return;a!==null;){var l=a.tag;if((l===3||l===4)&&(l=a.stateNode.containerInfo,l===r||l.nodeType===8&&l.parentNode===r))return;a=a.return}for(;i!==null;){if(a=pa(i),a===null)return;if(l=a.tag,l===5||l===6){s=o=a;continue e}i=i.parentNode}}s=s.return}k$(function(){var u=o,c=F0(n),h=[];e:{var d=Z$.get(t);if(d!==void 0){var p=V0,f=t;switch(t){case"keypress":if(ad(n)===0)break e;case"keydown":case"keyup":p=O_;break;case"focusin":f="focus",p=Vm;break;case"focusout":f="blur",p=Vm;break;case"beforeblur":case"afterblur":p=Vm;break;case"click":if(n.button===2)break e;case"auxclick":case"dblclick":case"mousedown":case"mousemove":case"mouseup":case"mouseout":case"mouseover":case"contextmenu":p=Qw;break;case"drag":case"dragend":case"dragenter":case"dragexit":case"dragleave":case"dragover":case"dragstart":case"drop":p=S_;break;case"touchcancel":case"touchend":case"touchmove":case"touchstart":p=P_;break;case q$:case X$:case Y$:p=C_;break;case Q$:p=M_;break;case"scroll":p=w_;break;case"wheel":p=V_;break;case"copy":case"cut":case"paste":p=I_;break;case"gotpointercapture":case"lostpointercapture":case"pointercancel":case"pointerdown":case"pointermove":case"pointerout":case"pointerover":case"pointerup":p=Jw}var m=(e&4)!==0,y=!m&&t==="scroll",g=m?d!==null?d+"Capture":null:d;m=[];for(var x=u,w;x!==null;){w=x;var b=w.stateNode;if(w.tag===5&&b!==null&&(w=b,g!==null&&(b=gu(x,g),b!=null&&m.push(ku(x,b,w)))),y)break;x=x.return}0<m.length&&(d=new p(d,f,null,n,c),h.push({event:d,listeners:m}))}}if(!(e&7)){e:{if(d=t==="mouseover"||t==="pointerover",p=t==="mouseout"||t==="pointerout",d&&n!==Gg&&(f=n.relatedTarget||n.fromElement)&&(pa(f)||f[Xr]))break e;if((p||d)&&(d=c.window===c?c:(d=c.ownerDocument)?d.defaultView||d.parentWindow:window,p?(f=n.relatedTarget||n.toElement,p=u,f=f?pa(f):null,f!==null&&(y=Ga(f),f!==y||f.tag!==5&&f.tag!==6)&&(f=null)):(p=null,f=u),p!==f)){if(m=Qw,b="onMouseLeave",g="onMouseEnter",x="mouse",(t==="pointerout"||t==="pointerover")&&(m=Jw,b="onPointerLeave",g="onPointerEnter",x="pointer"),y=p==null?d:wi(p),w=f==null?d:wi(f),d=new m(b,x+"leave",p,n,c),d.target=y,d.relatedTarget=w,b=null,pa(c)===u&&(m=new m(g,x+"enter",f,n,c),m.target=w,m.relatedTarget=y,b=m),y=b,p&&f)t:{for(m=p,g=f,x=0,w=m;w;w=ri(w))x++;for(w=0,b=g;b;b=ri(b))w++;for(;0<x-w;)m=ri(m),x--;for(;0<w-x;)g=ri(g),w--;for(;x--;){if(m===g||g!==null&&m===g.alternate)break t;m=ri(m),g=ri(g)}m=null}else m=null;p!==null&&cv(h,d,p,m,!1),f!==null&&y!==null&&cv(h,y,f,m,!0)}}e:{if(d=u?wi(u):window,p=d.nodeName&&d.nodeName.toLowerCase(),p==="select"||p==="input"&&d.type==="file")var v=q_;else if(nv(d))if(U$)v=Z_;else{v=Y_;var k=X_}else(p=d.nodeName)&&p.toLowerCase()==="input"&&(d.type==="checkbox"||d.type==="radio")&&(v=Q_);if(v&&(v=v(t,u))){W$(h,v,n,c);break e}k&&k(t,d,u),t==="focusout"&&(k=d._wrapperState)&&k.controlled&&d.type==="number"&&Mg(d,"number",d.value)}switch(k=u?wi(u):window,t){case"focusin":(nv(k)||k.contentEditable==="true")&&(xi=k,Qg=u,iu=null);break;case"focusout":iu=Qg=xi=null;break;case"mousedown":Zg=!0;break;case"contextmenu":case"mouseup":case"dragend":Zg=!1,iv(h,n,c);break;case"selectionchange":if(tO)break;case"keydown":case"keyup":iv(h,n,c)}var $;if(U0)e:{switch(t){case"compositionstart":var N="onCompositionStart";break e;case"compositionend":N="onCompositionEnd";break e;case"compositionupdate":N="onCompositionUpdate";break e}N=void 0}else yi?B$(t,n)&&(N="onCompositionEnd"):t==="keydown"&&n.keyCode===229&&(N="onCompositionStart");N&&(M$&&n.locale!=="ko"&&(yi||N!=="onCompositionStart"?N==="onCompositionEnd"&&yi&&($=z$()):(fo=c,B0="value"in fo?fo.value:fo.textContent,yi=!0)),k=Cd(u,N),0<k.length&&(N=new Zw(N,t,null,n,c),h.push({event:N,listeners:k}),$?N.data=$:($=V$(n),$!==null&&(N.data=$)))),($=U_?G_(t,n):H_(t,n))&&(u=Cd(u,"onBeforeInput"),0<u.length&&(c=new Zw("onBeforeInput","beforeinput",null,n,c),h.push({event:c,listeners:u}),c.data=$))}J$(h,e)})}function ku(t,e,n){return{instance:t,listener:e,currentTarget:n}}function Cd(t,e){for(var n=e+"Capture",s=[];t!==null;){var r=t,o=r.stateNode;r.tag===5&&o!==null&&(r=o,o=gu(t,n),o!=null&&s.unshift(ku(t,o,r)),o=gu(t,e),o!=null&&s.push(ku(t,o,r))),t=t.return}return s}function ri(t){if(t===null)return null;do t=t.return;while(t&&t.tag!==5);return t||null}function cv(t,e,n,s,r){for(var o=e._reactName,a=[];n!==null&&n!==s;){var i=n,l=i.alternate,u=i.stateNode;if(l!==null&&l===s)break;i.tag===5&&u!==null&&(i=u,r?(l=gu(n,o),l!=null&&a.unshift(ku(n,l,i))):r||(l=gu(n,o),l!=null&&a.push(ku(n,l,i)))),n=n.return}a.length!==0&&t.push({event:e,listeners:a})}var oO=/\r\n?/g,aO=/\u0000|\uFFFD/g;function hv(t){return(typeof t=="string"?t:""+t).replace(oO,`
`).replace(aO,"")}function Eh(t,e,n){if(e=hv(e),hv(t)!==e&&n)throw Error(ae(425))}function Nd(){}var Jg=null,ey=null;function ty(t,e){return t==="textarea"||t==="noscript"||typeof e.children=="string"||typeof e.children=="number"||typeof e.dangerouslySetInnerHTML=="object"&&e.dangerouslySetInnerHTML!==null&&e.dangerouslySetInnerHTML.__html!=null}var ny=typeof setTimeout=="function"?setTimeout:void 0,iO=typeof clearTimeout=="function"?clearTimeout:void 0,dv=typeof Promise=="function"?Promise:void 0,lO=typeof queueMicrotask=="function"?queueMicrotask:typeof dv<"u"?function(t){return dv.resolve(null).then(t).catch(uO)}:ny;function uO(t){setTimeout(function(){throw t})}function Xm(t,e){var n=e,s=0;do{var r=n.nextSibling;if(t.removeChild(n),r&&r.nodeType===8)if(n=r.data,n==="/$"){if(s===0){t.removeChild(r),bu(e);return}s--}else n!=="$"&&n!=="$?"&&n!=="$!"||s++;n=r}while(n);bu(e)}function So(t){for(;t!=null;t=t.nextSibling){var e=t.nodeType;if(e===1||e===3)break;if(e===8){if(e=t.data,e==="$"||e==="$!"||e==="$?")break;if(e==="/$")return null}}return t}function pv(t){t=t.previousSibling;for(var e=0;t;){if(t.nodeType===8){var n=t.data;if(n==="$"||n==="$!"||n==="$?"){if(e===0)return t;e--}else n==="/$"&&e++}t=t.previousSibling}return null}var fl=Math.random().toString(36).slice(2),br="__reactFiber$"+fl,$u="__reactProps$"+fl,Xr="__reactContainer$"+fl,sy="__reactEvents$"+fl,cO="__reactListeners$"+fl,hO="__reactHandles$"+fl;function pa(t){var e=t[br];if(e)return e;for(var n=t.parentNode;n;){if(e=n[Xr]||n[br]){if(n=e.alternate,e.child!==null||n!==null&&n.child!==null)for(t=pv(t);t!==null;){if(n=t[br])return n;t=pv(t)}return e}t=n,n=t.parentNode}return null}function Xu(t){return t=t[br]||t[Xr],!t||t.tag!==5&&t.tag!==6&&t.tag!==13&&t.tag!==3?null:t}function wi(t){if(t.tag===5||t.tag===6)return t.stateNode;throw Error(ae(33))}function Np(t){return t[$u]||null}var ry=[],vi=-1;function Go(t){return{current:t}}function ct(t){0>vi||(t.current=ry[vi],ry[vi]=null,vi--)}function rt(t,e){vi++,ry[vi]=t.current,t.current=e}var Ao={},kn=Go(Ao),Hn=Go(!1),ka=Ao;function Hi(t,e){var n=t.type.contextTypes;if(!n)return Ao;var s=t.stateNode;if(s&&s.__reactInternalMemoizedUnmaskedChildContext===e)return s.__reactInternalMemoizedMaskedChildContext;var r={},o;for(o in n)r[o]=e[o];return s&&(t=t.stateNode,t.__reactInternalMemoizedUnmaskedChildContext=e,t.__reactInternalMemoizedMaskedChildContext=r),r}function jn(t){return t=t.childContextTypes,t!=null}function Id(){ct(Hn),ct(kn)}function fv(t,e,n){if(kn.current!==Ao)throw Error(ae(168));rt(kn,e),rt(Hn,n)}function tC(t,e,n){var s=t.stateNode;if(e=e.childContextTypes,typeof s.getChildContext!="function")return n;s=s.getChildContext();for(var r in s)if(!(r in e))throw Error(ae(108,XA(t)||"Unknown",r));return wt({},n,s)}function Td(t){return t=(t=t.stateNode)&&t.__reactInternalMemoizedMergedChildContext||Ao,ka=kn.current,rt(kn,t),rt(Hn,Hn.current),!0}function mv(t,e,n){var s=t.stateNode;if(!s)throw Error(ae(169));n?(t=tC(t,e,ka),s.__reactInternalMemoizedMergedChildContext=t,ct(Hn),ct(kn),rt(kn,t)):ct(Hn),rt(Hn,n)}var Lr=null,Ip=!1,Ym=!1;function nC(t){Lr===null?Lr=[t]:Lr.push(t)}function dO(t){Ip=!0,nC(t)}function Ho(){if(!Ym&&Lr!==null){Ym=!0;var t=0,e=Xe;try{var n=Lr;for(Xe=1;t<n.length;t++){var s=n[t];do s=s(!0);while(s!==null)}Lr=null,Ip=!1}catch(r){throw Lr!==null&&(Lr=Lr.slice(t+1)),I$(L0,Ho),r}finally{Xe=e,Ym=!1}}return null}var Si=[],ki=0,Ed=null,Rd=0,ks=[],$s=0,$a=null,Wr=1,Ur="";function aa(t,e){Si[ki++]=Rd,Si[ki++]=Ed,Ed=t,Rd=e}function sC(t,e,n){ks[$s++]=Wr,ks[$s++]=Ur,ks[$s++]=$a,$a=t;var s=Wr;t=Ur;var r=32-tr(s)-1;s&=~(1<<r),n+=1;var o=32-tr(e)+r;if(30<o){var a=r-r%5;o=(s&(1<<a)-1).toString(32),s>>=a,r-=a,Wr=1<<32-tr(e)+r|n<<r|s,Ur=o+t}else Wr=1<<o|n<<r|s,Ur=t}function H0(t){t.return!==null&&(aa(t,1),sC(t,1,0))}function j0(t){for(;t===Ed;)Ed=Si[--ki],Si[ki]=null,Rd=Si[--ki],Si[ki]=null;for(;t===$a;)$a=ks[--$s],ks[$s]=null,Ur=ks[--$s],ks[$s]=null,Wr=ks[--$s],ks[$s]=null}var is=null,rs=null,ft=!1,Zs=null;function rC(t,e){var n=Ns(5,null,null,0);n.elementType="DELETED",n.stateNode=e,n.return=t,e=t.deletions,e===null?(t.deletions=[n],t.flags|=16):e.push(n)}function gv(t,e){switch(t.tag){case 5:var n=t.type;return e=e.nodeType!==1||n.toLowerCase()!==e.nodeName.toLowerCase()?null:e,e!==null?(t.stateNode=e,is=t,rs=So(e.firstChild),!0):!1;case 6:return e=t.pendingProps===""||e.nodeType!==3?null:e,e!==null?(t.stateNode=e,is=t,rs=null,!0):!1;case 13:return e=e.nodeType!==8?null:e,e!==null?(n=$a!==null?{id:Wr,overflow:Ur}:null,t.memoizedState={dehydrated:e,treeContext:n,retryLane:1073741824},n=Ns(18,null,null,0),n.stateNode=e,n.return=t,t.child=n,is=t,rs=null,!0):!1;default:return!1}}function oy(t){return(t.mode&1)!==0&&(t.flags&128)===0}function ay(t){if(ft){var e=rs;if(e){var n=e;if(!gv(t,e)){if(oy(t))throw Error(ae(418));e=So(n.nextSibling);var s=is;e&&gv(t,e)?rC(s,n):(t.flags=t.flags&-4097|2,ft=!1,is=t)}}else{if(oy(t))throw Error(ae(418));t.flags=t.flags&-4097|2,ft=!1,is=t}}}function yv(t){for(t=t.return;t!==null&&t.tag!==5&&t.tag!==3&&t.tag!==13;)t=t.return;is=t}function Rh(t){if(t!==is)return!1;if(!ft)return yv(t),ft=!0,!1;var e;if((e=t.tag!==3)&&!(e=t.tag!==5)&&(e=t.type,e=e!=="head"&&e!=="body"&&!ty(t.type,t.memoizedProps)),e&&(e=rs)){if(oy(t))throw oC(),Error(ae(418));for(;e;)rC(t,e),e=So(e.nextSibling)}if(yv(t),t.tag===13){if(t=t.memoizedState,t=t!==null?t.dehydrated:null,!t)throw Error(ae(317));e:{for(t=t.nextSibling,e=0;t;){if(t.nodeType===8){var n=t.data;if(n==="/$"){if(e===0){rs=So(t.nextSibling);break e}e--}else n!=="$"&&n!=="$!"&&n!=="$?"||e++}t=t.nextSibling}rs=null}}else rs=is?So(t.stateNode.nextSibling):null;return!0}function oC(){for(var t=rs;t;)t=So(t.nextSibling)}function ji(){rs=is=null,ft=!1}function K0(t){Zs===null?Zs=[t]:Zs.push(t)}var pO=to.ReactCurrentBatchConfig;function Ml(t,e,n){if(t=n.ref,t!==null&&typeof t!="function"&&typeof t!="object"){if(n._owner){if(n=n._owner,n){if(n.tag!==1)throw Error(ae(309));var s=n.stateNode}if(!s)throw Error(ae(147,t));var r=s,o=""+t;return e!==null&&e.ref!==null&&typeof e.ref=="function"&&e.ref._stringRef===o?e.ref:(e=function(a){var i=r.refs;a===null?delete i[o]:i[o]=a},e._stringRef=o,e)}if(typeof t!="string")throw Error(ae(284));if(!n._owner)throw Error(ae(290,t))}return t}function Dh(t,e){throw t=Object.prototype.toString.call(e),Error(ae(31,t==="[object Object]"?"object with keys {"+Object.keys(e).join(", ")+"}":t))}function xv(t){var e=t._init;return e(t._payload)}function aC(t){function e(g,x){if(t){var w=g.deletions;w===null?(g.deletions=[x],g.flags|=16):w.push(x)}}function n(g,x){if(!t)return null;for(;x!==null;)e(g,x),x=x.sibling;return null}function s(g,x){for(g=new Map;x!==null;)x.key!==null?g.set(x.key,x):g.set(x.index,x),x=x.sibling;return g}function r(g,x){return g=No(g,x),g.index=0,g.sibling=null,g}function o(g,x,w){return g.index=w,t?(w=g.alternate,w!==null?(w=w.index,w<x?(g.flags|=2,x):w):(g.flags|=2,x)):(g.flags|=1048576,x)}function a(g){return t&&g.alternate===null&&(g.flags|=2),g}function i(g,x,w,b){return x===null||x.tag!==6?(x=sg(w,g.mode,b),x.return=g,x):(x=r(x,w),x.return=g,x)}function l(g,x,w,b){var v=w.type;return v===gi?c(g,x,w.props.children,b,w.key):x!==null&&(x.elementType===v||typeof v=="object"&&v!==null&&v.$$typeof===lo&&xv(v)===x.type)?(b=r(x,w.props),b.ref=Ml(g,x,w),b.return=g,b):(b=pd(w.type,w.key,w.props,null,g.mode,b),b.ref=Ml(g,x,w),b.return=g,b)}function u(g,x,w,b){return x===null||x.tag!==4||x.stateNode.containerInfo!==w.containerInfo||x.stateNode.implementation!==w.implementation?(x=rg(w,g.mode,b),x.return=g,x):(x=r(x,w.children||[]),x.return=g,x)}function c(g,x,w,b,v){return x===null||x.tag!==7?(x=wa(w,g.mode,b,v),x.return=g,x):(x=r(x,w),x.return=g,x)}function h(g,x,w){if(typeof x=="string"&&x!==""||typeof x=="number")return x=sg(""+x,g.mode,w),x.return=g,x;if(typeof x=="object"&&x!==null){switch(x.$$typeof){case wh:return w=pd(x.type,x.key,x.props,null,g.mode,w),w.ref=Ml(g,null,x),w.return=g,w;case mi:return x=rg(x,g.mode,w),x.return=g,x;case lo:var b=x._init;return h(g,b(x._payload),w)}if(Kl(x)||Ol(x))return x=wa(x,g.mode,w,null),x.return=g,x;Dh(g,x)}return null}function d(g,x,w,b){var v=x!==null?x.key:null;if(typeof w=="string"&&w!==""||typeof w=="number")return v!==null?null:i(g,x,""+w,b);if(typeof w=="object"&&w!==null){switch(w.$$typeof){case wh:return w.key===v?l(g,x,w,b):null;case mi:return w.key===v?u(g,x,w,b):null;case lo:return v=w._init,d(g,x,v(w._payload),b)}if(Kl(w)||Ol(w))return v!==null?null:c(g,x,w,b,null);Dh(g,w)}return null}function p(g,x,w,b,v){if(typeof b=="string"&&b!==""||typeof b=="number")return g=g.get(w)||null,i(x,g,""+b,v);if(typeof b=="object"&&b!==null){switch(b.$$typeof){case wh:return g=g.get(b.key===null?w:b.key)||null,l(x,g,b,v);case mi:return g=g.get(b.key===null?w:b.key)||null,u(x,g,b,v);case lo:var k=b._init;return p(g,x,w,k(b._payload),v)}if(Kl(b)||Ol(b))return g=g.get(w)||null,c(x,g,b,v,null);Dh(x,b)}return null}function f(g,x,w,b){for(var v=null,k=null,$=x,N=x=0,E=null;$!==null&&N<w.length;N++){$.index>N?(E=$,$=null):E=$.sibling;var T=d(g,$,w[N],b);if(T===null){$===null&&($=E);break}t&&$&&T.alternate===null&&e(g,$),x=o(T,x,N),k===null?v=T:k.sibling=T,k=T,$=E}if(N===w.length)return n(g,$),ft&&aa(g,N),v;if($===null){for(;N<w.length;N++)$=h(g,w[N],b),$!==null&&(x=o($,x,N),k===null?v=$:k.sibling=$,k=$);return ft&&aa(g,N),v}for($=s(g,$);N<w.length;N++)E=p($,g,N,w[N],b),E!==null&&(t&&E.alternate!==null&&$.delete(E.key===null?N:E.key),x=o(E,x,N),k===null?v=E:k.sibling=E,k=E);return t&&$.forEach(function(R){return e(g,R)}),ft&&aa(g,N),v}function m(g,x,w,b){var v=Ol(w);if(typeof v!="function")throw Error(ae(150));if(w=v.call(w),w==null)throw Error(ae(151));for(var k=v=null,$=x,N=x=0,E=null,T=w.next();$!==null&&!T.done;N++,T=w.next()){$.index>N?(E=$,$=null):E=$.sibling;var R=d(g,$,T.value,b);if(R===null){$===null&&($=E);break}t&&$&&R.alternate===null&&e(g,$),x=o(R,x,N),k===null?v=R:k.sibling=R,k=R,$=E}if(T.done)return n(g,$),ft&&aa(g,N),v;if($===null){for(;!T.done;N++,T=w.next())T=h(g,T.value,b),T!==null&&(x=o(T,x,N),k===null?v=T:k.sibling=T,k=T);return ft&&aa(g,N),v}for($=s(g,$);!T.done;N++,T=w.next())T=p($,g,N,T.value,b),T!==null&&(t&&T.alternate!==null&&$.delete(T.key===null?N:T.key),x=o(T,x,N),k===null?v=T:k.sibling=T,k=T);return t&&$.forEach(function(z){return e(g,z)}),ft&&aa(g,N),v}function y(g,x,w,b){if(typeof w=="object"&&w!==null&&w.type===gi&&w.key===null&&(w=w.props.children),typeof w=="object"&&w!==null){switch(w.$$typeof){case wh:e:{for(var v=w.key,k=x;k!==null;){if(k.key===v){if(v=w.type,v===gi){if(k.tag===7){n(g,k.sibling),x=r(k,w.props.children),x.return=g,g=x;break e}}else if(k.elementType===v||typeof v=="object"&&v!==null&&v.$$typeof===lo&&xv(v)===k.type){n(g,k.sibling),x=r(k,w.props),x.ref=Ml(g,k,w),x.return=g,g=x;break e}n(g,k);break}else e(g,k);k=k.sibling}w.type===gi?(x=wa(w.props.children,g.mode,b,w.key),x.return=g,g=x):(b=pd(w.type,w.key,w.props,null,g.mode,b),b.ref=Ml(g,x,w),b.return=g,g=b)}return a(g);case mi:e:{for(k=w.key;x!==null;){if(x.key===k)if(x.tag===4&&x.stateNode.containerInfo===w.containerInfo&&x.stateNode.implementation===w.implementation){n(g,x.sibling),x=r(x,w.children||[]),x.return=g,g=x;break e}else{n(g,x);break}else e(g,x);x=x.sibling}x=rg(w,g.mode,b),x.return=g,g=x}return a(g);case lo:return k=w._init,y(g,x,k(w._payload),b)}if(Kl(w))return f(g,x,w,b);if(Ol(w))return m(g,x,w,b);Dh(g,w)}return typeof w=="string"&&w!==""||typeof w=="number"?(w=""+w,x!==null&&x.tag===6?(n(g,x.sibling),x=r(x,w),x.return=g,g=x):(n(g,x),x=sg(w,g.mode,b),x.return=g,g=x),a(g)):n(g,x)}return y}var Ki=aC(!0),iC=aC(!1),Dd=Go(null),Ad=null,$i=null,q0=null;function X0(){q0=$i=Ad=null}function Y0(t){var e=Dd.current;ct(Dd),t._currentValue=e}function iy(t,e,n){for(;t!==null;){var s=t.alternate;if((t.childLanes&e)!==e?(t.childLanes|=e,s!==null&&(s.childLanes|=e)):s!==null&&(s.childLanes&e)!==e&&(s.childLanes|=e),t===n)break;t=t.return}}function _i(t,e){Ad=t,q0=$i=null,t=t.dependencies,t!==null&&t.firstContext!==null&&(t.lanes&e&&(Un=!0),t.firstContext=null)}function Ps(t){var e=t._currentValue;if(q0!==t)if(t={context:t,memoizedValue:e,next:null},$i===null){if(Ad===null)throw Error(ae(308));$i=t,Ad.dependencies={lanes:0,firstContext:t}}else $i=$i.next=t;return e}var fa=null;function Q0(t){fa===null?fa=[t]:fa.push(t)}function lC(t,e,n,s){var r=e.interleaved;return r===null?(n.next=n,Q0(e)):(n.next=r.next,r.next=n),e.interleaved=n,Yr(t,s)}function Yr(t,e){t.lanes|=e;var n=t.alternate;for(n!==null&&(n.lanes|=e),n=t,t=t.return;t!==null;)t.childLanes|=e,n=t.alternate,n!==null&&(n.childLanes|=e),n=t,t=t.return;return n.tag===3?n.stateNode:null}var uo=!1;function Z0(t){t.updateQueue={baseState:t.memoizedState,firstBaseUpdate:null,lastBaseUpdate:null,shared:{pending:null,interleaved:null,lanes:0},effects:null}}function uC(t,e){t=t.updateQueue,e.updateQueue===t&&(e.updateQueue={baseState:t.baseState,firstBaseUpdate:t.firstBaseUpdate,lastBaseUpdate:t.lastBaseUpdate,shared:t.shared,effects:t.effects})}function Gr(t,e){return{eventTime:t,lane:e,tag:0,payload:null,callback:null,next:null}}function ko(t,e,n){var s=t.updateQueue;if(s===null)return null;if(s=s.shared,je&2){var r=s.pending;return r===null?e.next=e:(e.next=r.next,r.next=e),s.pending=e,Yr(t,n)}return r=s.interleaved,r===null?(e.next=e,Q0(s)):(e.next=r.next,r.next=e),s.interleaved=e,Yr(t,n)}function id(t,e,n){if(e=e.updateQueue,e!==null&&(e=e.shared,(n&4194240)!==0)){var s=e.lanes;s&=t.pendingLanes,n|=s,e.lanes=n,P0(t,n)}}function bv(t,e){var n=t.updateQueue,s=t.alternate;if(s!==null&&(s=s.updateQueue,n===s)){var r=null,o=null;if(n=n.firstBaseUpdate,n!==null){do{var a={eventTime:n.eventTime,lane:n.lane,tag:n.tag,payload:n.payload,callback:n.callback,next:null};o===null?r=o=a:o=o.next=a,n=n.next}while(n!==null);o===null?r=o=e:o=o.next=e}else r=o=e;n={baseState:s.baseState,firstBaseUpdate:r,lastBaseUpdate:o,shared:s.shared,effects:s.effects},t.updateQueue=n;return}t=n.lastBaseUpdate,t===null?n.firstBaseUpdate=e:t.next=e,n.lastBaseUpdate=e}function _d(t,e,n,s){var r=t.updateQueue;uo=!1;var o=r.firstBaseUpdate,a=r.lastBaseUpdate,i=r.shared.pending;if(i!==null){r.shared.pending=null;var l=i,u=l.next;l.next=null,a===null?o=u:a.next=u,a=l;var c=t.alternate;c!==null&&(c=c.updateQueue,i=c.lastBaseUpdate,i!==a&&(i===null?c.firstBaseUpdate=u:i.next=u,c.lastBaseUpdate=l))}if(o!==null){var h=r.baseState;a=0,c=u=l=null,i=o;do{var d=i.lane,p=i.eventTime;if((s&d)===d){c!==null&&(c=c.next={eventTime:p,lane:0,tag:i.tag,payload:i.payload,callback:i.callback,next:null});e:{var f=t,m=i;switch(d=e,p=n,m.tag){case 1:if(f=m.payload,typeof f=="function"){h=f.call(p,h,d);break e}h=f;break e;case 3:f.flags=f.flags&-65537|128;case 0:if(f=m.payload,d=typeof f=="function"?f.call(p,h,d):f,d==null)break e;h=wt({},h,d);break e;case 2:uo=!0}}i.callback!==null&&i.lane!==0&&(t.flags|=64,d=r.effects,d===null?r.effects=[i]:d.push(i))}else p={eventTime:p,lane:d,tag:i.tag,payload:i.payload,callback:i.callback,next:null},c===null?(u=c=p,l=h):c=c.next=p,a|=d;if(i=i.next,i===null){if(i=r.shared.pending,i===null)break;d=i,i=d.next,d.next=null,r.lastBaseUpdate=d,r.shared.pending=null}}while(1);if(c===null&&(l=h),r.baseState=l,r.firstBaseUpdate=u,r.lastBaseUpdate=c,e=r.shared.interleaved,e!==null){r=e;do a|=r.lane,r=r.next;while(r!==e)}else o===null&&(r.shared.lanes=0);Na|=a,t.lanes=a,t.memoizedState=h}}function wv(t,e,n){if(t=e.effects,e.effects=null,t!==null)for(e=0;e<t.length;e++){var s=t[e],r=s.callback;if(r!==null){if(s.callback=null,s=n,typeof r!="function")throw Error(ae(191,r));r.call(s)}}}var Yu={},$r=Go(Yu),Cu=Go(Yu),Nu=Go(Yu);function ma(t){if(t===Yu)throw Error(ae(174));return t}function J0(t,e){switch(rt(Nu,e),rt(Cu,t),rt($r,Yu),t=e.nodeType,t){case 9:case 11:e=(e=e.documentElement)?e.namespaceURI:Vg(null,"");break;default:t=t===8?e.parentNode:e,e=t.namespaceURI||null,t=t.tagName,e=Vg(e,t)}ct($r),rt($r,e)}function qi(){ct($r),ct(Cu),ct(Nu)}function cC(t){ma(Nu.current);var e=ma($r.current),n=Vg(e,t.type);e!==n&&(rt(Cu,t),rt($r,n))}function e1(t){Cu.current===t&&(ct($r),ct(Cu))}var yt=Go(0);function Od(t){for(var e=t;e!==null;){if(e.tag===13){var n=e.memoizedState;if(n!==null&&(n=n.dehydrated,n===null||n.data==="$?"||n.data==="$!"))return e}else if(e.tag===19&&e.memoizedProps.revealOrder!==void 0){if(e.flags&128)return e}else if(e.child!==null){e.child.return=e,e=e.child;continue}if(e===t)break;for(;e.sibling===null;){if(e.return===null||e.return===t)return null;e=e.return}e.sibling.return=e.return,e=e.sibling}return null}var Qm=[];function t1(){for(var t=0;t<Qm.length;t++)Qm[t]._workInProgressVersionPrimary=null;Qm.length=0}var ld=to.ReactCurrentDispatcher,Zm=to.ReactCurrentBatchConfig,Ca=0,bt=null,Wt=null,Xt=null,Fd=!1,lu=!1,Iu=0,fO=0;function mn(){throw Error(ae(321))}function n1(t,e){if(e===null)return!1;for(var n=0;n<e.length&&n<t.length;n++)if(!rr(t[n],e[n]))return!1;return!0}function s1(t,e,n,s,r,o){if(Ca=o,bt=e,e.memoizedState=null,e.updateQueue=null,e.lanes=0,ld.current=t===null||t.memoizedState===null?xO:bO,t=n(s,r),lu){o=0;do{if(lu=!1,Iu=0,25<=o)throw Error(ae(301));o+=1,Xt=Wt=null,e.updateQueue=null,ld.current=wO,t=n(s,r)}while(lu)}if(ld.current=Ld,e=Wt!==null&&Wt.next!==null,Ca=0,Xt=Wt=bt=null,Fd=!1,e)throw Error(ae(300));return t}function r1(){var t=Iu!==0;return Iu=0,t}function fr(){var t={memoizedState:null,baseState:null,baseQueue:null,queue:null,next:null};return Xt===null?bt.memoizedState=Xt=t:Xt=Xt.next=t,Xt}function zs(){if(Wt===null){var t=bt.alternate;t=t!==null?t.memoizedState:null}else t=Wt.next;var e=Xt===null?bt.memoizedState:Xt.next;if(e!==null)Xt=e,Wt=t;else{if(t===null)throw Error(ae(310));Wt=t,t={memoizedState:Wt.memoizedState,baseState:Wt.baseState,baseQueue:Wt.baseQueue,queue:Wt.queue,next:null},Xt===null?bt.memoizedState=Xt=t:Xt=Xt.next=t}return Xt}function Tu(t,e){return typeof e=="function"?e(t):e}function Jm(t){var e=zs(),n=e.queue;if(n===null)throw Error(ae(311));n.lastRenderedReducer=t;var s=Wt,r=s.baseQueue,o=n.pending;if(o!==null){if(r!==null){var a=r.next;r.next=o.next,o.next=a}s.baseQueue=r=o,n.pending=null}if(r!==null){o=r.next,s=s.baseState;var i=a=null,l=null,u=o;do{var c=u.lane;if((Ca&c)===c)l!==null&&(l=l.next={lane:0,action:u.action,hasEagerState:u.hasEagerState,eagerState:u.eagerState,next:null}),s=u.hasEagerState?u.eagerState:t(s,u.action);else{var h={lane:c,action:u.action,hasEagerState:u.hasEagerState,eagerState:u.eagerState,next:null};l===null?(i=l=h,a=s):l=l.next=h,bt.lanes|=c,Na|=c}u=u.next}while(u!==null&&u!==o);l===null?a=s:l.next=i,rr(s,e.memoizedState)||(Un=!0),e.memoizedState=s,e.baseState=a,e.baseQueue=l,n.lastRenderedState=s}if(t=n.interleaved,t!==null){r=t;do o=r.lane,bt.lanes|=o,Na|=o,r=r.next;while(r!==t)}else r===null&&(n.lanes=0);return[e.memoizedState,n.dispatch]}function eg(t){var e=zs(),n=e.queue;if(n===null)throw Error(ae(311));n.lastRenderedReducer=t;var s=n.dispatch,r=n.pending,o=e.memoizedState;if(r!==null){n.pending=null;var a=r=r.next;do o=t(o,a.action),a=a.next;while(a!==r);rr(o,e.memoizedState)||(Un=!0),e.memoizedState=o,e.baseQueue===null&&(e.baseState=o),n.lastRenderedState=o}return[o,s]}function hC(){}function dC(t,e){var n=bt,s=zs(),r=e(),o=!rr(s.memoizedState,r);if(o&&(s.memoizedState=r,Un=!0),s=s.queue,o1(mC.bind(null,n,s,t),[t]),s.getSnapshot!==e||o||Xt!==null&&Xt.memoizedState.tag&1){if(n.flags|=2048,Eu(9,fC.bind(null,n,s,r,e),void 0,null),Jt===null)throw Error(ae(349));Ca&30||pC(n,e,r)}return r}function pC(t,e,n){t.flags|=16384,t={getSnapshot:e,value:n},e=bt.updateQueue,e===null?(e={lastEffect:null,stores:null},bt.updateQueue=e,e.stores=[t]):(n=e.stores,n===null?e.stores=[t]:n.push(t))}function fC(t,e,n,s){e.value=n,e.getSnapshot=s,gC(e)&&yC(t)}function mC(t,e,n){return n(function(){gC(e)&&yC(t)})}function gC(t){var e=t.getSnapshot;t=t.value;try{var n=e();return!rr(t,n)}catch{return!0}}function yC(t){var e=Yr(t,1);e!==null&&nr(e,t,1,-1)}function vv(t){var e=fr();return typeof t=="function"&&(t=t()),e.memoizedState=e.baseState=t,t={pending:null,interleaved:null,lanes:0,dispatch:null,lastRenderedReducer:Tu,lastRenderedState:t},e.queue=t,t=t.dispatch=yO.bind(null,bt,t),[e.memoizedState,t]}function Eu(t,e,n,s){return t={tag:t,create:e,destroy:n,deps:s,next:null},e=bt.updateQueue,e===null?(e={lastEffect:null,stores:null},bt.updateQueue=e,e.lastEffect=t.next=t):(n=e.lastEffect,n===null?e.lastEffect=t.next=t:(s=n.next,n.next=t,t.next=s,e.lastEffect=t)),t}function xC(){return zs().memoizedState}function ud(t,e,n,s){var r=fr();bt.flags|=t,r.memoizedState=Eu(1|e,n,void 0,s===void 0?null:s)}function Tp(t,e,n,s){var r=zs();s=s===void 0?null:s;var o=void 0;if(Wt!==null){var a=Wt.memoizedState;if(o=a.destroy,s!==null&&n1(s,a.deps)){r.memoizedState=Eu(e,n,o,s);return}}bt.flags|=t,r.memoizedState=Eu(1|e,n,o,s)}function Sv(t,e){return ud(8390656,8,t,e)}function o1(t,e){return Tp(2048,8,t,e)}function bC(t,e){return Tp(4,2,t,e)}function wC(t,e){return Tp(4,4,t,e)}function vC(t,e){if(typeof e=="function")return t=t(),e(t),function(){e(null)};if(e!=null)return t=t(),e.current=t,function(){e.current=null}}function SC(t,e,n){return n=n!=null?n.concat([t]):null,Tp(4,4,vC.bind(null,e,t),n)}function a1(){}function kC(t,e){var n=zs();e=e===void 0?null:e;var s=n.memoizedState;return s!==null&&e!==null&&n1(e,s[1])?s[0]:(n.memoizedState=[t,e],t)}function $C(t,e){var n=zs();e=e===void 0?null:e;var s=n.memoizedState;return s!==null&&e!==null&&n1(e,s[1])?s[0]:(t=t(),n.memoizedState=[t,e],t)}function CC(t,e,n){return Ca&21?(rr(n,e)||(n=R$(),bt.lanes|=n,Na|=n,t.baseState=!0),e):(t.baseState&&(t.baseState=!1,Un=!0),t.memoizedState=n)}function mO(t,e){var n=Xe;Xe=n!==0&&4>n?n:4,t(!0);var s=Zm.transition;Zm.transition={};try{t(!1),e()}finally{Xe=n,Zm.transition=s}}function NC(){return zs().memoizedState}function gO(t,e,n){var s=Co(t);if(n={lane:s,action:n,hasEagerState:!1,eagerState:null,next:null},IC(t))TC(e,n);else if(n=lC(t,e,n,s),n!==null){var r=Dn();nr(n,t,s,r),EC(n,e,s)}}function yO(t,e,n){var s=Co(t),r={lane:s,action:n,hasEagerState:!1,eagerState:null,next:null};if(IC(t))TC(e,r);else{var o=t.alternate;if(t.lanes===0&&(o===null||o.lanes===0)&&(o=e.lastRenderedReducer,o!==null))try{var a=e.lastRenderedState,i=o(a,n);if(r.hasEagerState=!0,r.eagerState=i,rr(i,a)){var l=e.interleaved;l===null?(r.next=r,Q0(e)):(r.next=l.next,l.next=r),e.interleaved=r;return}}catch{}finally{}n=lC(t,e,r,s),n!==null&&(r=Dn(),nr(n,t,s,r),EC(n,e,s))}}function IC(t){var e=t.alternate;return t===bt||e!==null&&e===bt}function TC(t,e){lu=Fd=!0;var n=t.pending;n===null?e.next=e:(e.next=n.next,n.next=e),t.pending=e}function EC(t,e,n){if(n&4194240){var s=e.lanes;s&=t.pendingLanes,n|=s,e.lanes=n,P0(t,n)}}var Ld={readContext:Ps,useCallback:mn,useContext:mn,useEffect:mn,useImperativeHandle:mn,useInsertionEffect:mn,useLayoutEffect:mn,useMemo:mn,useReducer:mn,useRef:mn,useState:mn,useDebugValue:mn,useDeferredValue:mn,useTransition:mn,useMutableSource:mn,useSyncExternalStore:mn,useId:mn,unstable_isNewReconciler:!1},xO={readContext:Ps,useCallback:function(t,e){return fr().memoizedState=[t,e===void 0?null:e],t},useContext:Ps,useEffect:Sv,useImperativeHandle:function(t,e,n){return n=n!=null?n.concat([t]):null,ud(4194308,4,vC.bind(null,e,t),n)},useLayoutEffect:function(t,e){return ud(4194308,4,t,e)},useInsertionEffect:function(t,e){return ud(4,2,t,e)},useMemo:function(t,e){var n=fr();return e=e===void 0?null:e,t=t(),n.memoizedState=[t,e],t},useReducer:function(t,e,n){var s=fr();return e=n!==void 0?n(e):e,s.memoizedState=s.baseState=e,t={pending:null,interleaved:null,lanes:0,dispatch:null,lastRenderedReducer:t,lastRenderedState:e},s.queue=t,t=t.dispatch=gO.bind(null,bt,t),[s.memoizedState,t]},useRef:function(t){var e=fr();return t={current:t},e.memoizedState=t},useState:vv,useDebugValue:a1,useDeferredValue:function(t){return fr().memoizedState=t},useTransition:function(){var t=vv(!1),e=t[0];return t=mO.bind(null,t[1]),fr().memoizedState=t,[e,t]},useMutableSource:function(){},useSyncExternalStore:function(t,e,n){var s=bt,r=fr();if(ft){if(n===void 0)throw Error(ae(407));n=n()}else{if(n=e(),Jt===null)throw Error(ae(349));Ca&30||pC(s,e,n)}r.memoizedState=n;var o={value:n,getSnapshot:e};return r.queue=o,Sv(mC.bind(null,s,o,t),[t]),s.flags|=2048,Eu(9,fC.bind(null,s,o,n,e),void 0,null),n},useId:function(){var t=fr(),e=Jt.identifierPrefix;if(ft){var n=Ur,s=Wr;n=(s&~(1<<32-tr(s)-1)).toString(32)+n,e=":"+e+"R"+n,n=Iu++,0<n&&(e+="H"+n.toString(32)),e+=":"}else n=fO++,e=":"+e+"r"+n.toString(32)+":";return t.memoizedState=e},unstable_isNewReconciler:!1},bO={readContext:Ps,useCallback:kC,useContext:Ps,useEffect:o1,useImperativeHandle:SC,useInsertionEffect:bC,useLayoutEffect:wC,useMemo:$C,useReducer:Jm,useRef:xC,useState:function(){return Jm(Tu)},useDebugValue:a1,useDeferredValue:function(t){var e=zs();return CC(e,Wt.memoizedState,t)},useTransition:function(){var t=Jm(Tu)[0],e=zs().memoizedState;return[t,e]},useMutableSource:hC,useSyncExternalStore:dC,useId:NC,unstable_isNewReconciler:!1},wO={readContext:Ps,useCallback:kC,useContext:Ps,useEffect:o1,useImperativeHandle:SC,useInsertionEffect:bC,useLayoutEffect:wC,useMemo:$C,useReducer:eg,useRef:xC,useState:function(){return eg(Tu)},useDebugValue:a1,useDeferredValue:function(t){var e=zs();return Wt===null?e.memoizedState=t:CC(e,Wt.memoizedState,t)},useTransition:function(){var t=eg(Tu)[0],e=zs().memoizedState;return[t,e]},useMutableSource:hC,useSyncExternalStore:dC,useId:NC,unstable_isNewReconciler:!1};function Ys(t,e){if(t&&t.defaultProps){e=wt({},e),t=t.defaultProps;for(var n in t)e[n]===void 0&&(e[n]=t[n]);return e}return e}function ly(t,e,n,s){e=t.memoizedState,n=n(s,e),n=n==null?e:wt({},e,n),t.memoizedState=n,t.lanes===0&&(t.updateQueue.baseState=n)}var Ep={isMounted:function(t){return(t=t._reactInternals)?Ga(t)===t:!1},enqueueSetState:function(t,e,n){t=t._reactInternals;var s=Dn(),r=Co(t),o=Gr(s,r);o.payload=e,n!=null&&(o.callback=n),e=ko(t,o,r),e!==null&&(nr(e,t,r,s),id(e,t,r))},enqueueReplaceState:function(t,e,n){t=t._reactInternals;var s=Dn(),r=Co(t),o=Gr(s,r);o.tag=1,o.payload=e,n!=null&&(o.callback=n),e=ko(t,o,r),e!==null&&(nr(e,t,r,s),id(e,t,r))},enqueueForceUpdate:function(t,e){t=t._reactInternals;var n=Dn(),s=Co(t),r=Gr(n,s);r.tag=2,e!=null&&(r.callback=e),e=ko(t,r,s),e!==null&&(nr(e,t,s,n),id(e,t,s))}};function kv(t,e,n,s,r,o,a){return t=t.stateNode,typeof t.shouldComponentUpdate=="function"?t.shouldComponentUpdate(s,o,a):e.prototype&&e.prototype.isPureReactComponent?!vu(n,s)||!vu(r,o):!0}function RC(t,e,n){var s=!1,r=Ao,o=e.contextType;return typeof o=="object"&&o!==null?o=Ps(o):(r=jn(e)?ka:kn.current,s=e.contextTypes,o=(s=s!=null)?Hi(t,r):Ao),e=new e(n,o),t.memoizedState=e.state!==null&&e.state!==void 0?e.state:null,e.updater=Ep,t.stateNode=e,e._reactInternals=t,s&&(t=t.stateNode,t.__reactInternalMemoizedUnmaskedChildContext=r,t.__reactInternalMemoizedMaskedChildContext=o),e}function $v(t,e,n,s){t=e.state,typeof e.componentWillReceiveProps=="function"&&e.componentWillReceiveProps(n,s),typeof e.UNSAFE_componentWillReceiveProps=="function"&&e.UNSAFE_componentWillReceiveProps(n,s),e.state!==t&&Ep.enqueueReplaceState(e,e.state,null)}function uy(t,e,n,s){var r=t.stateNode;r.props=n,r.state=t.memoizedState,r.refs={},Z0(t);var o=e.contextType;typeof o=="object"&&o!==null?r.context=Ps(o):(o=jn(e)?ka:kn.current,r.context=Hi(t,o)),r.state=t.memoizedState,o=e.getDerivedStateFromProps,typeof o=="function"&&(ly(t,e,o,n),r.state=t.memoizedState),typeof e.getDerivedStateFromProps=="function"||typeof r.getSnapshotBeforeUpdate=="function"||typeof r.UNSAFE_componentWillMount!="function"&&typeof r.componentWillMount!="function"||(e=r.state,typeof r.componentWillMount=="function"&&r.componentWillMount(),typeof r.UNSAFE_componentWillMount=="function"&&r.UNSAFE_componentWillMount(),e!==r.state&&Ep.enqueueReplaceState(r,r.state,null),_d(t,n,r,s),r.state=t.memoizedState),typeof r.componentDidMount=="function"&&(t.flags|=4194308)}function Xi(t,e){try{var n="",s=e;do n+=qA(s),s=s.return;while(s);var r=n}catch(o){r=`
Error generating stack: `+o.message+`
`+o.stack}return{value:t,source:e,stack:r,digest:null}}function tg(t,e,n){return{value:t,source:null,stack:n??null,digest:e??null}}function cy(t,e){try{console.error(e.value)}catch(n){setTimeout(function(){throw n})}}var vO=typeof WeakMap=="function"?WeakMap:Map;function DC(t,e,n){n=Gr(-1,n),n.tag=3,n.payload={element:null};var s=e.value;return n.callback=function(){zd||(zd=!0,wy=s),cy(t,e)},n}function AC(t,e,n){n=Gr(-1,n),n.tag=3;var s=t.type.getDerivedStateFromError;if(typeof s=="function"){var r=e.value;n.payload=function(){return s(r)},n.callback=function(){cy(t,e)}}var o=t.stateNode;return o!==null&&typeof o.componentDidCatch=="function"&&(n.callback=function(){cy(t,e),typeof s!="function"&&($o===null?$o=new Set([this]):$o.add(this));var a=e.stack;this.componentDidCatch(e.value,{componentStack:a!==null?a:""})}),n}function Cv(t,e,n){var s=t.pingCache;if(s===null){s=t.pingCache=new vO;var r=new Set;s.set(e,r)}else r=s.get(e),r===void 0&&(r=new Set,s.set(e,r));r.has(n)||(r.add(n),t=FO.bind(null,t,e,n),e.then(t,t))}function Nv(t){do{var e;if((e=t.tag===13)&&(e=t.memoizedState,e=e!==null?e.dehydrated!==null:!0),e)return t;t=t.return}while(t!==null);return null}function Iv(t,e,n,s,r){return t.mode&1?(t.flags|=65536,t.lanes=r,t):(t===e?t.flags|=65536:(t.flags|=128,n.flags|=131072,n.flags&=-52805,n.tag===1&&(n.alternate===null?n.tag=17:(e=Gr(-1,1),e.tag=2,ko(n,e,1))),n.lanes|=1),t)}var SO=to.ReactCurrentOwner,Un=!1;function In(t,e,n,s){e.child=t===null?iC(e,null,n,s):Ki(e,t.child,n,s)}function Tv(t,e,n,s,r){n=n.render;var o=e.ref;return _i(e,r),s=s1(t,e,n,s,o,r),n=r1(),t!==null&&!Un?(e.updateQueue=t.updateQueue,e.flags&=-2053,t.lanes&=~r,Qr(t,e,r)):(ft&&n&&H0(e),e.flags|=1,In(t,e,s,r),e.child)}function Ev(t,e,n,s,r){if(t===null){var o=n.type;return typeof o=="function"&&!f1(o)&&o.defaultProps===void 0&&n.compare===null&&n.defaultProps===void 0?(e.tag=15,e.type=o,_C(t,e,o,s,r)):(t=pd(n.type,null,s,e,e.mode,r),t.ref=e.ref,t.return=e,e.child=t)}if(o=t.child,!(t.lanes&r)){var a=o.memoizedProps;if(n=n.compare,n=n!==null?n:vu,n(a,s)&&t.ref===e.ref)return Qr(t,e,r)}return e.flags|=1,t=No(o,s),t.ref=e.ref,t.return=e,e.child=t}function _C(t,e,n,s,r){if(t!==null){var o=t.memoizedProps;if(vu(o,s)&&t.ref===e.ref)if(Un=!1,e.pendingProps=s=o,(t.lanes&r)!==0)t.flags&131072&&(Un=!0);else return e.lanes=t.lanes,Qr(t,e,r)}return hy(t,e,n,s,r)}function OC(t,e,n){var s=e.pendingProps,r=s.children,o=t!==null?t.memoizedState:null;if(s.mode==="hidden")if(!(e.mode&1))e.memoizedState={baseLanes:0,cachePool:null,transitions:null},rt(Ni,ns),ns|=n;else{if(!(n&1073741824))return t=o!==null?o.baseLanes|n:n,e.lanes=e.childLanes=1073741824,e.memoizedState={baseLanes:t,cachePool:null,transitions:null},e.updateQueue=null,rt(Ni,ns),ns|=t,null;e.memoizedState={baseLanes:0,cachePool:null,transitions:null},s=o!==null?o.baseLanes:n,rt(Ni,ns),ns|=s}else o!==null?(s=o.baseLanes|n,e.memoizedState=null):s=n,rt(Ni,ns),ns|=s;return In(t,e,r,n),e.child}function FC(t,e){var n=e.ref;(t===null&&n!==null||t!==null&&t.ref!==n)&&(e.flags|=512,e.flags|=2097152)}function hy(t,e,n,s,r){var o=jn(n)?ka:kn.current;return o=Hi(e,o),_i(e,r),n=s1(t,e,n,s,o,r),s=r1(),t!==null&&!Un?(e.updateQueue=t.updateQueue,e.flags&=-2053,t.lanes&=~r,Qr(t,e,r)):(ft&&s&&H0(e),e.flags|=1,In(t,e,n,r),e.child)}function Rv(t,e,n,s,r){if(jn(n)){var o=!0;Td(e)}else o=!1;if(_i(e,r),e.stateNode===null)cd(t,e),RC(e,n,s),uy(e,n,s,r),s=!0;else if(t===null){var a=e.stateNode,i=e.memoizedProps;a.props=i;var l=a.context,u=n.contextType;typeof u=="object"&&u!==null?u=Ps(u):(u=jn(n)?ka:kn.current,u=Hi(e,u));var c=n.getDerivedStateFromProps,h=typeof c=="function"||typeof a.getSnapshotBeforeUpdate=="function";h||typeof a.UNSAFE_componentWillReceiveProps!="function"&&typeof a.componentWillReceiveProps!="function"||(i!==s||l!==u)&&$v(e,a,s,u),uo=!1;var d=e.memoizedState;a.state=d,_d(e,s,a,r),l=e.memoizedState,i!==s||d!==l||Hn.current||uo?(typeof c=="function"&&(ly(e,n,c,s),l=e.memoizedState),(i=uo||kv(e,n,i,s,d,l,u))?(h||typeof a.UNSAFE_componentWillMount!="function"&&typeof a.componentWillMount!="function"||(typeof a.componentWillMount=="function"&&a.componentWillMount(),typeof a.UNSAFE_componentWillMount=="function"&&a.UNSAFE_componentWillMount()),typeof a.componentDidMount=="function"&&(e.flags|=4194308)):(typeof a.componentDidMount=="function"&&(e.flags|=4194308),e.memoizedProps=s,e.memoizedState=l),a.props=s,a.state=l,a.context=u,s=i):(typeof a.componentDidMount=="function"&&(e.flags|=4194308),s=!1)}else{a=e.stateNode,uC(t,e),i=e.memoizedProps,u=e.type===e.elementType?i:Ys(e.type,i),a.props=u,h=e.pendingProps,d=a.context,l=n.contextType,typeof l=="object"&&l!==null?l=Ps(l):(l=jn(n)?ka:kn.current,l=Hi(e,l));var p=n.getDerivedStateFromProps;(c=typeof p=="function"||typeof a.getSnapshotBeforeUpdate=="function")||typeof a.UNSAFE_componentWillReceiveProps!="function"&&typeof a.componentWillReceiveProps!="function"||(i!==h||d!==l)&&$v(e,a,s,l),uo=!1,d=e.memoizedState,a.state=d,_d(e,s,a,r);var f=e.memoizedState;i!==h||d!==f||Hn.current||uo?(typeof p=="function"&&(ly(e,n,p,s),f=e.memoizedState),(u=uo||kv(e,n,u,s,d,f,l)||!1)?(c||typeof a.UNSAFE_componentWillUpdate!="function"&&typeof a.componentWillUpdate!="function"||(typeof a.componentWillUpdate=="function"&&a.componentWillUpdate(s,f,l),typeof a.UNSAFE_componentWillUpdate=="function"&&a.UNSAFE_componentWillUpdate(s,f,l)),typeof a.componentDidUpdate=="function"&&(e.flags|=4),typeof a.getSnapshotBeforeUpdate=="function"&&(e.flags|=1024)):(typeof a.componentDidUpdate!="function"||i===t.memoizedProps&&d===t.memoizedState||(e.flags|=4),typeof a.getSnapshotBeforeUpdate!="function"||i===t.memoizedProps&&d===t.memoizedState||(e.flags|=1024),e.memoizedProps=s,e.memoizedState=f),a.props=s,a.state=f,a.context=l,s=u):(typeof a.componentDidUpdate!="function"||i===t.memoizedProps&&d===t.memoizedState||(e.flags|=4),typeof a.getSnapshotBeforeUpdate!="function"||i===t.memoizedProps&&d===t.memoizedState||(e.flags|=1024),s=!1)}return dy(t,e,n,s,o,r)}function dy(t,e,n,s,r,o){FC(t,e);var a=(e.flags&128)!==0;if(!s&&!a)return r&&mv(e,n,!1),Qr(t,e,o);s=e.stateNode,SO.current=e;var i=a&&typeof n.getDerivedStateFromError!="function"?null:s.render();return e.flags|=1,t!==null&&a?(e.child=Ki(e,t.child,null,o),e.child=Ki(e,null,i,o)):In(t,e,i,o),e.memoizedState=s.state,r&&mv(e,n,!0),e.child}function LC(t){var e=t.stateNode;e.pendingContext?fv(t,e.pendingContext,e.pendingContext!==e.context):e.context&&fv(t,e.context,!1),J0(t,e.containerInfo)}function Dv(t,e,n,s,r){return ji(),K0(r),e.flags|=256,In(t,e,n,s),e.child}var py={dehydrated:null,treeContext:null,retryLane:0};function fy(t){return{baseLanes:t,cachePool:null,transitions:null}}function PC(t,e,n){var s=e.pendingProps,r=yt.current,o=!1,a=(e.flags&128)!==0,i;if((i=a)||(i=t!==null&&t.memoizedState===null?!1:(r&2)!==0),i?(o=!0,e.flags&=-129):(t===null||t.memoizedState!==null)&&(r|=1),rt(yt,r&1),t===null)return ay(e),t=e.memoizedState,t!==null&&(t=t.dehydrated,t!==null)?(e.mode&1?t.data==="$!"?e.lanes=8:e.lanes=1073741824:e.lanes=1,null):(a=s.children,t=s.fallback,o?(s=e.mode,o=e.child,a={mode:"hidden",children:a},!(s&1)&&o!==null?(o.childLanes=0,o.pendingProps=a):o=Ap(a,s,0,null),t=wa(t,s,n,null),o.return=e,t.return=e,o.sibling=t,e.child=o,e.child.memoizedState=fy(n),e.memoizedState=py,t):i1(e,a));if(r=t.memoizedState,r!==null&&(i=r.dehydrated,i!==null))return kO(t,e,a,s,i,r,n);if(o){o=s.fallback,a=e.mode,r=t.child,i=r.sibling;var l={mode:"hidden",children:s.children};return!(a&1)&&e.child!==r?(s=e.child,s.childLanes=0,s.pendingProps=l,e.deletions=null):(s=No(r,l),s.subtreeFlags=r.subtreeFlags&14680064),i!==null?o=No(i,o):(o=wa(o,a,n,null),o.flags|=2),o.return=e,s.return=e,s.sibling=o,e.child=s,s=o,o=e.child,a=t.child.memoizedState,a=a===null?fy(n):{baseLanes:a.baseLanes|n,cachePool:null,transitions:a.transitions},o.memoizedState=a,o.childLanes=t.childLanes&~n,e.memoizedState=py,s}return o=t.child,t=o.sibling,s=No(o,{mode:"visible",children:s.children}),!(e.mode&1)&&(s.lanes=n),s.return=e,s.sibling=null,t!==null&&(n=e.deletions,n===null?(e.deletions=[t],e.flags|=16):n.push(t)),e.child=s,e.memoizedState=null,s}function i1(t,e){return e=Ap({mode:"visible",children:e},t.mode,0,null),e.return=t,t.child=e}function Ah(t,e,n,s){return s!==null&&K0(s),Ki(e,t.child,null,n),t=i1(e,e.pendingProps.children),t.flags|=2,e.memoizedState=null,t}function kO(t,e,n,s,r,o,a){if(n)return e.flags&256?(e.flags&=-257,s=tg(Error(ae(422))),Ah(t,e,a,s)):e.memoizedState!==null?(e.child=t.child,e.flags|=128,null):(o=s.fallback,r=e.mode,s=Ap({mode:"visible",children:s.children},r,0,null),o=wa(o,r,a,null),o.flags|=2,s.return=e,o.return=e,s.sibling=o,e.child=s,e.mode&1&&Ki(e,t.child,null,a),e.child.memoizedState=fy(a),e.memoizedState=py,o);if(!(e.mode&1))return Ah(t,e,a,null);if(r.data==="$!"){if(s=r.nextSibling&&r.nextSibling.dataset,s)var i=s.dgst;return s=i,o=Error(ae(419)),s=tg(o,s,void 0),Ah(t,e,a,s)}if(i=(a&t.childLanes)!==0,Un||i){if(s=Jt,s!==null){switch(a&-a){case 4:r=2;break;case 16:r=8;break;case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:case 4194304:case 8388608:case 16777216:case 33554432:case 67108864:r=32;break;case 536870912:r=268435456;break;default:r=0}r=r&(s.suspendedLanes|a)?0:r,r!==0&&r!==o.retryLane&&(o.retryLane=r,Yr(t,r),nr(s,t,r,-1))}return p1(),s=tg(Error(ae(421))),Ah(t,e,a,s)}return r.data==="$?"?(e.flags|=128,e.child=t.child,e=LO.bind(null,t),r._reactRetry=e,null):(t=o.treeContext,rs=So(r.nextSibling),is=e,ft=!0,Zs=null,t!==null&&(ks[$s++]=Wr,ks[$s++]=Ur,ks[$s++]=$a,Wr=t.id,Ur=t.overflow,$a=e),e=i1(e,s.children),e.flags|=4096,e)}function Av(t,e,n){t.lanes|=e;var s=t.alternate;s!==null&&(s.lanes|=e),iy(t.return,e,n)}function ng(t,e,n,s,r){var o=t.memoizedState;o===null?t.memoizedState={isBackwards:e,rendering:null,renderingStartTime:0,last:s,tail:n,tailMode:r}:(o.isBackwards=e,o.rendering=null,o.renderingStartTime=0,o.last=s,o.tail=n,o.tailMode=r)}function zC(t,e,n){var s=e.pendingProps,r=s.revealOrder,o=s.tail;if(In(t,e,s.children,n),s=yt.current,s&2)s=s&1|2,e.flags|=128;else{if(t!==null&&t.flags&128)e:for(t=e.child;t!==null;){if(t.tag===13)t.memoizedState!==null&&Av(t,n,e);else if(t.tag===19)Av(t,n,e);else if(t.child!==null){t.child.return=t,t=t.child;continue}if(t===e)break e;for(;t.sibling===null;){if(t.return===null||t.return===e)break e;t=t.return}t.sibling.return=t.return,t=t.sibling}s&=1}if(rt(yt,s),!(e.mode&1))e.memoizedState=null;else switch(r){case"forwards":for(n=e.child,r=null;n!==null;)t=n.alternate,t!==null&&Od(t)===null&&(r=n),n=n.sibling;n=r,n===null?(r=e.child,e.child=null):(r=n.sibling,n.sibling=null),ng(e,!1,r,n,o);break;case"backwards":for(n=null,r=e.child,e.child=null;r!==null;){if(t=r.alternate,t!==null&&Od(t)===null){e.child=r;break}t=r.sibling,r.sibling=n,n=r,r=t}ng(e,!0,n,null,o);break;case"together":ng(e,!1,null,null,void 0);break;default:e.memoizedState=null}return e.child}function cd(t,e){!(e.mode&1)&&t!==null&&(t.alternate=null,e.alternate=null,e.flags|=2)}function Qr(t,e,n){if(t!==null&&(e.dependencies=t.dependencies),Na|=e.lanes,!(n&e.childLanes))return null;if(t!==null&&e.child!==t.child)throw Error(ae(153));if(e.child!==null){for(t=e.child,n=No(t,t.pendingProps),e.child=n,n.return=e;t.sibling!==null;)t=t.sibling,n=n.sibling=No(t,t.pendingProps),n.return=e;n.sibling=null}return e.child}function $O(t,e,n){switch(e.tag){case 3:LC(e),ji();break;case 5:cC(e);break;case 1:jn(e.type)&&Td(e);break;case 4:J0(e,e.stateNode.containerInfo);break;case 10:var s=e.type._context,r=e.memoizedProps.value;rt(Dd,s._currentValue),s._currentValue=r;break;case 13:if(s=e.memoizedState,s!==null)return s.dehydrated!==null?(rt(yt,yt.current&1),e.flags|=128,null):n&e.child.childLanes?PC(t,e,n):(rt(yt,yt.current&1),t=Qr(t,e,n),t!==null?t.sibling:null);rt(yt,yt.current&1);break;case 19:if(s=(n&e.childLanes)!==0,t.flags&128){if(s)return zC(t,e,n);e.flags|=128}if(r=e.memoizedState,r!==null&&(r.rendering=null,r.tail=null,r.lastEffect=null),rt(yt,yt.current),s)break;return null;case 22:case 23:return e.lanes=0,OC(t,e,n)}return Qr(t,e,n)}var MC,my,BC,VC;MC=function(t,e){for(var n=e.child;n!==null;){if(n.tag===5||n.tag===6)t.appendChild(n.stateNode);else if(n.tag!==4&&n.child!==null){n.child.return=n,n=n.child;continue}if(n===e)break;for(;n.sibling===null;){if(n.return===null||n.return===e)return;n=n.return}n.sibling.return=n.return,n=n.sibling}};my=function(){};BC=function(t,e,n,s){var r=t.memoizedProps;if(r!==s){t=e.stateNode,ma($r.current);var o=null;switch(n){case"input":r=Pg(t,r),s=Pg(t,s),o=[];break;case"select":r=wt({},r,{value:void 0}),s=wt({},s,{value:void 0}),o=[];break;case"textarea":r=Bg(t,r),s=Bg(t,s),o=[];break;default:typeof r.onClick!="function"&&typeof s.onClick=="function"&&(t.onclick=Nd)}Wg(n,s);var a;n=null;for(u in r)if(!s.hasOwnProperty(u)&&r.hasOwnProperty(u)&&r[u]!=null)if(u==="style"){var i=r[u];for(a in i)i.hasOwnProperty(a)&&(n||(n={}),n[a]="")}else u!=="dangerouslySetInnerHTML"&&u!=="children"&&u!=="suppressContentEditableWarning"&&u!=="suppressHydrationWarning"&&u!=="autoFocus"&&(fu.hasOwnProperty(u)?o||(o=[]):(o=o||[]).push(u,null));for(u in s){var l=s[u];if(i=r!=null?r[u]:void 0,s.hasOwnProperty(u)&&l!==i&&(l!=null||i!=null))if(u==="style")if(i){for(a in i)!i.hasOwnProperty(a)||l&&l.hasOwnProperty(a)||(n||(n={}),n[a]="");for(a in l)l.hasOwnProperty(a)&&i[a]!==l[a]&&(n||(n={}),n[a]=l[a])}else n||(o||(o=[]),o.push(u,n)),n=l;else u==="dangerouslySetInnerHTML"?(l=l?l.__html:void 0,i=i?i.__html:void 0,l!=null&&i!==l&&(o=o||[]).push(u,l)):u==="children"?typeof l!="string"&&typeof l!="number"||(o=o||[]).push(u,""+l):u!=="suppressContentEditableWarning"&&u!=="suppressHydrationWarning"&&(fu.hasOwnProperty(u)?(l!=null&&u==="onScroll"&&lt("scroll",t),o||i===l||(o=[])):(o=o||[]).push(u,l))}n&&(o=o||[]).push("style",n);var u=o;(e.updateQueue=u)&&(e.flags|=4)}};VC=function(t,e,n,s){n!==s&&(e.flags|=4)};function Bl(t,e){if(!ft)switch(t.tailMode){case"hidden":e=t.tail;for(var n=null;e!==null;)e.alternate!==null&&(n=e),e=e.sibling;n===null?t.tail=null:n.sibling=null;break;case"collapsed":n=t.tail;for(var s=null;n!==null;)n.alternate!==null&&(s=n),n=n.sibling;s===null?e||t.tail===null?t.tail=null:t.tail.sibling=null:s.sibling=null}}function gn(t){var e=t.alternate!==null&&t.alternate.child===t.child,n=0,s=0;if(e)for(var r=t.child;r!==null;)n|=r.lanes|r.childLanes,s|=r.subtreeFlags&14680064,s|=r.flags&14680064,r.return=t,r=r.sibling;else for(r=t.child;r!==null;)n|=r.lanes|r.childLanes,s|=r.subtreeFlags,s|=r.flags,r.return=t,r=r.sibling;return t.subtreeFlags|=s,t.childLanes=n,e}function CO(t,e,n){var s=e.pendingProps;switch(j0(e),e.tag){case 2:case 16:case 15:case 0:case 11:case 7:case 8:case 12:case 9:case 14:return gn(e),null;case 1:return jn(e.type)&&Id(),gn(e),null;case 3:return s=e.stateNode,qi(),ct(Hn),ct(kn),t1(),s.pendingContext&&(s.context=s.pendingContext,s.pendingContext=null),(t===null||t.child===null)&&(Rh(e)?e.flags|=4:t===null||t.memoizedState.isDehydrated&&!(e.flags&256)||(e.flags|=1024,Zs!==null&&(ky(Zs),Zs=null))),my(t,e),gn(e),null;case 5:e1(e);var r=ma(Nu.current);if(n=e.type,t!==null&&e.stateNode!=null)BC(t,e,n,s,r),t.ref!==e.ref&&(e.flags|=512,e.flags|=2097152);else{if(!s){if(e.stateNode===null)throw Error(ae(166));return gn(e),null}if(t=ma($r.current),Rh(e)){s=e.stateNode,n=e.type;var o=e.memoizedProps;switch(s[br]=e,s[$u]=o,t=(e.mode&1)!==0,n){case"dialog":lt("cancel",s),lt("close",s);break;case"iframe":case"object":case"embed":lt("load",s);break;case"video":case"audio":for(r=0;r<Xl.length;r++)lt(Xl[r],s);break;case"source":lt("error",s);break;case"img":case"image":case"link":lt("error",s),lt("load",s);break;case"details":lt("toggle",s);break;case"input":Vw(s,o),lt("invalid",s);break;case"select":s._wrapperState={wasMultiple:!!o.multiple},lt("invalid",s);break;case"textarea":Uw(s,o),lt("invalid",s)}Wg(n,o),r=null;for(var a in o)if(o.hasOwnProperty(a)){var i=o[a];a==="children"?typeof i=="string"?s.textContent!==i&&(o.suppressHydrationWarning!==!0&&Eh(s.textContent,i,t),r=["children",i]):typeof i=="number"&&s.textContent!==""+i&&(o.suppressHydrationWarning!==!0&&Eh(s.textContent,i,t),r=["children",""+i]):fu.hasOwnProperty(a)&&i!=null&&a==="onScroll"&&lt("scroll",s)}switch(n){case"input":vh(s),Ww(s,o,!0);break;case"textarea":vh(s),Gw(s);break;case"select":case"option":break;default:typeof o.onClick=="function"&&(s.onclick=Nd)}s=r,e.updateQueue=s,s!==null&&(e.flags|=4)}else{a=r.nodeType===9?r:r.ownerDocument,t==="http://www.w3.org/1999/xhtml"&&(t=m$(n)),t==="http://www.w3.org/1999/xhtml"?n==="script"?(t=a.createElement("div"),t.innerHTML="<script><\/script>",t=t.removeChild(t.firstChild)):typeof s.is=="string"?t=a.createElement(n,{is:s.is}):(t=a.createElement(n),n==="select"&&(a=t,s.multiple?a.multiple=!0:s.size&&(a.size=s.size))):t=a.createElementNS(t,n),t[br]=e,t[$u]=s,MC(t,e,!1,!1),e.stateNode=t;e:{switch(a=Ug(n,s),n){case"dialog":lt("cancel",t),lt("close",t),r=s;break;case"iframe":case"object":case"embed":lt("load",t),r=s;break;case"video":case"audio":for(r=0;r<Xl.length;r++)lt(Xl[r],t);r=s;break;case"source":lt("error",t),r=s;break;case"img":case"image":case"link":lt("error",t),lt("load",t),r=s;break;case"details":lt("toggle",t),r=s;break;case"input":Vw(t,s),r=Pg(t,s),lt("invalid",t);break;case"option":r=s;break;case"select":t._wrapperState={wasMultiple:!!s.multiple},r=wt({},s,{value:void 0}),lt("invalid",t);break;case"textarea":Uw(t,s),r=Bg(t,s),lt("invalid",t);break;default:r=s}Wg(n,r),i=r;for(o in i)if(i.hasOwnProperty(o)){var l=i[o];o==="style"?x$(t,l):o==="dangerouslySetInnerHTML"?(l=l?l.__html:void 0,l!=null&&g$(t,l)):o==="children"?typeof l=="string"?(n!=="textarea"||l!=="")&&mu(t,l):typeof l=="number"&&mu(t,""+l):o!=="suppressContentEditableWarning"&&o!=="suppressHydrationWarning"&&o!=="autoFocus"&&(fu.hasOwnProperty(o)?l!=null&&o==="onScroll"&&lt("scroll",t):l!=null&&D0(t,o,l,a))}switch(n){case"input":vh(t),Ww(t,s,!1);break;case"textarea":vh(t),Gw(t);break;case"option":s.value!=null&&t.setAttribute("value",""+Do(s.value));break;case"select":t.multiple=!!s.multiple,o=s.value,o!=null?Ei(t,!!s.multiple,o,!1):s.defaultValue!=null&&Ei(t,!!s.multiple,s.defaultValue,!0);break;default:typeof r.onClick=="function"&&(t.onclick=Nd)}switch(n){case"button":case"input":case"select":case"textarea":s=!!s.autoFocus;break e;case"img":s=!0;break e;default:s=!1}}s&&(e.flags|=4)}e.ref!==null&&(e.flags|=512,e.flags|=2097152)}return gn(e),null;case 6:if(t&&e.stateNode!=null)VC(t,e,t.memoizedProps,s);else{if(typeof s!="string"&&e.stateNode===null)throw Error(ae(166));if(n=ma(Nu.current),ma($r.current),Rh(e)){if(s=e.stateNode,n=e.memoizedProps,s[br]=e,(o=s.nodeValue!==n)&&(t=is,t!==null))switch(t.tag){case 3:Eh(s.nodeValue,n,(t.mode&1)!==0);break;case 5:t.memoizedProps.suppressHydrationWarning!==!0&&Eh(s.nodeValue,n,(t.mode&1)!==0)}o&&(e.flags|=4)}else s=(n.nodeType===9?n:n.ownerDocument).createTextNode(s),s[br]=e,e.stateNode=s}return gn(e),null;case 13:if(ct(yt),s=e.memoizedState,t===null||t.memoizedState!==null&&t.memoizedState.dehydrated!==null){if(ft&&rs!==null&&e.mode&1&&!(e.flags&128))oC(),ji(),e.flags|=98560,o=!1;else if(o=Rh(e),s!==null&&s.dehydrated!==null){if(t===null){if(!o)throw Error(ae(318));if(o=e.memoizedState,o=o!==null?o.dehydrated:null,!o)throw Error(ae(317));o[br]=e}else ji(),!(e.flags&128)&&(e.memoizedState=null),e.flags|=4;gn(e),o=!1}else Zs!==null&&(ky(Zs),Zs=null),o=!0;if(!o)return e.flags&65536?e:null}return e.flags&128?(e.lanes=n,e):(s=s!==null,s!==(t!==null&&t.memoizedState!==null)&&s&&(e.child.flags|=8192,e.mode&1&&(t===null||yt.current&1?Gt===0&&(Gt=3):p1())),e.updateQueue!==null&&(e.flags|=4),gn(e),null);case 4:return qi(),my(t,e),t===null&&Su(e.stateNode.containerInfo),gn(e),null;case 10:return Y0(e.type._context),gn(e),null;case 17:return jn(e.type)&&Id(),gn(e),null;case 19:if(ct(yt),o=e.memoizedState,o===null)return gn(e),null;if(s=(e.flags&128)!==0,a=o.rendering,a===null)if(s)Bl(o,!1);else{if(Gt!==0||t!==null&&t.flags&128)for(t=e.child;t!==null;){if(a=Od(t),a!==null){for(e.flags|=128,Bl(o,!1),s=a.updateQueue,s!==null&&(e.updateQueue=s,e.flags|=4),e.subtreeFlags=0,s=n,n=e.child;n!==null;)o=n,t=s,o.flags&=14680066,a=o.alternate,a===null?(o.childLanes=0,o.lanes=t,o.child=null,o.subtreeFlags=0,o.memoizedProps=null,o.memoizedState=null,o.updateQueue=null,o.dependencies=null,o.stateNode=null):(o.childLanes=a.childLanes,o.lanes=a.lanes,o.child=a.child,o.subtreeFlags=0,o.deletions=null,o.memoizedProps=a.memoizedProps,o.memoizedState=a.memoizedState,o.updateQueue=a.updateQueue,o.type=a.type,t=a.dependencies,o.dependencies=t===null?null:{lanes:t.lanes,firstContext:t.firstContext}),n=n.sibling;return rt(yt,yt.current&1|2),e.child}t=t.sibling}o.tail!==null&&Et()>Yi&&(e.flags|=128,s=!0,Bl(o,!1),e.lanes=4194304)}else{if(!s)if(t=Od(a),t!==null){if(e.flags|=128,s=!0,n=t.updateQueue,n!==null&&(e.updateQueue=n,e.flags|=4),Bl(o,!0),o.tail===null&&o.tailMode==="hidden"&&!a.alternate&&!ft)return gn(e),null}else 2*Et()-o.renderingStartTime>Yi&&n!==1073741824&&(e.flags|=128,s=!0,Bl(o,!1),e.lanes=4194304);o.isBackwards?(a.sibling=e.child,e.child=a):(n=o.last,n!==null?n.sibling=a:e.child=a,o.last=a)}return o.tail!==null?(e=o.tail,o.rendering=e,o.tail=e.sibling,o.renderingStartTime=Et(),e.sibling=null,n=yt.current,rt(yt,s?n&1|2:n&1),e):(gn(e),null);case 22:case 23:return d1(),s=e.memoizedState!==null,t!==null&&t.memoizedState!==null!==s&&(e.flags|=8192),s&&e.mode&1?ns&1073741824&&(gn(e),e.subtreeFlags&6&&(e.flags|=8192)):gn(e),null;case 24:return null;case 25:return null}throw Error(ae(156,e.tag))}function NO(t,e){switch(j0(e),e.tag){case 1:return jn(e.type)&&Id(),t=e.flags,t&65536?(e.flags=t&-65537|128,e):null;case 3:return qi(),ct(Hn),ct(kn),t1(),t=e.flags,t&65536&&!(t&128)?(e.flags=t&-65537|128,e):null;case 5:return e1(e),null;case 13:if(ct(yt),t=e.memoizedState,t!==null&&t.dehydrated!==null){if(e.alternate===null)throw Error(ae(340));ji()}return t=e.flags,t&65536?(e.flags=t&-65537|128,e):null;case 19:return ct(yt),null;case 4:return qi(),null;case 10:return Y0(e.type._context),null;case 22:case 23:return d1(),null;case 24:return null;default:return null}}var _h=!1,xn=!1,IO=typeof WeakSet=="function"?WeakSet:Set,ge=null;function Ci(t,e){var n=t.ref;if(n!==null)if(typeof n=="function")try{n(null)}catch(s){St(t,e,s)}else n.current=null}function gy(t,e,n){try{n()}catch(s){St(t,e,s)}}var _v=!1;function TO(t,e){if(Jg=kd,t=j$(),G0(t)){if("selectionStart"in t)var n={start:t.selectionStart,end:t.selectionEnd};else e:{n=(n=t.ownerDocument)&&n.defaultView||window;var s=n.getSelection&&n.getSelection();if(s&&s.rangeCount!==0){n=s.anchorNode;var r=s.anchorOffset,o=s.focusNode;s=s.focusOffset;try{n.nodeType,o.nodeType}catch{n=null;break e}var a=0,i=-1,l=-1,u=0,c=0,h=t,d=null;t:for(;;){for(var p;h!==n||r!==0&&h.nodeType!==3||(i=a+r),h!==o||s!==0&&h.nodeType!==3||(l=a+s),h.nodeType===3&&(a+=h.nodeValue.length),(p=h.firstChild)!==null;)d=h,h=p;for(;;){if(h===t)break t;if(d===n&&++u===r&&(i=a),d===o&&++c===s&&(l=a),(p=h.nextSibling)!==null)break;h=d,d=h.parentNode}h=p}n=i===-1||l===-1?null:{start:i,end:l}}else n=null}n=n||{start:0,end:0}}else n=null;for(ey={focusedElem:t,selectionRange:n},kd=!1,ge=e;ge!==null;)if(e=ge,t=e.child,(e.subtreeFlags&1028)!==0&&t!==null)t.return=e,ge=t;else for(;ge!==null;){e=ge;try{var f=e.alternate;if(e.flags&1024)switch(e.tag){case 0:case 11:case 15:break;case 1:if(f!==null){var m=f.memoizedProps,y=f.memoizedState,g=e.stateNode,x=g.getSnapshotBeforeUpdate(e.elementType===e.type?m:Ys(e.type,m),y);g.__reactInternalSnapshotBeforeUpdate=x}break;case 3:var w=e.stateNode.containerInfo;w.nodeType===1?w.textContent="":w.nodeType===9&&w.documentElement&&w.removeChild(w.documentElement);break;case 5:case 6:case 4:case 17:break;default:throw Error(ae(163))}}catch(b){St(e,e.return,b)}if(t=e.sibling,t!==null){t.return=e.return,ge=t;break}ge=e.return}return f=_v,_v=!1,f}function uu(t,e,n){var s=e.updateQueue;if(s=s!==null?s.lastEffect:null,s!==null){var r=s=s.next;do{if((r.tag&t)===t){var o=r.destroy;r.destroy=void 0,o!==void 0&&gy(e,n,o)}r=r.next}while(r!==s)}}function Rp(t,e){if(e=e.updateQueue,e=e!==null?e.lastEffect:null,e!==null){var n=e=e.next;do{if((n.tag&t)===t){var s=n.create;n.destroy=s()}n=n.next}while(n!==e)}}function yy(t){var e=t.ref;if(e!==null){var n=t.stateNode;switch(t.tag){case 5:t=n;break;default:t=n}typeof e=="function"?e(t):e.current=t}}function WC(t){var e=t.alternate;e!==null&&(t.alternate=null,WC(e)),t.child=null,t.deletions=null,t.sibling=null,t.tag===5&&(e=t.stateNode,e!==null&&(delete e[br],delete e[$u],delete e[sy],delete e[cO],delete e[hO])),t.stateNode=null,t.return=null,t.dependencies=null,t.memoizedProps=null,t.memoizedState=null,t.pendingProps=null,t.stateNode=null,t.updateQueue=null}function UC(t){return t.tag===5||t.tag===3||t.tag===4}function Ov(t){e:for(;;){for(;t.sibling===null;){if(t.return===null||UC(t.return))return null;t=t.return}for(t.sibling.return=t.return,t=t.sibling;t.tag!==5&&t.tag!==6&&t.tag!==18;){if(t.flags&2||t.child===null||t.tag===4)continue e;t.child.return=t,t=t.child}if(!(t.flags&2))return t.stateNode}}function xy(t,e,n){var s=t.tag;if(s===5||s===6)t=t.stateNode,e?n.nodeType===8?n.parentNode.insertBefore(t,e):n.insertBefore(t,e):(n.nodeType===8?(e=n.parentNode,e.insertBefore(t,n)):(e=n,e.appendChild(t)),n=n._reactRootContainer,n!=null||e.onclick!==null||(e.onclick=Nd));else if(s!==4&&(t=t.child,t!==null))for(xy(t,e,n),t=t.sibling;t!==null;)xy(t,e,n),t=t.sibling}function by(t,e,n){var s=t.tag;if(s===5||s===6)t=t.stateNode,e?n.insertBefore(t,e):n.appendChild(t);else if(s!==4&&(t=t.child,t!==null))for(by(t,e,n),t=t.sibling;t!==null;)by(t,e,n),t=t.sibling}var an=null,Qs=!1;function io(t,e,n){for(n=n.child;n!==null;)GC(t,e,n),n=n.sibling}function GC(t,e,n){if(kr&&typeof kr.onCommitFiberUnmount=="function")try{kr.onCommitFiberUnmount(Sp,n)}catch{}switch(n.tag){case 5:xn||Ci(n,e);case 6:var s=an,r=Qs;an=null,io(t,e,n),an=s,Qs=r,an!==null&&(Qs?(t=an,n=n.stateNode,t.nodeType===8?t.parentNode.removeChild(n):t.removeChild(n)):an.removeChild(n.stateNode));break;case 18:an!==null&&(Qs?(t=an,n=n.stateNode,t.nodeType===8?Xm(t.parentNode,n):t.nodeType===1&&Xm(t,n),bu(t)):Xm(an,n.stateNode));break;case 4:s=an,r=Qs,an=n.stateNode.containerInfo,Qs=!0,io(t,e,n),an=s,Qs=r;break;case 0:case 11:case 14:case 15:if(!xn&&(s=n.updateQueue,s!==null&&(s=s.lastEffect,s!==null))){r=s=s.next;do{var o=r,a=o.destroy;o=o.tag,a!==void 0&&(o&2||o&4)&&gy(n,e,a),r=r.next}while(r!==s)}io(t,e,n);break;case 1:if(!xn&&(Ci(n,e),s=n.stateNode,typeof s.componentWillUnmount=="function"))try{s.props=n.memoizedProps,s.state=n.memoizedState,s.componentWillUnmount()}catch(i){St(n,e,i)}io(t,e,n);break;case 21:io(t,e,n);break;case 22:n.mode&1?(xn=(s=xn)||n.memoizedState!==null,io(t,e,n),xn=s):io(t,e,n);break;default:io(t,e,n)}}function Fv(t){var e=t.updateQueue;if(e!==null){t.updateQueue=null;var n=t.stateNode;n===null&&(n=t.stateNode=new IO),e.forEach(function(s){var r=PO.bind(null,t,s);n.has(s)||(n.add(s),s.then(r,r))})}}function Ks(t,e){var n=e.deletions;if(n!==null)for(var s=0;s<n.length;s++){var r=n[s];try{var o=t,a=e,i=a;e:for(;i!==null;){switch(i.tag){case 5:an=i.stateNode,Qs=!1;break e;case 3:an=i.stateNode.containerInfo,Qs=!0;break e;case 4:an=i.stateNode.containerInfo,Qs=!0;break e}i=i.return}if(an===null)throw Error(ae(160));GC(o,a,r),an=null,Qs=!1;var l=r.alternate;l!==null&&(l.return=null),r.return=null}catch(u){St(r,e,u)}}if(e.subtreeFlags&12854)for(e=e.child;e!==null;)HC(e,t),e=e.sibling}function HC(t,e){var n=t.alternate,s=t.flags;switch(t.tag){case 0:case 11:case 14:case 15:if(Ks(e,t),pr(t),s&4){try{uu(3,t,t.return),Rp(3,t)}catch(m){St(t,t.return,m)}try{uu(5,t,t.return)}catch(m){St(t,t.return,m)}}break;case 1:Ks(e,t),pr(t),s&512&&n!==null&&Ci(n,n.return);break;case 5:if(Ks(e,t),pr(t),s&512&&n!==null&&Ci(n,n.return),t.flags&32){var r=t.stateNode;try{mu(r,"")}catch(m){St(t,t.return,m)}}if(s&4&&(r=t.stateNode,r!=null)){var o=t.memoizedProps,a=n!==null?n.memoizedProps:o,i=t.type,l=t.updateQueue;if(t.updateQueue=null,l!==null)try{i==="input"&&o.type==="radio"&&o.name!=null&&p$(r,o),Ug(i,a);var u=Ug(i,o);for(a=0;a<l.length;a+=2){var c=l[a],h=l[a+1];c==="style"?x$(r,h):c==="dangerouslySetInnerHTML"?g$(r,h):c==="children"?mu(r,h):D0(r,c,h,u)}switch(i){case"input":zg(r,o);break;case"textarea":f$(r,o);break;case"select":var d=r._wrapperState.wasMultiple;r._wrapperState.wasMultiple=!!o.multiple;var p=o.value;p!=null?Ei(r,!!o.multiple,p,!1):d!==!!o.multiple&&(o.defaultValue!=null?Ei(r,!!o.multiple,o.defaultValue,!0):Ei(r,!!o.multiple,o.multiple?[]:"",!1))}r[$u]=o}catch(m){St(t,t.return,m)}}break;case 6:if(Ks(e,t),pr(t),s&4){if(t.stateNode===null)throw Error(ae(162));r=t.stateNode,o=t.memoizedProps;try{r.nodeValue=o}catch(m){St(t,t.return,m)}}break;case 3:if(Ks(e,t),pr(t),s&4&&n!==null&&n.memoizedState.isDehydrated)try{bu(e.containerInfo)}catch(m){St(t,t.return,m)}break;case 4:Ks(e,t),pr(t);break;case 13:Ks(e,t),pr(t),r=t.child,r.flags&8192&&(o=r.memoizedState!==null,r.stateNode.isHidden=o,!o||r.alternate!==null&&r.alternate.memoizedState!==null||(c1=Et())),s&4&&Fv(t);break;case 22:if(c=n!==null&&n.memoizedState!==null,t.mode&1?(xn=(u=xn)||c,Ks(e,t),xn=u):Ks(e,t),pr(t),s&8192){if(u=t.memoizedState!==null,(t.stateNode.isHidden=u)&&!c&&t.mode&1)for(ge=t,c=t.child;c!==null;){for(h=ge=c;ge!==null;){switch(d=ge,p=d.child,d.tag){case 0:case 11:case 14:case 15:uu(4,d,d.return);break;case 1:Ci(d,d.return);var f=d.stateNode;if(typeof f.componentWillUnmount=="function"){s=d,n=d.return;try{e=s,f.props=e.memoizedProps,f.state=e.memoizedState,f.componentWillUnmount()}catch(m){St(s,n,m)}}break;case 5:Ci(d,d.return);break;case 22:if(d.memoizedState!==null){Pv(h);continue}}p!==null?(p.return=d,ge=p):Pv(h)}c=c.sibling}e:for(c=null,h=t;;){if(h.tag===5){if(c===null){c=h;try{r=h.stateNode,u?(o=r.style,typeof o.setProperty=="function"?o.setProperty("display","none","important"):o.display="none"):(i=h.stateNode,l=h.memoizedProps.style,a=l!=null&&l.hasOwnProperty("display")?l.display:null,i.style.display=y$("display",a))}catch(m){St(t,t.return,m)}}}else if(h.tag===6){if(c===null)try{h.stateNode.nodeValue=u?"":h.memoizedProps}catch(m){St(t,t.return,m)}}else if((h.tag!==22&&h.tag!==23||h.memoizedState===null||h===t)&&h.child!==null){h.child.return=h,h=h.child;continue}if(h===t)break e;for(;h.sibling===null;){if(h.return===null||h.return===t)break e;c===h&&(c=null),h=h.return}c===h&&(c=null),h.sibling.return=h.return,h=h.sibling}}break;case 19:Ks(e,t),pr(t),s&4&&Fv(t);break;case 21:break;default:Ks(e,t),pr(t)}}function pr(t){var e=t.flags;if(e&2){try{e:{for(var n=t.return;n!==null;){if(UC(n)){var s=n;break e}n=n.return}throw Error(ae(160))}switch(s.tag){case 5:var r=s.stateNode;s.flags&32&&(mu(r,""),s.flags&=-33);var o=Ov(t);by(t,o,r);break;case 3:case 4:var a=s.stateNode.containerInfo,i=Ov(t);xy(t,i,a);break;default:throw Error(ae(161))}}catch(l){St(t,t.return,l)}t.flags&=-3}e&4096&&(t.flags&=-4097)}function EO(t,e,n){ge=t,jC(t)}function jC(t,e,n){for(var s=(t.mode&1)!==0;ge!==null;){var r=ge,o=r.child;if(r.tag===22&&s){var a=r.memoizedState!==null||_h;if(!a){var i=r.alternate,l=i!==null&&i.memoizedState!==null||xn;i=_h;var u=xn;if(_h=a,(xn=l)&&!u)for(ge=r;ge!==null;)a=ge,l=a.child,a.tag===22&&a.memoizedState!==null?zv(r):l!==null?(l.return=a,ge=l):zv(r);for(;o!==null;)ge=o,jC(o),o=o.sibling;ge=r,_h=i,xn=u}Lv(t)}else r.subtreeFlags&8772&&o!==null?(o.return=r,ge=o):Lv(t)}}function Lv(t){for(;ge!==null;){var e=ge;if(e.flags&8772){var n=e.alternate;try{if(e.flags&8772)switch(e.tag){case 0:case 11:case 15:xn||Rp(5,e);break;case 1:var s=e.stateNode;if(e.flags&4&&!xn)if(n===null)s.componentDidMount();else{var r=e.elementType===e.type?n.memoizedProps:Ys(e.type,n.memoizedProps);s.componentDidUpdate(r,n.memoizedState,s.__reactInternalSnapshotBeforeUpdate)}var o=e.updateQueue;o!==null&&wv(e,o,s);break;case 3:var a=e.updateQueue;if(a!==null){if(n=null,e.child!==null)switch(e.child.tag){case 5:n=e.child.stateNode;break;case 1:n=e.child.stateNode}wv(e,a,n)}break;case 5:var i=e.stateNode;if(n===null&&e.flags&4){n=i;var l=e.memoizedProps;switch(e.type){case"button":case"input":case"select":case"textarea":l.autoFocus&&n.focus();break;case"img":l.src&&(n.src=l.src)}}break;case 6:break;case 4:break;case 12:break;case 13:if(e.memoizedState===null){var u=e.alternate;if(u!==null){var c=u.memoizedState;if(c!==null){var h=c.dehydrated;h!==null&&bu(h)}}}break;case 19:case 17:case 21:case 22:case 23:case 25:break;default:throw Error(ae(163))}xn||e.flags&512&&yy(e)}catch(d){St(e,e.return,d)}}if(e===t){ge=null;break}if(n=e.sibling,n!==null){n.return=e.return,ge=n;break}ge=e.return}}function Pv(t){for(;ge!==null;){var e=ge;if(e===t){ge=null;break}var n=e.sibling;if(n!==null){n.return=e.return,ge=n;break}ge=e.return}}function zv(t){for(;ge!==null;){var e=ge;try{switch(e.tag){case 0:case 11:case 15:var n=e.return;try{Rp(4,e)}catch(l){St(e,n,l)}break;case 1:var s=e.stateNode;if(typeof s.componentDidMount=="function"){var r=e.return;try{s.componentDidMount()}catch(l){St(e,r,l)}}var o=e.return;try{yy(e)}catch(l){St(e,o,l)}break;case 5:var a=e.return;try{yy(e)}catch(l){St(e,a,l)}}}catch(l){St(e,e.return,l)}if(e===t){ge=null;break}var i=e.sibling;if(i!==null){i.return=e.return,ge=i;break}ge=e.return}}var RO=Math.ceil,Pd=to.ReactCurrentDispatcher,l1=to.ReactCurrentOwner,_s=to.ReactCurrentBatchConfig,je=0,Jt=null,_t=null,ln=0,ns=0,Ni=Go(0),Gt=0,Ru=null,Na=0,Dp=0,u1=0,cu=null,Bn=null,c1=0,Yi=1/0,Fr=null,zd=!1,wy=null,$o=null,Oh=!1,mo=null,Md=0,hu=0,vy=null,hd=-1,dd=0;function Dn(){return je&6?Et():hd!==-1?hd:hd=Et()}function Co(t){return t.mode&1?je&2&&ln!==0?ln&-ln:pO.transition!==null?(dd===0&&(dd=R$()),dd):(t=Xe,t!==0||(t=window.event,t=t===void 0?16:P$(t.type)),t):1}function nr(t,e,n,s){if(50<hu)throw hu=0,vy=null,Error(ae(185));Ku(t,n,s),(!(je&2)||t!==Jt)&&(t===Jt&&(!(je&2)&&(Dp|=n),Gt===4&&po(t,ln)),Kn(t,s),n===1&&je===0&&!(e.mode&1)&&(Yi=Et()+500,Ip&&Ho()))}function Kn(t,e){var n=t.callbackNode;p_(t,e);var s=Sd(t,t===Jt?ln:0);if(s===0)n!==null&&Kw(n),t.callbackNode=null,t.callbackPriority=0;else if(e=s&-s,t.callbackPriority!==e){if(n!=null&&Kw(n),e===1)t.tag===0?dO(Mv.bind(null,t)):nC(Mv.bind(null,t)),lO(function(){!(je&6)&&Ho()}),n=null;else{switch(D$(s)){case 1:n=L0;break;case 4:n=T$;break;case 16:n=vd;break;case 536870912:n=E$;break;default:n=vd}n=eN(n,KC.bind(null,t))}t.callbackPriority=e,t.callbackNode=n}}function KC(t,e){if(hd=-1,dd=0,je&6)throw Error(ae(327));var n=t.callbackNode;if(Oi()&&t.callbackNode!==n)return null;var s=Sd(t,t===Jt?ln:0);if(s===0)return null;if(s&30||s&t.expiredLanes||e)e=Bd(t,s);else{e=s;var r=je;je|=2;var o=XC();(Jt!==t||ln!==e)&&(Fr=null,Yi=Et()+500,ba(t,e));do try{_O();break}catch(i){qC(t,i)}while(1);X0(),Pd.current=o,je=r,_t!==null?e=0:(Jt=null,ln=0,e=Gt)}if(e!==0){if(e===2&&(r=qg(t),r!==0&&(s=r,e=Sy(t,r))),e===1)throw n=Ru,ba(t,0),po(t,s),Kn(t,Et()),n;if(e===6)po(t,s);else{if(r=t.current.alternate,!(s&30)&&!DO(r)&&(e=Bd(t,s),e===2&&(o=qg(t),o!==0&&(s=o,e=Sy(t,o))),e===1))throw n=Ru,ba(t,0),po(t,s),Kn(t,Et()),n;switch(t.finishedWork=r,t.finishedLanes=s,e){case 0:case 1:throw Error(ae(345));case 2:ia(t,Bn,Fr);break;case 3:if(po(t,s),(s&130023424)===s&&(e=c1+500-Et(),10<e)){if(Sd(t,0)!==0)break;if(r=t.suspendedLanes,(r&s)!==s){Dn(),t.pingedLanes|=t.suspendedLanes&r;break}t.timeoutHandle=ny(ia.bind(null,t,Bn,Fr),e);break}ia(t,Bn,Fr);break;case 4:if(po(t,s),(s&4194240)===s)break;for(e=t.eventTimes,r=-1;0<s;){var a=31-tr(s);o=1<<a,a=e[a],a>r&&(r=a),s&=~o}if(s=r,s=Et()-s,s=(120>s?120:480>s?480:1080>s?1080:1920>s?1920:3e3>s?3e3:4320>s?4320:1960*RO(s/1960))-s,10<s){t.timeoutHandle=ny(ia.bind(null,t,Bn,Fr),s);break}ia(t,Bn,Fr);break;case 5:ia(t,Bn,Fr);break;default:throw Error(ae(329))}}}return Kn(t,Et()),t.callbackNode===n?KC.bind(null,t):null}function Sy(t,e){var n=cu;return t.current.memoizedState.isDehydrated&&(ba(t,e).flags|=256),t=Bd(t,e),t!==2&&(e=Bn,Bn=n,e!==null&&ky(e)),t}function ky(t){Bn===null?Bn=t:Bn.push.apply(Bn,t)}function DO(t){for(var e=t;;){if(e.flags&16384){var n=e.updateQueue;if(n!==null&&(n=n.stores,n!==null))for(var s=0;s<n.length;s++){var r=n[s],o=r.getSnapshot;r=r.value;try{if(!rr(o(),r))return!1}catch{return!1}}}if(n=e.child,e.subtreeFlags&16384&&n!==null)n.return=e,e=n;else{if(e===t)break;for(;e.sibling===null;){if(e.return===null||e.return===t)return!0;e=e.return}e.sibling.return=e.return,e=e.sibling}}return!0}function po(t,e){for(e&=~u1,e&=~Dp,t.suspendedLanes|=e,t.pingedLanes&=~e,t=t.expirationTimes;0<e;){var n=31-tr(e),s=1<<n;t[n]=-1,e&=~s}}function Mv(t){if(je&6)throw Error(ae(327));Oi();var e=Sd(t,0);if(!(e&1))return Kn(t,Et()),null;var n=Bd(t,e);if(t.tag!==0&&n===2){var s=qg(t);s!==0&&(e=s,n=Sy(t,s))}if(n===1)throw n=Ru,ba(t,0),po(t,e),Kn(t,Et()),n;if(n===6)throw Error(ae(345));return t.finishedWork=t.current.alternate,t.finishedLanes=e,ia(t,Bn,Fr),Kn(t,Et()),null}function h1(t,e){var n=je;je|=1;try{return t(e)}finally{je=n,je===0&&(Yi=Et()+500,Ip&&Ho())}}function Ia(t){mo!==null&&mo.tag===0&&!(je&6)&&Oi();var e=je;je|=1;var n=_s.transition,s=Xe;try{if(_s.transition=null,Xe=1,t)return t()}finally{Xe=s,_s.transition=n,je=e,!(je&6)&&Ho()}}function d1(){ns=Ni.current,ct(Ni)}function ba(t,e){t.finishedWork=null,t.finishedLanes=0;var n=t.timeoutHandle;if(n!==-1&&(t.timeoutHandle=-1,iO(n)),_t!==null)for(n=_t.return;n!==null;){var s=n;switch(j0(s),s.tag){case 1:s=s.type.childContextTypes,s!=null&&Id();break;case 3:qi(),ct(Hn),ct(kn),t1();break;case 5:e1(s);break;case 4:qi();break;case 13:ct(yt);break;case 19:ct(yt);break;case 10:Y0(s.type._context);break;case 22:case 23:d1()}n=n.return}if(Jt=t,_t=t=No(t.current,null),ln=ns=e,Gt=0,Ru=null,u1=Dp=Na=0,Bn=cu=null,fa!==null){for(e=0;e<fa.length;e++)if(n=fa[e],s=n.interleaved,s!==null){n.interleaved=null;var r=s.next,o=n.pending;if(o!==null){var a=o.next;o.next=r,s.next=a}n.pending=s}fa=null}return t}function qC(t,e){do{var n=_t;try{if(X0(),ld.current=Ld,Fd){for(var s=bt.memoizedState;s!==null;){var r=s.queue;r!==null&&(r.pending=null),s=s.next}Fd=!1}if(Ca=0,Xt=Wt=bt=null,lu=!1,Iu=0,l1.current=null,n===null||n.return===null){Gt=1,Ru=e,_t=null;break}e:{var o=t,a=n.return,i=n,l=e;if(e=ln,i.flags|=32768,l!==null&&typeof l=="object"&&typeof l.then=="function"){var u=l,c=i,h=c.tag;if(!(c.mode&1)&&(h===0||h===11||h===15)){var d=c.alternate;d?(c.updateQueue=d.updateQueue,c.memoizedState=d.memoizedState,c.lanes=d.lanes):(c.updateQueue=null,c.memoizedState=null)}var p=Nv(a);if(p!==null){p.flags&=-257,Iv(p,a,i,o,e),p.mode&1&&Cv(o,u,e),e=p,l=u;var f=e.updateQueue;if(f===null){var m=new Set;m.add(l),e.updateQueue=m}else f.add(l);break e}else{if(!(e&1)){Cv(o,u,e),p1();break e}l=Error(ae(426))}}else if(ft&&i.mode&1){var y=Nv(a);if(y!==null){!(y.flags&65536)&&(y.flags|=256),Iv(y,a,i,o,e),K0(Xi(l,i));break e}}o=l=Xi(l,i),Gt!==4&&(Gt=2),cu===null?cu=[o]:cu.push(o),o=a;do{switch(o.tag){case 3:o.flags|=65536,e&=-e,o.lanes|=e;var g=DC(o,l,e);bv(o,g);break e;case 1:i=l;var x=o.type,w=o.stateNode;if(!(o.flags&128)&&(typeof x.getDerivedStateFromError=="function"||w!==null&&typeof w.componentDidCatch=="function"&&($o===null||!$o.has(w)))){o.flags|=65536,e&=-e,o.lanes|=e;var b=AC(o,i,e);bv(o,b);break e}}o=o.return}while(o!==null)}QC(n)}catch(v){e=v,_t===n&&n!==null&&(_t=n=n.return);continue}break}while(1)}function XC(){var t=Pd.current;return Pd.current=Ld,t===null?Ld:t}function p1(){(Gt===0||Gt===3||Gt===2)&&(Gt=4),Jt===null||!(Na&268435455)&&!(Dp&268435455)||po(Jt,ln)}function Bd(t,e){var n=je;je|=2;var s=XC();(Jt!==t||ln!==e)&&(Fr=null,ba(t,e));do try{AO();break}catch(r){qC(t,r)}while(1);if(X0(),je=n,Pd.current=s,_t!==null)throw Error(ae(261));return Jt=null,ln=0,Gt}function AO(){for(;_t!==null;)YC(_t)}function _O(){for(;_t!==null&&!r_();)YC(_t)}function YC(t){var e=JC(t.alternate,t,ns);t.memoizedProps=t.pendingProps,e===null?QC(t):_t=e,l1.current=null}function QC(t){var e=t;do{var n=e.alternate;if(t=e.return,e.flags&32768){if(n=NO(n,e),n!==null){n.flags&=32767,_t=n;return}if(t!==null)t.flags|=32768,t.subtreeFlags=0,t.deletions=null;else{Gt=6,_t=null;return}}else if(n=CO(n,e,ns),n!==null){_t=n;return}if(e=e.sibling,e!==null){_t=e;return}_t=e=t}while(e!==null);Gt===0&&(Gt=5)}function ia(t,e,n){var s=Xe,r=_s.transition;try{_s.transition=null,Xe=1,OO(t,e,n,s)}finally{_s.transition=r,Xe=s}return null}function OO(t,e,n,s){do Oi();while(mo!==null);if(je&6)throw Error(ae(327));n=t.finishedWork;var r=t.finishedLanes;if(n===null)return null;if(t.finishedWork=null,t.finishedLanes=0,n===t.current)throw Error(ae(177));t.callbackNode=null,t.callbackPriority=0;var o=n.lanes|n.childLanes;if(f_(t,o),t===Jt&&(_t=Jt=null,ln=0),!(n.subtreeFlags&2064)&&!(n.flags&2064)||Oh||(Oh=!0,eN(vd,function(){return Oi(),null})),o=(n.flags&15990)!==0,n.subtreeFlags&15990||o){o=_s.transition,_s.transition=null;var a=Xe;Xe=1;var i=je;je|=4,l1.current=null,TO(t,n),HC(n,t),eO(ey),kd=!!Jg,ey=Jg=null,t.current=n,EO(n),o_(),je=i,Xe=a,_s.transition=o}else t.current=n;if(Oh&&(Oh=!1,mo=t,Md=r),o=t.pendingLanes,o===0&&($o=null),l_(n.stateNode),Kn(t,Et()),e!==null)for(s=t.onRecoverableError,n=0;n<e.length;n++)r=e[n],s(r.value,{componentStack:r.stack,digest:r.digest});if(zd)throw zd=!1,t=wy,wy=null,t;return Md&1&&t.tag!==0&&Oi(),o=t.pendingLanes,o&1?t===vy?hu++:(hu=0,vy=t):hu=0,Ho(),null}function Oi(){if(mo!==null){var t=D$(Md),e=_s.transition,n=Xe;try{if(_s.transition=null,Xe=16>t?16:t,mo===null)var s=!1;else{if(t=mo,mo=null,Md=0,je&6)throw Error(ae(331));var r=je;for(je|=4,ge=t.current;ge!==null;){var o=ge,a=o.child;if(ge.flags&16){var i=o.deletions;if(i!==null){for(var l=0;l<i.length;l++){var u=i[l];for(ge=u;ge!==null;){var c=ge;switch(c.tag){case 0:case 11:case 15:uu(8,c,o)}var h=c.child;if(h!==null)h.return=c,ge=h;else for(;ge!==null;){c=ge;var d=c.sibling,p=c.return;if(WC(c),c===u){ge=null;break}if(d!==null){d.return=p,ge=d;break}ge=p}}}var f=o.alternate;if(f!==null){var m=f.child;if(m!==null){f.child=null;do{var y=m.sibling;m.sibling=null,m=y}while(m!==null)}}ge=o}}if(o.subtreeFlags&2064&&a!==null)a.return=o,ge=a;else e:for(;ge!==null;){if(o=ge,o.flags&2048)switch(o.tag){case 0:case 11:case 15:uu(9,o,o.return)}var g=o.sibling;if(g!==null){g.return=o.return,ge=g;break e}ge=o.return}}var x=t.current;for(ge=x;ge!==null;){a=ge;var w=a.child;if(a.subtreeFlags&2064&&w!==null)w.return=a,ge=w;else e:for(a=x;ge!==null;){if(i=ge,i.flags&2048)try{switch(i.tag){case 0:case 11:case 15:Rp(9,i)}}catch(v){St(i,i.return,v)}if(i===a){ge=null;break e}var b=i.sibling;if(b!==null){b.return=i.return,ge=b;break e}ge=i.return}}if(je=r,Ho(),kr&&typeof kr.onPostCommitFiberRoot=="function")try{kr.onPostCommitFiberRoot(Sp,t)}catch{}s=!0}return s}finally{Xe=n,_s.transition=e}}return!1}function Bv(t,e,n){e=Xi(n,e),e=DC(t,e,1),t=ko(t,e,1),e=Dn(),t!==null&&(Ku(t,1,e),Kn(t,e))}function St(t,e,n){if(t.tag===3)Bv(t,t,n);else for(;e!==null;){if(e.tag===3){Bv(e,t,n);break}else if(e.tag===1){var s=e.stateNode;if(typeof e.type.getDerivedStateFromError=="function"||typeof s.componentDidCatch=="function"&&($o===null||!$o.has(s))){t=Xi(n,t),t=AC(e,t,1),e=ko(e,t,1),t=Dn(),e!==null&&(Ku(e,1,t),Kn(e,t));break}}e=e.return}}function FO(t,e,n){var s=t.pingCache;s!==null&&s.delete(e),e=Dn(),t.pingedLanes|=t.suspendedLanes&n,Jt===t&&(ln&n)===n&&(Gt===4||Gt===3&&(ln&130023424)===ln&&500>Et()-c1?ba(t,0):u1|=n),Kn(t,e)}function ZC(t,e){e===0&&(t.mode&1?(e=$h,$h<<=1,!($h&130023424)&&($h=4194304)):e=1);var n=Dn();t=Yr(t,e),t!==null&&(Ku(t,e,n),Kn(t,n))}function LO(t){var e=t.memoizedState,n=0;e!==null&&(n=e.retryLane),ZC(t,n)}function PO(t,e){var n=0;switch(t.tag){case 13:var s=t.stateNode,r=t.memoizedState;r!==null&&(n=r.retryLane);break;case 19:s=t.stateNode;break;default:throw Error(ae(314))}s!==null&&s.delete(e),ZC(t,n)}var JC;JC=function(t,e,n){if(t!==null)if(t.memoizedProps!==e.pendingProps||Hn.current)Un=!0;else{if(!(t.lanes&n)&&!(e.flags&128))return Un=!1,$O(t,e,n);Un=!!(t.flags&131072)}else Un=!1,ft&&e.flags&1048576&&sC(e,Rd,e.index);switch(e.lanes=0,e.tag){case 2:var s=e.type;cd(t,e),t=e.pendingProps;var r=Hi(e,kn.current);_i(e,n),r=s1(null,e,s,t,r,n);var o=r1();return e.flags|=1,typeof r=="object"&&r!==null&&typeof r.render=="function"&&r.$$typeof===void 0?(e.tag=1,e.memoizedState=null,e.updateQueue=null,jn(s)?(o=!0,Td(e)):o=!1,e.memoizedState=r.state!==null&&r.state!==void 0?r.state:null,Z0(e),r.updater=Ep,e.stateNode=r,r._reactInternals=e,uy(e,s,t,n),e=dy(null,e,s,!0,o,n)):(e.tag=0,ft&&o&&H0(e),In(null,e,r,n),e=e.child),e;case 16:s=e.elementType;e:{switch(cd(t,e),t=e.pendingProps,r=s._init,s=r(s._payload),e.type=s,r=e.tag=MO(s),t=Ys(s,t),r){case 0:e=hy(null,e,s,t,n);break e;case 1:e=Rv(null,e,s,t,n);break e;case 11:e=Tv(null,e,s,t,n);break e;case 14:e=Ev(null,e,s,Ys(s.type,t),n);break e}throw Error(ae(306,s,""))}return e;case 0:return s=e.type,r=e.pendingProps,r=e.elementType===s?r:Ys(s,r),hy(t,e,s,r,n);case 1:return s=e.type,r=e.pendingProps,r=e.elementType===s?r:Ys(s,r),Rv(t,e,s,r,n);case 3:e:{if(LC(e),t===null)throw Error(ae(387));s=e.pendingProps,o=e.memoizedState,r=o.element,uC(t,e),_d(e,s,null,n);var a=e.memoizedState;if(s=a.element,o.isDehydrated)if(o={element:s,isDehydrated:!1,cache:a.cache,pendingSuspenseBoundaries:a.pendingSuspenseBoundaries,transitions:a.transitions},e.updateQueue.baseState=o,e.memoizedState=o,e.flags&256){r=Xi(Error(ae(423)),e),e=Dv(t,e,s,n,r);break e}else if(s!==r){r=Xi(Error(ae(424)),e),e=Dv(t,e,s,n,r);break e}else for(rs=So(e.stateNode.containerInfo.firstChild),is=e,ft=!0,Zs=null,n=iC(e,null,s,n),e.child=n;n;)n.flags=n.flags&-3|4096,n=n.sibling;else{if(ji(),s===r){e=Qr(t,e,n);break e}In(t,e,s,n)}e=e.child}return e;case 5:return cC(e),t===null&&ay(e),s=e.type,r=e.pendingProps,o=t!==null?t.memoizedProps:null,a=r.children,ty(s,r)?a=null:o!==null&&ty(s,o)&&(e.flags|=32),FC(t,e),In(t,e,a,n),e.child;case 6:return t===null&&ay(e),null;case 13:return PC(t,e,n);case 4:return J0(e,e.stateNode.containerInfo),s=e.pendingProps,t===null?e.child=Ki(e,null,s,n):In(t,e,s,n),e.child;case 11:return s=e.type,r=e.pendingProps,r=e.elementType===s?r:Ys(s,r),Tv(t,e,s,r,n);case 7:return In(t,e,e.pendingProps,n),e.child;case 8:return In(t,e,e.pendingProps.children,n),e.child;case 12:return In(t,e,e.pendingProps.children,n),e.child;case 10:e:{if(s=e.type._context,r=e.pendingProps,o=e.memoizedProps,a=r.value,rt(Dd,s._currentValue),s._currentValue=a,o!==null)if(rr(o.value,a)){if(o.children===r.children&&!Hn.current){e=Qr(t,e,n);break e}}else for(o=e.child,o!==null&&(o.return=e);o!==null;){var i=o.dependencies;if(i!==null){a=o.child;for(var l=i.firstContext;l!==null;){if(l.context===s){if(o.tag===1){l=Gr(-1,n&-n),l.tag=2;var u=o.updateQueue;if(u!==null){u=u.shared;var c=u.pending;c===null?l.next=l:(l.next=c.next,c.next=l),u.pending=l}}o.lanes|=n,l=o.alternate,l!==null&&(l.lanes|=n),iy(o.return,n,e),i.lanes|=n;break}l=l.next}}else if(o.tag===10)a=o.type===e.type?null:o.child;else if(o.tag===18){if(a=o.return,a===null)throw Error(ae(341));a.lanes|=n,i=a.alternate,i!==null&&(i.lanes|=n),iy(a,n,e),a=o.sibling}else a=o.child;if(a!==null)a.return=o;else for(a=o;a!==null;){if(a===e){a=null;break}if(o=a.sibling,o!==null){o.return=a.return,a=o;break}a=a.return}o=a}In(t,e,r.children,n),e=e.child}return e;case 9:return r=e.type,s=e.pendingProps.children,_i(e,n),r=Ps(r),s=s(r),e.flags|=1,In(t,e,s,n),e.child;case 14:return s=e.type,r=Ys(s,e.pendingProps),r=Ys(s.type,r),Ev(t,e,s,r,n);case 15:return _C(t,e,e.type,e.pendingProps,n);case 17:return s=e.type,r=e.pendingProps,r=e.elementType===s?r:Ys(s,r),cd(t,e),e.tag=1,jn(s)?(t=!0,Td(e)):t=!1,_i(e,n),RC(e,s,r),uy(e,s,r,n),dy(null,e,s,!0,t,n);case 19:return zC(t,e,n);case 22:return OC(t,e,n)}throw Error(ae(156,e.tag))};function eN(t,e){return I$(t,e)}function zO(t,e,n,s){this.tag=t,this.key=n,this.sibling=this.child=this.return=this.stateNode=this.type=this.elementType=null,this.index=0,this.ref=null,this.pendingProps=e,this.dependencies=this.memoizedState=this.updateQueue=this.memoizedProps=null,this.mode=s,this.subtreeFlags=this.flags=0,this.deletions=null,this.childLanes=this.lanes=0,this.alternate=null}function Ns(t,e,n,s){return new zO(t,e,n,s)}function f1(t){return t=t.prototype,!(!t||!t.isReactComponent)}function MO(t){if(typeof t=="function")return f1(t)?1:0;if(t!=null){if(t=t.$$typeof,t===_0)return 11;if(t===O0)return 14}return 2}function No(t,e){var n=t.alternate;return n===null?(n=Ns(t.tag,e,t.key,t.mode),n.elementType=t.elementType,n.type=t.type,n.stateNode=t.stateNode,n.alternate=t,t.alternate=n):(n.pendingProps=e,n.type=t.type,n.flags=0,n.subtreeFlags=0,n.deletions=null),n.flags=t.flags&14680064,n.childLanes=t.childLanes,n.lanes=t.lanes,n.child=t.child,n.memoizedProps=t.memoizedProps,n.memoizedState=t.memoizedState,n.updateQueue=t.updateQueue,e=t.dependencies,n.dependencies=e===null?null:{lanes:e.lanes,firstContext:e.firstContext},n.sibling=t.sibling,n.index=t.index,n.ref=t.ref,n}function pd(t,e,n,s,r,o){var a=2;if(s=t,typeof t=="function")f1(t)&&(a=1);else if(typeof t=="string")a=5;else e:switch(t){case gi:return wa(n.children,r,o,e);case A0:a=8,r|=8;break;case _g:return t=Ns(12,n,e,r|2),t.elementType=_g,t.lanes=o,t;case Og:return t=Ns(13,n,e,r),t.elementType=Og,t.lanes=o,t;case Fg:return t=Ns(19,n,e,r),t.elementType=Fg,t.lanes=o,t;case c$:return Ap(n,r,o,e);default:if(typeof t=="object"&&t!==null)switch(t.$$typeof){case l$:a=10;break e;case u$:a=9;break e;case _0:a=11;break e;case O0:a=14;break e;case lo:a=16,s=null;break e}throw Error(ae(130,t==null?t:typeof t,""))}return e=Ns(a,n,e,r),e.elementType=t,e.type=s,e.lanes=o,e}function wa(t,e,n,s){return t=Ns(7,t,s,e),t.lanes=n,t}function Ap(t,e,n,s){return t=Ns(22,t,s,e),t.elementType=c$,t.lanes=n,t.stateNode={isHidden:!1},t}function sg(t,e,n){return t=Ns(6,t,null,e),t.lanes=n,t}function rg(t,e,n){return e=Ns(4,t.children!==null?t.children:[],t.key,e),e.lanes=n,e.stateNode={containerInfo:t.containerInfo,pendingChildren:null,implementation:t.implementation},e}function BO(t,e,n,s,r){this.tag=e,this.containerInfo=t,this.finishedWork=this.pingCache=this.current=this.pendingChildren=null,this.timeoutHandle=-1,this.callbackNode=this.pendingContext=this.context=null,this.callbackPriority=0,this.eventTimes=zm(0),this.expirationTimes=zm(-1),this.entangledLanes=this.finishedLanes=this.mutableReadLanes=this.expiredLanes=this.pingedLanes=this.suspendedLanes=this.pendingLanes=0,this.entanglements=zm(0),this.identifierPrefix=s,this.onRecoverableError=r,this.mutableSourceEagerHydrationData=null}function m1(t,e,n,s,r,o,a,i,l){return t=new BO(t,e,n,i,l),e===1?(e=1,o===!0&&(e|=8)):e=0,o=Ns(3,null,null,e),t.current=o,o.stateNode=t,o.memoizedState={element:s,isDehydrated:n,cache:null,transitions:null,pendingSuspenseBoundaries:null},Z0(o),t}function VO(t,e,n){var s=3<arguments.length&&arguments[3]!==void 0?arguments[3]:null;return{$$typeof:mi,key:s==null?null:""+s,children:t,containerInfo:e,implementation:n}}function tN(t){if(!t)return Ao;t=t._reactInternals;e:{if(Ga(t)!==t||t.tag!==1)throw Error(ae(170));var e=t;do{switch(e.tag){case 3:e=e.stateNode.context;break e;case 1:if(jn(e.type)){e=e.stateNode.__reactInternalMemoizedMergedChildContext;break e}}e=e.return}while(e!==null);throw Error(ae(171))}if(t.tag===1){var n=t.type;if(jn(n))return tC(t,n,e)}return e}function nN(t,e,n,s,r,o,a,i,l){return t=m1(n,s,!0,t,r,o,a,i,l),t.context=tN(null),n=t.current,s=Dn(),r=Co(n),o=Gr(s,r),o.callback=e??null,ko(n,o,r),t.current.lanes=r,Ku(t,r,s),Kn(t,s),t}function _p(t,e,n,s){var r=e.current,o=Dn(),a=Co(r);return n=tN(n),e.context===null?e.context=n:e.pendingContext=n,e=Gr(o,a),e.payload={element:t},s=s===void 0?null:s,s!==null&&(e.callback=s),t=ko(r,e,a),t!==null&&(nr(t,r,a,o),id(t,r,a)),a}function Vd(t){if(t=t.current,!t.child)return null;switch(t.child.tag){case 5:return t.child.stateNode;default:return t.child.stateNode}}function Vv(t,e){if(t=t.memoizedState,t!==null&&t.dehydrated!==null){var n=t.retryLane;t.retryLane=n!==0&&n<e?n:e}}function g1(t,e){Vv(t,e),(t=t.alternate)&&Vv(t,e)}function WO(){return null}var sN=typeof reportError=="function"?reportError:function(t){console.error(t)};function y1(t){this._internalRoot=t}Op.prototype.render=y1.prototype.render=function(t){var e=this._internalRoot;if(e===null)throw Error(ae(409));_p(t,e,null,null)};Op.prototype.unmount=y1.prototype.unmount=function(){var t=this._internalRoot;if(t!==null){this._internalRoot=null;var e=t.containerInfo;Ia(function(){_p(null,t,null,null)}),e[Xr]=null}};function Op(t){this._internalRoot=t}Op.prototype.unstable_scheduleHydration=function(t){if(t){var e=O$();t={blockedOn:null,target:t,priority:e};for(var n=0;n<ho.length&&e!==0&&e<ho[n].priority;n++);ho.splice(n,0,t),n===0&&L$(t)}};function x1(t){return!(!t||t.nodeType!==1&&t.nodeType!==9&&t.nodeType!==11)}function Fp(t){return!(!t||t.nodeType!==1&&t.nodeType!==9&&t.nodeType!==11&&(t.nodeType!==8||t.nodeValue!==" react-mount-point-unstable "))}function Wv(){}function UO(t,e,n,s,r){if(r){if(typeof s=="function"){var o=s;s=function(){var u=Vd(a);o.call(u)}}var a=nN(e,s,t,0,null,!1,!1,"",Wv);return t._reactRootContainer=a,t[Xr]=a.current,Su(t.nodeType===8?t.parentNode:t),Ia(),a}for(;r=t.lastChild;)t.removeChild(r);if(typeof s=="function"){var i=s;s=function(){var u=Vd(l);i.call(u)}}var l=m1(t,0,!1,null,null,!1,!1,"",Wv);return t._reactRootContainer=l,t[Xr]=l.current,Su(t.nodeType===8?t.parentNode:t),Ia(function(){_p(e,l,n,s)}),l}function Lp(t,e,n,s,r){var o=n._reactRootContainer;if(o){var a=o;if(typeof r=="function"){var i=r;r=function(){var l=Vd(a);i.call(l)}}_p(e,a,t,r)}else a=UO(n,e,t,r,s);return Vd(a)}A$=function(t){switch(t.tag){case 3:var e=t.stateNode;if(e.current.memoizedState.isDehydrated){var n=ql(e.pendingLanes);n!==0&&(P0(e,n|1),Kn(e,Et()),!(je&6)&&(Yi=Et()+500,Ho()))}break;case 13:Ia(function(){var s=Yr(t,1);if(s!==null){var r=Dn();nr(s,t,1,r)}}),g1(t,1)}};z0=function(t){if(t.tag===13){var e=Yr(t,134217728);if(e!==null){var n=Dn();nr(e,t,134217728,n)}g1(t,134217728)}};_$=function(t){if(t.tag===13){var e=Co(t),n=Yr(t,e);if(n!==null){var s=Dn();nr(n,t,e,s)}g1(t,e)}};O$=function(){return Xe};F$=function(t,e){var n=Xe;try{return Xe=t,e()}finally{Xe=n}};Hg=function(t,e,n){switch(e){case"input":if(zg(t,n),e=n.name,n.type==="radio"&&e!=null){for(n=t;n.parentNode;)n=n.parentNode;for(n=n.querySelectorAll("input[name="+JSON.stringify(""+e)+'][type="radio"]'),e=0;e<n.length;e++){var s=n[e];if(s!==t&&s.form===t.form){var r=Np(s);if(!r)throw Error(ae(90));d$(s),zg(s,r)}}}break;case"textarea":f$(t,n);break;case"select":e=n.value,e!=null&&Ei(t,!!n.multiple,e,!1)}};v$=h1;S$=Ia;var GO={usingClientEntryPoint:!1,Events:[Xu,wi,Np,b$,w$,h1]},Vl={findFiberByHostInstance:pa,bundleType:0,version:"18.3.1",rendererPackageName:"react-dom"},HO={bundleType:Vl.bundleType,version:Vl.version,rendererPackageName:Vl.rendererPackageName,rendererConfig:Vl.rendererConfig,overrideHookState:null,overrideHookStateDeletePath:null,overrideHookStateRenamePath:null,overrideProps:null,overridePropsDeletePath:null,overridePropsRenamePath:null,setErrorHandler:null,setSuspenseHandler:null,scheduleUpdate:null,currentDispatcherRef:to.ReactCurrentDispatcher,findHostInstanceByFiber:function(t){return t=C$(t),t===null?null:t.stateNode},findFiberByHostInstance:Vl.findFiberByHostInstance||WO,findHostInstancesForRefresh:null,scheduleRefresh:null,scheduleRoot:null,setRefreshHandler:null,getCurrentFiber:null,reconcilerVersion:"18.3.1-next-f1338f8080-20240426"};if(typeof __REACT_DEVTOOLS_GLOBAL_HOOK__<"u"){var Fh=__REACT_DEVTOOLS_GLOBAL_HOOK__;if(!Fh.isDisabled&&Fh.supportsFiber)try{Sp=Fh.inject(HO),kr=Fh}catch{}}ps.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=GO;ps.createPortal=function(t,e){var n=2<arguments.length&&arguments[2]!==void 0?arguments[2]:null;if(!x1(e))throw Error(ae(200));return VO(t,e,null,n)};ps.createRoot=function(t,e){if(!x1(t))throw Error(ae(299));var n=!1,s="",r=sN;return e!=null&&(e.unstable_strictMode===!0&&(n=!0),e.identifierPrefix!==void 0&&(s=e.identifierPrefix),e.onRecoverableError!==void 0&&(r=e.onRecoverableError)),e=m1(t,1,!1,null,null,n,!1,s,r),t[Xr]=e.current,Su(t.nodeType===8?t.parentNode:t),new y1(e)};ps.findDOMNode=function(t){if(t==null)return null;if(t.nodeType===1)return t;var e=t._reactInternals;if(e===void 0)throw typeof t.render=="function"?Error(ae(188)):(t=Object.keys(t).join(","),Error(ae(268,t)));return t=C$(e),t=t===null?null:t.stateNode,t};ps.flushSync=function(t){return Ia(t)};ps.hydrate=function(t,e,n){if(!Fp(e))throw Error(ae(200));return Lp(null,t,e,!0,n)};ps.hydrateRoot=function(t,e,n){if(!x1(t))throw Error(ae(405));var s=n!=null&&n.hydratedSources||null,r=!1,o="",a=sN;if(n!=null&&(n.unstable_strictMode===!0&&(r=!0),n.identifierPrefix!==void 0&&(o=n.identifierPrefix),n.onRecoverableError!==void 0&&(a=n.onRecoverableError)),e=nN(e,null,t,1,n??null,r,!1,o,a),t[Xr]=e.current,Su(t),s)for(t=0;t<s.length;t++)n=s[t],r=n._getVersion,r=r(n._source),e.mutableSourceEagerHydrationData==null?e.mutableSourceEagerHydrationData=[n,r]:e.mutableSourceEagerHydrationData.push(n,r);return new Op(e)};ps.render=function(t,e,n){if(!Fp(e))throw Error(ae(200));return Lp(null,t,e,!1,n)};ps.unmountComponentAtNode=function(t){if(!Fp(t))throw Error(ae(40));return t._reactRootContainer?(Ia(function(){Lp(null,null,t,!1,function(){t._reactRootContainer=null,t[Xr]=null})}),!0):!1};ps.unstable_batchedUpdates=h1;ps.unstable_renderSubtreeIntoContainer=function(t,e,n,s){if(!Fp(n))throw Error(ae(200));if(t==null||t._reactInternals===void 0)throw Error(ae(38));return Lp(t,e,n,!1,s)};ps.version="18.3.1-next-f1338f8080-20240426";function rN(){if(!(typeof __REACT_DEVTOOLS_GLOBAL_HOOK__>"u"||typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE!="function"))try{__REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(rN)}catch(t){console.error(t)}}rN(),r$.exports=ps;var jO=r$.exports,Uv=jO;Dg.createRoot=Uv.createRoot,Dg.hydrateRoot=Uv.hydrateRoot;const $y=[{id:3,name:"이상해꽃",types:["풀","독"],moves:[{name:"기가드레인",type:"풀",category:"특수",power:75,pp:15,isTouch:!1,affiliation:null,accuracy:100,criticalRate:0,effects:[{chance:1,heal:.5}],target:"opponent"},{name:"오물폭탄",type:"독",category:"특수",power:90,pp:10,isTouch:!1,affiliation:"폭탄",accuracy:100,criticalRate:0,effects:[{chance:.1,status:"독"}],target:"opponent"},{name:"대지의힘",type:"땅",category:"특수",power:90,pp:10,isTouch:!1,affiliation:null,accuracy:100,criticalRate:0,effects:[{chance:.1,statChange:[{target:"opponent",stat:"spDefense",change:-1}]}],target:"opponent"},{name:"수면가루",type:"풀",category:"변화",power:0,pp:15,isTouch:!1,affiliation:"가루",accuracy:75,criticalRate:0,effects:[{chance:1,status:"잠듦"}],target:"opponent"}],sex:"male",ability:{id:1,name:"엽록소",util:["rank_buff"]},hp:80,attack:82,spAttack:100,defense:83,spDefense:100,speed:80,level:50},{id:6,name:"리자몽",types:["불","비행"],moves:[{name:"에어슬래시",type:"비행",category:"특수",power:75,pp:15,isTouch:!1,affiliation:null,accuracy:100,criticalRate:0,effects:[{chance:.3,status:"풀죽음"}],target:"opponent"},{name:"불대문자",type:"불",category:"특수",power:110,pp:5,isTouch:!1,affiliation:null,accuracy:85,criticalRate:0,effects:[{chance:.1,status:"화상"}],target:"opponent"},{name:"지진",type:"땅",category:"물리",power:100,pp:10,isTouch:!1,affiliation:null,accuracy:100,criticalRate:0,target:"opponent"},{name:"오버히트",type:"불",category:"특수",power:130,pp:5,isTouch:!1,affiliation:null,accuracy:90,criticalRate:0,demeritEffects:[{chance:1,statChange:[{target:"self",stat:"spAttack",change:-2}]}],target:"opponent"}],sex:"male",ability:{id:2,name:"선파워",offensive:["rank_buff"]},hp:78,attack:84,spAttack:109,defense:78,spDefense:85,speed:100,level:50},{id:9,name:"거북왕",types:["물"],moves:[{name:"하이드로펌프",type:"물",category:"특수",power:110,pp:5,isTouch:!1,affiliation:null,accuracy:80,criticalRate:0,target:"opponent"},{name:"냉동빔",type:"얼음",category:"특수",power:90,pp:10,isTouch:!1,affiliation:null,accuracy:100,criticalRate:0,effects:[{chance:.1,status:"얼음"}],target:"opponent"},{name:"껍질깨기",type:"노말",category:"변화",power:0,pp:20,isTouch:!1,affiliation:null,accuracy:100,criticalRate:0,effects:[{chance:1,statChange:[{target:"self",stat:"defense",change:-1},{target:"self",stat:"spDefense",change:-1},{target:"self",stat:"attack",change:2},{target:"self",stat:"spAttack",change:2},{target:"self",stat:"speed",change:2}]}],target:"self"},{name:"악의파동",type:"악",category:"특수",power:80,pp:15,isTouch:!1,affiliation:null,accuracy:100,criticalRate:0,effects:[{chance:.3,status:"풀죽음"}],target:"opponent"}],sex:"male",ability:{id:3,name:"급류",offensive:["damage_buff"]},hp:79,attack:83,spAttack:85,defense:100,spDefense:105,speed:78,level:50},{id:157,name:"블레이범",types:["불"],moves:[{name:"니트로차지",type:"불",category:"물리",power:50,pp:20,isTouch:!0,affiliation:null,accuracy:100,criticalRate:0,effects:[{chance:1,statChange:[{target:"self",stat:"speed",change:1}]}],target:"opponent"},{name:"불대문자",type:"불",category:"특수",power:110,pp:5,isTouch:!1,affiliation:null,accuracy:85,criticalRate:0,effects:[{chance:.1,status:"화상"}],target:"opponent"},{name:"와일드볼트",type:"전기",category:"물리",power:90,pp:15,isTouch:!0,affiliation:null,accuracy:100,criticalRate:0,demeritEffects:[{chance:1,recoil:.25}],target:"opponent"},{name:"지진",type:"땅",category:"물리",power:100,pp:10,isTouch:!1,affiliation:null,accuracy:100,criticalRate:0,target:"opponent"}],sex:"male",ability:{id:101,name:"맹화",offensive:["damage_buff"]},hp:76,attack:104,defense:71,spAttack:104,spDefense:71,speed:108,level:50},{id:154,name:"메가니움",types:["풀"],moves:[{name:"기가드레인",type:"풀",category:"특수",power:75,pp:10,isTouch:!1,affiliation:null,accuracy:100,criticalRate:0,effects:[{chance:1,heal:.5}],target:"opponent"},{name:"광합성",type:"풀",category:"변화",power:0,pp:5,isTouch:!1,affiliation:null,accuracy:100,criticalRate:0,effects:[{chance:1,heal:.5}],target:"self"},{name:"씨뿌리기",type:"풀",category:"변화",power:0,pp:10,isTouch:!1,accuracy:90,criticalRate:0,effects:[{chance:1,status:"씨뿌리기"}],target:"opponent"},{name:"맹독",type:"독",category:"변화",power:0,pp:20,isTouch:!1,affiliation:null,accuracy:90,criticalRate:0,target:"opponent",effects:[{chance:1,status:"맹독"}]}],sex:"female",ability:{id:102,name:"심록",offensive:["damage_buff"]},hp:80,attack:82,defense:100,spAttack:83,spDefense:100,speed:80,level:50},{id:160,name:"장크로다일",types:["물"],moves:[{name:"용의춤",type:"드래곤",category:"변화",power:0,pp:20,isTouch:!0,affiliation:null,accuracy:100,criticalRate:0,effects:[{chance:1,statChange:[{target:"self",stat:"attack",change:1},{target:"self",stat:"speed",change:1}]}],target:"self"},{name:"아쿠아브레이크",type:"물",category:"물리",power:85,pp:10,isTouch:!0,affiliation:null,accuracy:100,criticalRate:0,effects:[{chance:.2,statChange:[{target:"opponent",stat:"defense",change:-1}]}],target:"opponent"},{name:"냉동펀치",type:"얼음",category:"물리",power:75,pp:15,isTouch:!0,affiliation:"펀치",accuracy:100,criticalRate:0,effects:[{chance:.1,status:"얼음"}],target:"opponent"},{name:"엄청난힘",type:"격투",category:"물리",power:120,pp:5,isTouch:!0,affiliation:null,accuracy:100,criticalRate:0,demeritEffects:[{chance:1,statChange:[{target:"self",stat:"attack",change:-1},{target:"self",stat:"defense",change:-1}]}],target:"opponent"}],sex:"male",ability:{id:103,name:"우격다짐",offensive:["damage_buff"]},hp:85,attack:105,defense:100,spAttack:79,spDefense:83,speed:78,level:50},{id:257,name:"번치코",types:["불","격투"],moves:[{name:"칼춤",type:"노말",category:"변화",power:0,pp:20,isTouch:!1,affiliation:null,accuracy:100,criticalRate:0,effects:[{chance:1,statChange:[{target:"self",stat:"attack",change:2}]}],target:"self"},{name:"플레어드라이브",type:"불",category:"물리",power:120,pp:15,isTouch:!0,affiliation:null,accuracy:100,criticalRate:0,demeritEffects:[{chance:1,recoil:.33}],effects:[{chance:.1,status:"화상"}],target:"opponent"},{name:"인파이트",type:"격투",category:"물리",power:120,pp:5,isTouch:!0,affiliation:null,accuracy:100,criticalRate:0,demeritEffects:[{chance:1,statChange:[{target:"self",stat:"defense",change:-1},{target:"self",stat:"spDefense",change:-1}]}],target:"opponent"},{name:"스톤에지",type:"바위",category:"물리",power:100,pp:5,isTouch:!1,affiliation:null,accuracy:80,criticalRate:1,target:"opponent"}],sex:"male",ability:{id:104,name:"가속",util:["rank_change"]},hp:80,attack:120,defense:70,spAttack:110,spDefense:70,speed:80,level:50},{id:254,name:"나무킹",types:["풀"],moves:[{name:"용의파동",type:"드래곤",category:"특수",power:85,pp:15,isTouch:!1,affiliation:null,accuracy:100,criticalRate:0,target:"opponent"},{name:"기가드레인",type:"풀",category:"특수",power:75,pp:10,isTouch:!1,affiliation:null,accuracy:100,criticalRate:0,effects:[{chance:1,heal:.5}],target:"opponent"},{name:"진공파",type:"격투",category:"특수",power:40,pp:30,isTouch:!1,affiliation:null,accuracy:100,criticalRate:0,priority:1,target:"opponent"},{name:"광합성",type:"풀",category:"변화",power:0,pp:5,isTouch:!1,affiliation:null,accuracy:100,criticalRate:0,effects:[{chance:1,heal:.5}],target:"self"}],sex:"male",ability:{id:105,name:"심록",offensive:["damage_buff"]},hp:70,attack:85,defense:65,spAttack:105,spDefense:85,speed:120,level:50},{id:260,name:"대짱이",types:["물","땅"],moves:[{name:"퀵턴",type:"물",category:"물리",power:60,pp:20,isTouch:!0,affiliation:null,accuracy:100,criticalRate:0,uTurn:!0,target:"opponent"},{name:"눈사태",type:"얼음",category:"물리",power:120,pp:10,isTouch:!0,affiliation:null,accuracy:100,criticalRate:0,priority:-4,target:"opponent"},{name:"아쿠아브레이크",type:"물",category:"물리",power:85,pp:10,isTouch:!0,affiliation:null,accuracy:100,criticalRate:0,effects:[{chance:.2,statChange:[{target:"opponent",stat:"defense",change:-1}]}],target:"opponent"},{name:"지진",type:"땅",category:"물리",power:100,pp:10,isTouch:!1,affiliation:null,accuracy:100,criticalRate:0,target:"opponent"}],sex:"male",ability:{id:106,name:"급류",offensive:["damage_buff"]},hp:100,attack:110,defense:90,spAttack:85,spDefense:90,speed:60,level:50},{id:392,name:"초염몽",types:["불","격투"],moves:[{name:"번개펀치",type:"전기",category:"물리",power:75,pp:15,isTouch:!0,affiliation:"펀치",accuracy:100,criticalRate:0,effects:[{chance:.1,status:"마비"}],target:"opponent"},{name:"플레어드라이브",type:"불",category:"물리",power:120,pp:15,isTouch:!0,affiliation:null,accuracy:100,criticalRate:0,effects:[{chance:.1,status:"화상"}],demeritEffects:[{chance:1,recoil:.33}],target:"opponent"},{name:"드레인펀치",type:"격투",category:"물리",power:75,pp:10,isTouch:!0,affiliation:"펀치",accuracy:100,criticalRate:0,effects:[{chance:1,heal:.5}],target:"opponent"},{name:"지진",type:"땅",category:"물리",power:100,pp:10,isTouch:!1,affiliation:null,accuracy:100,criticalRate:0,target:"opponent"}],sex:"male",ability:{id:107,name:"철주먹",offensive:["damage_buff"]},hp:76,attack:104,defense:71,spAttack:104,spDefense:71,speed:108,level:50},{id:389,name:"토대부기",types:["풀","땅"],moves:[{name:"껍질깨기",type:"노말",category:"변화",power:0,pp:20,isTouch:!1,affiliation:null,accuracy:100,criticalRate:0,effects:[{chance:1,statChange:[{target:"self",stat:"attack",change:2},{target:"self",stat:"spAttack",change:2},{target:"self",stat:"speed",change:2},{target:"self",stat:"defense",change:-1},{target:"self",stat:"spDefense",change:-1}]}],target:"self"},{name:"지진",type:"땅",category:"물리",power:100,pp:10,isTouch:!1,affiliation:null,accuracy:100,criticalRate:0,target:"opponent"},{name:"아이언헤드",type:"강철",category:"물리",power:80,pp:15,isTouch:!0,affiliation:null,accuracy:100,criticalRate:0,effects:[{chance:.3,status:"풀죽음"}],target:"opponent"},{name:"우드해머",type:"풀",category:"물리",power:120,pp:15,isTouch:!0,affiliation:null,accuracy:100,criticalRate:0,demeritEffects:[{chance:1,recoil:.33}],target:"opponent"}],sex:"male",ability:{id:108,name:"조가비갑옷",defensive:["critical_nullification"]},hp:95,attack:109,defense:105,spAttack:75,spDefense:85,speed:56,level:50},{id:395,name:"엠페르트",types:["물","강철"],moves:[{name:"하이드로펌프",type:"물",category:"특수",power:110,pp:5,isTouch:!1,affiliation:null,accuracy:80,criticalRate:0,target:"opponent"},{name:"냉동빔",type:"얼음",category:"특수",power:90,pp:10,isTouch:!1,affiliation:null,accuracy:100,criticalRate:0,effects:[{chance:.1,status:"얼음"}],target:"opponent"},{name:"풀묶기",type:"풀",category:"특수",power:80,pp:15,isTouch:!0,affiliation:null,accuracy:100,criticalRate:0,target:"opponent"},{name:"퀵턴",type:"물",category:"물리",power:60,pp:20,isTouch:!0,affiliation:null,accuracy:100,criticalRate:0,uTurn:!0,target:"opponent"}],sex:"male",ability:{id:109,name:"오기",util:["rank_change"]},hp:84,attack:86,defense:88,spAttack:111,spDefense:101,speed:60,level:50},{id:500,name:"염무왕",types:["불","격투"],moves:[{name:"양날박치기",type:"바위",category:"물리",power:150,pp:15,isTouch:!0,affiliation:null,accuracy:80,criticalRate:0,demeritEffects:[{chance:1,recoil:.5}],target:"opponent"},{name:"와일드볼트",type:"전기",category:"물리",power:90,pp:15,isTouch:!0,affiliation:null,accuracy:100,criticalRate:0,demeritEffects:[{chance:1,recoil:.25}],target:"opponent"},{name:"플레어드라이브",type:"불",category:"물리",power:120,pp:15,isTouch:!0,affiliation:null,accuracy:100,criticalRate:0,demeritEffects:[{chance:1,recoil:.33}],effects:[{chance:.1,status:"화상"}],target:"opponent"},{name:"니트로차지",type:"불",category:"물리",power:50,pp:20,isTouch:!0,affiliation:null,accuracy:100,criticalRate:0,effects:[{chance:1,statChange:[{target:"self",stat:"speed",change:1}]}],target:"opponent"}],sex:"male",ability:{id:110,name:"이판사판",offensive:["damage_buff"]},hp:110,attack:123,defense:65,spAttack:100,spDefense:65,speed:65,level:50},{id:497,name:"샤로다",types:["풀"],moves:[{name:"리프스톰",type:"풀",category:"특수",power:130,pp:5,isTouch:!1,affiliation:null,accuracy:90,criticalRate:0,demeritEffects:[{chance:1,statChange:[{target:"self",stat:"spAttack",change:-2}]}],target:"opponent"},{name:"기가드레인",type:"풀",category:"특수",power:75,pp:10,isTouch:!1,affiliation:null,accuracy:100,criticalRate:0,effects:[{chance:1,heal:.5}],target:"opponent"},{name:"뱀눈초리",type:"노말",category:"변화",power:0,pp:30,isTouch:!1,affiliation:null,accuracy:100,criticalRate:0,effects:[{chance:1,status:"마비"}],target:"opponent"},{name:"용의파동",type:"드래곤",category:"특수",power:85,pp:10,isTouch:!1,affiliation:null,accuracy:100,criticalRate:0,target:"opponent"}],sex:"female",ability:{id:111,name:"심술꾸러기",util:["etc"]},hp:75,attack:75,defense:95,spAttack:75,spDefense:95,speed:113,level:50},{id:503,name:"대검귀",types:["물"],moves:[{name:"눈사태",type:"얼음",category:"물리",power:120,pp:10,isTouch:!0,affiliation:null,accuracy:100,criticalRate:0,priority:-4,target:"opponent"},{name:"아쿠아브레이크",type:"물",category:"물리",power:85,pp:10,isTouch:!0,affiliation:null,accuracy:100,criticalRate:0,effects:[{chance:.2,statChange:[{target:"opponent",stat:"defense",change:-1}]}],target:"opponent"},{name:"풀묶기",type:"풀",category:"특수",power:80,pp:15,isTouch:!1,affiliation:null,accuracy:100,criticalRate:0,target:"opponent"},{name:"아쿠아제트",type:"물",category:"물리",power:40,pp:20,isTouch:!0,affiliation:null,accuracy:100,criticalRate:0,priority:1,target:"opponent"}],sex:"male",ability:{id:112,name:"급류",offensive:["damage_buff"]},hp:95,attack:100,defense:85,spAttack:108,spDefense:70,speed:70,level:50},{id:655,name:"마폭시",types:["불","에스퍼"],moves:[{name:"매지컬플레임",type:"불",category:"특수",power:75,pp:10,isTouch:!1,affiliation:null,accuracy:100,criticalRate:0,effects:[{chance:1,statChange:[{target:"opponent",stat:"spAttack",change:-1}]}],target:"opponent"},{name:"사이코키네시스",type:"에스퍼",category:"특수",power:90,pp:10,isTouch:!1,affiliation:null,accuracy:100,criticalRate:0,effects:[{chance:.1,statChange:[{target:"opponent",stat:"spDefense",change:-1}]}],target:"opponent"},{name:"에너지볼",type:"풀",category:"특수",power:90,pp:10,isTouch:!1,affiliation:null,accuracy:100,criticalRate:0,effects:[{chance:.1,statChange:[{target:"opponent",stat:"spDefense",change:-1}]}],target:"opponent"},{name:"명상",type:"에스퍼",category:"변화",power:0,pp:20,isTouch:!1,affiliation:null,accuracy:100,criticalRate:0,effects:[{chance:1,statChange:[{target:"self",stat:"spAttack",change:1},{target:"self",stat:"spDefense",change:1}]}],target:"self"}],sex:"female",ability:{id:113,name:"맹화",offensive:["damage_buff"]},hp:75,attack:69,defense:72,spAttack:114,spDefense:100,speed:104,level:50},{id:652,name:"브리가론",types:["풀","격투"],moves:[{name:"씨기관총",type:"풀",category:"물리",power:25,pp:30,isTouch:!1,affiliation:null,accuracy:100,criticalRate:0,effects:[{chance:1,multiHit:!0}],target:"opponent"},{name:"광합성",type:"풀",category:"변화",power:0,pp:5,isTouch:!1,affiliation:null,accuracy:100,criticalRate:0,effects:[{chance:1,heal:.5}],target:"self"},{name:"바디프레스",type:"격투",category:"물리",power:80,pp:10,isTouch:!0,affiliation:null,accuracy:100,criticalRate:0,target:"opponent"},{name:"철벽",type:"강철",category:"변화",power:0,pp:15,isTouch:!1,affiliation:null,accuracy:100,criticalRate:0,effects:[{chance:1,statChange:[{target:"self",stat:"defense",change:2}]}],target:"self"}],sex:"male",ability:{id:114,name:"방탄",defensive:["damage_nullification"]},hp:88,attack:107,defense:122,spAttack:74,spDefense:75,speed:64,level:50},{id:658,name:"개굴닌자",types:["물","악"],moves:[{name:"물수리검",type:"물",category:"특수",power:15,pp:20,isTouch:!1,affiliation:null,accuracy:100,criticalRate:1,priority:1,effects:[{chance:1,multiHit:!0}],target:"opponent"},{name:"악의파동",type:"악",category:"특수",power:80,pp:15,isTouch:!1,affiliation:null,accuracy:100,criticalRate:0,effects:[{chance:.2,status:"풀죽음"}],target:"opponent"},{name:"하이드로펌프",type:"물",category:"특수",power:110,pp:5,isTouch:!1,affiliation:null,accuracy:80,criticalRate:0,target:"opponent"},{name:"냉동빔",type:"얼음",category:"특수",power:90,pp:10,isTouch:!1,affiliation:null,accuracy:100,criticalRate:0,effects:[{chance:.1,status:"얼음"}],target:"opponent"}],sex:"male",ability:{id:115,name:"변환자재",offensive:["type_change"]},hp:72,attack:95,defense:67,spAttack:103,spDefense:71,speed:122,level:50},{id:727,name:"어흥염",types:["불","악"],moves:[{name:"플레어드라이브",type:"불",category:"물리",power:120,pp:15,isTouch:!0,affiliation:null,accuracy:100,criticalRate:0,demeritEffects:[{chance:1,recoil:.33}],effects:[{chance:.1,status:"화상"}],target:"opponent"},{name:"도깨비불",type:"불",category:"변화",power:0,pp:15,isTouch:!1,affiliation:null,accuracy:85,criticalRate:0,effects:[{chance:1,status:"화상"}],target:"opponent"},{name:"DD래리어트",type:"악",category:"물리",power:85,pp:10,isTouch:!0,affiliation:null,accuracy:100,criticalRate:0,effects:[{chance:1,rank_nullification:!0}],target:"opponent"},{name:"막말내뱉기",type:"악",category:"변화",power:0,pp:10,isTouch:!1,affiliation:null,accuracy:100,criticalRate:0,uTurn:!0,effects:[{chance:1,statChange:[{target:"opponent",stat:"spAttack",change:-1},{target:"opponent",stat:"attack",change:-1}]}],target:"opponent"}],sex:"male",ability:{id:116,name:"위협",appear:["rank_change"]},hp:95,attack:115,defense:90,spAttack:80,spDefense:90,speed:60,level:50},{id:724,name:"모크나이퍼",types:["풀","고스트"],moves:[{name:"리프블레이드",type:"풀",category:"물리",power:90,pp:15,isTouch:!0,affiliation:null,accuracy:100,criticalRate:1,target:"opponent"},{name:"폴터가이스트",type:"고스트",category:"물리",power:110,pp:5,isTouch:!1,affiliation:null,accuracy:90,criticalRate:0,target:"opponent"},{name:"칼춤",type:"노말",category:"변화",power:0,pp:20,isTouch:!1,affiliation:null,accuracy:100,criticalRate:0,effects:[{chance:1,statChange:[{target:"self",stat:"attack",change:2}]}],target:"self"},{name:"더블윙",type:"비행",category:"물리",power:40,pp:10,isTouch:!0,affiliation:null,accuracy:90,criticalRate:0,effects:[{chance:1,doubleHit:!0}],target:"opponent"}],sex:"male",ability:{id:117,name:"심록",offensive:["damage_buff"]},hp:78,attack:107,defense:75,spAttack:100,spDefense:100,speed:70,level:50},{id:730,name:"누리레느",types:["물","페어리"],moves:[{name:"물거품아리아",type:"물",category:"특수",power:90,pp:10,isTouch:!1,affiliation:"소리",accuracy:100,criticalRate:0,target:"opponent"},{name:"문포스",type:"페어리",category:"특수",power:95,pp:15,isTouch:!1,affiliation:null,accuracy:100,criticalRate:0,effects:[{chance:.3,statChange:[{target:"opponent",stat:"spAttack",change:-1}]}],target:"opponent"},{name:"아쿠아제트",type:"물",category:"물리",power:40,pp:20,isTouch:!0,affiliation:null,accuracy:100,criticalRate:0,priority:1,target:"opponent"},{name:"에너지볼",type:"풀",category:"특수",power:90,pp:10,isTouch:!1,affiliation:null,accuracy:100,criticalRate:0,effects:[{chance:.1,statChange:[{target:"opponent",stat:"spDefense",change:-1}]}],target:"opponent"}],sex:"female",ability:{id:118,name:"급류",offensive:["damage_buff"]},hp:80,attack:74,defense:74,spAttack:126,spDefense:116,speed:60,level:50},{id:815,name:"에이스번",types:["불"],moves:[{name:"화염볼",type:"불",category:"물리",power:120,pp:5,isTouch:!0,affiliation:null,accuracy:90,criticalRate:0,effects:[{chance:.1,status:"화상"}],target:"opponent"},{name:"무릎차기",type:"격투",category:"물리",power:130,pp:10,isTouch:!0,affiliation:null,accuracy:90,criticalRate:0,demeritEffects:[{chance:1,fail:.5}],target:"opponent"},{name:"유턴",type:"벌레",category:"물리",power:70,pp:20,isTouch:!0,affiliation:null,accuracy:100,criticalRate:0,uTurn:!0,target:"opponent"},{name:"칼춤",type:"노말",category:"변화",power:0,pp:20,isTouch:!1,affiliation:null,accuracy:100,criticalRate:0,effects:[{chance:1,statChange:[{target:"self",stat:"attack",change:2}]}],target:"self"}],sex:"female",ability:{id:119,name:"리베로",offensive:["type_change"]},hp:80,attack:116,defense:75,spAttack:65,spDefense:75,speed:119,level:50},{id:812,name:"고릴타",types:["풀"],moves:[{name:"그래스슬라이더",type:"풀",category:"물리",power:55,pp:20,isTouch:!0,affiliation:null,accuracy:100,criticalRate:0,priority:1,target:"opponent"},{name:"10만마력",type:"땅",category:"물리",power:95,pp:10,isTouch:!0,affiliation:null,accuracy:95,criticalRate:0,target:"opponent"},{name:"우드해머",type:"풀",category:"물리",power:120,pp:5,isTouch:!0,affiliation:null,accuracy:100,criticalRate:0,demeritEffects:[{chance:1,recoil:.33}],target:"opponent"},{name:"칼춤",type:"노말",category:"변화",power:0,pp:20,isTouch:!1,affiliation:null,accuracy:100,criticalRate:0,effects:[{chance:1,statChange:[{target:"self",stat:"attack",change:2}]}],target:"self"}],sex:"male",ability:{id:120,name:"그래스메이커",appear:["field_change"]},hp:100,attack:125,defense:90,spAttack:60,spDefense:70,speed:85,level:50},{id:818,name:"인텔리레온",types:["물"],moves:[{name:"기충전",type:"노말",category:"변화",power:0,pp:20,isTouch:!1,affiliation:null,accuracy:100,criticalRate:0,effects:[{chance:1,statChange:[{target:"self",stat:"critical",change:2}]}],target:"self"},{name:"노려맞히기",type:"물",category:"물리",power:80,pp:15,isTouch:!1,affiliation:null,accuracy:100,criticalRate:1,target:"opponent"},{name:"냉동빔",type:"얼음",category:"특수",power:90,pp:10,isTouch:!1,affiliation:null,accuracy:100,criticalRate:0,effects:[{chance:.1,status:"얼음"}],target:"opponent"},{name:"섀도볼",type:"고스트",category:"특수",power:80,pp:15,isTouch:!1,affiliation:null,accuracy:100,criticalRate:0,effects:[{chance:.2,statChange:[{target:"opponent",stat:"spDefense",change:-1}]}],target:"opponent"}],sex:"male",ability:{id:121,name:"스나이퍼",offensive:["damage_buff"]},hp:70,attack:85,defense:65,spAttack:125,spDefense:65,speed:120,level:50},{id:911,name:"라우드본",types:["불","고스트"],moves:[{name:"게으름피우기",type:"노말",category:"변화",power:0,pp:5,isTouch:!1,affiliation:null,accuracy:100,criticalRate:0,effects:[{chance:1,heal:.5}],target:"self"},{name:"플레어송",type:"불",category:"특수",power:80,pp:10,isTouch:!1,affiliation:null,accuracy:100,criticalRate:0,effects:[{chance:1,statChange:[{target:"self",stat:"spAttack",change:1}]}],target:"opponent"},{name:"섀도볼",type:"고스트",category:"특수",power:80,pp:15,isTouch:!1,affiliation:null,accuracy:100,criticalRate:0,effects:[{chance:.2,statChange:[{target:"opponent",stat:"spDefense",change:-1}]}],target:"opponent"},{name:"도깨비불",type:"불",category:"변화",power:0,pp:15,isTouch:!1,affiliation:null,accuracy:85,criticalRate:0,effects:[{chance:1,status:"화상"}],target:"opponent"}],sex:"male",ability:{id:122,name:"천진",util:["rank_nullification"]},hp:104,attack:75,defense:100,spAttack:110,spDefense:75,speed:66,level:50},{id:908,name:"마스카나",types:["풀","악"],moves:[{name:"트릭플라워",type:"풀",category:"물리",power:70,pp:10,isTouch:!0,affiliation:null,accuracy:100,criticalRate:3,target:"opponent"},{name:"유턴",type:"벌레",category:"물리",power:70,pp:20,isTouch:!0,affiliation:null,accuracy:100,criticalRate:0,uTurn:!0,target:"opponent"},{name:"깜짝베기",type:"악",category:"물리",power:70,pp:15,isTouch:!0,affiliation:null,accuracy:100,criticalRate:1,target:"opponent"},{name:"치근거리기",type:"페어리",category:"물리",power:90,pp:10,isTouch:!0,affiliation:null,accuracy:90,criticalRate:0,effects:[{chance:.1,statChange:[{target:"opponent",stat:"spAttack",change:-1}]}],target:"opponent"}],sex:"female",ability:{id:123,name:"변환자재",offensive:["type_change"]},hp:76,attack:110,defense:70,spAttack:81,spDefense:70,speed:123,level:50},{id:914,name:"웨이니발",types:["물","격투"],moves:[{name:"아쿠아스텝",type:"물",category:"물리",power:80,pp:10,isTouch:!0,affiliation:null,accuracy:100,criticalRate:0,effects:[{chance:1,statChange:[{target:"self",stat:"speed",change:1}]}],target:"opponent"},{name:"웨이브태클",type:"물",category:"물리",power:120,pp:5,isTouch:!0,affiliation:null,accuracy:100,criticalRate:0,demeritEffects:[{chance:1,recoil:.33}],target:"opponent"},{name:"인파이트",type:"격투",category:"물리",power:120,pp:5,isTouch:!0,affiliation:null,accuracy:100,criticalRate:0,demeritEffects:[{chance:1,statChange:[{target:"self",stat:"defense",change:-1},{target:"self",stat:"spDefense",change:-1}]}],target:"opponent"},{name:"브레이브버드",type:"비행",category:"물리",power:120,pp:5,isTouch:!0,affiliation:null,accuracy:100,criticalRate:0,demeritEffects:[{chance:1,recoil:.33}],target:"opponent"}],sex:"male",ability:{id:124,name:"자기과신",offensive:["rank_change"]},hp:85,attack:120,defense:80,spAttack:85,spDefense:75,speed:85,level:50}],KO=({pages:t,onClose:e})=>{const[n,s]=ke.useState(0),[r,o]=ke.useState(!1),a=n===t.length-1,i=n===0,l=()=>{r&&localStorage.setItem("hideTutorial","true"),e()};return ee("div",{style:{position:"fixed",top:0,left:0,width:"100%",height:"100%",backgroundColor:"rgba(0, 0, 0, 0.5)",display:"flex",justifyContent:"center",alignItems:"center",zIndex:9999},children:ie("div",{style:{backgroundColor:"white",padding:"2rem",width:"60%",maxWidth:"600px",height:"40%",borderRadius:"12px",textAlign:"center",display:"flex",justifyContent:"center",alignItems:"center",flexDirection:"column"},children:[n>-1&&ee("div",{style:{display:"flex",justifyContent:"center",alignItems:"center"},children:ee("button",{onClick:l,children:"튜토리얼 스킵"})}),t[n],a&&ie("div",{style:{marginTop:"1rem",display:"flex",flexDirection:"column",flex:1},children:[ie("label",{children:[ee("input",{type:"checkbox",checked:r,onChange:u=>o(u.target.checked),style:{marginRight:"0.5rem"}}),"다시 보지 않기"]}),ie("div",{style:{marginTop:"4rem"},children:[ee("button",{onClick:()=>s(n-1),children:"이전"}),ee("button",{onClick:l,children:"튜토리얼 닫기"})]})]}),ee("div",{style:{marginTop:"2rem"},children:i?ee("div",{children:ee("button",{onClick:()=>s(n+1),children:"다음"})}):ee("div",{children:!a&&ie("div",{children:[ee("button",{onClick:()=>s(n-1),children:"이전"}),ee("button",{onClick:()=>s(n+1),children:"다음"})]})})})]})})},qO={attack:"공격",defense:"방어",spAttack:"특수공격",spDefense:"특수방어",speed:"스피드",accuracy:"명중률",dodge:"회피율",critical:"급소율"};async function Cy(t,e){const n=String(t).padStart(4,"0"),s=()=>{let l="green_hp",u=`${n}.webp`;return e<=.25?(l="red_hp",u=`${n}_r2_c2.webp`):e<=.5&&(l="yellow_hp",u=`${n}_r1_c3.webp`),t>995&&(l+="_2"),`/assets/${l}/${n}/${u}`},r=`/assets/green_hp/${n}/${n}.webp`,o=s();return await(l=>new Promise(u=>{const c=new Image;c.src=l,c.onload=()=>u(!0),c.onerror=()=>u(!1)}))(o)?o:r}function Gv(t,e){const n=t/e;return n<=.25?"hp-red":n<=.5?"hp-yellow":"hp-green"}function Hv(t){return Object.entries(t).filter(([,e])=>e!==0).map(([e,n])=>`${qO[e]||e} ${n>0?"+":""}${n}`).join(", ")}function XO({my:t,enemy:e}){const[n,s]=ke.useState(""),[r,o]=ke.useState(""),[a,i]=ke.useState(t.currentHp),[l,u]=ke.useState(e.currentHp),[c,h]=ke.useState(!1),[d,p]=ke.useState(!1),[f,m]=ke.useState(!1),[y,g]=ke.useState(!1);return ke.useEffect(()=>{Cy(t.base.id,t.currentHp/t.base.hp).then(s),t.currentHp<a?(h(!0),setTimeout(()=>h(!1),400)):t.currentHp>a&&(m(!0),setTimeout(()=>m(!1),400)),i(t.currentHp)},[t]),ke.useEffect(()=>{Cy(e.base.id,e.currentHp/e.base.hp).then(o),e.currentHp<l?(p(!0),setTimeout(()=>p(!1),400)):e.currentHp>l&&(g(!0),setTimeout(()=>g(!1),400)),u(e.currentHp)},[e]),ie("div",{className:"pokemon-area",children:[t&&ie("div",{className:`pokemon-card ${c?"damage-effect":""} ${f?"heal-effect":""}`,children:[ie("h5",{children:[t.base.name," (내 포켓몬)"]}),ee("img",{src:n,alt:t.base.name,className:"pokemon-image"}),ie("p",{children:["HP: ",t.currentHp," / ",t.base.hp]}),ee("div",{className:"hp-bar-container",children:ee("div",{className:`hp-bar ${Gv(t.currentHp,t.base.hp)}`,style:{width:`${t.currentHp/t.base.hp*100}%`}})}),ie("p",{children:["상태: ",t.status.length>0?t.status.join(", "):"없음"]}),ie("p",{children:["랭크 변화: ",Hv(t.rank)||"없음"]})]}),e&&ie("div",{className:`pokemon-card ${d?"damage-effect":""} ${y?"heal-effect":""}`,children:[ie("h5",{children:[e.base.name," (상대 포켓몬)"]}),ee("img",{src:r,alt:e.base.name,className:"pokemon-image"}),ee("p",{children:"HP:"}),ee("div",{className:"hp-bar-container",children:ee("div",{className:`hp-bar ${Gv(e.currentHp,e.base.hp)}`,style:{width:`${e.currentHp/e.base.hp*100}%`}})}),ie("p",{children:["상태: ",e.status.length>0?e.status.join(", "):"없음"]}),ie("p",{children:["랭크 변화: ",Hv(e.rank)||"없음"]})]})]})}class Yt{constructor(){this.isMuted=!1,this.categorizedTracks={main:[],battle:[],last_one:[],win:[],defeat:[]},fetch("/sound-manifest.json").then(e=>e.json()).then(e=>{this.categorizedTracks=e,console.log("🔊 오디오 목록 로드됨",e)}).catch(e=>console.error("🎵 오디오 매니페스트 로드 실패:",e))}static getInstance(){return Yt.instance||(Yt.instance=new Yt),Yt.instance}play(e){if(this.isMuted)return;const n=this.categorizedTracks[e];if(!n||n.length===0)return;const s=n[Math.floor(Math.random()*n.length)];this.stop(),this.audio=new Audio(s),this.audio.loop=!0,this.audio.play()}stop(){this.audio&&(this.audio.pause(),this.audio.currentTime=0,this.audio=void 0)}mute(e){this.isMuted=e,e&&this.stop()}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const YO=1e-7,QO=1e-4;class oN{constructor(e,n){this.backend=e,this.dataMover=n,this.data=new WeakMap,this.dataIdsCount=0}get(e){return this.data.has(e)||this.dataMover.moveData(this.backend,e),this.data.get(e)}set(e,n){this.dataIdsCount++,this.data.set(e,n)}has(e){return this.data.has(e)}delete(e){return this.dataIdsCount--,this.data.delete(e)}numDataIds(){return this.dataIdsCount}}class b1{refCount(e){return zn("refCount")}incRef(e){return zn("incRef")}timerAvailable(){return!0}time(e){return zn("time")}read(e){return zn("read")}readSync(e){return zn("readSync")}readToGPU(e,n){return zn("readToGPU")}numDataIds(){return zn("numDataIds")}disposeData(e,n){return zn("disposeData")}write(e,n,s){return zn("write")}move(e,n,s,r,o){return zn("move")}createTensorFromGPUData(e,n,s){return zn("createTensorFromGPUData")}memory(){return zn("memory")}floatPrecision(){return zn("floatPrecision")}epsilon(){return this.floatPrecision()===32?YO:QO}dispose(){return zn("dispose")}}function zn(t){throw new Error(`'${t}' not yet implemented or not found in the registry. This kernel may not be supported by the tfjs backend you have chosen`)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ZO(t){let e=t.length,n=0;for(;e>0;)n=Math.random()*e|0,e--,ci(t,e,n)}function Ta(t,e,n){return Math.max(t,Math.min(e,n))}function w1(t){return t%2===0?t:t+1}function ci(t,e,n){const s=t[e];t[e]=t[n],t[n]=s}function JO(t){let e=0;for(let n=0;n<t.length;n++)e+=t[n];return e}function C(t,e){if(!t)throw new Error(typeof e=="string"?e:e())}function Jn(t,e,n=""){C(Me(t,e),()=>n+` Shapes ${t} and ${e} must match`)}function ml(t){C(t!=null,()=>"The input to the tensor constructor must be a non-null value.")}function K(t){if(t.length===0)return 1;let e=t[0];for(let n=1;n<t.length;n++)e*=t[n];return e}function eF(t,e){if(t===e)return!0;if(t==null||e==null||t.length!==e.length)return!1;for(let n=0;n<t.length;n++)if(t[n]!==null&&e[n]!==null&&t[n]!==e[n])return!1;return!0}function Me(t,e){if(t===e)return!0;if(t==null||e==null||t.length!==e.length)return!1;for(let n=0;n<t.length;n++)if(t[n]!==e[n])return!1;return!0}function Qi(t){return t%1===0}function Ny(t){const e=Math.ceil(Math.sqrt(t));return[e,Math.ceil(t/e)]}function Fi(t,e){return e<=t.length?t:t+" ".repeat(e-t.length)}function jv(t,e=r=>0,n,s){return new Promise((r,o)=>{let a=0;const i=()=>{if(t()){r();return}a++;const l=e(a);if(n!=null&&a>=n){o();return}s!=null?s(i,l):setTimeout(i,l)};i()})}function aN(t,e){let n=1,s=-1;for(let o=0;o<t.length;++o)if(t[o]>=0)n*=t[o];else if(t[o]===-1){if(s!==-1)throw Error(`Shapes can only have 1 implicit size. Found -1 at dim ${s} and dim ${o}`);s=o}else if(t[o]<0)throw Error(`Shapes can not be < 0. Found ${t[o]} at dim ${o}`);if(s===-1){if(e>0&&e!==n)throw Error(`Size(${e}) must match the product of shape ${t}`);return t}if(n===0)throw Error(`Cannot infer the missing size in [${t}] when there are 0 elements`);if(e%n!==0)throw Error(`The implicit shape can't be a fractional number. Got ${e} / ${n}`);const r=t.slice();return r[s]=e/n,r}function Fe(t,e){const n=e.length;return t=t==null?e.map((s,r)=>r):[].concat(t),C(t.every(s=>s>=-n&&s<n),()=>`All values in axis param must be in range [-${n}, ${n}) but got axis ${t}`),C(t.every(s=>Qi(s)),()=>`All values in axis param must be integers but got axis ${t}`),t.map(s=>s<0?n+s:s)}function jo(t,e){const n=[],s=[],r=e!=null&&Array.isArray(e)&&e.length===0,o=e==null||r?null:Fe(e,t).sort();let a=0;for(let i=0;i<t.length;++i){if(o!=null){if(o[a]===i&&t[i]!==1)throw new Error(`Can't squeeze axis ${i} since its dim '${t[i]}' is not 1`);(o[a]==null||o[a]>i)&&t[i]===1&&(n.push(t[i]),s.push(i)),o[a]<=i&&a++}t[i]!==1&&(n.push(t[i]),s.push(i))}return{newShape:n,keptDims:s}}function en(t,e){return kt(t,e)}function kt(t,e){let n=null;if(t==null||t==="float32")n=new Float32Array(e);else if(t==="int32")n=new Int32Array(e);else if(t==="bool")n=new Uint8Array(e);else if(t==="string")n=new Array(e);else throw new Error(`Unknown data type ${t}`);return n}function tF(t,e){for(let n=0;n<t.length;n++){const s=t[n];if(isNaN(s)||!isFinite(s))throw Error(`A tensor of type ${e} being uploaded contains ${s}.`)}}function nF(t){return t==="bool"||t==="complex64"||t==="float32"||t==="int32"||t==="string"}function iN(t,e){return!(e==="complex64"||e==="float32"&&t!=="complex64"||e==="int32"&&t!=="float32"&&t!=="complex64"||e==="bool"&&t==="bool")}function Wd(t){if(t==="float32"||t==="int32")return 4;if(t==="complex64")return 8;if(t==="bool")return 1;throw new Error(`Unknown dtype ${t}`)}function sF(t){if(t==null)return 0;let e=0;return t.forEach(n=>e+=n.length),e}function Qu(t){return typeof t=="string"||t instanceof String}function rF(t){return typeof t=="boolean"}function Iy(t){return typeof t=="number"}function gl(t){return Array.isArray(t)?gl(t[0]):t instanceof Float32Array?"float32":t instanceof Int32Array||t instanceof Uint8Array||t instanceof Uint8ClampedArray?"int32":Iy(t)?"float32":Qu(t)?"string":rF(t)?"bool":"float32"}function Ty(t){return!!(t&&t.constructor&&t.call&&t.apply)}function Ey(t,e){for(let n=e;n<t;++n)if(t%n===0)return n;return t}function ve(t){const e=t.length;if(e<2)return[];const n=new Array(e-1);n[e-2]=t[e-1];for(let s=e-3;s>=0;--s)n[s]=n[s+1]*t[s+1];return n}function lN(t,e,n,s=!1){const r=new Array;if(e.length===1){const o=e[0]*(s?2:1);for(let a=0;a<o;a++)r[a]=n[t+a]}else{const o=e[0],a=e.slice(1),i=a.reduce((l,u)=>l*u)*(s?2:1);for(let l=0;l<o;l++)r[l]=lN(t+l*i,a,n,s)}return r}function Os(t,e,n=!1){if(t.length===0)return e[0];const s=t.reduce((r,o)=>r*o)*(n?2:1);if(s===0)return[];if(s!==e.length)throw new Error(`[${t}] does not match the input size ${e.length}${n?" for a complex tensor":""}.`);return lN(0,t,e,n)}function oF(t,e){if(Array.isArray(t))return t;if(e==="float32")return t instanceof Float32Array?t:new Float32Array(t);if(e==="int32")return t instanceof Int32Array?t:new Int32Array(t);if(e==="bool"||e==="string")return Uint8Array.from(new Int32Array(t));throw new Error(`Unknown dtype ${e}`)}function v1(t,e){const n=hn(t,e);for(let s=0;s<n.length;s++)n[s]=1;return n}function hn(t,e){if(e==null||e==="float32"||e==="complex64")return new Float32Array(t);if(e==="int32")return new Int32Array(t);if(e==="bool")return new Uint8Array(t);throw new Error(`Unknown data type ${e}`)}function uN(t,e){const n=t.reduce((s,r)=>s*r,1);if(e==null||e==="float32")return Os(t,new Float32Array(n));if(e==="int32")return Os(t,new Int32Array(n));if(e==="bool")return Os(t,new Uint8Array(n));throw new Error(`Unknown data type ${e}`)}function ms(t){t.forEach(e=>{C(Number.isInteger(e)&&e>=0,()=>`Tensor must have a shape comprised of positive integers but got shape [${t}].`)})}function Cr(t,e,n){if(e===0)return 0;if(e===1)return t[0];let s=t[t.length-1];for(let r=0;r<t.length-1;++r)s+=n[r]*t[r];return s}function yl(t,e,n){if(e===0)return[];if(e===1)return[t];const s=new Array(e);for(let r=0;r<s.length-1;++r)s[r]=Math.floor(t/n[r]),t-=s[r]*n[r];return s[s.length-1]=t,s}function Ea(t){return t&&t.then&&typeof t.then=="function"}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Kv="tfjsflags";class aF{constructor(e){this.global=e,this.flags={},this.flagRegistry={},this.urlFlags={},this.getQueryParams=iF,this.populateURLFlags()}setPlatform(e,n){this.platform!=null&&(G().getBool("IS_TEST")||G().getBool("PROD")||console.warn(`Platform ${this.platformName} has already been set. Overwriting the platform with ${e}.`)),this.platformName=e,this.platform=n}registerFlag(e,n,s){if(this.flagRegistry[e]={evaluationFn:n,setHook:s},this.urlFlags[e]!=null){const r=this.urlFlags[e];G().getBool("IS_TEST")||G().getBool("PROD")||console.warn(`Setting feature override from URL ${e}: ${r}.`),this.set(e,r)}}async getAsync(e){return e in this.flags?this.flags[e]:(this.flags[e]=await this.evaluateFlag(e),this.flags[e])}get(e){if(e in this.flags)return this.flags[e];const n=this.evaluateFlag(e);if(Ea(n))throw new Error(`Flag ${e} cannot be synchronously evaluated. Please use getAsync() instead.`);return this.flags[e]=n,this.flags[e]}getNumber(e){return this.get(e)}getBool(e){return this.get(e)}getString(e){return this.get(e)}getFlags(){return this.flags}get features(){return this.flags}set(e,n){if(this.flagRegistry[e]==null)throw new Error(`Cannot set flag ${e} as it has not been registered.`);this.flags[e]=n,this.flagRegistry[e].setHook!=null&&this.flagRegistry[e].setHook(n)}evaluateFlag(e){if(this.flagRegistry[e]==null)throw new Error(`Cannot evaluate flag '${e}': no evaluation function found.`);return this.flagRegistry[e].evaluationFn()}setFlags(e){this.flags=Object.assign({},e)}reset(){this.flags={},this.urlFlags={},this.populateURLFlags()}populateURLFlags(){if(typeof this.global>"u"||typeof this.global.location>"u"||typeof this.global.location.search>"u")return;const e=this.getQueryParams(this.global.location.search);Kv in e&&e[Kv].split(",").forEach(s=>{const[r,o]=s.split(":");this.urlFlags[r]=uF(r,o)})}}function iF(t){const e={};return t.replace(/[?&]([^=?&]+)(?:=([^&]*))?/g,(n,...s)=>(lF(e,s[0],s[1]),s.join("="))),e}function lF(t,e,n){t[decodeURIComponent(e)]=decodeURIComponent(n||"")}function uF(t,e){const n=e.toLowerCase();return n==="true"||n==="false"?n==="true":`${+n}`===n?+n:e}function G(){return cN}let cN=null;function cF(t){cN=t}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let og;function hN(){if(og==null){let t;if(typeof window<"u")t=window;else if(typeof global<"u")t=global;else if(typeof process<"u")t=process;else if(typeof self<"u")t=self;else throw new Error("Could not find a global object");og=t}return og}function hF(){const t=hN();return t._tfGlobals==null&&(t._tfGlobals=new Map),t._tfGlobals}function S1(t,e){const n=hF();if(n.has(t))return n.get(t);{const s=e();return n.set(t,s),n.get(t)}}const Pp="Abs",Zu="Acos",Ju="Acosh",xl="Add",zp="AddN",k1="All",$1="Any",Mp="ArgMax",Bp="ArgMin",ec="Asin",tc="Asinh",nc="Atan",sc="Atanh",rc="Atan2",Vp="AvgPool",C1="AvgPoolGrad",Wp="AvgPool3D",N1="AvgPool3DGrad",Up="BatchMatMul",Gp="BatchToSpaceND",I1="Bincount",Hp="BitwiseAnd",dF="BroadcastTo",T1="BroadcastArgs",oc="Cast",ac="Ceil",ic="ClipByValue",E1="Complex",jp="ComplexAbs",Kp="Concat",qp="Conv2D",R1="Conv2DBackpropFilter",Xp="Conv2DBackpropInput",Yp="Conv3D",D1="Conv3DBackpropFilterV2",A1="Conv3DBackpropInputV2",lc="Cos",uc="Cosh",_1="Cumprod",Qp="Cumsum",O1="CropAndResize",F1="DenseBincount",L1="DepthToSpace",Zp="DepthwiseConv2dNative",P1="DepthwiseConv2dNativeBackpropFilter",z1="DepthwiseConv2dNativeBackpropInput",M1="Diag",Jp="Dilation2D",Ry="Dilation2DBackpropInput",Dy="Dilation2DBackpropFilter",pF="Draw",cc="RealDiv",B1="Einsum",hc="Elu",V1="EluGrad",dc="Erf",ef="Equal",pc="Exp",tf="ExpandDims",fc="Expm1",W1="FFT",U1="Fill",G1="FlipLeftRight",mc="Floor",gc="FloorDiv",nf="FusedBatchNorm",sf="GatherV2",H1="GatherNd",rf="Greater",yc="GreaterEqual",xc="Identity",j1="IFFT",K1="Imag",bc="IsFinite",wc="IsInf",vc="IsNan",of="LeakyRelu",af="Less",lf="LessEqual",q1="LinSpace",Sc="Log",kc="Log1p",uf="LogicalAnd",cf="LogicalNot",hf="LogicalOr",fF="LogSoftmax",df="LRN",X1="LRNGrad",pf="Max",$c="Maximum",ff="MaxPool",Y1="MaxPoolGrad",mf="MaxPool3D",Q1="MaxPool3DGrad",Z1="MaxPoolWithArgmax",gf="Mean",yf="Min",Cc="Minimum",xf="MirrorPad",Nc="Mod",J1="Multinomial",Ic="Multiply",bf="Neg",wf="NotEqual",ex="NonMaxSuppressionV3",tx="NonMaxSuppressionV4",nx="NonMaxSuppressionV5",vf="OnesLike",Sf="OneHot",kf="Pack",$f="PadV2",Tc="Pow",Cf="Prelu",Nf="Prod",sx="RaggedGather",rx="RaggedRange",ox="RaggedTensorToTensor",ax="Range",ix="Real",Ec="Reciprocal",Rc="Relu",If="Reshape",Tf="ResizeNearestNeighbor",lx="ResizeNearestNeighborGrad",Ef="ResizeBilinear",ux="ResizeBilinearGrad",Dc="Relu6",Rf="Reverse",Ac="Round",_c="Rsqrt",cx="ScatterNd",hx="TensorScatterUpdate",dx="SearchSorted",Df="Select",Oc="Selu",Af="Slice",Fc="Sin",Lc="Sinh",Pc="Sign",zc="Sigmoid",Mc="Softplus",Bc="Sqrt",_f="Sum",Of="SpaceToBatchND",Ff="SplitV",Lf="Softmax",px="SparseFillEmptyRows",fx="SparseReshape",mx="SparseSegmentMean",gx="SparseSegmentSum",yx="SparseToDense",Vc="SquaredDifference",xx="Square",Pf="StaticRegexReplace",bx="StridedSlice",wx="StringNGrams",vx="StringSplit",Sx="StringToHashBucketFast",Wc="Sub",Uc="Tan",Gc="Tanh",Hc="Tile",kx="TopK",$x="Transform",Li="Transpose",Cx="Unique",zf="Unpack",Mf="UnsortedSegmentSum",Bf="ZerosLike",jc="Step",mF="FromPixels",Nx="RotateWithOffset",Ud="_FusedMatMul",Gd="FusedConv2D",Hd="FusedDepthwiseConv2D";/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ss(...t){G().getBool("IS_TEST")||G().getBool("PROD")||console.warn(...t)}function gF(...t){G().getBool("IS_TEST")||G().getBool("PROD")||console.log(...t)}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const jd=S1("kernelRegistry",()=>new Map),Ay=S1("gradRegistry",()=>new Map);function qv(t,e){const n=pN(t,e);return jd.get(n)}function Xv(t){return Ay.get(t)}function Yv(t){const e=jd.entries(),n=[];for(;;){const{done:s,value:r}=e.next();if(s)break;const[o,a]=r,[i]=o.split("_");i===t&&n.push(a)}return n}function dN(t){const{kernelName:e,backendName:n}=t,s=pN(e,n);jd.has(s)&&ss(`The kernel '${e}' for backend '${n}' is already registered`),jd.set(s,t)}function yF(t){const{kernelName:e}=t;Ay.has(e)&&G().getBool("DEBUG")&&ss(`Overriding the gradient for '${e}'`),Ay.set(e,t)}function pN(t,e){return`${e}_${t}`}/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fN(t){return t instanceof Float32Array||t instanceof Int32Array||t instanceof Uint8Array||t instanceof Uint8ClampedArray}var mN=ot,Is=null;try{Is=new WebAssembly.Instance(new WebAssembly.Module(new Uint8Array([0,97,115,109,1,0,0,0,1,13,2,96,0,1,127,96,4,127,127,127,127,1,127,3,7,6,0,1,1,1,1,1,6,6,1,127,1,65,0,11,7,50,6,3,109,117,108,0,1,5,100,105,118,95,115,0,2,5,100,105,118,95,117,0,3,5,114,101,109,95,115,0,4,5,114,101,109,95,117,0,5,8,103,101,116,95,104,105,103,104,0,0,10,191,1,6,4,0,35,0,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,126,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,127,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,128,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,129,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,130,34,4,66,32,135,167,36,0,32,4,167,11])),{}).exports}catch{}function ot(t,e,n){this.low=t|0,this.high=e|0,this.unsigned=!!n}ot.prototype.__isLong__;Object.defineProperty(ot.prototype,"__isLong__",{value:!0});function es(t){return(t&&t.__isLong__)===!0}ot.isLong=es;var Qv={},Zv={};function Ha(t,e){var n,s,r;return e?(t>>>=0,(r=0<=t&&t<256)&&(s=Zv[t],s)?s:(n=at(t,(t|0)<0?-1:0,!0),r&&(Zv[t]=n),n)):(t|=0,(r=-128<=t&&t<128)&&(s=Qv[t],s)?s:(n=at(t,t<0?-1:0,!1),r&&(Qv[t]=n),n))}ot.fromInt=Ha;function Ts(t,e){if(isNaN(t))return e?ga:Es;if(e){if(t<0)return ga;if(t>=gN)return bN}else{if(t<=-eS)return Gn;if(t+1>=eS)return xN}return t<0?Ts(-t,e).neg():at(t%Zi|0,t/Zi|0,e)}ot.fromNumber=Ts;function at(t,e,n){return new ot(t,e,n)}ot.fromBits=at;var Kd=Math.pow;function Ix(t,e,n){if(t.length===0)throw Error("empty string");if(t==="NaN"||t==="Infinity"||t==="+Infinity"||t==="-Infinity")return Es;if(typeof e=="number"?(n=e,e=!1):e=!!e,n=n||10,n<2||36<n)throw RangeError("radix");var s;if((s=t.indexOf("-"))>0)throw Error("interior hyphen");if(s===0)return Ix(t.substring(1),e,n).neg();for(var r=Ts(Kd(n,8)),o=Es,a=0;a<t.length;a+=8){var i=Math.min(8,t.length-a),l=parseInt(t.substring(a,a+i),n);if(i<8){var u=Ts(Kd(n,i));o=o.mul(u).add(Ts(l))}else o=o.mul(r),o=o.add(Ts(l))}return o.unsigned=e,o}ot.fromString=Ix;function ur(t,e){return typeof t=="number"?Ts(t,e):typeof t=="string"?Ix(t,e):at(t.low,t.high,typeof e=="boolean"?e:t.unsigned)}ot.fromValue=ur;var Jv=65536,xF=1<<24,Zi=Jv*Jv,gN=Zi*Zi,eS=gN/2,tS=Ha(xF),Es=Ha(0);ot.ZERO=Es;var ga=Ha(0,!0);ot.UZERO=ga;var Ii=Ha(1);ot.ONE=Ii;var yN=Ha(1,!0);ot.UONE=yN;var _y=Ha(-1);ot.NEG_ONE=_y;var xN=at(-1,2147483647,!1);ot.MAX_VALUE=xN;var bN=at(-1,-1,!0);ot.MAX_UNSIGNED_VALUE=bN;var Gn=at(0,-2147483648,!1);ot.MIN_VALUE=Gn;var ue=ot.prototype;ue.toInt=function(){return this.unsigned?this.low>>>0:this.low};ue.toNumber=function(){return this.unsigned?(this.high>>>0)*Zi+(this.low>>>0):this.high*Zi+(this.low>>>0)};ue.toString=function(e){if(e=e||10,e<2||36<e)throw RangeError("radix");if(this.isZero())return"0";if(this.isNegative())if(this.eq(Gn)){var n=Ts(e),s=this.div(n),r=s.mul(n).sub(this);return s.toString(e)+r.toInt().toString(e)}else return"-"+this.neg().toString(e);for(var o=Ts(Kd(e,6),this.unsigned),a=this,i="";;){var l=a.div(o),u=a.sub(l.mul(o)).toInt()>>>0,c=u.toString(e);if(a=l,a.isZero())return c+i;for(;c.length<6;)c="0"+c;i=""+c+i}};ue.getHighBits=function(){return this.high};ue.getHighBitsUnsigned=function(){return this.high>>>0};ue.getLowBits=function(){return this.low};ue.getLowBitsUnsigned=function(){return this.low>>>0};ue.getNumBitsAbs=function(){if(this.isNegative())return this.eq(Gn)?64:this.neg().getNumBitsAbs();for(var e=this.high!=0?this.high:this.low,n=31;n>0&&!(e&1<<n);n--);return this.high!=0?n+33:n+1};ue.isZero=function(){return this.high===0&&this.low===0};ue.eqz=ue.isZero;ue.isNegative=function(){return!this.unsigned&&this.high<0};ue.isPositive=function(){return this.unsigned||this.high>=0};ue.isOdd=function(){return(this.low&1)===1};ue.isEven=function(){return(this.low&1)===0};ue.equals=function(e){return es(e)||(e=ur(e)),this.unsigned!==e.unsigned&&this.high>>>31===1&&e.high>>>31===1?!1:this.high===e.high&&this.low===e.low};ue.eq=ue.equals;ue.notEquals=function(e){return!this.eq(e)};ue.neq=ue.notEquals;ue.ne=ue.notEquals;ue.lessThan=function(e){return this.comp(e)<0};ue.lt=ue.lessThan;ue.lessThanOrEqual=function(e){return this.comp(e)<=0};ue.lte=ue.lessThanOrEqual;ue.le=ue.lessThanOrEqual;ue.greaterThan=function(e){return this.comp(e)>0};ue.gt=ue.greaterThan;ue.greaterThanOrEqual=function(e){return this.comp(e)>=0};ue.gte=ue.greaterThanOrEqual;ue.ge=ue.greaterThanOrEqual;ue.compare=function(e){if(es(e)||(e=ur(e)),this.eq(e))return 0;var n=this.isNegative(),s=e.isNegative();return n&&!s?-1:!n&&s?1:this.unsigned?e.high>>>0>this.high>>>0||e.high===this.high&&e.low>>>0>this.low>>>0?-1:1:this.sub(e).isNegative()?-1:1};ue.comp=ue.compare;ue.negate=function(){return!this.unsigned&&this.eq(Gn)?Gn:this.not().add(Ii)};ue.neg=ue.negate;ue.add=function(e){es(e)||(e=ur(e));var n=this.high>>>16,s=this.high&65535,r=this.low>>>16,o=this.low&65535,a=e.high>>>16,i=e.high&65535,l=e.low>>>16,u=e.low&65535,c=0,h=0,d=0,p=0;return p+=o+u,d+=p>>>16,p&=65535,d+=r+l,h+=d>>>16,d&=65535,h+=s+i,c+=h>>>16,h&=65535,c+=n+a,c&=65535,at(d<<16|p,c<<16|h,this.unsigned)};ue.subtract=function(e){return es(e)||(e=ur(e)),this.add(e.neg())};ue.sub=ue.subtract;ue.multiply=function(e){if(this.isZero())return Es;if(es(e)||(e=ur(e)),Is){var n=Is.mul(this.low,this.high,e.low,e.high);return at(n,Is.get_high(),this.unsigned)}if(e.isZero())return Es;if(this.eq(Gn))return e.isOdd()?Gn:Es;if(e.eq(Gn))return this.isOdd()?Gn:Es;if(this.isNegative())return e.isNegative()?this.neg().mul(e.neg()):this.neg().mul(e).neg();if(e.isNegative())return this.mul(e.neg()).neg();if(this.lt(tS)&&e.lt(tS))return Ts(this.toNumber()*e.toNumber(),this.unsigned);var s=this.high>>>16,r=this.high&65535,o=this.low>>>16,a=this.low&65535,i=e.high>>>16,l=e.high&65535,u=e.low>>>16,c=e.low&65535,h=0,d=0,p=0,f=0;return f+=a*c,p+=f>>>16,f&=65535,p+=o*c,d+=p>>>16,p&=65535,p+=a*u,d+=p>>>16,p&=65535,d+=r*c,h+=d>>>16,d&=65535,d+=o*u,h+=d>>>16,d&=65535,d+=a*l,h+=d>>>16,d&=65535,h+=s*c+r*u+o*l+a*i,h&=65535,at(p<<16|f,h<<16|d,this.unsigned)};ue.mul=ue.multiply;ue.divide=function(e){if(es(e)||(e=ur(e)),e.isZero())throw Error("division by zero");if(Is){if(!this.unsigned&&this.high===-2147483648&&e.low===-1&&e.high===-1)return this;var n=(this.unsigned?Is.div_u:Is.div_s)(this.low,this.high,e.low,e.high);return at(n,Is.get_high(),this.unsigned)}if(this.isZero())return this.unsigned?ga:Es;var s,r,o;if(this.unsigned){if(e.unsigned||(e=e.toUnsigned()),e.gt(this))return ga;if(e.gt(this.shru(1)))return yN;o=ga}else{if(this.eq(Gn)){if(e.eq(Ii)||e.eq(_y))return Gn;if(e.eq(Gn))return Ii;var a=this.shr(1);return s=a.div(e).shl(1),s.eq(Es)?e.isNegative()?Ii:_y:(r=this.sub(e.mul(s)),o=s.add(r.div(e)),o)}else if(e.eq(Gn))return this.unsigned?ga:Es;if(this.isNegative())return e.isNegative()?this.neg().div(e.neg()):this.neg().div(e).neg();if(e.isNegative())return this.div(e.neg()).neg();o=Es}for(r=this;r.gte(e);){s=Math.max(1,Math.floor(r.toNumber()/e.toNumber()));for(var i=Math.ceil(Math.log(s)/Math.LN2),l=i<=48?1:Kd(2,i-48),u=Ts(s),c=u.mul(e);c.isNegative()||c.gt(r);)s-=l,u=Ts(s,this.unsigned),c=u.mul(e);u.isZero()&&(u=Ii),o=o.add(u),r=r.sub(c)}return o};ue.div=ue.divide;ue.modulo=function(e){if(es(e)||(e=ur(e)),Is){var n=(this.unsigned?Is.rem_u:Is.rem_s)(this.low,this.high,e.low,e.high);return at(n,Is.get_high(),this.unsigned)}return this.sub(this.div(e).mul(e))};ue.mod=ue.modulo;ue.rem=ue.modulo;ue.not=function(){return at(~this.low,~this.high,this.unsigned)};ue.and=function(e){return es(e)||(e=ur(e)),at(this.low&e.low,this.high&e.high,this.unsigned)};ue.or=function(e){return es(e)||(e=ur(e)),at(this.low|e.low,this.high|e.high,this.unsigned)};ue.xor=function(e){return es(e)||(e=ur(e)),at(this.low^e.low,this.high^e.high,this.unsigned)};ue.shiftLeft=function(e){return es(e)&&(e=e.toInt()),(e&=63)===0?this:e<32?at(this.low<<e,this.high<<e|this.low>>>32-e,this.unsigned):at(0,this.low<<e-32,this.unsigned)};ue.shl=ue.shiftLeft;ue.shiftRight=function(e){return es(e)&&(e=e.toInt()),(e&=63)===0?this:e<32?at(this.low>>>e|this.high<<32-e,this.high>>e,this.unsigned):at(this.high>>e-32,this.high>=0?0:-1,this.unsigned)};ue.shr=ue.shiftRight;ue.shiftRightUnsigned=function(e){if(es(e)&&(e=e.toInt()),e&=63,e===0)return this;var n=this.high;if(e<32){var s=this.low;return at(s>>>e|n<<32-e,n>>>e,this.unsigned)}else return e===32?at(n,0,this.unsigned):at(n>>>e-32,0,this.unsigned)};ue.shru=ue.shiftRightUnsigned;ue.shr_u=ue.shiftRightUnsigned;ue.toSigned=function(){return this.unsigned?at(this.low,this.high,!1):this};ue.toUnsigned=function(){return this.unsigned?this:at(this.low,this.high,!0)};ue.toBytes=function(e){return e?this.toBytesLE():this.toBytesBE()};ue.toBytesLE=function(){var e=this.high,n=this.low;return[n&255,n>>>8&255,n>>>16&255,n>>>24,e&255,e>>>8&255,e>>>16&255,e>>>24]};ue.toBytesBE=function(){var e=this.high,n=this.low;return[e>>>24,e>>>16&255,e>>>8&255,e&255,n>>>24,n>>>16&255,n>>>8&255,n&255]};ot.fromBytes=function(e,n,s){return s?ot.fromBytesLE(e,n):ot.fromBytesBE(e,n)};ot.fromBytesLE=function(e,n){return new ot(e[0]|e[1]<<8|e[2]<<16|e[3]<<24,e[4]|e[5]<<8|e[6]<<16|e[7]<<24,n)};ot.fromBytesBE=function(e,n){return new ot(e[4]<<24|e[5]<<16|e[6]<<8|e[7],e[0]<<24|e[1]<<16|e[2]<<8|e[3],n)};const wN=jk(mN),bF=bA({__proto__:null,default:wN},[mN]);/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ua=wN||bF;function Vf(t){return ua.fromString(t,!0,16)}const vN=Vf("c3a5c85c97cb3127"),la=Vf("b492b66fbe98f273"),bn=Vf("9ae16a3b2f90404f");function Oy(t){return t.xor(t.shru(47))}function SN(t,e,n){const s=t.slice(e,e+n);return ua.fromBytes(Array.from(s),!0,!0)}function tt(t,e){return SN(t,e,8)}function nS(t,e){return SN(t,e,4)}function Ut(t,e){return e===0?t:t.shru(e).or(t.shl(64-e))}function Io(t,e,n=Vf("9ddfea08eb382d69")){let s=t.xor(e).mul(n);s=s.xor(s.shru(47));let r=e.xor(s).mul(n);return r=r.xor(r.shru(47)),r=r.mul(n),r}function wF(t,e,n,s,r,o){r=r.add(t),o=Ut(o.add(r).add(s),21);const a=r;return r=r.add(e),r=r.add(n),o=o.add(Ut(r,44)),[r.add(s),o.add(a)]}function Lh(t,e,n,s){return wF(tt(t,e),tt(t,e+8),tt(t,e+16),tt(t,e+24),n,s)}function vF(t,e=t.length){if(e>=8){const n=bn.add(e*2),s=tt(t,0).add(bn),r=tt(t,e-8),o=Ut(r,37).mul(n).add(s),a=Ut(s,25).add(r).mul(n);return Io(o,a,n)}if(e>=4){const n=bn.add(e*2),s=nS(t,0);return Io(s.shl(3).add(e),nS(t,e-4),n)}if(e>0){const n=t[0],s=t[e>>1],r=t[e-1],o=n+(s<<8),a=e+(r<<2);return Oy(bn.mul(o).xor(vN.mul(a))).mul(bn)}return bn}function SF(t,e=t.length){const n=bn.add(e*2),s=tt(t,0).mul(la),r=tt(t,8),o=tt(t,e-8).mul(n),a=tt(t,e-16).mul(bn);return Io(Ut(s.add(r),43).add(Ut(o,30)).add(a),s.add(Ut(r.add(bn),18)).add(o),n)}function kF(t,e=t.length){const n=bn.add(e*2),s=tt(t,0).mul(bn),r=tt(t,8),o=tt(t,e-8).mul(n),a=tt(t,e-16).mul(bn),i=Ut(s.add(r),43).add(Ut(o,30)).add(a),l=Io(i,s.add(Ut(r.add(bn),18)).add(o),n),u=tt(t,16).mul(n),c=tt(t,24),h=i.add(tt(t,e-32)).mul(n),d=l.add(tt(t,e-24)).mul(n);return Io(Ut(u.add(c),43).add(Ut(h,30)).add(d),u.add(Ut(c.add(s),18)).add(h),n)}function $F(t,e=t.length){const n=ua.fromNumber(81,!0);if(e<=32)return e<=16?vF(t,e):SF(t,e);if(e<=64)return kF(t,e);let s=n,r=n.mul(la).add(113),o=Oy(r.mul(bn).add(113)).mul(bn),a=[ua.UZERO,ua.UZERO],i=[ua.UZERO,ua.UZERO];s=s.mul(bn).add(tt(t,0));let l=0;const u=(e-1>>6)*64,c=u+(e-1&63)-63;do s=Ut(s.add(r).add(a[0]).add(tt(t,l+8)),37).mul(la),r=Ut(r.add(a[1]).add(tt(t,l+48)),42).mul(la),s=s.xor(i[1]),r=r.add(a[0]).add(tt(t,l+40)),o=Ut(o.add(i[0]),33).mul(la),a=Lh(t,l,a[1].mul(la),s.add(i[0])),i=Lh(t,l+32,o.add(i[1]),r.add(tt(t,l+16))),[o,s]=[s,o],l+=64;while(l!==u);const h=la.add(o.and(255).shl(1));return l=c,i[0]=i[0].add(e-1&63),a[0]=a[0].add(i[0]),i[0]=i[0].add(a[0]),s=Ut(s.add(r).add(a[0]).add(tt(t,l+8)),37).mul(h),r=Ut(r.add(a[1]).add(tt(t,l+48)),42).mul(h),s=s.xor(i[1].mul(9)),r=r.add(a[0].mul(9).add(tt(t,l+40))),o=Ut(o.add(i[0]),33).mul(h),a=Lh(t,l,a[1].mul(h),s.add(i[0])),i=Lh(t,l+32,o.add(i[1]),r.add(tt(t,l+16))),[o,s]=[s,o],Io(Io(a[0],i[0],h).add(Oy(r).mul(vN)).add(o),Io(a[1],i[1],h).add(s),h)}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ko(t,e){return e==="string"?To(t):ja([t],e)}function CF(t,e){return t instanceof Float32Array&&e==="float32"||t instanceof Int32Array&&e==="int32"||t instanceof Uint8Array&&e==="bool"}function ja(t,e){if(e==="string")throw new Error("Cannot convert a string[] to a TypedArray");if(Array.isArray(t)&&(t=Ra(t)),G().getBool("DEBUG")&&tF(t,e),CF(t,e))return t;if(e==null||e==="float32"||e==="complex64")return new Float32Array(t);if(e==="int32")return new Int32Array(t);if(e==="bool"){const n=new Uint8Array(t.length);for(let s=0;s<n.length;++s)Math.round(t[s])!==0&&(n[s]=1);return n}else throw new Error(`Unknown data type ${e}`)}function Tn(){return G().platform.now()}function To(t,e="utf-8"){return e=e||"utf-8",G().platform.encode(t,e)}function _o(t,e="utf-8"){return e=e||"utf-8",G().platform.decode(t,e)}function Ms(t){return G().platform.isTypedArray!=null?G().platform.isTypedArray(t):fN(t)}function Ra(t,e=[],n=!1){if(e==null&&(e=[]),typeof t=="boolean"||typeof t=="number"||typeof t=="string"||Ea(t)||t==null||Ms(t)&&n)e.push(t);else if(Array.isArray(t)||Ms(t))for(let s=0;s<t.length;++s)Ra(t[s],e,n);else{let s=-1;for(const r of Object.keys(t))/^([1-9]+[0-9]*|0)$/.test(r)&&(s=Math.max(s,Number(r)));for(let r=0;r<=s;r++)Ra(t[r],e,n)}return e}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class NF{constructor(e,n){this.backendTimer=e,this.logger=n,n==null&&(this.logger=new TF)}profileKernel(e,n,s){let r;const o=()=>{r=s()};let a;const i=Tn();if(this.backendTimer.timerAvailable())a=this.backendTimer.time(o);else{o();for(const u of r)u.dataSync();a=Promise.resolve({kernelMs:Tn()-i})}if(G().getBool("CHECK_COMPUTATION_FOR_ERRORS"))for(let u=0;u<r.length;u++){const c=r[u];c.data().then(h=>{IF(h,c.dtype,e)})}return{kernelName:e,outputs:r,inputs:n,timeMs:a.then(u=>u.kernelMs),extraInfo:a.then(u=>u.getExtraProfileInfo!=null?u.getExtraProfileInfo():"")}}logKernelProfile(e){const{kernelName:n,outputs:s,timeMs:r,inputs:o,extraInfo:a}=e;s.forEach(i=>{Promise.all([i.data(),r,a]).then(l=>{this.logger.logKernelProfile(n,i,l[0],l[1],o,l[2])})})}}function IF(t,e,n){if(e!=="float32")return!1;for(let s=0;s<t.length;s++){const r=t[s];if(isNaN(r)||!isFinite(r))return console.warn(`Found ${r} in the result of '${n}'`),!0}return!1}class TF{logKernelProfile(e,n,s,r,o,a){const i=typeof r=="number"?Fi(`${r}ms`,9):r.error,l=Fi(e,25),u=n.rank,c=n.size,h=Fi(n.shape.toString(),14);let d="";for(const p in o){const f=o[p];if(f!=null){const m=f.shape||n.shape,y=m.length;d+=`${p}: ${y}D ${y>0?m:""} `}}console.log(`%c${l}	%c${i}	%c${u}D ${h}	%c${c}	%c${d}	%c${a}`,"font-weight:bold","color:red","color:blue","color: orange","color: green","color: steelblue")}}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function EF(t,e,n){const s={},r={};for(let l=0;l<e.length;l++)s[e[l].id]=!0;for(let l=0;l<t.length;l++){const u=t[l],c=u.inputs;for(const h in c){const d=c[h];let p=!1;for(let f=0;f<e.length;f++)if(s[d.id]){u.outputs.forEach(m=>s[m.id]=!0),p=!0,r[u.id]=!0;break}if(p)break}}const o={};o[n.id]=!0;const a={};for(let l=t.length-1;l>=0;l--){const u=t[l],c=u.inputs;for(let h=0;h<u.outputs.length;h++)if(o[u.outputs[h].id]){for(const d in c)o[c[d].id]=!0,a[u.id]=!0;break}}const i=[];for(let l=0;l<t.length;l++){const u=t[l];if(r[u.id]&&a[u.id]){const c={};for(const d in u.inputs){const p=u.inputs[d];s[p.id]&&(c[d]=p)}const h=Object.assign({},u);h.inputs=c,h.outputs=u.outputs,i.push(h)}}return i}function RF(t,e,n,s){for(let r=e.length-1;r>=0;r--){const o=e[r],a=[];if(o.outputs.forEach(l=>{const u=t[l.id];u!=null?a.push(u):a.push(null)}),o.gradient==null)throw new Error(`Cannot compute gradient: gradient function not found for ${o.kernelName}.`);const i=o.gradient(a);for(const l in o.inputs){if(!(l in i))throw new Error(`Cannot backprop through input ${l}. Available gradients found: ${Object.keys(i)}.`);const u=n(()=>i[l]());if(u.dtype!=="float32")throw new Error(`Error in gradient for op ${o.kernelName}. The gradient of input ${l} must have 'float32' dtype, but has '${u.dtype}'`);const c=o.inputs[l];if(!Me(u.shape,c.shape))throw new Error(`Error in gradient for op ${o.kernelName}. The gradient of input '${l}' has shape '${u.shape}', which does not match the shape of the input '${c.shape}'`);if(t[c.id]==null)t[c.id]=u;else{const h=t[c.id];t[c.id]=s(h,u),h.dispose()}}}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const sS=20,Wl=3,ag=7;function DF(t,e,n,s){const r=ve(e),o=AF(t,e,n,r),a=e.length,i=fd(t,e,n,r,o),l=["Tensor"];return s&&(l.push(`  dtype: ${n}`),l.push(`  rank: ${a}`),l.push(`  shape: [${e}]`),l.push("  values:")),l.push(i.map(u=>"    "+u).join(`
`)),l.join(`
`)}function AF(t,e,n,s){const r=K(e),o=s[s.length-1],a=new Array(o).fill(0),i=e.length,l=n==="complex64"?Ql(t):t;if(i>1)for(let u=0;u<r/o;u++){const c=u*o;for(let h=0;h<o;h++)a[h]=Math.max(a[h],Yl(l[c+h],0,n).length)}return a}function Yl(t,e,n){let s;return Array.isArray(t)?s=`${parseFloat(t[0].toFixed(ag))} + ${parseFloat(t[1].toFixed(ag))}j`:Qu(t)?s=`'${t}'`:n==="bool"?s=kN(t):s=parseFloat(t.toFixed(ag)).toString(),Fi(s,e)}function kN(t){return t===0?"false":"true"}function fd(t,e,n,s,r,o=!0){const a=n==="complex64"?2:1,i=e[0],l=e.length;if(l===0){if(n==="complex64"){const m=Ql(t);return[Yl(m[0],0,n)]}return n==="bool"?[kN(t[0])]:[t[0].toString()]}if(l===1){if(i>sS){const y=Wl*a;let g=Array.from(t.slice(0,y)),x=Array.from(t.slice((i-Wl)*a,i*a));return n==="complex64"&&(g=Ql(g),x=Ql(x)),["["+g.map((w,b)=>Yl(w,r[b],n)).join(", ")+", ..., "+x.map((w,b)=>Yl(w,r[i-Wl+b],n)).join(", ")+"]"]}return["["+(n==="complex64"?Ql(t):Array.from(t)).map((y,g)=>Yl(y,r[g],n)).join(", ")+"]"]}const u=e.slice(1),c=s.slice(1),h=s[0]*a,d=[];if(i>sS){for(let m=0;m<Wl;m++){const y=m*h,g=y+h;d.push(...fd(t.slice(y,g),u,n,c,r,!1))}d.push("...");for(let m=i-Wl;m<i;m++){const y=m*h,g=y+h;d.push(...fd(t.slice(y,g),u,n,c,r,m===i-1))}}else for(let m=0;m<i;m++){const y=m*h,g=y+h;d.push(...fd(t.slice(y,g),u,n,c,r,m===i-1))}const p=l===2?",":"";d[0]="["+(i>0?d[0]+p:"");for(let m=1;m<d.length-1;m++)d[m]=" "+d[m]+p;let f=`,
`;for(let m=2;m<l;m++)f+=`
`;return d[d.length-1]=" "+d[d.length-1]+"]"+(o?"":f),d}function Ql(t){const e=[];for(let n=0;n<t.length;n+=2)e.push([t[n],t[n+1]]);return e}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Pt{constructor(e,n,s){if(this.dtype=n,this.shape=e.slice(),this.size=K(e),s!=null){const r=s.length;C(r===this.size,()=>`Length of values '${r}' does not match the size inferred by the shape '${this.size}'.`)}if(n==="complex64")throw new Error("complex64 dtype TensorBuffers are not supported. Please create a TensorBuffer for the real and imaginary parts separately and call tf.complex(real, imag).");this.values=s||kt(n,this.size),this.strides=ve(e)}set(e,...n){n.length===0&&(n=[0]),C(n.length===this.rank,()=>`The number of provided coordinates (${n.length}) must match the rank (${this.rank})`);const s=this.locToIndex(n);this.values[s]=e}get(...e){e.length===0&&(e=[0]);let n=0;for(const r of e){if(r<0||r>=this.shape[n]){const o=`Requested out of range element at ${e}.   Buffer shape=${this.shape}`;throw new Error(o)}n++}let s=e[e.length-1];for(let r=0;r<e.length-1;++r)s+=this.strides[r]*e[r];return this.values[s]}locToIndex(e){if(this.rank===0)return 0;if(this.rank===1)return e[0];let n=e[e.length-1];for(let s=0;s<e.length-1;++s)n+=this.strides[s]*e[s];return n}indexToLoc(e){if(this.rank===0)return[];if(this.rank===1)return[e];const n=new Array(this.shape.length);for(let s=0;s<n.length-1;++s)n[s]=Math.floor(e/this.strides[s]),e-=n[s]*this.strides[s];return n[n.length-1]=e,n}get rank(){return this.shape.length}toTensor(){return Js().makeTensor(this.values,this.shape,this.dtype)}}let Js=null,hi=null;function _F(t){Js=t}function OF(t){hi=t}class ut{constructor(e,n,s,r){this.kept=!1,this.isDisposedInternal=!1,this.shape=e.slice(),this.dtype=n||"float32",this.size=K(e),this.strides=ve(e),this.dataId=s,this.id=r,this.rankType=this.rank<5?this.rank.toString():"higher"}get rank(){return this.shape.length}async buffer(){const e=await this.data();return hi.buffer(this.shape,this.dtype,e)}bufferSync(){return hi.buffer(this.shape,this.dtype,this.dataSync())}async array(){const e=await this.data();return Os(this.shape,e,this.dtype==="complex64")}arraySync(){return Os(this.shape,this.dataSync(),this.dtype==="complex64")}async data(){this.throwIfDisposed();const e=Js().read(this.dataId);if(this.dtype==="string"){const n=await e;try{return n.map(s=>_o(s))}catch{throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}}return e}dataToGPU(e){return this.throwIfDisposed(),Js().readToGPU(this.dataId,e)}dataSync(){this.throwIfDisposed();const e=Js().readSync(this.dataId);if(this.dtype==="string")try{return e.map(n=>_o(n))}catch{throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}return e}async bytes(){this.throwIfDisposed();const e=await Js().read(this.dataId);return this.dtype==="string"?e:new Uint8Array(e.buffer)}dispose(){this.isDisposed||(Js().disposeTensor(this),this.isDisposedInternal=!0)}get isDisposed(){return this.isDisposedInternal}throwIfDisposed(){if(this.isDisposed)throw new Error("Tensor is disposed.")}print(e=!1){return hi.print(this,e)}clone(){return this.throwIfDisposed(),hi.clone(this)}toString(e=!1){const n=this.dataSync();return DF(n,this.shape,this.dtype,e)}cast(e){return this.throwIfDisposed(),hi.cast(this,e)}variable(e=!0,n,s){return this.throwIfDisposed(),Js().makeVariable(this,e,n,s)}}Object.defineProperty(ut,Symbol.hasInstance,{value:t=>!!t&&t.data!=null&&t.dataSync!=null&&t.throwIfDisposed!=null});function q(){return S1("Tensor",()=>ut)}q();class qd extends ut{constructor(e,n,s,r){super(e.shape,e.dtype,e.dataId,r),this.trainable=n,this.name=s}assign(e){if(e.dtype!==this.dtype)throw new Error(`dtype of the new value (${e.dtype}) and previous value (${this.dtype}) must match`);if(!Me(e.shape,this.shape))throw new Error(`shape of the new value (${e.shape}) and previous value (${this.shape}) must match`);Js().disposeTensor(this),this.dataId=e.dataId,Js().incRef(this,null)}dispose(){Js().disposeVariable(this),this.isDisposedInternal=!0}}Object.defineProperty(qd,Symbol.hasInstance,{value:t=>t instanceof ut&&t.assign!=null&&t.assign instanceof Function});/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var rS;(function(t){t.R0="R0",t.R1="R1",t.R2="R2",t.R3="R3",t.R4="R4",t.R5="R5",t.R6="R6"})(rS||(rS={}));var Fy;(function(t){t.float32="float32",t.int32="int32",t.bool="int32",t.complex64="complex64"})(Fy||(Fy={}));var Ly;(function(t){t.float32="float32",t.int32="int32",t.bool="bool",t.complex64="complex64"})(Ly||(Ly={}));var Py;(function(t){t.float32="float32",t.int32="float32",t.bool="float32",t.complex64="complex64"})(Py||(Py={}));var zy;(function(t){t.float32="complex64",t.int32="complex64",t.bool="complex64",t.complex64="complex64"})(zy||(zy={}));const FF={float32:Py,int32:Fy,bool:Ly,complex64:zy};function Xn(t,e){if(t==="string"||e==="string"){if(t==="string"&&e==="string")return"string";throw new Error(`Can not upcast ${t} with ${e}`)}return FF[t][e]}function Tx(t){return Xn(t,"int32")}function $N(t){return t!=null&&typeof t=="object"&&"texture"in t&&t.texture instanceof WebGLTexture}function CN(t){return typeof GPUBuffer<"u"&&t!=null&&typeof t=="object"&&"buffer"in t&&t.buffer instanceof GPUBuffer}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function vt(t,e){if(t.dtype===e.dtype)return[t,e];const n=Xn(t.dtype,e.dtype);return[t.cast(n),e.cast(n)]}function LF(t,e){C(t.dtype===e.dtype,()=>`The dtypes of the first(${t.dtype}) and second(${e.dtype}) input must match`)}function NN(t){const e=[];return IN(t,e,new Set),e}function IN(t,e,n){if(t==null)return;if(t instanceof ut){e.push(t);return}if(!PF(t))return;const s=t;for(const r in s){const o=s[r];n.has(o)||(n.add(o),IN(o,e,n))}}function PF(t){return Array.isArray(t)||typeof t=="object"}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ig(t){return t.kernelName!=null}class oS{constructor(){this.registeredVariables={},this.nextTapeNodeId=0,this.numBytes=0,this.numTensors=0,this.numStringTensors=0,this.numDataBuffers=0,this.gradientDepth=0,this.kernelDepth=0,this.scopeStack=[],this.numDataMovesStack=[],this.nextScopeId=0,this.tensorInfo=new WeakMap,this.profiling=!1,this.activeProfile={newBytes:0,newTensors:0,peakBytes:0,kernels:[],result:null,get kernelNames(){return Array.from(new Set(this.kernels.map(e=>e.name)))}}}dispose(){for(const e in this.registeredVariables)this.registeredVariables[e].dispose()}}class Ji{constructor(e){this.ENV=e,this.registry={},this.registryFactory={},this.pendingBackendInitId=0,this.state=new oS}async ready(){if(this.pendingBackendInit!=null)return this.pendingBackendInit.then(()=>{});if(this.backendInstance!=null)return;const e=this.getSortedBackends();for(let n=0;n<e.length;n++){const s=e[n];if(await this.initializeBackend(s).success){await this.setBackend(s);return}}throw new Error("Could not initialize any backends, all backend initializations failed.")}get backend(){if(this.pendingBackendInit!=null)throw new Error(`Backend '${this.backendName}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);if(this.backendInstance==null){const{name:e,asyncInit:n}=this.initializeBackendsAndReturnBest();if(n)throw new Error(`The highest priority backend '${e}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);this.setBackend(e)}return this.backendInstance}backendNames(){return Object.keys(this.registryFactory)}findBackend(e){if(!(e in this.registry))if(e in this.registryFactory){const{asyncInit:n}=this.initializeBackend(e);if(n)return null}else return null;return this.registry[e]}findBackendFactory(e){return e in this.registryFactory?this.registryFactory[e].factory:null}registerBackend(e,n,s=1){return e in this.registryFactory?(ss(`${e} backend was already registered. Reusing existing backend factory.`),!1):(this.registryFactory[e]={factory:n,priority:s},!0)}async setBackend(e){if(this.registryFactory[e]==null)throw new Error(`Backend name '${e}' not found in registry`);if(this.backendName=e,this.registry[e]==null){this.backendInstance=null;const{success:n,asyncInit:s}=this.initializeBackend(e);if(!(s?await n:n))return!1}return this.backendInstance=this.registry[e],this.setupRegisteredKernels(),this.profiler=new NF(this.backendInstance),!0}setupRegisteredKernels(){Yv(this.backendName).forEach(n=>{n.setupFunc!=null&&n.setupFunc(this.backendInstance)})}disposeRegisteredKernels(e){Yv(e).forEach(s=>{s.disposeFunc!=null&&s.disposeFunc(this.registry[e])})}initializeBackend(e){const n=this.registryFactory[e];if(n==null)throw new Error(`Cannot initialize backend ${e}, no registration found.`);try{const s=n.factory();if(s&&!(s instanceof b1)&&typeof s.then=="function"){const r=++this.pendingBackendInitId,o=s.then(a=>r<this.pendingBackendInitId?!1:(this.registry[e]=a,this.pendingBackendInit=null,!0)).catch(a=>(r<this.pendingBackendInitId||(this.pendingBackendInit=null,ss(`Initialization of backend ${e} failed`),ss(a.stack||a.message)),!1));return this.pendingBackendInit=o,{success:o,asyncInit:!0}}else return this.registry[e]=s,{success:!0,asyncInit:!1}}catch(s){return ss(`Initialization of backend ${e} failed`),ss(s.stack||s.message),{success:!1,asyncInit:!1}}}removeBackend(e){if(!(e in this.registryFactory))throw new Error(`${e} backend not found in registry`);this.backendName===e&&this.pendingBackendInit!=null&&this.pendingBackendInitId++,e in this.registry&&(this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e]),delete this.registryFactory[e],this.backendName===e&&(this.pendingBackendInit=null,this.backendName=null,this.backendInstance=null)}getSortedBackends(){if(Object.keys(this.registryFactory).length===0)throw new Error("No backend found in registry.");return Object.keys(this.registryFactory).sort((e,n)=>this.registryFactory[n].priority-this.registryFactory[e].priority)}initializeBackendsAndReturnBest(){const e=this.getSortedBackends();for(let n=0;n<e.length;n++){const s=e[n],{success:r,asyncInit:o}=this.initializeBackend(s);if(o||r)return{name:s,asyncInit:o}}throw new Error("Could not initialize any backends, all backend initializations failed.")}moveData(e,n){const s=this.state.tensorInfo.get(n),r=s.backend,o=this.readSync(n),a=r.refCount(n);r.disposeData(n,!0),s.backend=e,e.move(n,o,s.shape,s.dtype,a),this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack[this.state.numDataMovesStack.length-1]++}tidy(e,n){let s=null;if(n==null){if(typeof e!="function")throw new Error("Please provide a function to tidy()");n=e}else{if(typeof e!="string"&&!(e instanceof String))throw new Error("When calling with two arguments, the first argument to tidy() must be a string");if(typeof n!="function")throw new Error("When calling with two arguments, the 2nd argument to tidy() must be a function");s=e}let r;return this.scopedRun(()=>this.startScope(s),()=>this.endScope(r),()=>(r=n(),r instanceof Promise&&console.error("Cannot return a Promise inside of tidy."),r))}scopedRun(e,n,s){e();try{const r=s();return n(),r}catch(r){throw n(),r}}nextTensorId(){return Ji.nextTensorId++}nextVariableId(){return Ji.nextVariableId++}clone(e){const n=A.runKernel(xc,{x:e}),s={x:e},r=a=>({x:()=>{const i="float32",l={x:a},u={dtype:i};return A.runKernel(oc,l,u)}}),o=[];return this.addTapeNode(this.state.activeScope.name,s,[n],r,o,{}),n}runKernel(e,n,s){if(this.backendName==null&&this.backend,!(qv(e,this.backendName)!=null))throw new Error(`Kernel '${e}' not registered for backend '${this.backendName}'`);return this.runKernelFunc({kernelName:e,inputs:n,attrs:s})}shouldCheckForMemLeaks(){return this.ENV.getBool("IS_TEST")}checkKernelForMemLeak(e,n,s){const r=this.backend.numDataIds();let o=0;s.forEach(l=>{o+=l.dtype==="complex64"?3:1});const a=this.state.numDataMovesStack[this.state.numDataMovesStack.length-1],i=r-n-o-a;if(i>0)throw new Error(`Backend '${this.backendName}' has an internal memory leak (${i} data ids) after running '${e}'`)}runKernelFunc(e){let n,s=[];const r=this.isTapeOn(),o=this.state.numBytes,a=this.state.numTensors;this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack.push(0);let i;this.backendName==null&&this.backend;let l;const u=ig(e)?e.kernelName:this.state.activeScope!=null?this.state.activeScope.name:"";if(ig(e)){const{kernelName:f,inputs:m,attrs:y}=e;this.backendName==null&&this.backend;const g=qv(f,this.backendName);C(g!=null,()=>`Cannot find registered kernel '${f}' for backend '${this.backendName}'`),i=()=>{const x=this.backend.numDataIds();l=g.kernelFunc({inputs:m,attrs:y,backend:this.backend});const w=Array.isArray(l)?l:[l];this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(f,x,w);const b=w.map(v=>v.rank!=null?v:this.makeTensorFromTensorInfo(v));if(r){const v=this.getTensorsForGradient(f,m,b);s=this.saveTensorsForBackwardMode(v)}return b}}else{const{forwardFunc:f}=e,m=y=>{r&&(s=y.map(g=>this.keep(this.clone(g))))};i=()=>{const y=this.backend.numDataIds();l=this.tidy(()=>f(this.backend,m));const g=Array.isArray(l)?l:[l];return this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(u,y,g),g}}const{inputs:c,attrs:h}=e,d=ig(e)?null:e.backwardsFunc;let p;return this.scopedRun(()=>this.state.kernelDepth++,()=>this.state.kernelDepth--,()=>{!this.ENV.getBool("DEBUG")&&!this.state.profiling?n=i():(p=this.profiler.profileKernel(u,c,()=>i()),this.ENV.getBool("DEBUG")&&this.profiler.logKernelProfile(p),n=p.outputs)}),r&&this.addTapeNode(u,c,n,d,s,h),this.state.profiling&&this.state.activeProfile.kernels.push({name:u,bytesAdded:this.state.numBytes-o,totalBytesSnapshot:this.state.numBytes,tensorsAdded:this.state.numTensors-a,totalTensorsSnapshot:this.state.numTensors,inputShapes:Object.keys(c).map(f=>c[f]!=null?c[f].shape:null),outputShapes:n.map(f=>f.shape),kernelTimeMs:p.timeMs,extraInfo:p.extraInfo}),Array.isArray(l)?n:n[0]}saveTensorsForBackwardMode(e){return e.map(s=>this.keep(this.clone(s)))}getTensorsForGradient(e,n,s){const r=Xv(e);if(r!=null){const o=r.inputsToSave||[],a=r.outputsToSave||[];let i;r.saveAllInputs?(C(Array.isArray(n),()=>"saveAllInputs is true, expected inputs to be an array."),i=Object.keys(n).map(u=>n[u])):i=o.map(u=>n[u]);const l=s.filter((u,c)=>a[c]);return i.concat(l)}return[]}makeTensor(e,n,s,r){if(e==null)throw new Error("Values passed to engine.makeTensor() are null");s=s||"float32",r=r||this.backend;let o=e;s==="string"&&Qu(e[0])&&(o=e.map(l=>To(l)));const a=r.write(o,n,s),i=new ut(n,s,a,this.nextTensorId());if(this.trackTensor(i,r),s==="string"){const l=this.state.tensorInfo.get(a),u=sF(o);this.state.numBytes+=u-l.bytes,l.bytes=u}return i}makeTensorFromDataId(e,n,s,r){s=s||"float32";const o={dataId:e,shape:n,dtype:s};return this.makeTensorFromTensorInfo(o,r)}makeTensorFromTensorInfo(e,n){const{dataId:s,shape:r,dtype:o}=e,a=new ut(r,o,s,this.nextTensorId());return this.trackTensor(a,n),a}makeVariable(e,n=!0,s,r){s=s||this.nextVariableId().toString(),r!=null&&r!==e.dtype&&(e=e.cast(r));const o=new qd(e,n,s,this.nextTensorId());if(this.state.registeredVariables[o.name]!=null)throw new Error(`Variable with name ${o.name} was already registered`);return this.state.registeredVariables[o.name]=o,this.incRef(o,this.backend),o}trackTensor(e,n){this.state.numTensors++,e.dtype==="string"&&this.state.numStringTensors++;let s=0;e.dtype!=="complex64"&&e.dtype!=="string"&&(s=e.size*Wd(e.dtype)),this.state.numBytes+=s,this.state.tensorInfo.has(e.dataId)||(this.state.numDataBuffers++,this.state.tensorInfo.set(e.dataId,{backend:n||this.backend,dtype:e.dtype,shape:e.shape,bytes:s})),e instanceof qd||this.track(e)}incRef(e,n){this.trackTensor(e,n),this.backend.incRef(e.dataId)}removeDataId(e,n){this.state.tensorInfo.has(e)&&this.state.tensorInfo.get(e).backend===n&&(this.state.tensorInfo.delete(e),this.state.numDataBuffers--)}disposeTensor(e){if(!this.state.tensorInfo.has(e.dataId))return;const n=this.state.tensorInfo.get(e.dataId);if(this.state.numTensors--,e.dtype==="string"&&(this.state.numStringTensors--,this.state.numBytes-=n.bytes),e.dtype!=="complex64"&&e.dtype!=="string"){const s=e.size*Wd(e.dtype);this.state.numBytes-=s}n.backend.disposeData(e.dataId)&&this.removeDataId(e.dataId,n.backend)}disposeVariables(){for(const e in this.state.registeredVariables){const n=this.state.registeredVariables[e];this.disposeVariable(n)}}disposeVariable(e){this.disposeTensor(e),this.state.registeredVariables[e.name]!=null&&delete this.state.registeredVariables[e.name]}memory(){const e=this.backend.memory();return e.numTensors=this.state.numTensors,e.numDataBuffers=this.state.numDataBuffers,e.numBytes=this.state.numBytes,this.state.numStringTensors>0&&(e.unreliable=!0,e.reasons==null&&(e.reasons=[]),e.reasons.push("Memory usage by string tensors is approximate (2 bytes per character)")),e}async profile(e){this.state.profiling=!0;const n=this.state.numBytes,s=this.state.numTensors;this.state.activeProfile.kernels=[],this.state.activeProfile.result=await e(),this.state.profiling=!1,this.state.activeProfile.peakBytes=Math.max(...this.state.activeProfile.kernels.map(r=>r.totalBytesSnapshot)),this.state.activeProfile.newBytes=this.state.numBytes-n,this.state.activeProfile.newTensors=this.state.numTensors-s;for(const r of this.state.activeProfile.kernels)r.kernelTimeMs=await r.kernelTimeMs,r.extraInfo=await r.extraInfo;return this.state.activeProfile}isTapeOn(){return this.state.gradientDepth>0&&this.state.kernelDepth===0}addTapeNode(e,n,s,r,o,a){const i={id:this.state.nextTapeNodeId++,kernelName:e,inputs:n,outputs:s,saved:o},l=Xv(e);l!=null&&(r=l.gradFunc),r!=null&&(i.gradient=u=>(u=u.map((c,h)=>{if(c==null){const d=s[h],p=hn(d.size,d.dtype);return this.makeTensor(p,d.shape,d.dtype)}return c}),r(u.length>1?u:u[0],o,a))),this.state.activeTape.push(i)}keep(e){return e.kept=!0,e}startTape(){this.state.gradientDepth===0&&(this.state.activeTape=[]),this.state.gradientDepth++}endTape(){this.state.gradientDepth--}startScope(e){const n={track:[],name:"unnamed scope",id:this.state.nextScopeId++};e&&(n.name=e),this.state.scopeStack.push(n),this.state.activeScope=n}endScope(e){const n=NN(e),s=new Set(n.map(o=>o.id));for(let o=0;o<this.state.activeScope.track.length;o++){const a=this.state.activeScope.track[o];!a.kept&&!s.has(a.id)&&a.dispose()}const r=this.state.scopeStack.pop();this.state.activeScope=this.state.scopeStack.length===0?null:this.state.scopeStack[this.state.scopeStack.length-1],n.forEach(o=>{!o.kept&&o.scopeId===r.id&&this.track(o)})}gradients(e,n,s,r=!1){if(C(n.length>0,()=>"gradients() received an empty list of xs."),s!=null&&s.dtype!=="float32")throw new Error(`dy must have 'float32' dtype, but has '${s.dtype}'`);const o=this.scopedRun(()=>this.startTape(),()=>this.endTape(),()=>this.tidy("forward",e));C(o instanceof ut,()=>"The result y returned by f() must be a tensor.");const a=EF(this.state.activeTape,n,o);if(!r&&a.length===0&&n.length>0)throw new Error("Cannot compute gradient of y=f(x) with respect to x. Make sure that the f you passed encloses all operations that lead from x to y.");return this.tidy("backward",()=>{const i={};i[o.id]=s??zF(o.shape),RF(i,a,u=>this.tidy(u),MF);const l=n.map(u=>i[u.id]);return this.state.gradientDepth===0&&(this.state.activeTape.forEach(u=>{for(const c of u.saved)c.dispose()}),this.state.activeTape=null),{value:o,grads:l}})}customGrad(e){return C(Ty(e),()=>"The f passed in customGrad(f) must be a function."),(...n)=>{C(n.every(i=>i instanceof ut),()=>"The args passed in customGrad(f)(x1, x2,...) must all be tensors");let s;const r={};n.forEach((i,l)=>{r[l]=i});const o=(i,l)=>(s=e(...n,l),C(s.value instanceof ut,()=>"The function f passed in customGrad(f) must return an object where `obj.value` is a tensor"),C(Ty(s.gradFunc),()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function."),s.value),a=(i,l)=>{const u=s.gradFunc(i,l),c=Array.isArray(u)?u:[u];C(c.length===n.length,()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns the same number of tensors as inputs passed to f(...)."),C(c.every(d=>d instanceof ut),()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns a list of only tensors.");const h={};return c.forEach((d,p)=>{h[p]=()=>d}),h};return this.runKernelFunc({forwardFunc:o,backwardsFunc:a,inputs:r})}}readSync(e){return this.state.tensorInfo.get(e).backend.readSync(e)}read(e){return this.state.tensorInfo.get(e).backend.read(e)}readToGPU(e,n){return this.state.tensorInfo.get(e).backend.readToGPU(e,n)}async time(e){const n=Tn(),s=await this.backend.time(e);return s.wallMs=Tn()-n,s}track(e){return this.state.activeScope!=null&&(e.scopeId=this.state.activeScope.id,this.state.activeScope.track.push(e)),e}get registeredVariables(){return this.state.registeredVariables}reset(){this.pendingBackendInitId++,this.state.dispose(),this.ENV.reset(),this.state=new oS;for(const e in this.registry)this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e];this.backendName=null,this.backendInstance=null,this.pendingBackendInit=null}}Ji.nextTensorId=0;Ji.nextVariableId=0;function zF(t){const e=v1(K(t),"float32");return A.makeTensor(e,t,"float32")}function TN(){const t=hN();if(t._tfengine==null){const e=new aF(t);t._tfengine=new Ji(e)}return cF(t._tfengine.ENV),_F(()=>t._tfengine),t._tfengine}const A=TN();function MF(t,e){const n={a:t,b:e};return A.runKernel(xl,n)}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function BF(){return typeof navigator<"u"&&navigator!=null}function EN(t){if(t||BF()){if(t||(t=navigator),t.product==="ReactNative")return!0;const e=t.userAgent||t.vendor||(typeof window<"u"?window.opera:"");if(!e){const n=t;return n.userAgentData&&n.userAgentData.mobile}return/(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(e)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test(e.substr(0,4))}return!1}function RN(){return typeof window<"u"&&window.document!=null||typeof WorkerGlobalScope<"u"}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const An=G();An.registerFlag("DEBUG",()=>!1,t=>{t&&console.warn("Debugging mode is ON. The output of every math call will be downloaded to CPU and checked for NaNs. This significantly impacts performance.")});An.registerFlag("IS_BROWSER",()=>RN());An.registerFlag("IS_NODE",()=>typeof process<"u"&&typeof process.versions<"u"&&typeof process.versions.node<"u");An.registerFlag("IS_CHROME",()=>typeof navigator<"u"&&navigator!=null&&navigator.userAgent!=null&&/Chrome/.test(navigator.userAgent)&&/Google Inc/.test(navigator.vendor));An.registerFlag("IS_SAFARI",()=>typeof navigator<"u"&&navigator!=null&&navigator.userAgent!=null&&/Safari/.test(navigator.userAgent)&&/Apple/.test(navigator.vendor));An.registerFlag("PROD",()=>!1);An.registerFlag("TENSORLIKE_CHECK_SHAPE_CONSISTENCY",()=>An.getBool("DEBUG"));An.registerFlag("DEPRECATION_WARNINGS_ENABLED",()=>!0);An.registerFlag("IS_TEST",()=>!1);An.registerFlag("CHECK_COMPUTATION_FOR_ERRORS",()=>An.getBool("DEBUG"));An.registerFlag("WRAP_TO_IMAGEBITMAP",()=>!1);An.registerFlag("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU",()=>!1);An.registerFlag("USE_SETTIMEOUTCUSTOM",()=>!1);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function qo(t,e){let n=t;if(Ms(t))return e==="string"?[]:[t.length];if($N(t)){const r=t.channels||"RGBA";return[t.height,t.width*r.length]}else if(CN(t))return[t.buffer.size/(e==null?4:Wd(e))];if(!Array.isArray(t))return[];const s=[];for(;Array.isArray(n)||Ms(n)&&e!=="string";)s.push(n.length),n=n[0];return Array.isArray(t)&&G().getBool("TENSORLIKE_CHECK_SHAPE_CONSISTENCY")&&DN(t,s,[]),s}function DN(t,e,n){if(n=n||[],!Array.isArray(t)&&!Ms(t)){C(e.length===0,()=>`Element arr[${n.join("][")}] is a primitive, but should be an array/TypedArray of ${e[0]} elements`);return}C(e.length>0,()=>`Element arr[${n.join("][")}] should be a primitive, but is an array of ${t.length} elements`),C(t.length===e[0],()=>`Element arr[${n.join("][")}] should have ${e[0]} elements, but has ${t.length} elements`);const s=e.slice(1);for(let r=0;r<t.length;++r)DN(t[r],s,n.concat(r))}function aS(t,e,n,s){if(t!=="string_or_numeric"){if(t==null)throw new Error("Expected dtype cannot be null.");if(t!=="numeric"&&t!==e||t==="numeric"&&e==="string")throw new Error(`Argument '${n}' passed to '${s}' must be ${t} tensor, but got ${e} tensor`)}}function I(t,e,n,s="numeric"){if(t instanceof ut)return aS(s,t.dtype,e,n),t;let r=gl(t);if(r!=="string"&&["bool","int32","float32"].indexOf(s)>=0&&(r=s),aS(s,r,e,n),t==null||!Ms(t)&&!Array.isArray(t)&&typeof t!="number"&&typeof t!="boolean"&&typeof t!="string"){const l=t==null?"null":t.constructor.name;throw new Error(`Argument '${e}' passed to '${n}' must be a Tensor or TensorLike, but got '${l}'`)}const o=qo(t,r);!Ms(t)&&!Array.isArray(t)&&(t=[t]);const i=r!=="string"?ja(t,r):Ra(t,[],!0);return A.makeTensor(i,o,r)}function Xd(t,e,n,s="numeric"){if(!Array.isArray(t))throw new Error(`Argument ${e} passed to ${n} must be a \`Tensor[]\` or \`TensorLike[]\``);return t.map((o,a)=>I(o,`${e}[${a}]`,n,s))}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const AN="__op";function D(t){const e=Object.keys(t);if(e.length!==1)throw new Error(`Please provide an object with a single key (operation name) mapping to a function. Got an object with ${e.length} keys.`);let n=e[0];const s=t[n];n.endsWith("_")&&(n=n.substring(0,n.length-1)),n=n+AN;const r=(...o)=>{A.startScope(n);try{const a=s(...o);return Ea(a)&&console.error("Cannot return a Promise inside of tidy."),A.endScope(a),a}catch(a){throw A.endScope(null),a}};return Object.defineProperty(r,"name",{value:n,configurable:!0}),r}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function VF(t,e){const n=I(t,"real","complex"),s=I(e,"imag","complex");Jn(n.shape,s.shape,`real and imag shapes, ${n.shape} and ${s.shape}, must match in call to tf.complex().`);const r={real:n,imag:s};return A.runKernel(E1,r)}const Oo=D({complex_:VF});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Xo(t,e,n,s){if(s==null)s=gl(t);else if(s==="complex64")throw new Error("Cannot construct a complex64 tensor directly. Please use tf.complex(real, imag).");if(CN(t)||$N(t)){if(s!=="float32"&&s!=="int32")throw new Error(`Creating tensor from GPU data only supports 'float32'|'int32' dtype, while the dtype is ${s}.`);return A.backend.createTensorFromGPUData(t,e||n,s)}if(!Ms(t)&&!Array.isArray(t)&&typeof t!="number"&&typeof t!="boolean"&&typeof t!="string")throw new Error("values passed to tensor(values) must be a number/boolean/string or an array of numbers/booleans/strings, or a TypedArray");if(e!=null){ms(e);const r=K(e),o=K(n);C(r===o,()=>`Based on the provided shape, [${e}], the tensor should have ${r} values but has ${o}`);for(let a=0;a<n.length;++a){const i=n[a],l=a===n.length-1?i!==K(e.slice(a)):!0;C(n[a]===e[a]||!l,()=>`Error creating a new Tensor. Inferred shape (${n}) does not match the provided shape (${e}). `)}}return!Ms(t)&&!Array.isArray(t)&&(t=[t]),e=e||n,t=s!=="string"?ja(t,s):Ra(t,[],!0),A.makeTensor(t,e,s)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Fs(t,e,n){const s=qo(t,n);return Xo(t,e,s,n)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const My={float32:4,float16:2,int32:4,uint16:2,uint8:1,bool:1,complex64:8};class cr{static join(e){return new cr(e).slice()}constructor(e){if(this.shards=[],this.previousShardIndex=0,e==null||(e instanceof Array||(e=[e]),e=e.map(s=>Ms(s)?s.buffer:s),e.length===0))return;this.bufferUniformSize=e[0].byteLength;let n=0;for(let s=0;s<e.length;s++){const r=e[s];s!==e.length-1&&r.byteLength!==this.bufferUniformSize&&(this.bufferUniformSize=void 0);const o=n+r.byteLength;this.shards.push({buffer:r,start:n,end:o}),n=o}this.shards.length===0&&(this.byteLength=0),this.byteLength=this.shards[this.shards.length-1].end}slice(e=0,n=this.byteLength){if(this.shards.length===0)return new ArrayBuffer(0);if(e=isNaN(Number(e))?0:e,n=isNaN(Number(n))?0:n,e=Math.max(0,e),n=Math.min(this.byteLength,n),n<=e)return new ArrayBuffer(0);const s=this.findShardForByte(e);if(s===-1)throw new Error(`Could not find start shard for byte ${e}`);const r=n-e,o=new ArrayBuffer(r),a=new Uint8Array(o);let i=0;for(let l=s;l<this.shards.length;l++){const u=this.shards[l],h=e+i-u.start,d=i,f=Math.min(n,u.end)-u.start,m=new Uint8Array(u.buffer,h,f-h);if(a.set(m,d),i+=m.length,n<u.end)break}return o}findShardForByte(e){if(this.shards.length===0||e<0||e>=this.byteLength)return-1;if(this.bufferUniformSize!=null)return this.previousShardIndex=Math.floor(e/this.bufferUniformSize),this.previousShardIndex;function n(r){return e<r.start?-1:e>=r.end?1:0}if(n(this.shards[this.previousShardIndex])===0)return this.previousShardIndex;const s=WF(this.shards,n);return s===-1?-1:(this.previousShardIndex=s,this.previousShardIndex)}}function WF(t,e){let n=0,s=t.length;for(;n<=s;){const r=Math.floor((s-n)/2)+n,o=e(t[r]);if(o===0)return r;o<0?s=r:n=r+1}return-1}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Yd=4;async function By(t,e){const n=[],s=[],r=Array.isArray(t)?t.map(a=>a.name):Object.keys(t);for(let a=0;a<r.length;++a){const i=r[a],l=Array.isArray(t)?t[a].tensor:t[i];if(l.dtype!=="float32"&&l.dtype!=="int32"&&l.dtype!=="bool"&&l.dtype!=="string"&&l.dtype!=="complex64")throw new Error(`Unsupported dtype in weight '${i}': ${l.dtype}`);const u={name:i,shape:l.shape,dtype:l.dtype};if(l.dtype==="string"){const c=new Promise(async h=>{const d=await l.bytes(),p=d.reduce((y,g)=>y+g.length,0)+Yd*d.length,f=new Uint8Array(p);let m=0;for(let y=0;y<d.length;y++){const g=d[y],x=new Uint8Array(new Uint32Array([g.length]).buffer);f.set(x,m),m+=Yd,f.set(g,m),m+=g.length}h(f)});s.push(c)}else s.push(l.data());e!=null&&(u.group=e),n.push(u)}const o=await Promise.all(s);return{data:UF(o),specs:n}}function _N(t,e){const n=new cr(t),s={};let r,o=0;for(const a of e){const i=a.name,l=a.dtype,u=a.shape,c=K(u);let h;if("quantization"in a){const d=a.quantization;if(d.dtype==="uint8"||d.dtype==="uint16"){if(!("min"in d&&"scale"in d))throw new Error(`Weight ${a.name} with quantization ${d.dtype} doesn't have corresponding metadata min and scale.`)}else if(d.dtype==="float16"){if(l!=="float32")throw new Error(`Weight ${a.name} is quantized with ${d.dtype} which only supports weights of type float32 not ${l}.`)}else throw new Error(`Weight ${a.name} has unknown quantization dtype ${d.dtype}. Supported quantization dtypes are: 'uint8', 'uint16', and 'float16'.`);const p=My[d.dtype],f=n.slice(o,o+c*p),m=d.dtype==="uint8"?new Uint8Array(f):new Uint16Array(f);if(l==="float32")if(d.dtype==="uint8"||d.dtype==="uint16"){h=new Float32Array(m.length);for(let y=0;y<m.length;y++){const g=m[y];h[y]=g*d.scale+d.min}}else if(d.dtype==="float16")r===void 0&&(r=XF()),h=r(m);else throw new Error(`Unsupported quantization type ${d.dtype} for weight type float32.`);else if(l==="int32"){if(d.dtype!=="uint8"&&d.dtype!=="uint16")throw new Error(`Unsupported quantization type ${d.dtype} for weight type int32.`);h=new Int32Array(m.length);for(let y=0;y<m.length;y++){const g=m[y];h[y]=Math.round(g*d.scale+d.min)}}else throw new Error(`Unsupported dtype in weight '${i}': ${l}`);o+=c*p}else if(l==="string"){const d=K(a.shape);h=[];for(let p=0;p<d;p++){const f=new Uint32Array(n.slice(o,o+Yd))[0];o+=Yd;const m=new Uint8Array(n.slice(o,o+f));h.push(m),o+=f}}else{const d=My[l],p=n.slice(o,o+c*d);if(l==="float32")h=new Float32Array(p);else if(l==="int32")h=new Int32Array(p);else if(l==="bool")h=new Uint8Array(p);else if(l==="complex64"){h=new Float32Array(p);const f=new Float32Array(h.length/2),m=new Float32Array(h.length/2);for(let x=0;x<f.length;x++)f[x]=h[x*2],m[x]=h[x*2+1];const y=Fs(f,u,"float32"),g=Fs(m,u,"float32");s[i]=Oo(y,g),y.dispose(),g.dispose()}else throw new Error(`Unsupported dtype in weight '${i}': ${l}`);o+=c*d}l!=="complex64"&&(s[i]=Fs(h,u,l))}return s}function UF(t){if(t===null)throw new Error(`Invalid input value: ${JSON.stringify(t)}`);let e=0;const n=[];t.forEach(o=>{if(e+=o.byteLength,n.push(o.byteLength===o.buffer.byteLength?o:new o.constructor(o)),!(o instanceof Float32Array||o instanceof Int32Array||o instanceof Uint8Array))throw new Error(`Unsupported TypedArray subtype: ${o.constructor.name}`)});const s=new Uint8Array(e);let r=0;return n.forEach(o=>{s.set(new Uint8Array(o.buffer),r),r+=o.byteLength}),s.buffer}const Ex=typeof Buffer<"u"&&(typeof Blob>"u"||typeof atob>"u"||typeof btoa>"u");function iS(t){return Ex?Buffer.byteLength(t,"utf8"):new Blob([t]).size}function GF(t){if(Ex)return Buffer.from(t).toString("base64");const e=new Uint8Array(t);let n="";for(let s=0,r=e.length;s<r;s++)n+=String.fromCharCode(e[s]);return btoa(n)}function HF(t){if(Ex){const s=Buffer.from(t,"base64");return s.buffer.slice(s.byteOffset,s.byteOffset+s.byteLength)}const e=atob(t),n=new Uint8Array(e.length);for(let s=0;s<e.length;++s)n.set([e.charCodeAt(s)],s);return n.buffer}function ON(t){return cr.join(t)}function lS(t){const e="/";for(t=t.trim();t.endsWith(e);)t=t.slice(0,t.length-1);const n=t.split(e);return n[n.length-1]}function FN(t,e){const n={modelTopology:t.modelTopology,format:t.format,generatedBy:t.generatedBy,convertedBy:t.convertedBy,weightsManifest:e};return t.signature!=null&&(n.signature=t.signature),t.userDefinedMetadata!=null&&(n.userDefinedMetadata=t.userDefinedMetadata),t.modelInitializer!=null&&(n.modelInitializer=t.modelInitializer),t.initializerSignature!=null&&(n.initializerSignature=t.initializerSignature),t.trainingConfig!=null&&(n.trainingConfig=t.trainingConfig),n}function LN(t,e,n){const s={modelTopology:t.modelTopology,format:t.format,generatedBy:t.generatedBy,convertedBy:t.convertedBy};if(t.trainingConfig!=null&&(s.trainingConfig=t.trainingConfig),t.weightsManifest!=null){if(!e)throw new Error("modelJSON has weightsManifest but weightSpecs is null");if(!n)throw new Error("modelJSON has weightsManifest but weightData is null");s.weightSpecs=e,s.weightData=n}return t.signature!=null&&(s.signature=t.signature),t.userDefinedMetadata!=null&&(s.userDefinedMetadata=t.userDefinedMetadata),t.modelInitializer!=null&&(s.modelInitializer=t.modelInitializer),t.initializerSignature!=null&&(s.initializerSignature=t.initializerSignature),s}async function Rx(t,e){let n,s;return t.weightsManifest!=null&&([n,s]=await e(t.weightsManifest)),LN(t,n,s)}function Kc(t){if(t.modelTopology instanceof ArrayBuffer)throw new Error("Expected JSON model topology, received ArrayBuffer.");return{dateSaved:new Date,modelTopologyType:"JSON",modelTopologyBytes:t.modelTopology==null?0:iS(JSON.stringify(t.modelTopology)),weightSpecsBytes:t.weightSpecs==null?0:iS(JSON.stringify(t.weightSpecs)),weightDataBytes:t.weightData==null?0:new cr(t.weightData).byteLength}}function PN(t){const e=[];for(const n of t)e.push(...n.weights);return e}function jF(){const t=n=>{let s=n<<13,r=0;for(;!(s&8388608);)r-=8388608,s<<=1;return s&=-8388609,r+=947912704,s|r},e=new Uint32Array(2048);e[0]=0;for(let n=1;n<1024;n++)e[n]=t(n);for(let n=1024;n<2048;n++)e[n]=939524096+(n-1024<<13);return e}function KF(){const t=new Uint32Array(64);t[0]=0,t[31]=1199570944,t[32]=2147483648,t[63]=3347054592;for(let e=1;e<31;e++)t[e]=e<<23;for(let e=33;e<63;e++)t[e]=2147483648+(e-32<<23);return t}function qF(){const t=new Uint32Array(64);for(let e=0;e<64;e++)t[e]=1024;return t[0]=t[32]=0,t}function XF(){const t=jF(),e=KF(),n=qF();return s=>{const r=new ArrayBuffer(4*s.length),o=new Uint32Array(r);for(let a=0;a<s.length;a++){const i=s[a],l=t[n[i>>10]+(i&1023)]+e[i>>10];o[a]=l}return new Float32Array(r)}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class pt{constructor(){this.saveRouters=[],this.loadRouters=[]}static getInstance(){return pt.instance==null&&(pt.instance=new pt),pt.instance}static registerSaveRouter(e){pt.getInstance().saveRouters.push(e)}static registerLoadRouter(e){pt.getInstance().loadRouters.push(e)}static getSaveHandlers(e){return pt.getHandlers(e,"save")}static getLoadHandlers(e,n){return pt.getHandlers(e,"load",n)}static getHandlers(e,n,s){const r=[];return(n==="load"?pt.getInstance().loadRouters:pt.getInstance().saveRouters).forEach(a=>{const i=a(e,s);i!==null&&r.push(i)}),r}}const YF=t=>pt.registerSaveRouter(t),QF=t=>pt.registerLoadRouter(t),zN=t=>pt.getSaveHandlers(t),ZF=(t,e)=>pt.getLoadHandlers(t,e);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Vy="tensorflowjs",Wy=1,ya="models_store",go="model_info_store";function MN(){if(!G().getBool("IS_BROWSER"))throw new Error("Failed to obtain IndexedDB factory because the current environmentis not a web browser.");const t=typeof window>"u"?self:window,e=t.indexedDB||t.mozIndexedDB||t.webkitIndexedDB||t.msIndexedDB||t.shimIndexedDB;if(e==null)throw new Error("The current browser does not appear to support IndexedDB.");return e}function Uy(t){const e=t.result;e.createObjectStore(ya,{keyPath:"modelPath"}),e.createObjectStore(go,{keyPath:"modelPath"})}class Da{constructor(e){if(this.indexedDB=MN(),e==null||!e)throw new Error("For IndexedDB, modelPath must not be null, undefined or empty.");this.modelPath=e}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");return this.databaseAction(this.modelPath,e)}async load(){return this.databaseAction(this.modelPath)}databaseAction(e,n){return new Promise((s,r)=>{const o=this.indexedDB.open(Vy,Wy);o.onupgradeneeded=()=>Uy(o),o.onsuccess=()=>{const a=o.result;if(n==null){const i=a.transaction(ya,"readonly"),u=i.objectStore(ya).get(this.modelPath);u.onsuccess=()=>{if(u.result==null)return a.close(),r(new Error(`Cannot find model with path '${this.modelPath}' in IndexedDB.`));s(u.result.modelArtifacts)},u.onerror=c=>(a.close(),r(u.error)),i.oncomplete=()=>a.close()}else{n.weightData=cr.join(n.weightData);const i=Kc(n),l=a.transaction(go,"readwrite");let u=l.objectStore(go),c;try{c=u.put({modelPath:this.modelPath,modelArtifactsInfo:i})}catch(d){return r(d)}let h;c.onsuccess=()=>{h=a.transaction(ya,"readwrite");const d=h.objectStore(ya);let p;try{p=d.put({modelPath:this.modelPath,modelArtifacts:n,modelArtifactsInfo:i})}catch(f){return r(f)}p.onsuccess=()=>s({modelArtifactsInfo:i}),p.onerror=f=>{u=l.objectStore(go);const m=u.delete(this.modelPath);m.onsuccess=()=>(a.close(),r(p.error)),m.onerror=y=>(a.close(),r(p.error))}},c.onerror=d=>(a.close(),r(c.error)),l.oncomplete=()=>{h==null?a.close():h.oncomplete=()=>a.close()}}},o.onerror=a=>r(o.error)})}}Da.URL_SCHEME="indexeddb://";const BN=t=>G().getBool("IS_BROWSER")&&!Array.isArray(t)&&t.startsWith(Da.URL_SCHEME)?JF(t.slice(Da.URL_SCHEME.length)):null;pt.registerSaveRouter(BN);pt.registerLoadRouter(BN);function JF(t){return new Da(t)}function e3(t){return t.startsWith(Da.URL_SCHEME)?t.slice(Da.URL_SCHEME.length):t}class t3{constructor(){this.indexedDB=MN()}async listModels(){return new Promise((e,n)=>{const s=this.indexedDB.open(Vy,Wy);s.onupgradeneeded=()=>Uy(s),s.onsuccess=()=>{const r=s.result,o=r.transaction(go,"readonly"),i=o.objectStore(go).getAll();i.onsuccess=()=>{const l={};for(const u of i.result)l[u.modelPath]=u.modelArtifactsInfo;e(l)},i.onerror=l=>(r.close(),n(i.error)),o.oncomplete=()=>r.close()},s.onerror=r=>n(s.error)})}async removeModel(e){return e=e3(e),new Promise((n,s)=>{const r=this.indexedDB.open(Vy,Wy);r.onupgradeneeded=()=>Uy(r),r.onsuccess=()=>{const o=r.result,a=o.transaction(go,"readwrite"),i=a.objectStore(go),l=i.get(e);let u;l.onsuccess=()=>{if(l.result==null)return o.close(),s(new Error(`Cannot find model with path '${e}' in IndexedDB.`));{const c=i.delete(e),h=()=>{u=o.transaction(ya,"readwrite");const p=u.objectStore(ya).delete(e);p.onsuccess=()=>n(l.result.modelArtifactsInfo),p.onerror=f=>s(l.error)};c.onsuccess=h,c.onerror=d=>(h(),o.close(),s(l.error))}},l.onerror=c=>(o.close(),s(l.error)),a.oncomplete=()=>{u==null?o.close():u.oncomplete=()=>o.close()}},r.onerror=o=>s(r.error)})}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Br="/",di="tensorflowjs_models",VN="info",n3="model_topology",s3="weight_specs",r3="weight_data",o3="model_metadata";function WN(t){return{info:[di,t,VN].join(Br),topology:[di,t,n3].join(Br),weightSpecs:[di,t,s3].join(Br),weightData:[di,t,r3].join(Br),modelMetadata:[di,t,o3].join(Br)}}function UN(t){for(const e of Object.values(t))window.localStorage.removeItem(e)}function a3(t){const e=t.split(Br);if(e.length<3)throw new Error(`Invalid key format: ${t}`);return e.slice(1,e.length-1).join(Br)}function i3(t){return t.startsWith(Aa.URL_SCHEME)?t.slice(Aa.URL_SCHEME.length):t}class Aa{constructor(e){if(!G().getBool("IS_BROWSER")||typeof window>"u"||typeof window.localStorage>"u")throw new Error("The current environment does not support local storage.");if(this.LS=window.localStorage,e==null||!e)throw new Error("For local storage, modelPath must not be null, undefined or empty.");this.modelPath=e,this.keys=WN(this.modelPath)}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");{const n=JSON.stringify(e.modelTopology),s=JSON.stringify(e.weightSpecs),r=Kc(e),o=cr.join(e.weightData);try{this.LS.setItem(this.keys.info,JSON.stringify(r)),this.LS.setItem(this.keys.topology,n),this.LS.setItem(this.keys.weightSpecs,s),this.LS.setItem(this.keys.weightData,GF(o));const a={format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,signature:e.signature!=null?e.signature:void 0,userDefinedMetadata:e.userDefinedMetadata!=null?e.userDefinedMetadata:void 0,modelInitializer:e.modelInitializer!=null?e.modelInitializer:void 0,initializerSignature:e.initializerSignature!=null?e.initializerSignature:void 0,trainingConfig:e.trainingConfig!=null?e.trainingConfig:void 0};return this.LS.setItem(this.keys.modelMetadata,JSON.stringify(a)),{modelArtifactsInfo:r}}catch{throw UN(this.keys),new Error(`Failed to save model '${this.modelPath}' to local storage: size quota being exceeded is a possible cause of this failure: modelTopologyBytes=${r.modelTopologyBytes}, weightSpecsBytes=${r.weightSpecsBytes}, weightDataBytes=${r.weightDataBytes}.`)}}}async load(){const e=JSON.parse(this.LS.getItem(this.keys.info));if(e==null)throw new Error(`In local storage, there is no model with name '${this.modelPath}'`);if(e.modelTopologyType!=="JSON")throw new Error("BrowserLocalStorage does not support loading non-JSON model topology yet.");const n={},s=JSON.parse(this.LS.getItem(this.keys.topology));if(s==null)throw new Error(`In local storage, the topology of model '${this.modelPath}' is missing.`);n.modelTopology=s;const r=JSON.parse(this.LS.getItem(this.keys.weightSpecs));if(r==null)throw new Error(`In local storage, the weight specs of model '${this.modelPath}' are missing.`);n.weightSpecs=r;const o=this.LS.getItem(this.keys.modelMetadata);if(o!=null){const i=JSON.parse(o);n.format=i.format,n.generatedBy=i.generatedBy,n.convertedBy=i.convertedBy,i.signature!=null&&(n.signature=i.signature),i.userDefinedMetadata!=null&&(n.userDefinedMetadata=i.userDefinedMetadata),i.modelInitializer!=null&&(n.modelInitializer=i.modelInitializer),i.initializerSignature!=null&&(n.initializerSignature=i.initializerSignature),i.trainingConfig!=null&&(n.trainingConfig=i.trainingConfig)}const a=this.LS.getItem(this.keys.weightData);if(a==null)throw new Error(`In local storage, the binary weight values of model '${this.modelPath}' are missing.`);return n.weightData=HF(a),n}}Aa.URL_SCHEME="localstorage://";const GN=t=>G().getBool("IS_BROWSER")&&!Array.isArray(t)&&t.startsWith(Aa.URL_SCHEME)?l3(t.slice(Aa.URL_SCHEME.length)):null;pt.registerSaveRouter(GN);pt.registerLoadRouter(GN);function l3(t){return new Aa(t)}class u3{constructor(){C(G().getBool("IS_BROWSER"),()=>"Current environment is not a web browser"),C(typeof window>"u"||typeof window.localStorage<"u",()=>"Current browser does not appear to support localStorage"),this.LS=window.localStorage}async listModels(){const e={},n=di+Br,s=Br+VN;for(let r=0;r<this.LS.length;++r){const o=this.LS.key(r);if(o.startsWith(n)&&o.endsWith(s)){const a=a3(o);e[a]=JSON.parse(this.LS.getItem(o))}}return e}async removeModel(e){e=i3(e);const n=WN(e);if(this.LS.getItem(n.info)==null)throw new Error(`Cannot find model at path '${e}'`);const s=JSON.parse(this.LS.getItem(n.info));return UN(n),s}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Pi="://";class yn{constructor(){this.managers={}}static getInstance(){return yn.instance==null&&(yn.instance=new yn),yn.instance}static registerManager(e,n){C(e!=null,()=>"scheme must not be undefined or null."),e.endsWith(Pi)&&(e=e.slice(0,e.indexOf(Pi))),C(e.length>0,()=>"scheme must not be an empty string.");const s=yn.getInstance();C(s.managers[e]==null,()=>`A model store manager is already registered for scheme '${e}'.`),s.managers[e]=n}static getManager(e){const n=yn.getInstance().managers[e];if(n==null)throw new Error(`Cannot find model manager for scheme '${e}'`);return n}static getSchemes(){return Object.keys(yn.getInstance().managers)}}function md(t){if(t.indexOf(Pi)===-1)throw new Error(`The url string provided does not contain a scheme. Supported schemes are: ${yn.getSchemes().join(",")}`);return{scheme:t.split(Pi)[0],path:t.split(Pi)[1]}}async function HN(t,e,n=!1){C(t!==e,()=>`Old path and new path are the same: '${t}'`);const s=pt.getLoadHandlers(t);C(s.length>0,()=>`Copying failed because no load handler is found for source URL ${t}.`),C(s.length<2,()=>`Copying failed because more than one (${s.length}) load handlers for source URL ${t}.`);const r=s[0],o=pt.getSaveHandlers(e);C(o.length>0,()=>`Copying failed because no save handler is found for destination URL ${e}.`),C(o.length<2,()=>`Copying failed because more than one (${s.length}) save handlers for destination URL ${e}.`);const a=o[0],i=md(t).scheme,l=md(t).path,u=i===md(t).scheme,c=await r.load();n&&u&&await yn.getManager(i).removeModel(l);const h=await a.save(c);return n&&!u&&await yn.getManager(i).removeModel(l),h.modelArtifactsInfo}async function c3(){const t=yn.getSchemes(),e={};for(const n of t){const s=await yn.getManager(n).listModels();for(const r in s){const o=n+Pi+r;e[o]=s[r]}}return e}async function h3(t){const e=md(t);return yn.getManager(e.scheme).removeModel(e.path)}async function d3(t,e){return HN(t,e,!1)}async function p3(t,e){return HN(t,e,!0)}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class f3{constructor(){this.messageName="setTimeoutCustom",this.functionRefs=[],this.handledMessageCount=0,this.hasEventListener=!1}fetch(e,n){return fetch(e,n)}now(){return performance.now()}encode(e,n){if(n!=="utf-8"&&n!=="utf8")throw new Error(`Browser's encoder only supports utf-8, but got ${n}`);return this.textEncoder==null&&(this.textEncoder=new TextEncoder),this.textEncoder.encode(e)}decode(e,n){return new TextDecoder(n).decode(e)}setTimeoutCustom(e,n){if(typeof window>"u"||!G().getBool("USE_SETTIMEOUTCUSTOM")){setTimeout(e,n);return}this.functionRefs.push(e),setTimeout(()=>{window.postMessage({name:this.messageName,index:this.functionRefs.length-1},"*")},n),this.hasEventListener||(this.hasEventListener=!0,window.addEventListener("message",s=>{if(s.source===window&&s.data.name===this.messageName){s.stopPropagation();const r=this.functionRefs[s.data.index];r(),this.handledMessageCount++,this.handledMessageCount===this.functionRefs.length&&(this.functionRefs=[],this.handledMessageCount=0)}},!0))}isTypedArray(e){return fN(e)}}if(G().get("IS_BROWSER")){G().setPlatform("browser",new f3);try{yn.registerManager(Aa.URL_SCHEME,new u3)}catch{}try{yn.registerManager(Da.URL_SCHEME,new t3)}catch{}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const m3={importFetch:()=>require("node-fetch")};let lg;class g3{constructor(){this.util=require("util"),this.textEncoder=new this.util.TextEncoder}fetch(e,n){return G().global.fetch!=null?G().global.fetch(e,n):(lg==null&&(lg=m3.importFetch()),lg(e,n))}now(){const e=process.hrtime();return e[0]*1e3+e[1]/1e6}encode(e,n){if(n!=="utf-8"&&n!=="utf8")throw new Error(`Node built-in encoder only supports utf-8, but got ${n}`);return this.textEncoder.encode(e)}decode(e,n){return e.length===0?"":new this.util.TextDecoder(n).decode(e)}isTypedArray(e){return this.util.types.isFloat32Array(e)||this.util.types.isInt32Array(e)||this.util.types.isUint8Array(e)||this.util.types.isUint8ClampedArray(e)}}G().get("IS_NODE")&&!G().get("IS_BROWSER")&&G().setPlatform("node",new g3);/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ae(t,e="float32",n){return e=e||"float32",ms(t),new Pt(t,e,n)}/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function y3(t,e){const n=I(t,"x","cast");if(!nF(e))throw new Error(`Failed to cast to unknown dtype ${e}`);if(e==="string"&&n.dtype!=="string"||e!=="string"&&n.dtype==="string")throw new Error("Only strings can be casted to strings");const s={x:n},r={dtype:e};return A.runKernel(oc,s,r)}const he=D({cast_:y3});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function x3(t){const n={x:I(t,"x","clone","string_or_numeric")};return A.runKernel(xc,n)}const Hr=D({clone_:x3});/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function jN(t,e=!1){console.log(t.toString(e))}/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */TN();const b3={buffer:Ae,cast:he,clone:Hr,print:jN};OF(b3);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function mr(){return A}function Gy(){return A.memory()}function V(t,e){return A.tidy(t,e)}function Oe(t){NN(t).forEach(n=>n.dispose())}function Ht(t){return A.keep(t)}function KN(t,e,n=1){return A.registerBackend(t,e,n)}function w3(){return A.backend}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function v3(t,e){let n=I(t,"a","add"),s=I(e,"b","add");[n,s]=vt(n,s);const r={a:n,b:s};return A.runKernel(xl,r)}const te=D({add_:v3});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function S3(t,e){let n=I(t,"a","floorDiv"),s=I(e,"b","floorDiv");[n,s]=vt(n,s);const r={a:n,b:s};return A.runKernel(gc,r)}const Dx=D({floorDiv_:S3});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function k3(t,e){let n=I(t,"a","div"),s=I(e,"b","div");if([n,s]=vt(n,s),n.dtype==="int32"&&s.dtype==="int32")return Dx(n,s);const r={a:n,b:s},o={};return A.runKernel(cc,r,o)}const we=D({div_:k3});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $3(t,e){let n=I(t,"a","mul"),s=I(e,"b","mul");[n,s]=vt(n,s);const r={a:n,b:s};return A.runKernel(Ic,r)}const O=D({mul_:$3});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function C3(t){const e=I(t,"x","abs");if(e.dtype==="complex64"){const n={x:e};return A.runKernel(jp,n)}else{const n={x:e};return A.runKernel(Pp,n)}}const Dt=D({abs_:C3});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function N3(t){const n={x:I(t,"x","acos")};return A.runKernel(Zu,n)}const qN=D({acos_:N3});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function I3(t){const n={x:I(t,"x","acosh")};return A.runKernel(Ju,n)}const XN=D({acosh_:I3});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function T3(t){C(Array.isArray(t),()=>"The argument passed to tf.addN() must be a list of tensors"),C(t.length>=1,()=>`Must pass at least one tensor to tf.addN(), but got ${t.length}`);const e=t.map((r,o)=>I(r,`tensors${o}`,"addN")),n=e[0];e.forEach(r=>{if(r.dtype!==n.dtype)throw new Error("All tensors passed to tf.addN() must have the same dtype")}),e.forEach(r=>{if(!Me(r.shape,n.shape))throw new Error("All tensors passed to tf.addN() must have the same shape")});const s=e;return A.runKernel(zp,s)}const E3=D({addN_:T3});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function R3(t,e=null,n=!1){const r={x:I(t,"x","all","bool")},o={axis:e,keepDims:n};return A.runKernel(k1,r,o)}const Ax=D({all_:R3});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function D3(t,e=null,n=!1){const r={x:I(t,"x","any","bool")},o={axis:e,keepDims:n};return A.runKernel($1,r,o)}const Qd=D({any_:D3});/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function A3(t,e=0){const s={x:I(t,"x","argMax")},r={axis:e};return A.runKernel(Mp,s,r)}const el=D({argMax_:A3});/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _3(t,e=0){const s={x:I(t,"x","argMin")},r={axis:e};return A.runKernel(Bp,s,r)}const YN=D({argMin_:_3});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function O3(t){const n={x:I(t,"x","asin")};return A.runKernel(ec,n)}const QN=D({asin_:O3});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function F3(t){const n={x:I(t,"x","asinh")};return A.runKernel(tc,n)}const ZN=D({asinh_:F3});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function L3(t){const n={x:I(t,"x","atan")};return A.runKernel(nc,n)}const JN=D({atan_:L3});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function P3(t,e){let n=I(t,"a","atan2"),s=I(e,"b","atan2");[n,s]=vt(n,s);const r={a:n,b:s};return A.runKernel(rc,r)}const eI=D({atan2_:P3});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function z3(t){const n={x:I(t,"x","atanh")};return A.runKernel(sc,n)}const tI=D({atanh_:z3});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function qc(t,e,n,s,r="NHWC",o){const a=t[3],i=[...e,a],l=so(r);return Kt(t,i,n,o,s,null,null,l)}function Ws(t,e,n,s,r,o,a="channelsLast"){const[i,l]=Du(e);let u;if(a==="channelsLast")u=[i,l,t[3],t[3]];else if(a==="channelsFirst")u=[i,l,t[1],t[1]];else throw new Error(`Unknown dataFormat ${a}`);return Kt(t,u,n,s,r,o,!1,a)}function no(t,e,n,s,r,o,a="NDHWC"){const[i,l,u]=Hy(e);let c,h;if(a==="NDHWC")h="channelsLast",c=[i,l,u,t[4],t[4]];else if(a==="NCDHW")h="channelsFirst",c=[i,l,u,t[1],t[1]];else throw new Error(`Unknown dataFormat ${a}`);return Yo(t,c,n,s,r,!1,h,o)}function Kt(t,e,n,s,r,o,a=!1,i="channelsLast"){let[l,u,c,h]=[-1,-1,-1,-1];if(i==="channelsLast")[l,u,c,h]=t;else if(i==="channelsFirst")[l,h,u,c]=t;else throw new Error(`Unknown dataFormat ${i}`);const[d,p,,f]=e,[m,y]=Du(n),[g,x]=Du(s),w=zi(d,g),b=zi(p,x),{padInfo:v,outHeight:k,outWidth:$}=V3(r,u,c,m,y,w,b,o,i),N=a?f*h:f;let E;return i==="channelsFirst"?E=[l,N,k,$]:i==="channelsLast"&&(E=[l,k,$,N]),{batchSize:l,dataFormat:i,inHeight:u,inWidth:c,inChannels:h,outHeight:k,outWidth:$,outChannels:N,padInfo:v,strideHeight:m,strideWidth:y,filterHeight:d,filterWidth:p,effectiveFilterHeight:w,effectiveFilterWidth:b,dilationHeight:g,dilationWidth:x,inShape:t,outShape:E,filterShape:e}}function Yo(t,e,n,s,r,o=!1,a="channelsLast",i){let[l,u,c,h,d]=[-1,-1,-1,-1,-1];if(a==="channelsLast")[l,u,c,h,d]=t;else if(a==="channelsFirst")[l,d,u,c,h]=t;else throw new Error(`Unknown dataFormat ${a}`);const[p,f,m,,y]=e,[g,x,w]=Hy(n),[b,v,k]=Hy(s),$=zi(p,b),N=zi(f,v),E=zi(m,k),{padInfo:T,outDepth:R,outHeight:z,outWidth:P}=W3(r,u,c,h,g,x,w,$,N,E,i),W=o?y*d:y;let M;return a==="channelsFirst"?M=[l,W,R,z,P]:a==="channelsLast"&&(M=[l,R,z,P,W]),{batchSize:l,dataFormat:a,inDepth:u,inHeight:c,inWidth:h,inChannels:d,outDepth:R,outHeight:z,outWidth:P,outChannels:W,padInfo:T,strideDepth:g,strideHeight:x,strideWidth:w,filterDepth:p,filterHeight:f,filterWidth:m,effectiveFilterDepth:$,effectiveFilterHeight:N,effectiveFilterWidth:E,dilationDepth:b,dilationHeight:v,dilationWidth:k,inShape:t,outShape:M,filterShape:e}}function M3(t,e,n,s,r){s==null&&(s=_x(t,e,n));const o=t[0],a=t[1],i=Au((o-e+2*s)/n+1,r),l=Au((a-e+2*s)/n+1,r);return[i,l]}function B3(t,e,n,s,r,o){r==null&&(r=_x(t,e[0],s[0]));const a=[0,0,0,n];for(let i=0;i<3;i++)t[i]+2*r>=e[i]&&(a[i]=Au((t[i]-e[i]+2*r)/s[i]+1,o));return a}function _x(t,e,n,s=1){const r=zi(e,s);return Math.floor((t[0]*(n-1)-n+r)/2)}function Du(t){return typeof t=="number"?[t,t,t]:t.length===2?[t[0],t[1],1]:t}function Hy(t){return typeof t=="number"?[t,t,t]:t}function zi(t,e){return e<=1?t:t+(t-1)*(e-1)}function V3(t,e,n,s,r,o,a,i,l){let u,c,h;if(typeof t=="number"){u={top:t,bottom:t,left:t,right:t,type:t===0?"VALID":"NUMBER"};const p=M3([e,n],o,s,t,i);c=p[0],h=p[1]}else if(t==="same"){c=Math.ceil(e/s),h=Math.ceil(n/r);const d=Math.max(0,(c-1)*s+o-e),p=Math.max(0,(h-1)*r+a-n),f=Math.floor(d/2),m=d-f,y=Math.floor(p/2),g=p-y;u={top:f,bottom:m,left:y,right:g,type:"SAME"}}else if(t==="valid")u={top:0,bottom:0,left:0,right:0,type:"VALID"},c=Math.ceil((e-o+1)/s),h=Math.ceil((n-a+1)/r);else if(typeof t=="object"){const d=l==="channelsLast"?t[1][0]:t[2][0],p=l==="channelsLast"?t[1][1]:t[2][1],f=l==="channelsLast"?t[2][0]:t[3][0],m=l==="channelsLast"?t[2][1]:t[3][1];u={top:d,bottom:p,left:f,right:m,type:d===0&&p===0&&f===0&&m===0?"VALID":"EXPLICIT"},c=Au((e-o+d+p)/s+1,i),h=Au((n-a+f+m)/r+1,i)}else throw Error(`Unknown padding parameter: ${t}`);return{padInfo:u,outHeight:c,outWidth:h}}function W3(t,e,n,s,r,o,a,i,l,u,c){let h,d,p,f;if(t==="valid"&&(t=0),typeof t=="number"){h={top:t,bottom:t,left:t,right:t,front:t,back:t,type:t===0?"VALID":"NUMBER"};const y=B3([e,n,s,1],[i,l,u],1,[r,o,a],t,c);d=y[0],p=y[1],f=y[2]}else if(t==="same"){d=Math.ceil(e/r),p=Math.ceil(n/o),f=Math.ceil(s/a);const m=(d-1)*r+i-e,y=(p-1)*o+l-n,g=(f-1)*a+u-s,x=Math.floor(m/2),w=m-x,b=Math.floor(y/2),v=y-b,k=Math.floor(g/2),$=g-k;h={top:b,bottom:v,left:k,right:$,front:x,back:w,type:"SAME"}}else throw Error(`Unknown padding parameter: ${t}`);return{padInfo:h,outDepth:d,outHeight:p,outWidth:f}}function Au(t,e){if(!e)return Math.trunc(t);switch(e){case"round":return Math.round(t);case"ceil":return Math.ceil(t);case"floor":return Math.floor(t);default:throw new Error(`Unknown roundingMode ${e}`)}}function Fo(t){const[e,n,s]=Du(t);return e===1&&n===1&&s===1}function tn(t,e){return Fo(t)||Fo(e)}function _a(t){return Du(t).every(e=>e>0)}function so(t){if(t==="NHWC")return"channelsLast";if(t==="NCHW")return"channelsFirst";throw new Error(`Unknown dataFormat ${t}`)}function Cn(t,e,n){if(n!=null){if(typeof e=="string")throw Error(`Error in ${t}: pad must be an integer when using dimRoundingMode ${n} but got pad ${e}.`);if(typeof e=="number")C(Qi(e),()=>`Error in ${t}: pad must be an integer when using dimRoundingMode ${n} but got pad ${e}.`);else if(typeof e=="object")e.forEach(s=>{s.forEach(r=>{C(Qi(r),()=>`Error in ${t}: pad must be an integer when using dimRoundingMode ${n} but got pad ${r}.`)})});else throw Error(`Error in ${t}: Unknown padding parameter: ${e}`)}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function U3(t,e){const s={x:I(t,"x","reshape","string_or_numeric")},r={shape:e};return A.runKernel(If,s,r)}const F=D({reshape_:U3});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function G3(t,e,n,s,r){const o=I(t,"x","avgPool","float32"),a=1;C(tn(n,a),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${n} and dilations '${a}'`);let i=o,l=!1;o.rank===3&&(l=!0,i=F(o,[1,o.shape[0],o.shape[1],o.shape[2]])),C(i.rank===4,()=>`Error in avgPool: x must be rank 4 but got rank ${i.rank}.`),Cn("avgPool",s,r);const u={x:i},c={filterSize:e,strides:n,pad:s,dimRoundingMode:r};let h=A.runKernel(Vp,u,c);return h=he(h,o.dtype),l?F(h,[h.shape[1],h.shape[2],h.shape[3]]):h}const Wf=D({avgPool_:G3});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function H3(t,e,n,s,r,o="NDHWC"){const a=I(t,"x","avgPool3d","float32");let i=a,l=!1;a.rank===4&&(l=!0,i=F(a,[1,a.shape[0],a.shape[1],a.shape[2],a.shape[3]])),C(i.rank===5,()=>`Error in avgPool3d: x must be rank 5 but got rank ${i.rank}.`),C(o==="NDHWC",()=>`Error in avgPool3d: Only NDHWC is currently supported, but got dataFormat of ${o}`),C(typeof n=="number"&&n>0||Array.isArray(n)&&n[0]>0&&n[1]>0&&n[2]>0,()=>`Error in avgPool3d: Stride must be > 0, but got '${n}'`),Cn("avgPool3d",s,r);const u={x:i},c={filterSize:e,strides:n,pad:s,dimRoundingMode:r,dataFormat:o};let h=A.runKernel(Wp,u,c);return h=he(h,i.dtype),l?F(h,[h.shape[1],h.shape[2],h.shape[3],h.shape[4]]):h}const nI=D({avgPool3d_:H3});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function j3(t,e=0){C(t.length>=1,()=>"Pass at least one tensor to concat");const n=Xd(t,"tensors","concat","string_or_numeric");if(n[0].dtype==="complex64"&&n.forEach(o=>{if(o.dtype!=="complex64")throw new Error(`Cannot concatenate complex64 tensors with a tensor
          with dtype ${o.dtype}. `)}),n.length===1)return Hr(n[0]);const s=n,r={axis:e};return A.runKernel(Kp,s,r)}const Rt=D({concat_:j3});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function K3(t,e,n=!1,s=!1){let r=I(t,"a","matMul"),o=I(e,"b","matMul");[r,o]=vt(r,o);const a={a:r,b:o},i={transposeA:n,transposeB:s};return A.runKernel(Up,a,i)}const Pe=D({matMul_:K3});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function q3(t){const n={x:I(t,"x","sigmoid","float32")};return A.runKernel(zc,n)}const Nr=D({sigmoid_:q3});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function X3(t,e,n){const s=I(t,"x","slice","string_or_numeric");if(s.rank===0)throw new Error("Slicing scalar is not possible");const r={x:s},o={begin:e,size:n};return A.runKernel(Af,r,o)}const Ve=D({slice_:X3});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Y3(t){const n={x:I(t,"x","tanh","float32")};return A.runKernel(Gc,n)}const tl=D({tanh_:Y3});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Q3(t,e,n,s,r,o){const a=I(t,"forgetBias","basicLSTMCell"),i=I(e,"lstmKernel","basicLSTMCell"),l=I(n,"lstmBias","basicLSTMCell"),u=I(s,"data","basicLSTMCell"),c=I(r,"c","basicLSTMCell"),h=I(o,"h","basicLSTMCell"),d=Rt([u,h],1),p=Pe(d,i),f=te(p,l),m=f.shape[0],y=f.shape[1]/4,g=[m,y],x=Ve(f,[0,0],g),w=Ve(f,[0,y],g),b=Ve(f,[0,y*2],g),v=Ve(f,[0,y*3],g),k=te(O(Nr(x),tl(w)),O(c,Nr(te(a,b)))),$=O(tl(k),Nr(v));return[k,$]}const Z3=D({basicLSTMCell_:Q3});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function J3(t,e,n){const s=I(t,"x","batchToSpaceND"),r=e.reduce((i,l)=>i*l);C(s.rank>=1+e.length,()=>`input rank is ${s.rank} but should be > than blockShape.length ${e.length}`),C(n.length===e.length,()=>`crops.length is ${n.length} but should be equal to blockShape.length  ${e.length}`),C(s.shape[0]%r===0,()=>`input tensor batch is ${s.shape[0]} but is not divisible by the product of the elements of blockShape ${e.join(" * ")} === ${r}`);const o={x:s},a={blockShape:e,crops:n};return A.runKernel(Gp,o,a)}const Uf=D({batchToSpaceND_:J3});function eL(t){let e;return t.rank===0||t.rank===1?e=F(t,[1,1,1,t.size]):t.rank===2?e=F(t,[1,1,t.shape[0],t.shape[1]]):t.rank===3?e=F(t,[1,t.shape[0],t.shape[1],t.shape[2]]):e=t,e}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tL(t,e,n,s,r,o){o==null&&(o=.001);const a=I(t,"x","batchNorm"),i=I(e,"mean","batchNorm"),l=I(n,"variance","batchNorm");let u;r!=null&&(u=I(r,"scale","batchNorm"));let c;s!=null&&(c=I(s,"offset","batchNorm")),C(i.rank===l.rank,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),C(c==null||i.rank===c.rank,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),C(u==null||i.rank===u.rank,()=>"Batch normalization gradient requires mean and scale to have equal ranks.");const d={x:eL(a),scale:u,offset:c,mean:i,variance:l},p={varianceEpsilon:o},f=A.runKernel(nf,d,p);return F(f,a.shape)}const Xc=D({batchNorm_:tL});function nL(t,e,n,s,r,o){const a=I(t,"x","batchNorm"),i=I(e,"mean","batchNorm"),l=I(n,"variance","batchNorm");let u;r!=null&&(u=I(r,"scale","batchNorm"));let c;return s!=null&&(c=I(s,"offset","batchNorm")),C(a.rank===2,()=>`Error in batchNorm2D: x must be rank 2 but got rank ${a.rank}.`),C(i.rank===2||i.rank===1,()=>`Error in batchNorm2D: mean must be rank 2 or rank 1 but got rank ${i.rank}.`),C(l.rank===2||l.rank===1,()=>`Error in batchNorm2D: variance must be rank 2 or rank 1 but got rank ${l.rank}.`),u!=null&&C(u.rank===2||u.rank===1,()=>`Error in batchNorm2D: scale must be rank 2 or rank 1 but got rank ${u.rank}.`),c!=null&&C(c.rank===2||c.rank===1,()=>`Error in batchNorm2D: offset must be rank 2 or rank 1 but got rank ${c.rank}.`),Xc(a,i,l,c,u,o)}const sI=D({batchNorm2d_:nL});function sL(t,e,n,s,r,o){const a=I(t,"x","batchNorm"),i=I(e,"mean","batchNorm"),l=I(n,"variance","batchNorm");let u;r!=null&&(u=I(r,"scale","batchNorm"));let c;return s!=null&&(c=I(s,"offset","batchNorm")),C(a.rank===3,()=>`Error in batchNorm3D: x must be rank 3 but got rank ${a.rank}.`),C(i.rank===3||i.rank===1,()=>`Error in batchNorm3D: mean must be rank 3 or rank 1 but got rank ${i.rank}.`),C(l.rank===3||l.rank===1,()=>`Error in batchNorm3D: variance must be rank 3 or rank 1 but got rank ${l.rank}.`),u!=null&&C(u.rank===3||u.rank===1,()=>`Error in batchNorm3D: scale must be rank 3 or rank 1 but got rank ${u.rank}.`),c!=null&&C(c.rank===3||c.rank===1,()=>`Error in batchNorm3D: offset must be rank 3 or rank 1 but got rank ${c.rank}.`),Xc(a,i,l,c,u,o)}const rI=D({batchNorm3d_:sL});function rL(t,e,n,s,r,o){const a=I(t,"x","batchNorm"),i=I(e,"mean","batchNorm"),l=I(n,"variance","batchNorm");let u;r!=null&&(u=I(r,"scale","batchNorm"));let c;return s!=null&&(c=I(s,"offset","batchNorm")),C(a.rank===4,()=>`Error in batchNorm4D: x must be rank 4 but got rank ${a.rank}.`),C(i.rank===4||i.rank===1,()=>`Error in batchNorm4D: mean must be rank 4 or rank 1 but got rank ${i.rank}.`),C(l.rank===4||l.rank===1,()=>`Error in batchNorm4D: variance must be rank 4 or rank 1 but got rank ${l.rank}.`),u!=null&&C(u.rank===4||u.rank===1,()=>`Error in batchNorm4D: scale must be rank 4 or rank 1 but got rank ${u.rank}.`),c!=null&&C(c.rank===4||c.rank===1,()=>`Error in batchNorm4D: offset must be rank 4 or rank 1 but got rank ${c.rank}.`),Xc(a,i,l,c,u,o)}const oI=D({batchNorm4d_:rL});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function oL(t,e,n){const s=I(t,"x","bincount"),r=I(e,"weights","bincount");C(s.dtype==="int32",()=>`Error in bincount: input dtype must be int32, but got ${s.dtype}`),C(n>=0,()=>`size must be non-negative, but got ${n}.`),C(r.size===s.size||r.size===0,()=>`Error in bincount: weights must have the same size as input or0-length, but got input shape: ${s.shape}, weights shape: ${r.shape}.`);const o={x:s,weights:r},a={size:n};return A.runKernel(I1,o,a)}const aI=D({bincount_:oL});/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function aL(t,e){const n=I(t,"x","bitwiseAnd"),s=I(e,"y","bitwiseAnd");if(!Me(n.shape,s.shape))throw new Error(`BitwiseAnd: Tensors must have the same shape. x: ${n.shape}, y: ${s.shape}`);if(n.dtype!=="int32"||s.dtype!=="int32")throw new Error(`BitwiseAnd: Only supports 'int32' values in tensor, found type of x: ${n.dtype} and type of y: ${s.dtype}`);const r={a:n,b:s};return A.runKernel(Hp,r)}const iL=D({bitwiseAnd_:aL});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function lL(t,e){const n=I(t,"s0","broadcastArgs","int32"),s=I(e,"s1","broadcastArgs","int32");if(n.rank!==1)throw new Error(`broadcastArgs(): first input must be a vector (rank=1). Has rank ${n.rank}`);if(s.rank!==1)throw new Error(`broadcastArgs(): second input must be a vector (rank=1). Has rank ${s.rank}`);const r={s0:n,s1:s};return A.runKernel(T1,r)}const uL=D({broadcastArgs_:lL});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function cL(t,e){let n=I(t,"broadcastTo","x");const s=n.shape;if(ms(e),e.length<n.rank)throw new Error(`broadcastTo(): shape.length=${e.length} < input.rank=${n.rank}.`);if(e.length>n.rank){const u=n.shape.slice();for(;u.length<e.length;)u.unshift(1);n=F(n,u)}const r=n.shape,o=Array.from(e);for(let u=e.length-1;u>=0;u--)if(r[u]===e[u])o[u]=1;else if(n.shape[u]!==1)throw new Error(`broadcastTo(): [${s}] cannot be broadcast to [${e}].`);if(o.map((u,c)=>u>1?c:-1).filter(u=>u>=0).length===0)return Hr(n);const i={x:n},l={reps:o};return A.runKernel(Hc,i,l)}const Mi=D({broadcastTo_:cL});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function hL(t){const n={x:I(t,"x","ceil","float32")};return A.runKernel(ac,n)}const iI=D({ceil_:hL});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function bl(t,e,n){ms(t),n=n||gl(e);const s={shape:t,value:e,dtype:n};return A.runKernel(U1,{},s)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function dL(t,e,n){const s=I(t,"x","clipByValue");if(C(e<=n,()=>`Error in clip: min (${e}) must be less than or equal to max (${n}).`),e===n)return bl(s.shape,e,s.dtype);const r={x:s},o={clipValueMin:e,clipValueMax:n};return A.runKernel(ic,r,o)}const Yn=D({clipByValue_:dL});function pL(t){return Rt(t,0)}const lI=D({concat1d_:pL});function fL(t,e){return Rt(t,e)}const uI=D({concat2d_:fL});function mL(t,e){return Rt(t,e)}const cI=D({concat3d_:mL});function gL(t,e){return Rt(t,e)}const hI=D({concat4d_:gL});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function yL(t,e,n,s,r="NHWC",o=[1,1],a){const i=I(t,"x","conv2d","float32"),l=I(e,"filter","conv2d","float32");let u=i,c=!1;i.rank===3&&(c=!0,u=F(i,[1,i.shape[0],i.shape[1],i.shape[2]])),C(u.rank===4,()=>`Error in conv2d: input must be rank 4, but got rank ${u.rank}.`),C(l.rank===4,()=>`Error in conv2d: filter must be rank 4, but got rank ${l.rank}.`),Cn("conv2d",s,a);const h=r==="NHWC"?u.shape[3]:u.shape[1];C(h===l.shape[2],()=>`Error in conv2d: depth of input (${h}) must match input depth for filter ${l.shape[2]}.`),C(tn(n,o),()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${n} and dilations '${o}'`),C(_a(o),()=>"Error in conv2D: Dilated rates should be larger than 0."),C(_a(n),()=>"Error in conv2D: Strides should be larger than 0.");const d={x:u,filter:l},p={strides:n,pad:s,dataFormat:r,dilations:o,dimRoundingMode:a},f=A.runKernel(qp,d,p);return c?F(f,[f.shape[1],f.shape[2],f.shape[3]]):f}const Lo=D({conv2d_:yL});function xL(t,e,n,s,r="NWC",o=1,a){const i=I(t,"x","conv1d"),l=I(e,"filter","conv1d");let u=i,c=!1;i.rank===2&&(c=!0,u=F(i,[1,i.shape[0],i.shape[1]])),C(u.rank===3,()=>`Error in conv1d: input must be rank 3, but got rank ${u.rank}.`),C(l.rank===3,()=>`Error in conv1d: filter must be rank 3, but got rank ${l.rank}.`),Cn("conv1d",s,a),C(u.shape[2]===l.shape[1],()=>`Error in conv1d: depth of input (${u.shape[2]}) must match input depth for filter ${l.shape[1]}.`),C(tn(n,o),()=>`Error in conv1D: Either stride or dilation must be 1. Got stride ${n} and dilation '${o}'`),C(_a(o),()=>"Error in conv1D: Dilated rates should be larger than 0."),C(_a(n),()=>"Error in conv1D: Stride should be larger than 0."),C(r==="NWC",()=>`Error in conv1d: got dataFormat of ${r} but only NWC is currently supported.`);const h=F(l,[1,l.shape[0],l.shape[1],l.shape[2]]),d=F(u,[u.shape[0],1,u.shape[1],u.shape[2]]),y=Lo(d,h,[1,n],s,"NHWC",[1,o],a);return c?F(y,[y.shape[2],y.shape[3]]):F(y,[y.shape[0],y.shape[2],y.shape[3]])}const Ox=D({conv1d_:xL});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function bL(t,e,n,s,r,o="NHWC",a){C(t.length===e.rank,()=>`Length of inShape (${t.length}) and rank of dy (${e.rank}) must match`);let i=t,l=e,u=!1;e.rank===3&&(u=!0,l=F(e,[1,e.shape[0],e.shape[1],e.shape[2]]),i=[1,t[0],t[1],t[2]]),C(i.length===4,()=>`Error in conv2dDerInput: inShape must be length 4, but got length ${i.length}.`),C(l.rank===4,()=>`Error in conv2dDerInput: dy must be rank 4, but got rank ${l.rank}`),C(n.rank===4,()=>`Error in conv2dDerInput: filter must be rank 4, but got rank ${n.rank}`);const c=o==="NHWC"?i[3]:i[1],h=o==="NHWC"?l.shape[3]:l.shape[1];C(c===n.shape[2],()=>`Error in conv2dDerInput: depth of input (${c}) must match input depth for filter ${n.shape[2]}.`),C(h===n.shape[3],()=>`Error in conv2dDerInput: depth of output (${h}) must match output depth for filter ${n.shape[3]}.`),Cn("conv2dDerInput",r,a);const d={dy:l,filter:n},p={strides:s,pad:r,dataFormat:o,dimRoundingMode:a,inputShape:i},f=A.runKernel(Xp,d,p);return u?F(f,[f.shape[1],f.shape[2],f.shape[3]]):f}const Fx=D({conv2DBackpropInput_:bL});function wL(t,e,n,s,r,o){const a=I(t,"x","conv2dTranspose"),i=I(e,"filter","conv2dTranspose");return Fx(n,a,i,s,r,"NHWC",o)}const Lx=D({conv2dTranspose_:wL});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function vL(t,e,n,s,r="NDHWC",o=[1,1,1]){const a=I(t,"x","conv3d"),i=I(e,"filter","conv3d");let l=a,u=!1;a.rank===4&&(u=!0,l=F(a,[1,a.shape[0],a.shape[1],a.shape[2],a.shape[3]])),C(l.rank===5,()=>`Error in conv3d: input must be rank 5, but got rank ${l.rank}.`),C(i.rank===5,()=>`Error in conv3d: filter must be rank 5, but got rank ${i.rank}.`),C(l.shape[4]===i.shape[3],()=>`Error in conv3d: depth of input (${l.shape[4]}) must match input depth for filter ${i.shape[3]}.`),C(tn(n,o),()=>`Error in conv3D: Either strides or dilations must be 1. Got strides ${n} and dilations '${o}'`),C(r==="NDHWC",()=>`Error in conv3d: got dataFormat of ${r} but only NDHWC is currently supported.`),C(_a(o),()=>"Error in conv3D: Dilated rates should be larger than 0."),C(_a(n),()=>"Error in conv3D: Strides should be larger than 0.");const c={x:l,filter:i},h={strides:n,pad:s,dataFormat:r,dilations:o},d=A.runKernel(Yp,c,h);return u?F(d,[d.shape[1],d.shape[2],d.shape[3],d.shape[4]]):d}const dI=D({conv3d_:vL});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function SL(t,e,n,s,r){C(t.length===e.rank,()=>`Length of inShape (${t.length}) and rank of dy (${e.rank}) must match`);let o=t,a=e,i=!1;e.rank===4&&(i=!0,a=F(e,[1,e.shape[0],e.shape[1],e.shape[2],e.shape[3]]),o=[1,t[0],t[1],t[2],t[3]]);const l=o[4],u=a.shape[4];C(o.length===5,()=>`Error in conv3dDerInput: inShape must be length 5, but got length ${o.length}.`),C(a.rank===5,()=>`Error in conv3dDerInput: dy must be rank 5, but got rank ${a.rank}`),C(n.rank===5,()=>`Error in conv3dDerInput: filter must be rank 5, but got rank ${n.rank}`),C(l===n.shape[3],()=>`Error in conv3dDerInput: depth of input (${l}) must match input depth for filter ${n.shape[3]}.`),C(u===n.shape[4],()=>`Error in conv3dDerInput: depth of output (${u}) must match output depth for filter ${n.shape[4]}.`);const c={dy:a,filter:n},h={pad:r,strides:s,inputShape:o},d=A.runKernel(A1,c,h);return i?F(d,[d.shape[1],d.shape[2],d.shape[3],d.shape[4]]):d}const pI=D({conv3DBackpropInput_:SL});function kL(t,e,n,s,r){const o=I(t,"x","conv3dTranspose"),a=I(e,"filter","conv3dTranspose");return pI(n,o,a,s,r)}const fI=D({conv3dTranspose_:kL});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $L(t){const n={x:I(t,"x","cos","float32")};return A.runKernel(lc,n)}const Gf=D({cos_:$L});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function CL(t){const n={x:I(t,"x","cosh","float32")};return A.runKernel(uc,n)}const Px=D({cosh_:CL});/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the 'License');
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an 'AS IS' BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function NL(t,e=0,n=!1,s=!1){const o={x:I(t,"x","cumprod")},a={axis:e,exclusive:n,reverse:s};return A.runKernel(_1,o,a)}const Zd=D({cumprod_:NL});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function IL(t,e=0,n=!1,s=!1){const o={x:I(t,"x","cumsum")},a={axis:e,exclusive:n,reverse:s};return A.runKernel(Qp,o,a)}const zx=D({cumsum_:IL});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function TL(t,e,n,s=!1){const r=I(t,"x","denseBincount"),o=I(e,"weights","denseBincount");C(r.dtype==="int32",()=>`Error in denseBincount: input dtype must be int32, but got ${r.dtype}`),C(r.rank<=2,()=>`Error in denseBincount: input must be at most rank 2, but got rank ${r.rank}.`),C(n>=0,()=>`size must be non-negative, but got ${n}.`),C(o.size===r.size||o.size===0,()=>`Error in denseBincount: weights must have the same shape as x or 0-length, but got x shape: ${r.shape}, weights shape: ${o.shape}.`);const a={x:r,weights:o},i={size:n,binaryOutput:s};return A.runKernel(F1,a,i)}const jy=D({denseBincount_:TL});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function EL(t,e,n="NHWC"){const s=I(t,"x","depthToSpace","float32"),r=n==="NHWC"?s.shape[1]:s.shape[2],o=n==="NHWC"?s.shape[2]:s.shape[3],a=n==="NHWC"?s.shape[3]:s.shape[1];C(e>1,()=>`blockSize should be > 1 for depthToSpace, but was: ${e}`),C(r*e>=0,()=>`Negative dimension size caused by overflow when multiplying
    ${r} and ${e}  for depthToSpace with input shape
    ${s.shape}`),C(o*e>=0,()=>`Negative dimension size caused by overflow when multiplying
    ${o} and ${e} for depthToSpace with input shape
        ${s.shape}`),C(a%(e*e)===0,()=>`Dimension size must be evenly divisible by ${e*e} but is ${a} for depthToSpace with input shape ${s.shape}`);const i={x:s},l={blockSize:e,dataFormat:n};return A.runKernel(L1,i,l)}const mI=D({depthToSpace_:EL});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function RL(t,e,n,s,r="NHWC",o=[1,1],a){const i=I(t,"x","depthwiseConv2d","float32"),l=I(e,"filter","depthwiseConv2d","float32");let u=i,c=!1;i.rank===3&&(c=!0,u=F(i,[1,i.shape[0],i.shape[1],i.shape[2]])),C(u.rank===4,()=>`Error in depthwiseConv2d: input must be rank 4, but got rank ${u.rank}.`),C(l.rank===4,()=>`Error in depthwiseConv2d: filter must be rank 4, but got rank ${l.rank}.`);const h=r==="NHWC"?u.shape[3]:u.shape[1];C(h===l.shape[2],()=>`Error in depthwiseConv2d: number of input channels (${h}) must match the inChannels dimension in filter ${l.shape[2]}.`),Cn("depthwiseConv2d",s,a);const d={x:u,filter:l},p={strides:n,pad:s,dataFormat:r,dilations:o,dimRoundingMode:a},f=A.runKernel(Zp,d,p);return c?F(f,[f.shape[1],f.shape[2],f.shape[3]]):f}const Yc=D({depthwiseConv2d_:RL});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function DL(t){const n={x:I(t,"x","diag")};return A.runKernel(M1,n)}const AL=D({diag_:DL});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _L(t,e,n,s,r=[1,1],o="NHWC"){const a=I(t,"x","dilation2d"),i=I(e,"filter","dilation2d");C(a.rank===3||a.rank===4,()=>`Error in dilation2d: input must be rank 3 or 4, but got rank ${a.rank}.`),C(i.rank===3,()=>`Error in dilation2d: filter must be rank 3, but got rank ${i.rank}.`),C(o==="NHWC",()=>`Error in dilation2d: Only NHWC is currently supported, but got dataFormat of ${o}`);let l=a,u=!1;a.rank===3&&(l=F(a,[1,a.shape[0],a.shape[1],a.shape[2]]),u=!0),C(l.shape[3]===i.shape[2],()=>`Error in dilation2d:  input and filter must have the same depth: ${l.shape[3]} vs ${i.shape[2]}`);const c={x:l,filter:i},h={strides:n,pad:s,dilations:r},d=A.runKernel(Jp,c,h);return u?F(d,[d.shape[1],d.shape[2],d.shape[3]]):d}const gI=D({dilation2d_:_L});/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function nl(t,e){const n=t.length,s=[];for(let r=0;r<n;r++){const o=n-1-r,a=t[o]||1;(e[e.length-1-r]||1)>1&&a===1&&s.unshift(o)}return s}function Bt(t,e){const n=[];for(let s=0;s<e.length;s++){const r=t[t.length-s-1],o=e.length-s-1,a=e[o];(r==null||r===1&&a>1)&&n.unshift(o)}return n}function Re(t,e){const n=Math.max(t.length,e.length),s=new Array(n);for(let r=0;r<n;r++){let o=t[t.length-r-1];o==null&&(o=1);let a=e[e.length-r-1];if(a==null&&(a=1),o===1)s[n-r-1]=a;else if(a===1)s[n-r-1]=o;else if(o!==a){const i=`Operands could not be broadcast together with shapes ${t} and ${e}.`;throw Error(i)}else s[n-r-1]=o}return s}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function OL(t,e){let n=I(t,"a","equal","string_or_numeric"),s=I(e,"b","equal","string_or_numeric");[n,s]=vt(n,s),Re(n.shape,s.shape);const r={a:n,b:s};return A.runKernel(ef,r)}const or=D({equal_:OL});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function FL(t,e,n){const s=I(e,"a","where"),r=I(n,"b","where"),o=I(t,"condition","where","bool"),a=Re(Re(o.shape,s.shape),r.shape),i=Mi(o,a),l=Mi(s,a),u=Mi(r,a),c={condition:i,t:l,e:u};return A.runKernel(Df,c)}const un=D({where_:FL});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function LL(t){const n={x:I(t,"x","zerosLike")};return A.runKernel(Bf,n)}const Ue=D({zerosLike_:LL});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function PL(t,e){let n=I(t,"a","div"),s=I(e,"b","div");[n,s]=vt(n,s);const r=we(n,s),o=Ue(r),a=or(s,o);return un(a,o,r)}const yI=D({divNoNan_:PL});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function zL(t,e){const n=I(t,"t1","dot"),s=I(e,"t2","dot");C((n.rank===1||n.rank===2)&&(s.rank===1||s.rank===2),()=>`Error in dot: inputs must all be rank 1 or 2, but got ranks ${n.rank} and ${s.rank}.`);const r=n.rank===1?n.size:n.shape[1],o=s.rank===1?s.size:s.shape[0];if(C(r===o,()=>`Error in dot: inner dimensions of inputs must match, but got ${r} and ${o}.`),n.rank===1&&s.rank===1){const a=F(n,[1,-1]),i=F(s,[-1,1]),l=Pe(a,i);return F(l,[])}else if(n.rank===1&&s.rank===2){const a=F(n,[1,-1]),i=F(s,[s.shape[0],s.shape[1]]),l=Pe(a,i);return F(l,[l.size])}else if(n.rank===2&&s.rank===1){const a=F(s,[-1,1]),i=Pe(n,a);return F(i,[i.size])}else{const a=F(s,[s.shape[0],s.shape[1]]);return Pe(n,a)}}const xI=D({dot_:zL});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ML(t,...e){const n=e.map((r,o)=>I(r,`tensors${o}`,"einsum")),s={equation:t};return A.runKernel(B1,n,s)}const pi=D({einsum_:ML});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function BL(t){const n={x:I(t,"x","elu","float32")};return A.runKernel(hc,n)}const Qc=D({elu_:BL});/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function VL(t,e){const n=I(t,"x","ensureShape","string_or_numeric");if(!eF(n.shape,e))throw new Error(`EnsureShape: Shape of tensor ${n.shape} is not compatible with expected shape ${e}`);return t}const WL=D({ensureShape_:VL});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function UL(t){let e=I(t,"x","erf");C(e.dtype==="int32"||e.dtype==="float32",()=>"Input dtype must be `int32` or `float32`."),e.dtype==="int32"&&(e=he(e,"float32"));const n={x:e};return A.runKernel(dc,n)}const bI=D({erf_:UL});/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Mx(t,e){for(let n=0;n<t.length;++n)if(t[t.length-n-1]!==e-1-n)return!1;return!0}function wI(t,e,n){const s=t.length+e.length,r=[];let o=0,a=0;for(let i=0;i<s;i++)n.indexOf(i)===-1?r.push(t[o++]):r.push(e[a++]);return r}function qt(t,e){const n=[],s=t.length;for(let o=0;o<s;o++)e.indexOf(o)===-1&&n.push(t[o]);const r=e.map(o=>t[o]);return[n,r]}function $t(t,e){const n=e.map(s=>1);return wI(t,n,e)}function nn(t,e,n){C(Mx(e,n),()=>`${t} supports only inner-most axes for now. Got axes ${e} and rank-${n} input.`)}function gt(t,e){if(Mx(t,e))return null;const n=[];for(let s=0;s<e;++s)t.indexOf(s)===-1&&n.push(s);return t.forEach(s=>n.push(s)),n}function Qo(t){return t.map((e,n)=>[n,e]).sort((e,n)=>e[1]-n[1]).map(e=>e[0])}function Ct(t,e){const n=[];for(let s=e-t;s<e;++s)n.push(s);return n}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function GL(t,e=null,n=!1){const r={x:I(t,"x","max")},o={reductionIndices:e,keepDims:n};return A.runKernel(pf,r,o)}const Ls=D({max_:GL});/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function HL(t,e=null,n=!1){const r={x:I(t,"x","min")},o={axis:e,keepDims:n};return A.runKernel(yf,r,o)}const _u=D({min_:HL});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function jL(t,e){let n=I(t,"base","pow"),s=I(e,"exp","pow");[n,s]=vt(n,s);const r={a:n,b:s};return A.runKernel(Tc,r)}const Po=D({pow_:jL});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Se(t,e){if((Ms(t)&&e!=="string"||Array.isArray(t))&&e!=="complex64")throw new Error("Error creating a new Scalar: value must be a primitive (number|boolean|string)");if(e==="string"&&Ms(t)&&!(t instanceof Uint8Array))throw new Error("When making a scalar from encoded string, the value must be `Uint8Array`.");return Xo(t,[],[],e)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function KL(t){const n={x:I(t,"x","sqrt","float32")};return A.runKernel(Bc,n)}const dn=D({sqrt_:KL});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function qL(t){const e=I(t,"x","square"),n={};return A.runKernel("Square",{x:e},n)}const Je=D({square_:qL});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function XL(t,e=null,n=!1){let s=I(t,"x","sum");s.dtype==="bool"&&(s=he(s,"int32"));const r={x:s},o={axis:e,keepDims:n};return A.runKernel(_f,r,o)}const ye=D({sum_:XL});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function YL(t,e="euclidean",n=null,s=!1){t=I(t,"x","norm");const r=vI(t,e,n);let o=r.shape;if(s){const a=Fe(n,t.shape);o=$t(r.shape,a)}return F(r,o)}function vI(t,e,n=null){if(t.rank===0)return Dt(t);if(t.rank!==1&&n===null)return vI(F(t,[-1]),e,n);if(t.rank===1||typeof n=="number"||Array.isArray(n)&&n.length===1){if(e===1)return ye(Dt(t),n);if(e===1/0)return Ls(Dt(t),n);if(e===-1/0)return _u(Dt(t),n);if(e==="euclidean"||e===2)return dn(ye(Po(Dt(t),Se(2,"int32")),n));throw new Error(`Error in norm: invalid ord value: ${e}`)}if(Array.isArray(n)&&n.length===2){if(e===1)return Ls(ye(Dt(t),n[0]),n[1]-1);if(e===1/0)return Ls(ye(Dt(t),n[1]),n[0]);if(e===-1/0)return _u(ye(Dt(t),n[1]),n[0]);if(e==="fro"||e==="euclidean")return dn(ye(Je(t),n));throw new Error(`Error in norm: invalid ord value: ${e}`)}throw new Error(`Error in norm: invalid axis: ${n}`)}const Zc=D({norm_:YL});/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function QL(t,e=null,n=!1){return Zc(t,"euclidean",e,n)}const SI=D({euclideanNorm_:QL});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ZL(t){const n={x:I(t,"x","exp")};return A.runKernel(pc,n)}const us=D({exp_:ZL});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function JL(t,e=0){const n=I(t,"x","expandDims","string_or_numeric");C(e<=n.rank,()=>"Axis must be <= rank of the tensor");const s={input:n},r={dim:e};return A.runKernel(tf,s,r)}const wn=D({expandDims_:JL});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function eP(t){const n={x:I(t,"x","expm1")};return A.runKernel(fc,n)}const kI=D({expm1_:eP});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tP(t,e){const n=I(t,"x","tile","string_or_numeric");C(n.rank===e.length,()=>`Error in transpose: rank of input ${n.rank} must match length of reps ${e}.`);const s={x:n},r={reps:e};return A.runKernel(Hc,s,r)}const Rs=D({tile_:tP});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function nP(t,e,n,s="float32"){e==null&&(e=t);const r=Ae([t,e],s),o=t<=e?t:e;for(let i=0;i<o;++i)r.set(1,i,i);const a=F(r.toTensor(),[t,e]);if(n==null)return a;if(n.length===1)return Rs(wn(a,0),[n[0],1,1]);if(n.length===2)return Rs(wn(wn(a,0),0),[n[0],n[1],1,1]);if(n.length===3)return Rs(wn(wn(wn(a,0),0),0),[n[0],n[1],n[2],1,1]);throw new Error(`eye() currently supports only 1D and 2D batchShapes, but received ${n.length}D.`)}const Bx=D({eye_:nP});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sP(t){const n={x:I(t,"x","floor","float32")};return A.runKernel(mc,n)}const Jc=D({floor_:sP});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function rP(t,e,n=0,s=0){const r=I(t,"x","gather"),o=I(e,"indices","gather","int32"),a={x:r,indices:o},i={axis:n,batchDims:s};return A.runKernel(sf,a,i)}const eh=D({gather_:rP});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function oP(t,e){let n=I(t,"a","greater","string_or_numeric"),s=I(e,"b","greater","string_or_numeric");[n,s]=vt(n,s),Re(n.shape,s.shape);const r={a:n,b:s};return A.runKernel(rf,r)}const ts=D({greater_:oP});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function aP(t,e){let n=I(t,"a","greaterEqual","string_or_numeric"),s=I(e,"b","greaterEqual","string_or_numeric");[n,s]=vt(n,s),Re(n.shape,s.shape);const r={a:n,b:s};return A.runKernel(yc,r)}const Zo=D({greaterEqual_:aP});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function iP(t){const n={input:I(t,"input","imag")};return A.runKernel(K1,n)}const Hf=D({imag_:iP});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function lP(t){const n={x:I(t,"x","isFinite")};return A.runKernel(bc,n)}const $I=D({isFinite_:lP});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function uP(t){const n={x:I(t,"x","isInf")};return A.runKernel(wc,n)}const CI=D({isInf_:uP});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function cP(t){const n={x:I(t,"x","isNaN")};return A.runKernel(vc,n)}const NI=D({isNaN_:cP});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function hP(t,e=.2){const s={x:I(t,"x","leakyRelu")},r={alpha:e};return A.runKernel(of,s,r)}const jf=D({leakyRelu_:hP});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function dP(t,e){let n=I(t,"a","less","string_or_numeric"),s=I(e,"b","less","string_or_numeric");[n,s]=vt(n,s),Re(n.shape,s.shape);const r={a:n,b:s};return A.runKernel(af,r)}const Ou=D({less_:dP});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pP(t,e){let n=I(t,"a","lessEqual","string_or_numeric"),s=I(e,"b","lessEqual","string_or_numeric");[n,s]=vt(n,s),Re(n.shape,s.shape);const r={a:n,b:s};return A.runKernel(lf,r)}const Ka=D({lessEqual_:pP});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fP(t,e,n){if(n<=0)throw new Error("The number of values should be positive.");const s={start:t,stop:e,num:n};return A.runKernel(q1,{},s)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function mP(t,e=5,n=1,s=1,r=.5){const o=I(t,"x","localResponseNormalization");C(o.rank===4||o.rank===3,()=>`Error in localResponseNormalization: x must be rank 3 or 4 but got
               rank ${o.rank}.`),C(Qi(e),()=>`Error in localResponseNormalization: depthRadius must be an integer but got depthRadius ${e}.`);let a=o,i=!1;o.rank===3&&(i=!0,a=F(o,[1,o.shape[0],o.shape[1],o.shape[2]]));const l={x:a},u={depthRadius:e,bias:n,alpha:s,beta:r},c=A.runKernel(df,l,u);return i?F(c,[c.shape[1],c.shape[2],c.shape[3]]):c}const II=D({localResponseNormalization_:mP});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gP(t){const n={x:I(t,"x","log","float32")};return A.runKernel(Sc,n)}const cs=D({log_:gP});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function yP(t){const n={x:I(t,"x","log1p")};return A.runKernel(kc,n)}const Kf=D({log1p_:yP});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function xP(t,e){C(Ty(t),()=>"The f passed in variableGrads(f) must be a function"),C(e==null||Array.isArray(e)&&e.every(u=>u instanceof qd),()=>"The varList passed in variableGrads(f, varList) must be an array of variables");const n=e!=null;if(!n){e=[];for(const u in A.registeredVariables)e.push(A.registeredVariables[u])}const s=n?e.filter(u=>!u.trainable):null,r=e.length;e=e.filter(u=>u.trainable),C(e.length>0,()=>`variableGrads() expects at least one of the input variables to be trainable, but none of the ${r} variables is trainable.`);const o=!0,{value:a,grads:i}=A.gradients(t,e,null,o);C(i.some(u=>u!=null),()=>"Cannot find a connection between any variable and the result of the loss function y=f(x). Please make sure the operations that use variables are inside the function f passed to minimize()."),C(a.rank===0,()=>`The f passed in variableGrads(f) must return a scalar, but it returned a rank-${a.rank} tensor`);const l={};return e.forEach((u,c)=>{i[c]!=null&&(l[u.name]=i[c])}),s!=null&&s.forEach(u=>l[u.name]=null),{value:a,grads:l}}function Zr(t){return A.customGrad(t)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function bP(t){const n={x:I(t,"x","neg")};return A.runKernel(bf,n)}const it=D({neg_:bP});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function wP(t){const n={x:I(t,"x","softplus")};return A.runKernel(Mc,n)}const wl=D({softplus_:wP});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function vP(t){const e=I(t,"x","logSigmoid");return Zr(s=>({value:it(wl(it(s))),gradFunc:a=>O(a,Nr(it(s)))}))(e)}const TI=D({logSigmoid_:vP});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function SP(t,e){let n=I(t,"a","sub"),s=I(e,"b","sub");[n,s]=vt(n,s);const r={a:n,b:s};return A.runKernel(Wc,r)}const fe=D({sub_:SP});/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function kP(t,e=-1){const n=I(t,"logits","logSoftmax");if(e===-1&&(e=n.rank-1),e!==n.rank-1)throw Error(`Log Softmax along a non-last dimension is not yet supported. Logits was rank ${n.rank} and axis was ${e}`);return Zr((r,o)=>{const i=Ls(r,e,!0),l=fe(r,i),u=fe(he(l,"float32"),cs(ye(us(l),e,!0)));return o([u]),{value:u,gradFunc:(h,d)=>{const[p]=d,f=!0,m=us(p);return fe(h,O(ye(h,e,f),m))}}})(n)}const Vx=D({logSoftmax_:kP});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $P(t,e=null,n=!1){const s=I(t,"x","logSumExp"),r=Fe(e,s.shape),o=Ls(s,r,!0),a=fe(s,o),i=us(a),l=ye(i,r),u=cs(l),c=te(F(o,u.shape),u);if(n){const h=$t(c.shape,r);return F(c,h)}return c}const Wx=D({logSumExp_:$P});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function CP(t,e){const n=I(t,"a","logicalAnd","bool"),s=I(e,"b","logicalAnd","bool");Re(n.shape,s.shape);const r={a:n,b:s};return A.runKernel(uf,r)}const Rr=D({logicalAnd_:CP});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function NP(t){const n={x:I(t,"x","logicalNot","bool")};return A.runKernel(cf,n)}const qf=D({logicalNot_:NP});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function IP(t,e){const n=I(t,"a","logicalOr","bool"),s=I(e,"b","logicalOr","bool");Re(n.shape,s.shape);const r={a:n,b:s};return A.runKernel(hf,r)}const Ux=D({logicalOr_:IP});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function TP(t,e){const n=I(t,"a","logicalXor","bool"),s=I(e,"b","logicalXor","bool");return Re(n.shape,s.shape),Rr(Ux(t,e),qf(Rr(t,e)))}const EI=D({logicalXor_:TP});/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ph=2147483648;function EP(t,e,n="left"){const s=I(t,"sortedSequence","searchSorted"),r=I(e,"values","searchSorted"),o=s.shape[s.shape.length-1],a=r.shape[r.shape.length-1],i=F(s,[-1,o]),l=F(r,[-1,a]);if(i.rank<2)throw new Error("Sorted input argument must be at least 2-dimensional");if(i.shape[0]!==l.shape[0])throw new Error("Leading dimension of 'sortedSequence' and 'values' must match.");if(K(l.shape)>=Ph)throw new Error(`values tensor size must less than ${Ph}`);if(i.shape[1]>=Ph)throw new Error(`trailing dim_size must less than ${Ph} for int32 output type, was ${i.shape[1]}`);const u={sortedSequence:i,values:l},c={side:n};return A.runKernel(dx,u,c)}const Gx=D({searchSorted_:EP});/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function RP(t,e){return Gx(t,e,"left")}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function DP(t,e,n,s,r){const o=I(t,"x","maxPool"),a=1;let i=o,l=!1;o.rank===3&&(l=!0,i=F(o,[1,o.shape[0],o.shape[1],o.shape[2]])),C(i.rank===4,()=>`Error in maxPool: input must be rank 4 but got rank ${i.rank}.`),C(tn(n,a),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${n} and dilations '${a}'`),Cn("maxPool",s,r);const u={x:i},c={filterSize:e,strides:n,pad:s,dimRoundingMode:r},h=A.runKernel(ff,u,c);return l?F(h,[h.shape[1],h.shape[2],h.shape[3]]):h}const Xf=D({maxPool_:DP});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function AP(t,e=[1,1,1],n,s,r,o="NDHWC"){const a=I(t,"x","maxPool3d");let i=a,l=!1;a.rank===4&&(l=!0,i=F(a,[1,a.shape[0],a.shape[1],a.shape[2],a.shape[3]])),C(i.rank===5,()=>`Error in maxPool3d: x must be rank 5 but got rank ${i.rank}.`),C(o==="NDHWC",()=>`Error in maxPool3d: Only NDHWC is currently supported, but got dataFormat of ${o}`),Cn("maxPool3d",s,r);const u={x:i},c={filterSize:e,strides:n,pad:s,dimRoundingMode:r,dataFormat:o},h=A.runKernel(mf,u,c);return l?F(h,[h.shape[1],h.shape[2],h.shape[3],h.shape[4]]):h}const RI=D({maxPool3d_:AP});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _P(t,e,n,s,r=!1){const a={x:I(t,"x","maxPoolWithArgmax")},i={filterSize:e,strides:n,pad:s,includeBatchInIndex:r},l=A.runKernel(Z1,a,i);return{result:l[0],indexes:l[1]}}const OP=D({maxPoolWithArgmax_:_P});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function FP(t,e){let n=I(t,"a","maximum"),s=I(e,"b","maximum");[n,s]=vt(n,s),n.dtype==="bool"&&(n=he(n,"int32"),s=he(s,"int32")),Re(n.shape,s.shape);const r={a:n,b:s};return A.runKernel($c,r)}const ro=D({maximum_:FP});/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function LP(t,e=null,n=!1){const r={x:I(t,"x","mean")},o={axis:e,keepDims:n};return A.runKernel(gf,r,o)}const xt=D({mean_:LP});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ot(t,e="float32"){if(ms(t),e==="complex64"){const s=Ot(t,"float32"),r=Ot(t,"float32");return Oo(s,r)}const n=hn(K(t),e);return A.makeTensor(n,t,e)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function os(t,e="float32"){if(ms(t),e==="complex64"){const s=os(t,"float32"),r=Ot(t,"float32");return Oo(s,r)}const n=v1(K(t),e);return A.makeTensor(n,t,e)}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function PP(t,e,{indexing:n="xy"}={}){if(n!=="xy"&&n!=="ij")throw new TypeError(`${n} is not a valid third argument to meshgrid`);if(t===void 0)return[];let s=I(t,"x","meshgrid",t instanceof ut?t.dtype:"float32");if(e===void 0)return[s];let r=I(e,"y","meshgrid",e instanceof ut?e.dtype:"float32");const o=K(s.shape),a=K(r.shape);return n==="xy"?(s=F(s,[1,-1]),r=F(r,[-1,1]),[Pe(os([a,1],s.dtype),s),Pe(r,os([1,o],r.dtype))]):(s=F(s,[-1,1]),r=F(r,[1,-1]),[Pe(s,os([1,a],s.dtype)),Pe(os([o,1],r.dtype),r)])}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function zP(t,e){let n=I(t,"a","minimum"),s=I(e,"b","minimum");[n,s]=vt(n,s),n.dtype==="bool"&&(n=he(n,"int32"),s=he(s,"int32")),Re(n.shape,s.shape);const r={a:n,b:s};return A.runKernel(Cc,r)}const Oa=D({minimum_:zP});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function MP(t,e,n){C(n==="reflect"||n==="symmetric",()=>`Invalid mode. Mode must be either reflect or symmetric. Got ${n}.`);const s=I(t,"x","mirrorPad");if(s.rank===0)throw new Error("mirrorPad(scalar) is not defined. Pass non-scalar to mirrorPad");C(e.length===s.rank,()=>`Padding doesn't match input. Must be ${s.rank}. Got ${e.length}.`);const r=n==="reflect"?1:0;for(let i=0;i<s.rank;i++)C(e[i].length===2,()=>"Invalid number of paddings. Must be length of 2 each."),C(e[i][0]>=0&&e[i][0]<=s.shape[i]-r&&e[i][1]>=0&&e[i][1]<=s.shape[i]-r,()=>`Padding in dimension ${i} cannot be greater than or equal to ${s.shape[i]-r} or less than 0 for input of shape ${s.shape}`);const o={paddings:e,mode:n},a={x:s};return A.runKernel(xf,a,o)}const DI=D({mirrorPad_:MP});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function BP(t,e){let n=I(t,"a","mod"),s=I(e,"b","mod");[n,s]=vt(n,s);const r={a:n,b:s};return A.runKernel(Nc,r)}const AI=D({mod_:BP});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function VP(t,e=null,n=!1){t=I(t,"x","moments");const s=Fe(e,t.shape),r=xt(t,s,n);let o=r.shape;n||(o=$t(r.shape,s));const a=Je(fe(he(t,"float32"),F(r,o))),i=xt(a,s,n);return{mean:r,variance:i}}const Yf=D({moments_:VP});function WP(t,e,n,s){const r=I(e,"data","multiRNNCell"),o=Xd(n,"c","multiRNNCell"),a=Xd(s,"h","multiRNNCell");let i=r;const l=[];for(let h=0;h<t.length;h++){const d=t[h](i,o[h],a[h]);l.push(d[0]),l.push(d[1]),i=d[1]}const u=[],c=[];for(let h=0;h<l.length;h+=2)u.push(l[h]),c.push(l[h+1]);return[u,c]}const UP=D({multiRNNCell_:WP});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function GP(t,e,n,s=!1){const r=I(t,"logits","multinomial"),o=r.size,a=r.rank;if(o<2)throw new Error(`Error in multinomial: you need at least 2 outcomes, but got ${o}.`);if(a>2)throw new Error(`Rank of probabilities must be 1 or 2, but is ${a}`);n=n||Math.random();const l={logits:a===1?F(r,[1,-1]):r},u={numSamples:e,seed:n,normalized:s},c=A.runKernel(J1,l,u);return a===1?F(c,[c.size]):c}const HP=D({multinomial_:GP});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function jP(t,e){let n=I(t,"a","notEqual","string_or_numeric"),s=I(e,"b","notEqual","string_or_numeric");[n,s]=vt(n,s),Re(n.shape,s.shape);const r={a:n,b:s};return A.runKernel(wf,r)}const sl=D({notEqual_:jP});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function KP(t,e,n=1,s=0,r="int32"){if(e<2)throw new Error(`Error in oneHot: depth must be >=2, but it is ${e}`);const a={indices:I(t,"indices","oneHot","int32")},i={dtype:r,depth:e,onValue:n,offValue:s};return A.runKernel(Sf,a,i)}const Hx=D({oneHot_:KP});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function qP(t){const n={x:I(t,"x","onesLike")};return A.runKernel(vf,n)}const hs=D({onesLike_:qP});function XP(t,e){const n=I(t,"v1","outerProduct"),s=I(e,"v2","outerProduct");C(n.rank===1&&s.rank===1,()=>`Error in outerProduct: inputs must be rank 1, but got ranks ${n.rank} and ${s.rank}.`);const r=F(n,[-1,1]),o=F(s,[1,-1]);return Pe(r,o)}const YP=D({outerProduct_:XP});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function QP(t,e,n=0){const s=I(t,"x","pad");if(s.rank===0)throw new Error("pad(scalar) is not defined. Pass non-scalar to pad");const r={paddings:e,constantValue:n},o={x:s};return A.runKernel($f,o,r)}const Jo=D({pad_:QP});function ZP(t,e,n=0){return C(e.length===2,()=>"Invalid number of paddings. Must be length of 2."),Jo(t,[e],n)}const JP=D({pad1d_:ZP});function ez(t,e,n=0){return C(e.length===2&&e[0].length===2&&e[1].length===2,()=>"Invalid number of paddings. Must be length of 2 each."),Jo(t,e,n)}const tz=D({pad2d_:ez});function nz(t,e,n=0){return C(e.length===3&&e[0].length===2&&e[1].length===2&&e[2].length===2,()=>"Invalid number of paddings. Must be length of 2 each."),Jo(t,e,n)}const sz=D({pad3d_:nz});function rz(t,e,n=0){return C(e.length===4&&e[0].length===2&&e[1].length===2&&e[2].length===2&&e[3].length===2,()=>"Invalid number of paddings. Must be length of 2 each."),Jo(t,e,n)}const oz=D({pad4d_:rz});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function az(t,e,n){const s=I(t,"x","spaceToBatchND");C(s.rank>=1+e.length,()=>`input rank ${s.rank} should be > than [blockShape] ${e.length}`),C(n.length===e.length,()=>`paddings.shape[0] ${n.length} must be equal to [blockShape] ${e.length}`),C(s.shape.reduce((a,i,l)=>l>0&&l<=e.length?a&&(i+n[l-1][0]+n[l-1][1])%e[l-1]===0:a,!0),()=>`input spatial dimensions ${s.shape.slice(1)} with paddings ${n.toString()} must be divisible by blockShapes ${e.toString()}`);const r={x:s},o={blockShape:e,paddings:n};return A.runKernel(Of,r,o)}const Qf=D({spaceToBatchND_:az});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function iz(t,e,n,s,r,o,a){r==null&&(r=[1,1]),o==null&&(o=1),s===0&&(s="valid");const i=I(t,"x","maxPool");let l=i,u=!1;i.rank===3&&(u=!0,l=F(i,[1,i.shape[0],i.shape[1],i.shape[2]])),C(tn(o,r),()=>`Error in pool: Either strides or dilations must be 1. Got strides ${o} and dilations '${r}'`);const c=Ws(l.shape,e,o,r,s),h=[c.dilationHeight,c.dilationWidth];let d;s==="same"?d=uz([c.filterHeight,c.filterWidth],h):d=[[0,0],[0,0]];const p=h[0]===1&&h[1]===1,[f,m]=lz([c.inHeight,c.inWidth],h,d),y=p?s:"valid",g=p?l:Qf(l,h,f),w=(n==="avg"?()=>Wf(g,e,o,y,a):()=>Xf(g,e,o,y,a))(),b=p?w:Uf(w,h,m);return u?F(b,[b.shape[1],b.shape[2],b.shape[3]]):b}function lz(t,e,n){const s=n.map(c=>c[0]),r=n.map(c=>c[1]),o=t.concat(s,r),a=e.map((c,h)=>(c-o[h]%c)%c),i=r.map((c,h)=>c+a[h]),l=e.map((c,h)=>[s[h],i[h]]),u=e.map((c,h)=>[0,a[h]]);return[l,u]}function uz(t,e){const s=t.map((a,i)=>a+(a-1)*(e[i]-1)).map(a=>a-1),r=s.map(a=>Math.floor(a/2)),o=s.map((a,i)=>a-r[i]);return s.map((a,i)=>[r[i],o[i]])}const _I=D({pool_:iz});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function cz(t,e){const n=I(t,"x","prelu"),s=I(e,"alpha","prelu"),r={x:n,alpha:s};return A.runKernel(Cf,r)}const Zf=D({prelu_:cz});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function hz(t,e=null,n=!1){let s=I(t,"x","prod");s.dtype==="bool"&&(s=he(s,"int32"));const r={x:s},o={axis:e,keepDims:n};return A.runKernel(Nf,r,o)}const OI=D({prod_:hz});/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function dz(t,e,n,s){const r=t.map((c,h)=>I(c,`tensors${h}`,"raggedGather","int32")),o=I(e,"paramsDenseValues","raggedGather"),a=I(n,"indices","raggedGather","int32"),i={paramsNestedSplits:r,paramsDenseValues:o,indices:a},l={outputRaggedRank:s},u=A.runKernel(sx,i,l);return{outputNestedSplits:u.slice(0,u.length-1),outputDenseValues:u[u.length-1]}}const pz=D({raggedGather_:dz});/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fz(t,e,n){const s=I(t,"starts","raggedRange"),r=I(e,"limits","raggedRange",s.dtype),o=I(n,"deltas","raggedRange",s.dtype),a={starts:s,limits:r,deltas:o},i=A.runKernel(rx,a);return{rtNestedSplits:i[0],rtDenseValues:i[1]}}const mz=D({raggedRange_:fz});/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gz(t,e,n,s,r){const o=I(t,"shape","raggedTensorToTensor","int32"),a=I(e,"values","raggedTensorToTensor"),i=I(n,"defaultValue","raggedTensorToTensor",a.dtype),l=s.map((h,d)=>I(h,`tensors${d}`,"raggedTensorToTensor","int32")),u={shape:o,values:a,defaultValue:i,rowPartitionTensors:l},c={rowPartitionTypes:r};return A.runKernel(ox,u,c)}const yz=D({raggedTensorToTensor_:gz});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function xz(t,e,n){ms(t);const s=K(t);let r=null;if(n==null||n==="float32")r=new Float32Array(s);else if(n==="int32")r=new Int32Array(s);else if(n==="bool")r=new Uint8Array(s);else throw new Error(`Unknown data type ${n}`);for(let o=0;o<s;o++)r[o]=e();return A.makeTensor(r,t,n)}const bz=D({rand_:xz});var jx={exports:{}};jx.exports;(function(t){(function(e,n,s){function r(l){var u=this,c=i();u.next=function(){var h=2091639*u.s0+u.c*23283064365386963e-26;return u.s0=u.s1,u.s1=u.s2,u.s2=h-(u.c=h|0)},u.c=1,u.s0=c(" "),u.s1=c(" "),u.s2=c(" "),u.s0-=c(l),u.s0<0&&(u.s0+=1),u.s1-=c(l),u.s1<0&&(u.s1+=1),u.s2-=c(l),u.s2<0&&(u.s2+=1),c=null}function o(l,u){return u.c=l.c,u.s0=l.s0,u.s1=l.s1,u.s2=l.s2,u}function a(l,u){var c=new r(l),h=u&&u.state,d=c.next;return d.int32=function(){return c.next()*4294967296|0},d.double=function(){return d()+(d()*2097152|0)*11102230246251565e-32},d.quick=d,h&&(typeof h=="object"&&o(h,c),d.state=function(){return o(c,{})}),d}function i(){var l=4022871197,u=function(c){c=String(c);for(var h=0;h<c.length;h++){l+=c.charCodeAt(h);var d=.02519603282416938*l;l=d>>>0,d-=l,d*=l,l=d>>>0,d-=l,l+=d*4294967296}return(l>>>0)*23283064365386963e-26};return u}n&&n.exports?n.exports=a:s&&s.amd?s(function(){return a}):this.alea=a})(Wa,t,!1)})(jx);var wz=jx.exports,Kx={exports:{}};Kx.exports;(function(t){(function(e,n,s){function r(i){var l=this,u="";l.x=0,l.y=0,l.z=0,l.w=0,l.next=function(){var h=l.x^l.x<<11;return l.x=l.y,l.y=l.z,l.z=l.w,l.w^=l.w>>>19^h^h>>>8},i===(i|0)?l.x=i:u+=i;for(var c=0;c<u.length+64;c++)l.x^=u.charCodeAt(c)|0,l.next()}function o(i,l){return l.x=i.x,l.y=i.y,l.z=i.z,l.w=i.w,l}function a(i,l){var u=new r(i),c=l&&l.state,h=function(){return(u.next()>>>0)/4294967296};return h.double=function(){do var d=u.next()>>>11,p=(u.next()>>>0)/4294967296,f=(d+p)/(1<<21);while(f===0);return f},h.int32=u.next,h.quick=h,c&&(typeof c=="object"&&o(c,u),h.state=function(){return o(u,{})}),h}n&&n.exports?n.exports=a:s&&s.amd?s(function(){return a}):this.xor128=a})(Wa,t,!1)})(Kx);var vz=Kx.exports,qx={exports:{}};qx.exports;(function(t){(function(e,n,s){function r(i){var l=this,u="";l.next=function(){var h=l.x^l.x>>>2;return l.x=l.y,l.y=l.z,l.z=l.w,l.w=l.v,(l.d=l.d+362437|0)+(l.v=l.v^l.v<<4^(h^h<<1))|0},l.x=0,l.y=0,l.z=0,l.w=0,l.v=0,i===(i|0)?l.x=i:u+=i;for(var c=0;c<u.length+64;c++)l.x^=u.charCodeAt(c)|0,c==u.length&&(l.d=l.x<<10^l.x>>>4),l.next()}function o(i,l){return l.x=i.x,l.y=i.y,l.z=i.z,l.w=i.w,l.v=i.v,l.d=i.d,l}function a(i,l){var u=new r(i),c=l&&l.state,h=function(){return(u.next()>>>0)/4294967296};return h.double=function(){do var d=u.next()>>>11,p=(u.next()>>>0)/4294967296,f=(d+p)/(1<<21);while(f===0);return f},h.int32=u.next,h.quick=h,c&&(typeof c=="object"&&o(c,u),h.state=function(){return o(u,{})}),h}n&&n.exports?n.exports=a:s&&s.amd?s(function(){return a}):this.xorwow=a})(Wa,t,!1)})(qx);var Sz=qx.exports,Xx={exports:{}};Xx.exports;(function(t){(function(e,n,s){function r(i){var l=this;l.next=function(){var c=l.x,h=l.i,d,p;return d=c[h],d^=d>>>7,p=d^d<<24,d=c[h+1&7],p^=d^d>>>10,d=c[h+3&7],p^=d^d>>>3,d=c[h+4&7],p^=d^d<<7,d=c[h+7&7],d=d^d<<13,p^=d^d<<9,c[h]=p,l.i=h+1&7,p};function u(c,h){var d,p=[];if(h===(h|0))p[0]=h;else for(h=""+h,d=0;d<h.length;++d)p[d&7]=p[d&7]<<15^h.charCodeAt(d)+p[d+1&7]<<13;for(;p.length<8;)p.push(0);for(d=0;d<8&&p[d]===0;++d);for(d==8?p[7]=-1:p[d],c.x=p,c.i=0,d=256;d>0;--d)c.next()}u(l,i)}function o(i,l){return l.x=i.x.slice(),l.i=i.i,l}function a(i,l){i==null&&(i=+new Date);var u=new r(i),c=l&&l.state,h=function(){return(u.next()>>>0)/4294967296};return h.double=function(){do var d=u.next()>>>11,p=(u.next()>>>0)/4294967296,f=(d+p)/(1<<21);while(f===0);return f},h.int32=u.next,h.quick=h,c&&(c.x&&o(c,u),h.state=function(){return o(u,{})}),h}n&&n.exports?n.exports=a:s&&s.amd?s(function(){return a}):this.xorshift7=a})(Wa,t,!1)})(Xx);var kz=Xx.exports,Yx={exports:{}};Yx.exports;(function(t){(function(e,n,s){function r(i){var l=this;l.next=function(){var c=l.w,h=l.X,d=l.i,p,f;return l.w=c=c+1640531527|0,f=h[d+34&127],p=h[d=d+1&127],f^=f<<13,p^=p<<17,f^=f>>>15,p^=p>>>12,f=h[d]=f^p,l.i=d,f+(c^c>>>16)|0};function u(c,h){var d,p,f,m,y,g=[],x=128;for(h===(h|0)?(p=h,h=null):(h=h+"\0",p=0,x=Math.max(x,h.length)),f=0,m=-32;m<x;++m)h&&(p^=h.charCodeAt((m+32)%h.length)),m===0&&(y=p),p^=p<<10,p^=p>>>15,p^=p<<4,p^=p>>>13,m>=0&&(y=y+1640531527|0,d=g[m&127]^=p+y,f=d==0?f+1:0);for(f>=128&&(g[(h&&h.length||0)&127]=-1),f=127,m=4*128;m>0;--m)p=g[f+34&127],d=g[f=f+1&127],p^=p<<13,d^=d<<17,p^=p>>>15,d^=d>>>12,g[f]=p^d;c.w=y,c.X=g,c.i=f}u(l,i)}function o(i,l){return l.i=i.i,l.w=i.w,l.X=i.X.slice(),l}function a(i,l){i==null&&(i=+new Date);var u=new r(i),c=l&&l.state,h=function(){return(u.next()>>>0)/4294967296};return h.double=function(){do var d=u.next()>>>11,p=(u.next()>>>0)/4294967296,f=(d+p)/(1<<21);while(f===0);return f},h.int32=u.next,h.quick=h,c&&(c.X&&o(c,u),h.state=function(){return o(u,{})}),h}n&&n.exports?n.exports=a:s&&s.amd?s(function(){return a}):this.xor4096=a})(Wa,t,!1)})(Yx);var $z=Yx.exports,Qx={exports:{}};Qx.exports;(function(t){(function(e,n,s){function r(i){var l=this,u="";l.next=function(){var h=l.b,d=l.c,p=l.d,f=l.a;return h=h<<25^h>>>7^d,d=d-p|0,p=p<<24^p>>>8^f,f=f-h|0,l.b=h=h<<20^h>>>12^d,l.c=d=d-p|0,l.d=p<<16^d>>>16^f,l.a=f-h|0},l.a=0,l.b=0,l.c=-1640531527,l.d=1367130551,i===Math.floor(i)?(l.a=i/4294967296|0,l.b=i|0):u+=i;for(var c=0;c<u.length+20;c++)l.b^=u.charCodeAt(c)|0,l.next()}function o(i,l){return l.a=i.a,l.b=i.b,l.c=i.c,l.d=i.d,l}function a(i,l){var u=new r(i),c=l&&l.state,h=function(){return(u.next()>>>0)/4294967296};return h.double=function(){do var d=u.next()>>>11,p=(u.next()>>>0)/4294967296,f=(d+p)/(1<<21);while(f===0);return f},h.int32=u.next,h.quick=h,c&&(typeof c=="object"&&o(c,u),h.state=function(){return o(u,{})}),h}n&&n.exports?n.exports=a:s&&s.amd?s(function(){return a}):this.tychei=a})(Wa,t,!1)})(Qx);var Cz=Qx.exports,FI={exports:{}};const Nz={},Iz=Object.freeze(Object.defineProperty({__proto__:null,default:Nz},Symbol.toStringTag,{value:"Module"})),Tz=wA(Iz);(function(t){(function(e,n,s){var r=256,o=6,a=52,i="random",l=s.pow(r,o),u=s.pow(2,a),c=u*2,h=r-1,d;function p(b,v,k){var $=[];v=v==!0?{entropy:!0}:v||{};var N=g(y(v.entropy?[b,w(n)]:b??x(),3),$),E=new f($),T=function(){for(var R=E.g(o),z=l,P=0;R<u;)R=(R+P)*r,z*=r,P=E.g(1);for(;R>=c;)R/=2,z/=2,P>>>=1;return(R+P)/z};return T.int32=function(){return E.g(4)|0},T.quick=function(){return E.g(4)/4294967296},T.double=T,g(w(E.S),n),(v.pass||k||function(R,z,P,W){return W&&(W.S&&m(W,E),R.state=function(){return m(E,{})}),P?(s[i]=R,z):R})(T,N,"global"in v?v.global:this==s,v.state)}function f(b){var v,k=b.length,$=this,N=0,E=$.i=$.j=0,T=$.S=[];for(k||(b=[k++]);N<r;)T[N]=N++;for(N=0;N<r;N++)T[N]=T[E=h&E+b[N%k]+(v=T[N])],T[E]=v;($.g=function(R){for(var z,P=0,W=$.i,M=$.j,U=$.S;R--;)z=U[W=h&W+1],P=P*r+U[h&(U[W]=U[M=h&M+z])+(U[M]=z)];return $.i=W,$.j=M,P})(r)}function m(b,v){return v.i=b.i,v.j=b.j,v.S=b.S.slice(),v}function y(b,v){var k=[],$=typeof b,N;if(v&&$=="object")for(N in b)try{k.push(y(b[N],v-1))}catch{}return k.length?k:$=="string"?b:b+"\0"}function g(b,v){for(var k=b+"",$,N=0;N<k.length;)v[h&N]=h&($^=v[h&N]*19)+k.charCodeAt(N++);return w(v)}function x(){try{var b;return d&&(b=d.randomBytes)?b=b(r):(b=new Uint8Array(r),(e.crypto||e.msCrypto).getRandomValues(b)),w(b)}catch{var v=e.navigator,k=v&&v.plugins;return[+new Date,e,k,e.screen,w(n)]}}function w(b){return String.fromCharCode.apply(0,b)}if(g(s.random(),n),t.exports){t.exports=p;try{d=Tz}catch{}}else s["seed"+i]=p})(typeof self<"u"?self:Wa,[],Math)})(FI);var Ez=FI.exports,Rz=wz,Dz=vz,Az=Sz,_z=kz,Oz=$z,Fz=Cz,qa=Ez;qa.alea=Rz;qa.xor128=Dz;qa.xorwow=Az;qa.xorshift7=_z;qa.xor4096=Oz;qa.tychei=Fz;var Jf=qa;/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Zx{constructor(e,n,s,r,o){this.mean=e,this.stdDev=n,this.dtype=s,this.nextVal=NaN,this.truncated=r,this.truncated&&(this.upper=this.mean+this.stdDev*2,this.lower=this.mean-this.stdDev*2);const a=o||Math.random();this.random=Jf.alea(a.toString())}nextValue(){if(!isNaN(this.nextVal)){const r=this.nextVal;return this.nextVal=NaN,r}let e,n,s=!1;for(;!s;){let r,o,a;do r=2*this.random()-1,o=2*this.random()-1,a=r*r+o*o;while(a>=1||a===0);const i=Math.sqrt(-2*Math.log(a)/a);e=this.mean+this.stdDev*r*i,n=this.mean+this.stdDev*o*i,(!this.truncated||this.isValidTruncated(e))&&(s=!0)}return(!this.truncated||this.isValidTruncated(n))&&(this.nextVal=this.convertValue(n)),this.convertValue(e)}convertValue(e){return this.dtype==null||this.dtype==="float32"?e:Math.round(e)}isValidTruncated(e){return e<=this.upper&&e>=this.lower}}class Lz{constructor(e,n,s,r){this.alpha=e,this.beta=1/n,this.dtype=s;const o=r||Math.random();this.randu=Jf.alea(o.toString()),this.randn=new Zx(0,1,s,!1,this.randu()),e<1?this.d=e+2/3:this.d=e-1/3,this.c=1/Math.sqrt(9*this.d)}nextValue(){let e,n,s,r,o,a;for(;;){do r=this.randn.nextValue(),a=1+this.c*r;while(a<=0);if(a*=a*a,e=r*r,n=1-.331*e*e,s=.5*e+this.d*(1-a+Math.log(a)),o=this.randu(),o<n||Math.log(o)<s)break}return a=1/this.beta*this.d*a,this.alpha<1&&(a*=Math.pow(this.randu(),1/this.alpha)),this.convertValue(a)}convertValue(e){return this.dtype==="float32"?e:Math.round(e)}}class Pz{constructor(e=0,n=1,s,r){if(this.canReturnFloat=()=>this.dtype==null||this.dtype==="float32",this.min=e,this.range=n-e,this.dtype=s,r==null&&(r=Math.random()),typeof r=="number"&&(r=r.toString()),!this.canReturnFloat()&&this.range<=1)throw new Error(`The difference between ${e} - ${n} <= 1 and dtype is not float`);this.random=Jf.alea(r)}convertValue(e){return this.canReturnFloat()?e:Math.round(e)}nextValue(){return this.convertValue(this.min+this.range*this.random())}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function zz(t,e,n=1,s="float32",r){if(ms(t),n==null&&(n=1),s==null&&(s="float32"),s!=="float32"&&s!=="int32")throw new Error(`Unsupported data type ${s}`);const o=new Lz(e,n,s,r),a=Ae(t,s);for(let i=0;i<a.values.length;i++)a.values[i]=o.nextValue();return a.toTensor()}const Mz=D({randomGamma_:zz});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Bz(t,e=0,n=1,s,r){if(ms(t),s!=null&&s==="bool")throw new Error(`Unsupported data type ${s}`);const o=new Zx(e,n,s,!1,r),a=Ae(t,s);for(let i=0;i<a.values.length;i++)a.values[i]=o.nextValue();return a.toTensor()}const Jx=D({randomNormal_:Bz});/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Vz(t,e,n){if(e!=null&&e==="bool")throw new Error(`Unsupported data type ${e}`);return Jx(t,0,1,e,n)}const Wz=D({randomStandardNormal_:Vz});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Uz(t,e=0,n=1,s="float32",r){ms(t);const o=Ae(t,s),a=new Pz(e,n,null,r);for(let i=0;i<o.values.length;i++)o.values[i]=a.nextValue();return o.toTensor()}const Xa=D({randomUniform_:Uz});/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Gz(t,e,n,s){return Xa(t,e,n,"int32",s)}const Hz=D({randomUniformInt_:Gz});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function rl(t,e,n=1,s="float32"){if(n===0)throw new Error("Cannot have a step of zero");const r={start:t,stop:e,step:n,dtype:s};return A.runKernel(ax,{},r)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function jz(t){const n={input:I(t,"input","real")};return A.runKernel(ix,n)}const Fu=D({real_:jz});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Kz(t){const n={x:I(t,"x","reciprocal")};return A.runKernel(Ec,n)}const LI=D({reciprocal_:Kz});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function qz(t){const n={x:I(t,"x","relu")};return A.runKernel(Rc,n)}const _r=D({relu_:qz});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Xz(t){const n={x:I(t,"x","relu6")};return A.runKernel(Dc,n)}const eb=D({relu6_:Xz});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Yz(t,e){const s={x:I(t,"x","reverse")},r={dims:e};return A.runKernel(Rf,s,r)}const Bs=D({reverse_:Yz});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Qz(t){const e=I(t,"x","reverse");return C(e.rank===1,()=>`Error in reverse1D: x must be rank 1 but got rank ${e.rank}.`),Bs(e,0)}const Zz=D({reverse1d_:Qz});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Jz(t,e){const n=I(t,"x","reverse");return C(n.rank===2,()=>`Error in reverse2D: x must be rank 2 but got rank ${n.rank}.`),Bs(n,e)}const eM=D({reverse2d_:Jz});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tM(t,e){const n=I(t,"x","reverse");return C(n.rank===3,()=>`Error in reverse3D: x must be rank 3 but got rank ${n.rank}.`),Bs(n,e)}const nM=D({reverse3d_:tM});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sM(t,e){const n=I(t,"x","reverse");return C(n.rank===4,()=>`Error in reverse4D: x must be rank 4 but got rank ${n.rank}.`),Bs(n,e)}const rM=D({reverse4d_:sM});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function oM(t){const n={x:I(t,"x","round")};return A.runKernel(Ac,n)}const tb=D({round_:oM});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function aM(t){const n={x:I(t,"x","rsqrt","float32")};return A.runKernel(_c,n)}const nb=D({rsqrt_:aM});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function iM(t){const n={x:I(t,"x","selu")};return A.runKernel(Oc,n)}const sb=D({selu_:iM});function lM(t,e,n,s,r,o=[1,1],a="NHWC"){const i=I(t,"x","separableConv2d"),l=I(e,"depthwiseFilter","separableConv2d"),u=I(n,"pointwiseFilter","separableConv2d");let c=i,h=!1;if(i.rank===3&&(h=!0,c=F(i,[1,i.shape[0],i.shape[1],i.shape[2]])),a==="NCHW")throw new Error("separableConv2d currently does not support dataFormat NCHW; only NHWC is supported");C(c.rank===4,()=>`Error in separableConv2d: input must be rank 4, but got rank ${c.rank}.`),C(l.rank===4,()=>`Error in separableConv2d: depthwise filter must be rank 4, but got rank ${l.rank}.`),C(u.rank===4,()=>`Error in separableConv2d: pointwise filter must be rank 4, but got rank ${l.rank}.`),C(u.shape[0]===1,()=>`Error in separableConv2d: the first dimension of pointwise filter  must be 1, but got ${u.shape[0]}.`),C(u.shape[1]===1,()=>`Error in separableConv2d: the second dimension of pointwise filter must be 1, but got ${u.shape[1]}.`);const d=l.shape[2],p=l.shape[3];C(u.shape[2]===d*p,()=>`Error in separableConv2d: the third dimension of pointwise filter must be ${d*p}, but got ${u.shape[2]}.`);const f=Yc(c,l,s,r,a,o),y=Lo(f,u,1,"valid",a);return h?F(y,[y.shape[1],y.shape[2],y.shape[3]]):y}const rb=D({separableConv2d_:lM});/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */async function uM(t,e){const n=I(t,"x","setdiff1d"),s=I(e,"y","setdiff1d");C(n.dtype===s.dtype,()=>`x and y should have the same dtype, but got x (${n.dtype}) and y (${s.dtype}).`),C(n.rank===1,()=>`x should be 1D tensor, but got x (${n.shape}).`),C(s.rank===1,()=>`y should be 1D tensor, but got y (${s.shape}).`);const r=await n.data(),o=await s.data(),a=new Set(o);let i=0;for(let c=0;c<r.length;c++)a.has(r[c])||i++;const l=new Pt([i],n.dtype),u=new Pt([i],"int32");for(let c=0,h=0;c<r.length;c++)a.has(r[c])||(l.values[h]=r[c],u.values[h]=c,h++);return[l.toTensor(),u.toTensor()]}const cM=uM;/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function hM(t){const n={x:I(t,"x","sign")};return A.runKernel(Pc,n)}const PI=D({sign_:hM});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function dM(t){const n={x:I(t,"x","sin","float32")};return A.runKernel(Fc,n)}const ob=D({sin_:dM});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pM(t){const n={x:I(t,"x","sinh")};return A.runKernel(Lc,n)}const ab=D({sinh_:pM});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fM(t,e,n){const s=I(t,"x","slice1d");return C(s.rank===1,()=>`slice1d expects a rank-1 tensor, but got a rank-${s.rank} tensor`),Ve(s,[e],[n])}const em=D({slice1d_:fM});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function mM(t,e,n){const s=I(t,"x","slice2d");return C(s.rank===2,()=>`slice2d expects a rank-2 tensor, but got a rank-${s.rank} tensor`),Ve(s,e,n)}const ib=D({slice2d_:mM});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gM(t,e,n){const s=I(t,"x","slice3d");return C(s.rank===3,()=>`slice3d expects a rank-3 tensor, but got a rank-${s.rank} tensor`),Ve(s,e,n)}const tm=D({slice3d_:gM});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function yM(t,e,n){const s=I(t,"x","slice4d");return C(s.rank===4,()=>`slice4d expects a rank-4 tensor, but got a rank-${s.rank} tensor`),Ve(s,e,n)}const Lu=D({slice4d_:yM});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function xM(t,e=-1){const n=I(t,"logits","softmax","float32");if(e===-1&&(e=n.rank-1),e!==n.rank-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${n.rank} and dim was ${e}`);const s={logits:n},r={dim:e};return A.runKernel(Lf,s,r)}const nm=D({softmax_:xM});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function bM(t){C(t.dtype==="complex64",()=>`The dtype for tf.spectral.fft() must be complex64 but got ${t.dtype}.`);const e={input:t};return A.runKernel(W1,e)}const sm=D({fft_:bM});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function wM(t){C(t.dtype==="complex64",()=>`The dtype for tf.spectral.ifft() must be complex64 but got ${t.dtype}.`);const e={input:t};return A.runKernel(j1,e)}const Pu=D({ifft_:wM});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function vM(t){const e=t.shape[t.shape.length-1],n=t.size/e;let s;if(e<=2){const r=F(t,[n,e]);s=Pu(r)}else{const r=[n,2*(e-1)],o=F(Fu(t),[n,e]),a=F(Hf(t),[n,e]),i=Bs(Ve(o,[0,1],[n,e-2]),1),l=O(Bs(Ve(a,[0,1],[n,e-2]),1),Se(-1)),u=Rt([o,i],1),c=Rt([a,l],1),h=F(Oo(u,c),[r[0],r[1]]);s=Pu(h)}if(s=Fu(s),t.rank===3&&t.shape[0]!==0){const r=s,o=t.shape[0];s=F(s,[o,s.shape[0]/o,s.shape[1]]),r.dispose()}return s}const lb=D({irfft_:vM});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function SM(t,e,n=0){const r={x:I(t,"x","split")},o={numOrSizeSplits:e,axis:n};return A.runKernel(Ff,r,o)}const qn=D({split_:SM});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function kM(t,e){C(t.dtype==="float32",()=>`The dtype for rfft() must be real value but got ${t.dtype}`);let n=t.shape[t.shape.length-1];const s=t.size/n;let r;if(e!=null&&e<n){const f=t.shape.map(y=>0),m=t.shape.map(y=>y);m[t.shape.length-1]=e,r=Ve(t,f,m),n=e}else if(e!=null&&e>n){const f=t.shape.map(m=>m);f[t.shape.length-1]=e-n,r=Rt([t,Ot(f)],t.shape.length-1),n=e}else r=t;const o=Ue(r),a=F(Oo(r,o),[s,n]),i=sm(a),l=Math.floor(n/2)+1,u=Fu(i),c=Hf(i),h=qn(u,[l,n-l],u.shape.length-1),d=qn(c,[l,n-l],c.shape.length-1),p=r.shape.slice();return p[r.shape.length-1]=l,F(Oo(h[0],d[0]),p)}const rm=D({rfft_:kM});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $M(t,e){let n=I(t,"a","squaredDifference"),s=I(e,"b","squaredDifference");[n,s]=vt(n,s),Re(n.shape,s.shape);const r={a:n,b:s},o={};return A.runKernel(Vc,r,o)}const ub=D({squaredDifference_:$M});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function CM(t,e){const n=I(t,"x","squeeze","string_or_numeric");return F(n,jo(n.shape,e).newShape)}const Ya=D({squeeze_:CM});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function NM(t,e=0){const n=Xd(t,"tensors","stack","string_or_numeric");C(n.length>=1,()=>"Pass at least one tensor to tf.stack"),n.length>0&&C(e<=n[0].rank,()=>"Axis must be <= rank of the tensor");const s=n,r={axis:e};return A.runKernel(kf,s,r)}const ds=D({stack_:NM});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function IM(t,e=0){const s={x:I(t,"x","step")},r={alpha:e};return A.runKernel(jc,s,r)}const vl=D({step_:IM});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function TM(t,e,n,s,r=0,o=0,a=0,i=0,l=0){const c={x:I(t,"x","stridedSlice","string_or_numeric")},h={begin:e,end:n,strides:s,beginMask:r,endMask:o,ellipsisMask:a,newAxisMask:i,shrinkAxisMask:l};return A.runKernel(bx,c,h)}const zI=D({stridedSlice_:TM});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function EM(t){const n={x:I(t,"x","tan","float32")};return A.runKernel(Uc,n)}const MI=D({tan_:EM});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Sn(t,e){ml(t);const n=qo(t,e);if(n.length!==1)throw new Error("tensor1d() requires values to be a flat/TypedArray");return Xo(t,null,n,e)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function du(t,e,n){if(ml(t),e!=null&&e.length!==2)throw new Error("tensor2d() requires shape to have two numbers");const s=qo(t,n);if(s.length!==2&&s.length!==1)throw new Error("tensor2d() requires values to be number[][] or flat/TypedArray");if(s.length===1&&e==null)throw new Error("tensor2d() requires shape to be provided when `values` are a flat/TypedArray");return Xo(t,e,s,n)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function RM(t,e,n){if(ml(t),e!=null&&e.length!==3)throw new Error("tensor3d() requires shape to have three numbers");const s=qo(t,n);if(s.length!==3&&s.length!==1)throw new Error("tensor3d() requires values to be number[][][] or flat/TypedArray");if(s.length===1&&e==null)throw new Error("tensor3d() requires shape to be provided when `values` are a flat array");return Xo(t,e,s,n)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function DM(t,e,n){if(ml(t),e!=null&&e.length!==4)throw new Error("tensor4d() requires shape to have four numbers");const s=qo(t,n);if(s.length!==4&&s.length!==1)throw new Error("tensor4d() requires values to be number[][][][] or flat/TypedArray");if(s.length===1&&e==null)throw new Error("tensor4d() requires shape to be provided when `values` are a flat array");return Xo(t,e,s,n)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function AM(t,e,n){if(ml(t),e!=null&&e.length!==5)throw new Error("tensor5d() requires shape to have five numbers");const s=qo(t,n);if(s.length!==5&&s.length!==1)throw new Error("tensor5d() requires values to be number[][][][][] or flat/TypedArray");if(s.length===1&&e==null)throw new Error("tensor5d() requires shape to be provided when `values` are a flat array");return Xo(t,e,s,n)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _M(t,e,n){if(ml(t),e!=null&&e.length!==6)throw new Error("tensor6d() requires shape to have six numbers");const s=qo(t,n);if(s.length!==6&&s.length!==1)throw new Error("tensor6d() requires values to be number[][][][][][] or flat/TypedArray");if(s.length===1&&e==null)throw new Error("tensor6d() requires shape to be provided when `values` are a flat array");return e=e||s,Xo(t,e,s,n)}function BI(t,e,n){const s=e.rank>1?e.shape[e.rank-1]:1,r=e.rank>1?e.rank-1:1,o=`Must have updates.shape = indices.shape[:batchDim] + shape[sliceDim:], got updates.shape: ${n.shape}, indices.shape: ${e.shape}, shape: ${t}, sliceDim: ${s}, and batchDim: ${r}.`;if(n.rank<r)throw new Error(o+` update.rank < ${r}. `);if(t.length<s+(n.rank-r))throw new Error(o+` Output shape length < ${s+(n.rank-r)}`);if(n.rank!==r+t.length-s)throw new Error(o+` update.rank != ${r+t.length-s}`);for(let a=0;a<r;++a)if(n.shape[a]!==e.shape[a])throw new Error(o+` updates.shape[${a}] (${n.shape[a]}) != indices.shape[${a}] (${e.shape[a]}).`);for(let a=0;a<n.rank-r;++a)if(n.shape[a+r]!==t[a+s])throw new Error(o+` updates.shape[${a+r}] (${n.shape[a+r]}) != shape[${a+r}] (${t[a+r]})`)}function cb(t,e,n){if(e.rank<1)throw new Error(`tf.scatterND() expects the indices to be rank 1 or higher, but the rank was ${e.rank}.`);if(t.rank<1)throw new Error(`tf.scatterND() expects the updates to be rank 1 or higher, but the rank was ${t.rank}.`);if(e.dtype!=="int32")throw new Error(`The dtype of 'indices' should be int32, but got dtype: ${e.dtype}`);if(n.length<1)throw new Error(`Output rank must be greater or equal to 1, but got shape: ${n}`);if(n.length===0){if(e.size===0)throw new Error(`Indices specified for empty output. indices shape: ${e.shape}`);if(t.size===0)throw new Error(`Updates specified for empty output. updates shape: ${t.shape}`)}BI(n,e,t)}function Qa(t,e,n){const s=e.shape.length,r=s>1?e.shape[s-1]:1,o=n.length;let a=1;for(let h=r;h<o;++h)a*=n[h];const i=r<1?1:r,l=K(e.shape)/i,u=[...ve(n.slice(0,r)),1],c=K(n);return{sliceRank:r,numUpdates:l,sliceSize:a,strides:u,outputSize:c}}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function OM(t,e,n){const s=I(t,"tensor","tensorScatterupdate"),r=I(e,"indices","tensorScatterupdate","int32"),o=I(n,"updates","tensorScatterupdate");if(cb(o,r,s.shape),s.dtype!==o.dtype)throw new Error(`tensor and updates must have the same dtype, instead they are ${s.dtype} and ${o.dtype}.`);const a={tensor:s,indices:r,updates:o},i={};return A.runKernel(hx,a,i)}const FM=D({tensorScatterUpdate_:OM});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function LM(t,e=1,n=!0){const s=I(t,"x","topk");if(s.rank===0)throw new Error("topk() expects the input to be of rank 1 or higher");const r=s.shape[s.shape.length-1];if(e<0)throw new Error(`'k' passed to topk() must be >= 0 but got ${e}`);if(e>r)throw new Error(`'k' passed to topk() must be <= the last dimension (${r}) but got ${e}`);const o={x:s},a={k:e,sorted:n},[i,l]=A.runKernel(kx,o,a);return{values:i,indices:l}}const VI=D({topk_:LM});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function PM(t,e=0,n=1,s,r){if(ms(t),s!=null&&s==="bool")throw new Error("Unsupported data type $ { dtype }");const o=new Zx(e,n,s,!0,r),a=Ae(t,s);for(let i=0;i<a.values.length;i++)a.values[i]=o.nextValue();return a.toTensor()}const hb=D({truncatedNormal_:PM});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function zM(t,e=0){const n=I(t,"x","unique","string_or_numeric");C(n.rank>0,()=>"The input tensor must be at least 1D");const s={x:n},r={axis:e},[o,a]=A.runKernel(Cx,s,r);return{values:o,indices:a}}const WI=D({unique_:zM});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function MM(t,e,n){const s=I(t,"x","unsortedSegmentSum"),r=I(e,"segmentIds","unsortedSegmentSum","int32");C(Qi(n),()=>"numSegments must be of dtype int");const o={x:s,segmentIds:r},a={numSegments:n};return A.runKernel(Mf,o,a)}const db=D({unsortedSegmentSum_:MM});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function BM(t,e=0){const n=I(t,"x","unstack","string_or_numeric");C(e>=-n.shape.length&&e<n.shape.length,()=>`Axis = ${e} is not in [-${n.shape.length}, ${n.shape.length})`);const s={value:n},r={axis:e};return A.runKernel(zf,s,r)}const Vs=D({unstack_:BM});/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function VM(t,e){return Gx(t,e,"right")}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function UI(t,e=!0,n,s){return A.makeVariable(t,e,n,s)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pb(t,e){const n=[];for(let o=0;o<e.length;o++)e[o]&&n.push(o);const s=Ae(t,"int32"),r=Ae([n.length,t.length],"int32");for(let o=0;o<n.length;o++){const a=s.indexToLoc(n[o]),i=o*t.length;r.values.set(a,i)}return r.toTensor()}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */async function WM(t){const e=I(t,"condition","whereAsync","bool"),n=await e.data(),s=pb(e.shape,n);return t!==e&&e.dispose(),s}const GI=WM;/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */async function UM(t,e,n){const s=I(t,"tensor","boolMask"),r=I(e,"mask","boolMask","bool"),o=n??0,a=r.rank,i=s.shape;C(a>0,()=>"mask cannot be scalar"),Jn(i.slice(o,o+a),r.shape,"mask's shape must match the first K dimensions of tensor's shape,");let l=1;for(let m=o;m<o+a;m++)l*=i[m];const u=i.slice(0,o).concat([l],i.slice(o+a)),c=F(s,u),h=F(r,[-1]),d=await GI(h),p=Ya(d,[1]),f=eh(c,p,o);return t!==s&&s.dispose(),e!==r&&r.dispose(),p.dispose(),c.dispose(),h.dispose(),d.dispose(),f}const GM=UM;/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function HM(t,e,n){const s=I(t,"x","transpose");if(e==null&&(e=s.shape.map((a,i)=>i).reverse()),C(s.rank===e.length,()=>`Error in transpose: rank of input ${s.rank} must match length of perm ${e}.`),e.forEach(a=>{C(a>=0&&a<s.rank,()=>`All entries in 'perm' must be between 0 and ${s.rank-1} but got ${e}`)}),s.rank<=1)return s.clone();const r={x:s},o={perm:e};return s.dtype==="complex64"?V(()=>{let a=Fu(s),i=Hf(s);return a=A.runKernel(Li,{x:a},o),i=A.runKernel(Li,{x:i},o),n&&(i=it(i)),Oo(a,i)}):A.runKernel(Li,r,o)}const We=D({transpose_:HM});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function jM(t,e,n,s,r=!0){const o=I(t,"v","movingAverage"),a=I(e,"x","movingAverage"),i=I(n,"decay","movingAverage");LF(o,a),C(Me(o.shape,a.shape),()=>"Shape mismatch in v and x");const l=Se(1),u=fe(l,i);let c=O(fe(a,o),u);if(r){C(s!=null,()=>"When using zeroDebias: true, step is required.");const h=I(s,"step","movingAverage");c=we(c,fe(l,Po(i,h)))}return te(o,c)}const KM=D({movingAverage_:jM});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function qM(t,e,n){ms(n);const s=I(t,"indices","scatterND","int32"),r=I(e,"updates","scatterND");cb(r,s,n);const o={indices:s,updates:r},a={shape:n};return A.runKernel(cx,o,a)}const XM=D({scatterND_:qM});function YM(t,e,n,s){if(t.dtype!=="int32")throw new Error(`tf.sparseToDense() expects the indices to be int32 type, but the dtype was ${t.dtype}.`);if(t.rank>2)throw new Error(`sparseIndices should be a scalar, vector, or matrix, but got shape ${t.shape}.`);const r=t.rank>0?t.shape[0]:1,o=t.rank>1?t.shape[1]:1;if(n.length!==o)throw new Error(`outputShape has incorrect number of elements:, ${n.length}, should be: ${o}.`);const a=e.size;if(!(e.rank===0||e.rank===1&&a===r))throw new Error(`sparseValues has incorrect shape ${e.shape}, should be [] or [${r}]`);if(e.dtype!==s.dtype)throw new Error("sparseValues.dtype must match defaultValues.dtype")}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function QM(t,e,n,s=0){ms(n);const r=I(t,"sparseIndices","sparseToDense","int32"),o=I(e,"sparseValues","sparseToDense","string_or_numeric"),a=I(s,"defaultValue","sparseToDense",o.dtype);YM(r,o,n,a);const i={sparseIndices:r,sparseValues:o,defaultValue:a},l={outputShape:n};return A.runKernel(yx,i,l)}const ZM=D({sparseToDense_:QM});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function JM(t,e){const n=I(e,"indices","gatherND","int32"),r={params:I(t,"x","gatherND","string_or_numeric"),indices:n};return A.runKernel(H1,r)}const eB=D({gatherND_:JM});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tB(t,e){if(e==null)return t.shape.slice();if(Me(t.shape,e))return e;if(t.shape.length===e.length){const n=[];for(let s=0;s<t.shape.length;s++)e[s]==null&&t.shape[s]!=null?n.push(t.shape[s]):n.push(e[s]);return n}return e}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function nB(t,e,n,s){const r=I(t,"x","dropout");if(C(r.dtype==="float32",()=>`x has to be a floating point tensor since it's going to be scaled, but got a ${r.dtype} tensor instead.`),C(e>=0&&e<1,()=>`rate must be a float in the range [0, 1), but got ${e}.`),e===0)return t instanceof ut?r.clone():r;const o=tB(r,n),a=1-e,i=we(Jc(te(Xa(o,0,1,"float32",s),a)),a);return O(r,i)}const HI=D({dropout_:nB});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function jI(t){return Math.floor(Math.pow(2,Math.ceil(Math.log(t)/Math.log(2))))}function fb(t,e,n){const s=1-t%2,r=new Float32Array(t);for(let o=0;o<t;++o){const a=2*Math.PI*o/(t+s-1);r[o]=e-n*Math.cos(a)}return Sn(r,"float32")}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */async function sB(t,e,n=1){const s=I(t,"predictions","inTopK"),r=I(e,"targets","inTopK");C(s.rank>1,()=>`inTopK() expects the predictions to be of rank 2 or higher, but got ${s.rank}`),C(s.rank-1===r.rank,()=>`predictions rank should be 1 larger than targets rank, but got predictions rank ${s.rank} and targets rank ${r.rank}`),Jn(s.shape.slice(0,s.shape.length-1),r.shape,"predictions's shape should be align with the targets' shape, except the last dimension.");const o=s.shape[s.shape.length-1];C(n>0&&n<=o,()=>`'k' passed to inTopK() must be > 0 && <= the predictions last dimension (${o}), but got ${n}`);const a=await s.data(),i=await r.data(),[l,u]=[a.length/o,o],c=en("bool",l);for(let h=0;h<l;h++){const d=h*u,p=a.subarray(d,d+u),f=[];for(let m=0;m<p.length;m++)f.push({value:p[m],index:m});f.sort((m,y)=>y.value-m.value),c[h]=0;for(let m=0;m<n;m++)if(f[m].index===i[h]){c[h]=1;break}}return t!==s&&s.dispose(),e!==r&&r.dispose(),Fs(c,r.shape,"bool")}const rB=sB;/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function oB(t,e,n,s,r,o="NHWC",a){let i=t;t.rank===3&&(i=F(t,[1,t.shape[0],t.shape[1],t.shape[2]]));let l=e;l.rank===3&&(l=F(e,[1,e.shape[0],e.shape[1],e.shape[2]])),C(i.rank===4,()=>`Error in conv2dDerFilter: input must be rank 4, but got shape ${i.shape}.`),C(l.rank===4,()=>`Error in conv2dDerFilter: dy must be rank 4, but got shape ${l.shape}.`),C(n.length===4,()=>`Error in conv2dDerFilter: filterShape must be length 4, but got ${n}.`);const u=o==="NHWC"?i.shape[3]:i.shape[1],c=o==="NHWC"?l.shape[3]:l.shape[1];C(u===n[2],()=>`Error in conv2dDerFilter: depth of input ${u}) must match input depth in filter (${n[2]}.`),C(c===n[3],()=>`Error in conv2dDerFilter: depth of dy (${c}) must match output depth for filter (${n[3]}).`),Cn("conv2dDerFilter",r,a);const h={x:i,dy:l},d={strides:s,pad:r,dataFormat:o,dimRoundingMode:a,filterShape:n};return A.runKernel(R1,h,d)}const mb=D({conv2DBackpropFilter_:oB});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function om(t,e,n){if(n==null||n==="linear")return t;if(n==="relu")return O(t,vl(e));throw new Error(`Cannot compute gradient for fused activation ${n}.`)}function am(t,e){let n=e;const s=Bt(t.shape,e.shape);return s.length>0&&(n=ye(n,s)),F(n,t.shape)}function im(t,e,n,s){if(e==="linear")return t;if(e==="relu")return _r(t);if(e==="elu")return Qc(t);if(e==="relu6")return eb(t);if(e==="prelu")return Zf(t,n);if(e==="leakyrelu")return jf(t,s);if(e==="sigmoid")return Nr(t);throw new Error(`Unknown fused activation ${e}.`)}const lm=(t,e)=>!(t>0)||e==="linear";/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function aB({x:t,filter:e,strides:n,pad:s,dataFormat:r="NHWC",dilations:o=[1,1],dimRoundingMode:a,bias:i,activation:l="linear",preluActivationWeights:u,leakyreluAlpha:c}){if(l=l||"linear",lm(A.state.gradientDepth,l)===!1){C(r==="NHWC",()=>`Error in fused conv2d: got dataFormat of ${r} but only NHWC is currently supported for the case of gradient depth is 0 and the activation is not linear.`);let k=Lo(t,e,n,s,r,o,a);return i!=null&&(k=te(k,i)),im(k,l,u,c)}const h=I(t,"x","conv2d","float32"),d=I(e,"filter","conv2d","float32");let p=h,f=!1;h.rank===3&&(f=!0,p=F(h,[1,h.shape[0],h.shape[1],h.shape[2]])),C(p.rank===4,()=>`Error in fused conv2d: input must be rank 4, but got rank ${p.rank}.`),C(d.rank===4,()=>`Error in fused conv2d: filter must be rank 4, but got rank ${d.rank}.`),Cn("fused conv2d",s,a);const m=r==="NHWC"?p.shape[3]:p.shape[1];C(d.shape[2]===m,()=>`Error in conv2d: depth of input (${m}) must match input depth for filter ${d.shape[2]}.`),C(tn(n,o),()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${n} and dilations '${o}'`);const y=Kt(p.shape,d.shape,n,o,s,a);let g;i!=null&&(g=I(i,"bias","fused conv2d"),[g]=vt(g,h),r==="NHWC"?Re(y.outShape,g.shape):(C(g.shape.length<=1,()=>`Error in fused conv2d: only supports scalar or 1-D Tensor bias for NCHW format but got the bias of rank-${g.shape.length}.`),C(g.shape.length===0||g.shape[0]===y.outChannels||g.shape[0]===1,()=>`Error in fused conv2d: bias shape (${g.shape}) is not compatible with the number of output channels (${y.outChannels})`)));let x;if(u!=null){const k=u.shape;if(C(k.length<=1||k.length===3,()=>`Error in fused conv2d: only supports scalar, 1-D Tensor or 3-D Tensor PReLU activation weights but got a tensor of rank-${k.length}.`),k.length===1)C(k[0]===1||k[0]===y.outChannels,()=>`Error in fused conv2d: PReLU activation weights (${k}) is not compatible with the number of output channels (${y.outChannels}).`);else if(k.length===3)try{Re(k,y.outShape)}catch{const N=`Error in fused conv2d: PReLU activation weights (${k}) is not compatible with the output shape of the conv2d (${y.outShape}).`;throw Error(N)}x=I(u,"prelu weights","fused conv2d")}const w=(k,$)=>{C(r==="NHWC",()=>`Error in gradient of fused conv2D: got dataFormat of ${r} but only NHWC is currently supported.`);const[N,E,T,R]=$,z=om(k,T,l);C(Fo(o),()=>`Error in gradient of fused conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${o}'`);const P=Fx(E.shape,z,N,n,s),W=mb(E,z,N.shape,n,s),M=[P,W];if(R!=null){const U=am(R,z);M.push(U)}return M},b={x:p,filter:d,bias:g,preluActivationWeights:x},v={strides:n,pad:s,dataFormat:r,dilations:o,dimRoundingMode:a,activation:l,leakyreluAlpha:c};return i==null?Zr(($,N,E)=>{let T=A.runKernel(Gd,b,v);return E([N,$,T]),f&&(T=F(T,[T.shape[1],T.shape[2],T.shape[3]])),{value:T,gradFunc:w}})(p,d):Zr(($,N,E,T)=>{let R=A.runKernel(Gd,b,v);return T([N,$,R,E]),f&&(R=F(R,[R.shape[1],R.shape[2],R.shape[3]])),{value:R,gradFunc:w}})(p,d,g)}const KI=D({fusedConv2d_:aB});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function iB(t,e,n,s,r,o=[1,1],a){let i=t;t.rank===3&&(i=F(t,[1,t.shape[0],t.shape[1],t.shape[2]]));let l=e;l.rank===3&&(l=F(e,[1,e.shape[0],e.shape[1],e.shape[2]]));const u={x:i,dy:l},c={strides:s,pad:r,dimRoundingMode:a,dilations:o,filterShape:n};return A.runKernel(P1,u,c)}const qI=D({depthwiseConv2dNativeBackpropFilter_:iB});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function lB(t,e,n,s,r,o=[1,1],a){let i=e,l=!1;e.rank===3&&(l=!0,i=F(e,[1,e.shape[0],e.shape[1],e.shape[2]]));const u={dy:i,filter:n},c={strides:s,pad:r,dimRoundingMode:a,dilations:o,inputShape:t},h=A.runKernel(z1,u,c);return l?F(h,[h.shape[1],h.shape[2],h.shape[3]]):h}const XI=D({depthwiseConv2dNativeBackpropInput_:lB});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function uB({x:t,filter:e,strides:n,pad:s,dataFormat:r="NHWC",dilations:o=[1,1],dimRoundingMode:a,bias:i,activation:l="linear",preluActivationWeights:u,leakyreluAlpha:c}){if(lm(A.state.gradientDepth,l)===!1){let v=Yc(t,e,n,s,r,o,a);return i!=null&&(v=te(v,i)),im(v,l,u,c)}const h=I(t,"x","depthwiseConv2d","float32"),d=I(e,"filter","depthwiseConv2d","float32");let p=h,f=!1;h.rank===3&&(f=!0,p=F(h,[1,h.shape[0],h.shape[1],h.shape[2]])),C(p.rank===4,()=>`Error in fused depthwiseConv2d: input must be rank 4, but got rank ${p.rank}.`),C(d.rank===4,()=>`Error in fused depthwiseConv2d: filter must be rank 4, but got rank ${d.rank}.`),C(p.shape[3]===d.shape[2],()=>`Error in fused depthwiseConv2d: number of input channels (${p.shape[3]}) must match the inChannels dimension in filter ${d.shape[2]}.`),o==null&&(o=[1,1]),C(tn(n,o),()=>`Error in fused depthwiseConv2d: Either strides or dilations must be 1. Got strides ${n} and dilations '${o}'`),Cn("fused depthwiseConv2d",s,a);const m=Kt(p.shape,d.shape,n,o,s,a,!0);let y;i!=null&&(y=I(i,"bias","fused conv2d"),[y]=vt(y,h),Re(m.outShape,y.shape));let g;u!=null&&(g=I(u,"prelu weights","fused depthwiseConv2d"));const x=(v,k)=>{C(Fo(o),()=>`Error in gradient of fused depthwiseConv2d: dilation rates greater than 1 are not yet supported. Got dilations '${o}'`);const[$,N,E,T]=k,R=om(v,E,l),z=XI(N.shape,R,$,n,s,o,a),P=qI(N,R,$.shape,n,s,o,a);if(T!=null){const W=am(y,R);return[z,P,W]}return[z,P]},w={x:p,filter:d,bias:y,preluActivationWeights:g},b={strides:n,pad:s,dataFormat:r,dilations:o,dimRoundingMode:a,activation:l,leakyreluAlpha:c};return i==null?Zr((k,$,N)=>{let E=A.runKernel(Hd,w,b);return N([$,k,E]),f&&(E=F(E,[E.shape[1],E.shape[2],E.shape[3]])),{value:E,gradFunc:x}})(p,d):Zr((k,$,N,E)=>{let T=A.runKernel(Hd,w,b);return E([$,k,T,N]),f&&(T=F(T,[T.shape[1],T.shape[2],T.shape[3]])),{value:T,gradFunc:x}})(p,d,y)}const cB=D({fusedDepthwiseConv2d_:uB});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function hB({a:t,b:e,transposeA:n=!1,transposeB:s=!1,bias:r,activation:o="linear",preluActivationWeights:a,leakyreluAlpha:i=.2}){if(lm(A.state.gradientDepth,o)===!1){let R=Pe(t,e,n,s);return r!=null&&(R=te(R,r)),im(R,o,a,i)}let l=I(t,"a","fused matMul"),u=I(e,"b","fused matMul");[l,u]=vt(l,u);const c=n?l.shape[l.rank-2]:l.shape[l.rank-1],h=s?u.shape[u.rank-1]:u.shape[u.rank-2],d=n?l.shape[l.rank-1]:l.shape[l.rank-2],p=s?u.shape[u.rank-2]:u.shape[u.rank-1],f=l.shape.slice(0,-2),m=u.shape.slice(0,-2),y=K(f),g=K(m);C(c===h,()=>`Error in fused matMul: inner shapes (${c}) and (${h}) of Tensors with shapes ${l.shape} and ${u.shape} and transposeA=${n} and transposeB=${s} must match.`);const w=Re(l.shape.slice(0,-2),u.shape.slice(0,-2)).concat([d,p]),b=n?F(l,[y,c,d]):F(l,[y,d,c]),v=s?F(u,[g,p,h]):F(u,[g,h,p]);let k;r!=null&&(k=I(r,"bias","fused matMul"),[k]=vt(k,l),Re(w,k.shape));let $;a!=null&&($=I(a,"prelu weights","fused matMul"));const N=(R,z)=>{const[P,W,M,U]=z,j=om(F(R,M.shape),M,o);let _,B;if(!n&&!s?(_=Pe(j,W,!1,!0),B=Pe(P,j,!0,!1)):!n&&s?(_=Pe(j,W,!1,!1),B=Pe(j,P,!0,!1)):n&&!s?(_=Pe(W,j,!1,!0),B=Pe(P,j,!1,!1)):(_=Pe(W,j,!0,!0),B=Pe(j,P,!0,!0)),r!=null){const H=am(U,j);return[_,B,H]}else return[_,B]},E={a:b,b:v,bias:k,preluActivationWeights:$},T={transposeA:n,transposeB:s,activation:o,leakyreluAlpha:i};return r==null?Zr((z,P,W)=>{const M=A.runKernel(Ud,E,T);return W([z,P,M]),{value:F(M,w),gradFunc:N}})(b,v):Zr((z,P,W,M)=>{const U=A.runKernel(Ud,E,T);return M([z,P,U,W]),{value:F(U,w),gradFunc:N}})(b,v,k)}const Ky=D({fusedMatMul_:hB});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const dB=Object.freeze(Object.defineProperty({__proto__:null,conv2d:KI,depthwiseConv2d:cB,matMul:Ky},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pB(t){return fb(t,.54,.46)}const fB=D({hammingWindow_:pB});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function mB(t){return fb(t,.5,.5)}const YI=D({hannWindow_:mB});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gB(t,e,n,s=!1,r=0){let o=0;const a=[];for(;o+e<=t.size;)a.push(Ve(t,o,e)),o+=n;if(s)for(;o<t.size;){const i=o+e-t.size,l=Rt([Ve(t,o,e-i),bl([i],r)]);a.push(l),o+=n}return a.length===0?du([],[0,e]):F(Rt(a),[a.length,e])}const QI=D({frame_:gB});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function yB(t,e,n,s,r=YI){s==null&&(s=jI(e));const o=QI(t,e,n),a=O(o,r(e));return rm(a,s)}const xB=D({stft_:yB});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function bB(t,e,n,s,r="bilinear",o=0){const a=I(t,"image","cropAndResize"),i=I(e,"boxes","cropAndResize","float32"),l=I(n,"boxInd","cropAndResize","int32"),u=i.shape[0];C(a.rank===4,()=>`Error in cropAndResize: image must be rank 4,but got rank ${a.rank}.`),C(i.rank===2&&i.shape[1]===4,()=>`Error in cropAndResize: boxes must be have size [${u},4] but had shape ${i.shape}.`),C(l.rank===1&&l.shape[0]===u,()=>`Error in cropAndResize: boxInd must be have size [${u}] but had shape ${i.shape}.`),C(s.length===2,()=>`Error in cropAndResize: cropSize must be of length 2, but got length ${s.length}.`),C(s[0]>=1&&s[1]>=1,()=>`cropSize must be atleast [1,1], but was ${s}`),C(r==="bilinear"||r==="nearest",()=>`method must be bilinear or nearest, but was ${r}`);const c={image:a,boxes:i,boxInd:l},h={method:r,extrapolationValue:o,cropSize:s};return A.runKernel(O1,c,h)}const wB=D({cropAndResize_:bB});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function vB(t){const e=I(t,"image","flipLeftRight","float32");C(e.rank===4,()=>`Error in flipLeftRight: image must be rank 4,but got rank ${e.rank}.`);const n={image:e};return A.runKernel(G1,n,{})}const SB=D({flipLeftRight_:vB});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function kB(t){const e=I(t,"image","grayscaleToRGB"),n=e.rank-1,s=e.shape[n];C(e.rank>=2,()=>`Error in grayscaleToRGB: images must be at least rank 2, but got rank ${e.rank}.`),C(s===1,()=>`Error in grayscaleToRGB: last dimension of a grayscale image should be size 1, but got size ${s}.`);const r=new Array(e.rank);return r.fill(1,0,n),r[n]=3,Rs(e,r)}const $B=D({grayscaleToRGB_:kB});/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function CB(t){const e=I(t,"image","RGBToGrayscale"),n=e.rank-1,s=e.shape[n];C(e.rank>=2,()=>`Error in RGBToGrayscale: images must be at least rank 2, but got rank ${e.rank}.`),C(s===3,()=>`Error in RGBToGrayscale: last dimension of an RGB image should be size 3, but got size ${s}.`);const r=e.dtype,o=he(e,"float32"),a=Sn([.2989,.587,.114]);let i;switch(e.rank){case 2:i=pi("ij,j->i",o,a);break;case 3:i=pi("ijk,k->ij",o,a);break;case 4:i=pi("ijkl,l->ijk",o,a);break;case 5:i=pi("ijklm,m->ijkl",o,a);break;case 6:i=pi("ijklmn,n->ijklm",o,a);break;default:throw new Error("Not a valid tensor rank.")}return i=wn(i,-1),he(i,r)}const NB=D({rgbToGrayscale_:CB});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function IB(t,e,n=0,s=.5){const r=I(t,"image","rotateWithOffset","float32");C(r.rank===4,()=>`Error in rotateWithOffset: image must be rank 4,but got rank ${r.rank}.`);const o={image:r},a={radians:e,fillValue:n,center:s};return A.runKernel(Nx,o,a)}const TB=D({rotateWithOffset_:IB});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Sl(t,e,n,s,r,o){s==null&&(s=.5),r==null&&(r=Number.NEGATIVE_INFINITY),o==null&&(o=0);const a=t.shape[0];return n=Math.min(n,a),C(0<=s&&s<=1,()=>`iouThreshold must be in [0, 1], but was '${s}'`),C(t.rank===2,()=>`boxes must be a 2D tensor, but was of rank '${t.rank}'`),C(t.shape[1]===4,()=>`boxes must have 4 columns, but 2nd dimension was ${t.shape[1]}`),C(e.rank===1,()=>"scores must be a 1D tensor"),C(e.shape[0]===a,()=>`scores has incompatible shape with boxes. Expected ${a}, but was ${e.shape[0]}`),C(0<=o&&o<=1,()=>`softNmsSigma must be in [0, 1], but was '${o}'`),{maxOutputSize:n,iouThreshold:s,scoreThreshold:r,softNmsSigma:o}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function EB(t,e,n,s=.5,r=Number.NEGATIVE_INFINITY){const o=I(t,"boxes","nonMaxSuppression","float32"),a=I(e,"scores","nonMaxSuppression","float32"),i=Sl(o,a,n,s,r);n=i.maxOutputSize,s=i.iouThreshold,r=i.scoreThreshold;const l={maxOutputSize:n,iouThreshold:s,scoreThreshold:r};return A.runKernel(ex,{boxes:o,scores:a},l)}const RB=D({nonMaxSuppression_:EB});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function DB(t,e,n){const s=AB(t,e,n),r=s<0?-(s+1):s;t.splice(r,0,e)}function AB(t,e,n){return OB(t,e,n||_B)}function _B(t,e){return t>e?1:t<e?-1:0}function OB(t,e,n){let s=0,r=t.length,o=0,a=!1;for(;s<r;){o=s+(r-s>>>1);const i=n(e,t[o]);i>0?s=o+1:(r=o,a=!i)}return a?s:-s-1}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gb(t,e,n,s,r){return bb(t,e,n,s,r,0)}function yb(t,e,n,s,r,o){return bb(t,e,n,s,r,0,!1,o,!0)}function xb(t,e,n,s,r,o){return bb(t,e,n,s,r,o,!0)}function bb(t,e,n,s,r,o,a=!1,i=!1,l=!1){const u=[];for(let y=0;y<e.length;y++)e[y]>r&&u.push({score:e[y],boxIndex:y,suppressBeginIndex:0});u.sort(uS);const c=o>0?-.5/o:0,h=[],d=[];for(;h.length<n&&u.length>0;){const y=u.pop(),{score:g,boxIndex:x,suppressBeginIndex:w}=y;if(g<r)break;let b=!1;for(let v=h.length-1;v>=w;--v){const k=FB(t,x,h[v]);if(k>=s){b=!0;break}if(y.score=y.score*LB(s,c,k),y.score<=r)break}y.suppressBeginIndex=h.length,b||(y.score===g?(h.push(x),d.push(y.score)):y.score>r&&DB(u,y,uS))}const p=h.length,f=n-p;i&&f>0&&(h.push(...new Array(f).fill(0)),d.push(...new Array(f).fill(0)));const m={selectedIndices:h};return a&&(m.selectedScores=d),l&&(m.validOutputs=p),m}function FB(t,e,n){const s=t.subarray(e*4,e*4+4),r=t.subarray(n*4,n*4+4),o=Math.min(s[0],s[2]),a=Math.min(s[1],s[3]),i=Math.max(s[0],s[2]),l=Math.max(s[1],s[3]),u=Math.min(r[0],r[2]),c=Math.min(r[1],r[3]),h=Math.max(r[0],r[2]),d=Math.max(r[1],r[3]),p=(i-o)*(l-a),f=(h-u)*(d-c);if(p<=0||f<=0)return 0;const m=Math.max(o,u),y=Math.max(a,c),g=Math.min(i,h),x=Math.min(l,d),w=Math.max(g-m,0)*Math.max(x-y,0);return w/(p+f-w)}function LB(t,e,n){const s=Math.exp(e*n*n);return n<=t?s:0}function uS(t,e){return t.score-e.score||t.score===e.score&&e.boxIndex-t.boxIndex}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */async function PB(t,e,n,s=.5,r=Number.NEGATIVE_INFINITY){const o=I(t,"boxes","nonMaxSuppressionAsync"),a=I(e,"scores","nonMaxSuppressionAsync"),i=Sl(o,a,n,s,r);n=i.maxOutputSize,s=i.iouThreshold,r=i.scoreThreshold;const l=await Promise.all([o.data(),a.data()]),u=l[0],c=l[1],{selectedIndices:h}=gb(u,c,n,s,r);return o!==t&&o.dispose(),a!==e&&a.dispose(),Sn(h,"int32")}const zB=PB;/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function MB(t,e,n,s=.5,r=Number.NEGATIVE_INFINITY,o=0){const a=I(t,"boxes","nonMaxSuppression"),i=I(e,"scores","nonMaxSuppression"),l=Sl(a,i,n,s,r,o);n=l.maxOutputSize,s=l.iouThreshold,r=l.scoreThreshold,o=l.softNmsSigma;const u={boxes:a,scores:i},c={maxOutputSize:n,iouThreshold:s,scoreThreshold:r,softNmsSigma:o},h=A.runKernel(nx,u,c);return{selectedIndices:h[0],selectedScores:h[1]}}const BB=D({nonMaxSuppressionWithScore_:MB});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */async function VB(t,e,n,s=.5,r=Number.NEGATIVE_INFINITY,o=0){const a=I(t,"boxes","nonMaxSuppressionAsync"),i=I(e,"scores","nonMaxSuppressionAsync"),l=Sl(a,i,n,s,r,o);n=l.maxOutputSize,s=l.iouThreshold,r=l.scoreThreshold,o=l.softNmsSigma;const u=await Promise.all([a.data(),i.data()]),c=u[0],h=u[1],{selectedIndices:d,selectedScores:p}=xb(c,h,n,s,r,o);return a!==t&&a.dispose(),i!==e&&i.dispose(),{selectedIndices:Sn(d,"int32"),selectedScores:Sn(p)}}const WB=VB;/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function UB(t,e,n,s=.5,r=Number.NEGATIVE_INFINITY,o=!1){const a=I(t,"boxes","nonMaxSuppression"),i=I(e,"scores","nonMaxSuppression"),l=Sl(a,i,n,s,r,null),u=l.maxOutputSize,c=l.iouThreshold,h=l.scoreThreshold,d={boxes:a,scores:i},p={maxOutputSize:u,iouThreshold:c,scoreThreshold:h,padToMaxOutputSize:o},f=A.runKernel(tx,d,p);return{selectedIndices:f[0],validOutputs:f[1]}}const GB=D({nonMaxSuppressionPadded_:UB});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */async function HB(t,e,n,s=.5,r=Number.NEGATIVE_INFINITY,o=!1){const a=I(t,"boxes","nonMaxSuppressionAsync"),i=I(e,"scores","nonMaxSuppressionAsync"),l=Sl(a,i,n,s,r,null),u=l.maxOutputSize,c=l.iouThreshold,h=l.scoreThreshold,[d,p]=await Promise.all([a.data(),i.data()]),{selectedIndices:f,validOutputs:m}=yb(d,p,u,c,h,o);return a!==t&&a.dispose(),i!==e&&i.dispose(),{selectedIndices:Sn(f,"int32"),validOutputs:Se(m,"int32")}}const jB=HB;/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function KB(t,e,n=!1,s=!1){const r=I(t,"images","resizeBilinear");C(r.rank===3||r.rank===4,()=>`Error in resizeBilinear: x must be rank 3 or 4, but got rank ${r.rank}.`),C(e.length===2,()=>`Error in resizeBilinear: new shape must 2D, but got shape ${e}.`),C(s===!1||n===!1,()=>"Error in resizeBilinear: If halfPixelCenters is true, alignCorners must be false.");let o=r,a=!1;r.rank===3&&(a=!0,o=F(r,[1,r.shape[0],r.shape[1],r.shape[2]]));const i={images:o},l={alignCorners:n,halfPixelCenters:s,size:e},u=A.runKernel(Ef,i,l);return a?F(u,[u.shape[1],u.shape[2],u.shape[3]]):u}const ZI=D({resizeBilinear_:KB});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function qB(t,e,n=!1,s=!1){const r=I(t,"images","resizeNearestNeighbor");C(r.rank===3||r.rank===4,()=>`Error in resizeNearestNeighbor: x must be rank 3 or 4, but got rank ${r.rank}.`),C(e.length===2,()=>`Error in resizeNearestNeighbor: new shape must 2D, but got shape ${e}.`),C(r.dtype==="float32"||r.dtype==="int32",()=>"`images` must have `int32` or `float32` as dtype"),C(s===!1||n===!1,()=>"Error in resizeNearestNeighbor: If halfPixelCenters is true, alignCorners must be false.");let o=r,a=!1;r.rank===3&&(a=!0,o=F(r,[1,r.shape[0],r.shape[1],r.shape[2]]));const i={images:o},l={alignCorners:n,halfPixelCenters:s,size:e},u=A.runKernel(Tf,i,l);return a?F(u,[u.shape[1],u.shape[2],u.shape[3]]):u}const JI=D({resizeNearestNeighbor_:qB});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function XB(t,e="binary",n=!1,s=.5){const r=I(t,"image","threshold"),o=.2989,a=.587,i=.114,l=r.shape[0]*r.shape[1];let u=O(Sn([s]),255),c,h,d,p;if(C(r.rank===3,()=>`Error in threshold: image must be rank 3,but got rank ${r.rank}.`),C(r.shape[2]===3||r.shape[2]===1,()=>`Error in threshold: image color channel must be equal to 3 or 1but got ${r.shape[2]}.`),C(r.dtype==="int32"||r.dtype==="float32",()=>`Error in dtype: image dtype must be int32 or float32,but got dtype ${r.dtype}.`),C(e==="otsu"||e==="binary",()=>`Method must be binary or otsu, but was ${e}`),r.shape[2]===3){[c,h,d]=qn(r,[1,1,1],-1);const y=O(c,o),g=O(h,a),x=O(d,i);p=te(te(y,g),x)}else p=t;if(e==="otsu"){const y=aI(he(tb(p),"int32"),Fs([]),256);u=YB(y,l)}const f=n?Ka(p,u):ts(p,u);return he(O(f,255),"int32")}function YB(t,e){let n=Sn([-1]),s=Sn([0]),r=Sn([0]),o,a,i,l,u,c;for(let h=0;h<t.size-1;h++){o=Ve(t,0,h+1),a=Ve(t,h+1),u=we(ye(o),e),c=we(ye(a),e);const d=ye(O(o,rl(0,o.size)));i=we(d,ye(o));const p=bl(a.shape,o.size),f=te(rl(0,a.size),p),m=O(a,f);l=we(ye(m),ye(a));const y=fe(i,l),g=fe(i,l),x=O(u,c);r=O(O(x,y),g);const w=ts(r,s);s=un(w,r,s),n=un(w,Sn([h]),n)}return n}const QB=D({threshold_:XB});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ZB(t,e,n="nearest",s="constant",r=0,o){const a=I(t,"image","transform","float32"),i=I(e,"transforms","transform","float32");C(a.rank===4,()=>`Error in transform: image must be rank 4,but got rank ${a.rank}.`),C(i.rank===2&&(i.shape[0]===a.shape[0]||i.shape[0]===1)&&i.shape[1]===8,()=>"Error in transform: Input transform should be batch x 8 or 1 x 8"),C(o==null||o.length===2,()=>`Error in transform: outputShape must be [height, width] or null, but got ${o}.`);const l={image:a,transforms:i},u={interpolation:n,fillMode:s,fillValue:r,outputShape:o};return A.runKernel($x,l,u)}const JB=D({transform_:ZB});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function eV(t,e,n){const s=I(t,"a","bandPart");C(s.rank>=2,()=>`bandPart(): Rank must be at least 2, got ${s.rank}.`);const r=s.shape,[o,a]=s.shape.slice(-2);let i,l;typeof e=="number"?(C(e%1===0,()=>`bandPart(): numLower must be an integer, got ${e}.`),C(e<=o,()=>`bandPart(): numLower (${e}) must not be greater than the number of rows (${o}).`),i=I(e<0?o:e,"numLower","bandPart")):(C(e.dtype==="int32",()=>"bandPart(): numLower's dtype must be an int32."),i=un(Ou(e,0),o,Oa(e,o))),typeof n=="number"?(C(n%1===0,()=>`bandPart(): numUpper must be an integer, got ${n}.`),C(n<=a,()=>`bandPart(): numUpper (${n}) must not be greater than the number of columns (${a}).`),l=I(n<0?a:n,"numUpper","bandPart")):(C(n.dtype==="int32",()=>"bandPart(): numUpper's dtype must be an int32."),l=un(Ou(n,0),a,Oa(n,a)));const u=F(rl(0,o,1,"int32"),[-1,1]),c=rl(0,a,1,"int32"),h=fe(u,c),d=Rr(Ka(h,i),Zo(h,it(l))),p=Ot([o,a],s.dtype);return F(ds(Vs(F(s,[-1,o,a])).map(f=>un(d,f,p))),r)}const tV=D({bandPart_:eV});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function nV(t){let e;if(Array.isArray(t)){e=!1,C(t!=null&&t.length>0,()=>"Gram-Schmidt process: input must not be null, undefined, or empty");const r=t[0].shape[0];for(let o=1;o<t.length;++o)C(t[o].shape[0]===r,()=>`Gram-Schmidt: Non-unique lengths found in the input vectors: (${t[o].shape[0]} vs. ${r})`)}else e=!0,t=qn(t,t.shape[0],0).map(r=>Ya(r,[0]));C(t.length<=t[0].shape[0],()=>`Gram-Schmidt: Number of vectors (${t.length}) exceeds number of dimensions (${t[0].shape[0]}).`);const n=[],s=t;for(let r=0;r<t.length;++r)n.push(A.tidy(()=>{let o=s[r];if(r>0)for(let a=0;a<r;++a){const i=O(ye(O(n[a],o)),n[a]);o=fe(o,i)}return we(o,Zc(o,"euclidean"))}));return e?ds(n,0):n}const sV=D({gramSchmidt_:nV});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function rV(t,e=!1){if(C(t.rank>=2,()=>`qr() requires input tensor to have a rank >= 2, but got rank ${t.rank}`),t.rank===2)return cS(t,e);{const n=t.shape.slice(0,t.shape.length-2).reduce((l,u)=>l*u),s=Vs(F(t,[n,t.shape[t.shape.length-2],t.shape[t.shape.length-1]]),0),r=[],o=[];s.forEach(l=>{const[u,c]=cS(l,e);r.push(u),o.push(c)});const a=F(ds(r,0),t.shape),i=F(ds(o,0),t.shape);return[a,i]}}function cS(t,e=!1){return A.tidy(()=>{C(t.shape.length===2,()=>`qr2d() requires a 2D Tensor, but got a ${t.shape.length}D Tensor.`);const n=t.shape[0],s=t.shape[1];let r=Bx(n),o=Hr(t);const a=du([[1]],[1,1]);let i=Hr(a);const l=n>=s?s:n;for(let u=0;u<l;++u){const c=o,h=i,d=r;[i,o,r]=A.tidy(()=>{const p=Ve(o,[u,u],[n-u,1]),f=Zc(p),m=Ve(o,[u,u],[1,1]),y=un(ts(m,0),du([[-1]]),du([[1]])),g=fe(m,O(y,f)),x=we(p,g);x.shape[0]===1?i=Hr(a):i=Rt([a,Ve(x,[1,0],[x.shape[0]-1,x.shape[1]])],0);const w=it(we(Pe(y,g),f)),b=Ve(o,[u,0],[n-u,s]),v=O(w,i),k=We(i);if(u===0)o=fe(b,Pe(v,Pe(k,b)));else{const E=fe(b,Pe(v,Pe(k,b)));o=Rt([Ve(o,[0,0],[u,s]),E],0)}const $=We(v),N=Ve(r,[0,u],[n,r.shape[1]-u]);if(u===0)r=fe(N,Pe(Pe(N,i),$));else{const E=fe(N,Pe(Pe(N,i),$));r=Rt([Ve(r,[0,0],[n,u]),E],1)}return[i,o,r]}),Oe([c,h,d])}return!e&&n>s&&(r=Ve(r,[0,0],[n,s]),o=Ve(o,[0,0],[s,s])),[r,o]})}const oV=D({qr_:rV});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var Rn;(function(t){t[t.NONE=0]="NONE",t[t.MEAN=1]="MEAN",t[t.SUM=2]="SUM",t[t.SUM_BY_NONZERO_WEIGHTS=3]="SUM_BY_NONZERO_WEIGHTS"})(Rn||(Rn={}));function aV(t,e,n=Rn.SUM_BY_NONZERO_WEIGHTS){const s=I(t,"losses","computeWeightedLoss");let r=null;e!=null&&(r=I(e,"weights","computeWeightedLoss"));const o=r==null?s:O(s,r);if(n===Rn.NONE)return o;if(n===Rn.SUM)return ye(o);if(n===Rn.MEAN){if(r==null)return xt(o);{const a=s.size/r.size,i=we(ye(o),ye(r));return a>1?we(i,Se(a)):i}}if(n===Rn.SUM_BY_NONZERO_WEIGHTS){if(r==null)return we(ye(o),Se(s.size));{const a=O(r,os(s.shape)),i=he(ye(sl(a,Se(0))),"float32");return we(ye(o),i)}}throw Error(`Unknown reduction: ${n}`)}const oo=D({computeWeightedLoss_:aV});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function iV(t,e,n,s=Rn.SUM_BY_NONZERO_WEIGHTS){const r=I(t,"labels","absoluteDifference"),o=I(e,"predictions","absoluteDifference");let a=null;n!=null&&(a=I(n,"weights","absoluteDifference")),Jn(r.shape,o.shape,"Error in absoluteDifference: ");const i=Dt(fe(r,o));return oo(i,a,s)}const lV=D({absoluteDifference_:iV});function uV(t,e,n,s,r=Rn.SUM_BY_NONZERO_WEIGHTS){const o=I(t,"labels","cosineDistance"),a=I(e,"predictions","cosineDistance");let i=null;s!=null&&(i=I(s,"weights","cosineDistance")),Jn(o.shape,a.shape,"Error in cosineDistance: ");const l=Se(1),u=fe(l,ye(O(o,a),n,!0));return oo(u,i,r)}const cV=D({cosineDistance_:uV});function hV(t,e,n,s=Rn.SUM_BY_NONZERO_WEIGHTS){let r=I(t,"labels","hingeLoss");const o=I(e,"predictions","hingeLoss");let a=null;n!=null&&(a=I(n,"weights","hingeLoss")),Jn(r.shape,o.shape,"Error in hingeLoss: ");const i=Se(1);r=fe(O(Se(2),r),i);const l=_r(fe(i,O(r,o)));return oo(l,a,s)}const dV=D({hingeLoss_:hV});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pV(t,e,n,s=1,r=Rn.SUM_BY_NONZERO_WEIGHTS){const o=I(t,"labels","huberLoss"),a=I(e,"predictions","huberLoss");let i=null;n!=null&&(i=I(n,"weights","huberLoss")),Jn(o.shape,a.shape,"Error in huberLoss: ");const l=Se(s),u=Dt(fe(a,o)),c=Oa(u,l),h=fe(u,c),d=te(O(Se(.5),Je(c)),O(l,h));return oo(d,i,r)}const fV=D({huberLoss_:pV});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function mV(t,e,n,s=1e-7,r=Rn.SUM_BY_NONZERO_WEIGHTS){const o=I(t,"labels","logLoss"),a=I(e,"predictions","logLoss");let i=null;n!=null&&(i=I(n,"weights","logLoss")),Jn(o.shape,a.shape,"Error in logLoss: ");const l=Se(1),u=Se(s),c=it(O(o,cs(te(a,u)))),h=O(fe(l,o),cs(te(fe(l,a),u))),d=fe(c,h);return oo(d,i,r)}const gV=D({logLoss_:mV});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function yV(t,e,n,s=Rn.SUM_BY_NONZERO_WEIGHTS){const r=I(t,"labels","meanSquaredError"),o=I(e,"predictions","meanSquaredError");let a=null;n!=null&&(a=I(n,"weights","meanSquaredError")),Jn(r.shape,o.shape,"Error in meanSquaredError: ");const i=ub(r,o);return oo(i,a,s)}const xV=D({meanSquaredError_:yV});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function bV(t,e){const n=I(t,"labels","sigmoidCrossEntropyWithLogits"),s=I(e,"logits","sigmoidCrossEntropyWithLogits");Jn(n.shape,s.shape,"Error in sigmoidCrossEntropyWithLogits: ");const r=_r(s),o=O(s,n),a=Kf(us(it(Dt(s))));return te(fe(r,o),a)}function wV(t,e,n,s=0,r=Rn.SUM_BY_NONZERO_WEIGHTS){let o=I(t,"multiClassLabels","sigmoidCrossEntropy");const a=I(e,"logits","sigmoidCrossEntropy");let i=null;if(n!=null&&(i=I(n,"weights","sigmoidCrossEntropy")),Jn(o.shape,a.shape,"Error in sigmoidCrossEntropy: "),s>0){const u=Se(s),c=Se(1),h=Se(.5);o=te(O(o,fe(c,u)),O(h,u))}const l=bV(o,a);return oo(l,i,r)}const vV=D({sigmoidCrossEntropy_:wV});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function SV(t,e,n=-1){if(n===-1&&(n=e.rank-1),n!==e.rank-1)throw Error(`Softmax cross entropy along a non-last dimension is not yet supported. Labels / logits was rank ${e.rank} and dim was ${n}`);return Zr((r,o,a)=>{const l=Wx(o,[n],!0),u=fe(he(o,"float32"),l);a([r,u]);const c=it(O(u,r));return{value:ye(c,[n]),gradFunc:(p,f)=>{const[m,y]=f,g=$t(p.shape,[n]);return[O(F(p,g),fe(he(m,"float32"),us(y))),O(F(p,g),fe(us(y),he(m,"float32")))]}}})(t,e)}function kV(t,e,n,s=0,r=Rn.SUM_BY_NONZERO_WEIGHTS){let o=I(t,"onehotLabels","softmaxCrossEntropy");const a=I(e,"logits","softmaxCrossEntropy");let i=null;if(n!=null&&(i=I(n,"weights","softmaxCrossEntropy")),Jn(o.shape,a.shape,"Error in softmaxCrossEntropy: "),s>0){const u=Se(s),c=Se(1),h=Se(o.shape[1]);o=te(O(o,fe(c,u)),we(u,h))}const l=SV(o,a);return oo(l,i,r)}const $V=D({softmaxCrossEntropy_:kV});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function CV(t,e,n,s){const r=I(t,"indices","sparseFillEmptyRows","int32"),o=I(e,"values","sparseFillEmptyRows"),a=I(n,"denseShape","sparseFillEmptyRows","int32"),i=I(s,"defaultValue","sparseFillEmptyRows",o.dtype);if(r.rank!==2)throw new Error(`Indices should be Tensor2D but received shape
        ${r.shape}`);if(o.rank!==1)throw new Error(`Values should be Tensor1D but received shape ${o.shape}`);if(a.rank!==1)throw new Error(`Dense shape should be Tensor1D but received shape ${a.shape}`);if(i.rank!==0)throw new Error(`Default value should be a scalar but received shape ${i.shape}`);const l={indices:r,values:o,denseShape:a,defaultValue:i},u=A.runKernel(px,l);return{outputIndices:u[0],outputValues:u[1],emptyRowIndicator:u[2],reverseIndexMap:u[3]}}const NV=D({sparseFillEmptyRows_:CV});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function IV(t,e,n){const s=I(t,"inputIndices","sparseReshape","int32"),r=I(e,"inputShape","sparseReshape","int32"),o=I(n,"newShape","sparseReshape","int32");if(s.rank!==2)throw new Error(`Input indices should be Tensor2D but received shape
        ${s.shape}`);if(r.rank!==1)throw new Error(`Input shape should be Tensor1D but received shape ${r.shape}`);if(o.rank!==1)throw new Error(`New shape should be Tensor1D but received shape ${o.shape}`);const a={inputIndices:s,inputShape:r,newShape:o},i=A.runKernel(fx,a);return{outputIndices:i[0],outputShape:i[1]}}const TV=D({sparseReshape_:IV});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function EV(t,e,n){const s=I(t,"data","sparseSegmentMean"),r=I(e,"indices","sparseSegmentMean","int32"),o=I(n,"segmentIds","sparseSegmentMean","int32");if(s.rank<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(r.rank!==1)throw new Error(`Indices should be Tensor1D but received shape
          ${r.shape}`);if(o.rank!==1)throw new Error(`Segment ids should be Tensor1D but received shape
          ${o.shape}`);const a={data:s,indices:r,segmentIds:o};return A.runKernel(mx,a)}const RV=D({sparseSegmentMean_:EV});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function DV(t,e,n){const s=I(t,"data","sparseSegmentSum"),r=I(e,"indices","sparseSegmentSum","int32"),o=I(n,"segmentIds","sparseSegmentSum","int32");if(s.rank<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(r.rank!==1)throw new Error(`Indices should be Tensor1D but received shape
         ${r.shape}`);if(o.rank!==1)throw new Error(`Segment ids should be Tensor1D but received shape
         ${o.shape}`);const a={data:s,indices:r,segmentIds:o};return A.runKernel(gx,a)}const AV=D({sparseSegmentSum_:DV});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _V(t,e,n,s,r,o,a,i){const l=I(t,"data","stringNGrams","string");if(l.dtype!=="string")throw new Error("Data must be of datatype string");if(l.shape.length!==1)throw new Error(`Data must be a vector, saw: ${l.shape}`);const u=I(e,"dataSplits","stringNGrams");if(u.dtype!=="int32")throw new Error("Data splits must be of datatype int32");const c={separator:n,nGramWidths:s,leftPad:r,rightPad:o,padWidth:a,preserveShortSequences:i},h={data:l,dataSplits:u},d=A.runKernel(wx,h,c);return{nGrams:d[0],nGramsSplits:d[1]}}const OV=D({stringNGrams_:_V});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function FV(t,e,n=!0){const s=I(t,"input","stringSplit","string"),r=I(e,"delimiter","stringSplit","string");if(s.rank!==1)throw new Error(`Input should be Tensor1D but received shape ${s.shape}`);if(r.rank!==0)throw new Error(`Delimiter should be a scalar but received shape ${r.shape}`);const o={skipEmpty:n},a={input:s,delimiter:r},i=A.runKernel(vx,a,o);return{indices:i[0],values:i[1],shape:i[2]}}const LV=D({stringSplit_:FV});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function PV(t,e){const n=I(t,"input","stringToHashBucketFast","string"),s={numBuckets:e};if(e<=0)throw new Error("Number of buckets must be at least 1");const r={input:n};return A.runKernel(Sx,r,s)}const zV=D({stringToHashBucketFast_:PV});/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function MV(t,e,n,s=!0){const r=I(t,"input","staticRegexReplace","string"),o={pattern:e,rewrite:n,replaceGlobal:s};return A.runKernel(Pf,{x:r},o)}const BV=D({staticRegexReplace_:MV});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const VV={fft:sm,ifft:Pu,rfft:rm,irfft:lb},WV={hammingWindow:fB,hannWindow:YI,frame:QI,stft:xB},wr={flipLeftRight:SB,grayscaleToRGB:$B,resizeNearestNeighbor:JI,resizeBilinear:ZI,rgbToGrayscale:NB,rotateWithOffset:TB,cropAndResize:wB,nonMaxSuppression:RB,nonMaxSuppressionAsync:zB,nonMaxSuppressionWithScore:BB,nonMaxSuppressionWithScoreAsync:WB,nonMaxSuppressionPadded:GB,nonMaxSuppressionPaddedAsync:jB,threshold:QB,transform:JB},eT={bandPart:tV,gramSchmidt:sV,qr:oV},UV={absoluteDifference:lV,computeWeightedLoss:oo,cosineDistance:cV,hingeLoss:dV,huberLoss:fV,logLoss:gV,meanSquaredError:xV,sigmoidCrossEntropy:vV,softmaxCrossEntropy:$V},GV={sparseFillEmptyRows:NV,sparseReshape:TV,sparseSegmentMean:RV,sparseSegmentSum:AV},HV={stringNGrams:OV,stringSplit:LV,stringToHashBucketFast:zV,staticRegexReplace:BV};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const jV=new Map,KV=new Map;class kl{getClassName(){return this.constructor.className}static fromConfig(e,n){return new e(n)}}class Cs{constructor(){this.classNameMap={}}static getMap(){return Cs.instance==null&&(Cs.instance=new Cs),Cs.instance}static register(e){Cs.getMap().classNameMap[e.className]=[e,e.fromConfig]}}function ne(t,e,n){C(t.className!=null,()=>"Class being registered does not have the static className property defined."),C(typeof t.className=="string",()=>"className is required to be a string, but got type "+typeof t.className),C(t.className.length>0,()=>"Class being registered has an empty-string as its className, which is disallowed."),typeof e>"u"&&(e="Custom"),typeof n>"u"&&(n=t.className);const s=n,r=e+">"+s;return Cs.register(t),jV.set(r,t),KV.set(t,r),t}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class ea extends kl{minimize(e,n=!1,s){const{value:r,grads:o}=this.computeGradients(e,s);if(s!=null){const a=s.map(i=>({name:i.name,tensor:o[i.name]}));this.applyGradients(a)}else this.applyGradients(o);return Oe(o),n?r:(r.dispose(),null)}get iterations(){return this.iterations_==null&&(this.iterations_=0),this.iterations_}incrementIterations(){this.iterations_=this.iterations+1}computeGradients(e,n){return xP(e,n)}dispose(){this.iterations_!=null&&Oe(this.iterations_)}async saveIterations(){return this.iterations_==null&&(this.iterations_=0),{name:"iter",tensor:Se(this.iterations_,"int32")}}async getWeights(){throw new Error("getWeights() is not implemented for this optimizer yet.")}async setWeights(e){throw new Error(`setWeights() is not implemented for this optimizer class ${this.getClassName()}`)}async extractIterations(e){return this.iterations_=(await e[0].tensor.data())[0],e.slice(1)}}Object.defineProperty(ea,Symbol.hasInstance,{value:t=>t.minimize!=null&&t.computeGradients!=null&&t.applyGradients!=null});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class tT extends ea{static get className(){return"Adadelta"}constructor(e,n,s=null){super(),this.learningRate=e,this.rho=n,this.epsilon=s,this.accumulatedGrads=[],this.accumulatedUpdates=[],s==null&&(this.epsilon=A.backend.epsilon())}applyGradients(e){(Array.isArray(e)?e.map(s=>s.name):Object.keys(e)).forEach((s,r)=>{const o=A.registeredVariables[s],a=!1;this.accumulatedGrads[r]==null&&(this.accumulatedGrads[r]={originalName:`${s}/accum_grad`,variable:V(()=>Ue(o).variable(a))}),this.accumulatedUpdates[r]==null&&(this.accumulatedUpdates[r]={originalName:`${s}/accum_var`,variable:V(()=>Ue(o).variable(a))});const i=Array.isArray(e)?e[r].tensor:e[s];if(i==null)return;const l=this.accumulatedGrads[r].variable,u=this.accumulatedUpdates[r].variable;V(()=>{const c=te(O(l,this.rho),O(Je(i),1-this.rho)),h=O(we(dn(te(u,this.epsilon)),dn(te(l,this.epsilon))),i),d=te(O(u,this.rho),O(Je(h),1-this.rho));l.assign(c),u.assign(d);const p=te(O(h,-this.learningRate),o);o.assign(p)})}),this.incrementIterations()}dispose(){this.accumulatedUpdates!=null&&(Oe(this.accumulatedGrads.map(e=>e.variable)),Oe(this.accumulatedUpdates.map(e=>e.variable)))}async getWeights(){const e=[...this.accumulatedGrads,...this.accumulatedUpdates];return[await this.saveIterations()].concat(e.map(n=>({name:n.originalName,tensor:n.variable})))}async setWeights(e){e=await this.extractIterations(e);const n=e.length/2,s=!1;this.accumulatedGrads=e.slice(0,n).map(r=>({originalName:r.name,variable:r.tensor.variable(s)})),this.accumulatedUpdates=e.slice(n,n*2).map(r=>({originalName:r.name,variable:r.tensor.variable(s)}))}getConfig(){return{learningRate:this.learningRate,rho:this.rho,epsilon:this.epsilon}}static fromConfig(e,n){return new e(n.learningRate,n.rho,n.epsilon)}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class nT extends ea{static get className(){return"Adagrad"}constructor(e,n=.1){super(),this.learningRate=e,this.initialAccumulatorValue=n,this.accumulatedGrads=[]}applyGradients(e){(Array.isArray(e)?e.map(s=>s.name):Object.keys(e)).forEach((s,r)=>{const o=A.registeredVariables[s];this.accumulatedGrads[r]==null&&(this.accumulatedGrads[r]={originalName:`${s}/accumulator`,variable:V(()=>bl(o.shape,this.initialAccumulatorValue).variable(!1))});const a=Array.isArray(e)?e[r].tensor:e[s];if(a==null)return;const i=this.accumulatedGrads[r].variable;V(()=>{const l=te(i,Je(a));i.assign(l);const u=te(O(we(a,dn(te(l,A.backend.epsilon()))),-this.learningRate),o);o.assign(u)})}),this.incrementIterations()}dispose(){this.accumulatedGrads!=null&&Oe(this.accumulatedGrads.map(e=>e.variable))}async getWeights(){return[await this.saveIterations()].concat(this.accumulatedGrads.map(e=>({name:e.originalName,tensor:e.variable})))}async setWeights(e){e=await this.extractIterations(e);const n=!1;this.accumulatedGrads=e.map(s=>({originalName:s.name,variable:s.tensor.variable(n)}))}getConfig(){return{learningRate:this.learningRate,initialAccumulatorValue:this.initialAccumulatorValue}}static fromConfig(e,n){return new e(n.learningRate,n.initialAccumulatorValue)}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class sT extends ea{static get className(){return"Adam"}constructor(e,n,s,r=null){super(),this.learningRate=e,this.beta1=n,this.beta2=s,this.epsilon=r,this.accumulatedFirstMoment=[],this.accumulatedSecondMoment=[],V(()=>{this.accBeta1=Se(n).variable(),this.accBeta2=Se(s).variable()}),r==null&&(this.epsilon=A.backend.epsilon())}applyGradients(e){const n=Array.isArray(e)?e.map(s=>s.name):Object.keys(e);V(()=>{const s=fe(1,this.accBeta1),r=fe(1,this.accBeta2);n.forEach((o,a)=>{const i=A.registeredVariables[o],l=!1;this.accumulatedFirstMoment[a]==null&&(this.accumulatedFirstMoment[a]={originalName:`${o}/m`,variable:V(()=>Ue(i).variable(l))}),this.accumulatedSecondMoment[a]==null&&(this.accumulatedSecondMoment[a]={originalName:`${o}/v`,variable:V(()=>Ue(i).variable(l))});const u=Array.isArray(e)?e[a].tensor:e[o];if(u==null)return;const c=this.accumulatedFirstMoment[a].variable,h=this.accumulatedSecondMoment[a].variable,d=te(O(c,this.beta1),O(u,1-this.beta1)),p=te(O(h,this.beta2),O(Je(u),1-this.beta2)),f=we(d,s),m=we(p,r);c.assign(d),h.assign(p);const y=te(O(we(f,te(dn(m),this.epsilon)),-this.learningRate),i);i.assign(y)}),this.accBeta1.assign(O(this.accBeta1,this.beta1)),this.accBeta2.assign(O(this.accBeta2,this.beta2))}),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.accBeta2.dispose(),this.accumulatedFirstMoment!=null&&Oe(this.accumulatedFirstMoment.map(e=>e.variable)),this.accumulatedSecondMoment!=null&&Oe(this.accumulatedSecondMoment.map(e=>e.variable))}async getWeights(){const e=[...this.accumulatedFirstMoment,...this.accumulatedSecondMoment];return[await this.saveIterations()].concat(e.map(n=>({name:n.originalName,tensor:n.variable})))}async setWeights(e){e=await this.extractIterations(e),V(()=>{this.accBeta1.assign(Po(this.beta1,this.iterations_+1)),this.accBeta2.assign(Po(this.beta2,this.iterations_+1))});const n=e.length/2,s=!1;this.accumulatedFirstMoment=e.slice(0,n).map(r=>({originalName:r.name,variable:r.tensor.variable(s)})),this.accumulatedSecondMoment=e.slice(n,n*2).map(r=>({originalName:r.name,variable:r.tensor.variable(s)}))}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon}}static fromConfig(e,n){return new e(n.learningRate,n.beta1,n.beta2,n.epsilon)}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class rT extends ea{static get className(){return"Adamax"}constructor(e,n,s,r=null,o=0){super(),this.learningRate=e,this.beta1=n,this.beta2=s,this.epsilon=r,this.decay=o,this.accumulatedFirstMoment=[],this.accumulatedWeightedInfNorm=[],V(()=>{this.iteration=Se(0).variable(),this.accBeta1=Se(n).variable()}),r==null&&(this.epsilon=A.backend.epsilon())}applyGradients(e){const n=Array.isArray(e)?e.map(s=>s.name):Object.keys(e);V(()=>{const s=fe(1,this.accBeta1),r=we(-this.learningRate,te(O(this.iteration,this.decay),1));n.forEach((o,a)=>{const i=A.registeredVariables[o],l=!1;this.accumulatedFirstMoment[a]==null&&(this.accumulatedFirstMoment[a]={originalName:`${o}/m`,variable:Ue(i).variable(l)}),this.accumulatedWeightedInfNorm[a]==null&&(this.accumulatedWeightedInfNorm[a]={originalName:`${o}/v`,variable:Ue(i).variable(l)});const u=Array.isArray(e)?e[a].tensor:e[o];if(u==null)return;const c=this.accumulatedFirstMoment[a].variable,h=this.accumulatedWeightedInfNorm[a].variable,d=te(O(c,this.beta1),O(u,1-this.beta1)),p=O(h,this.beta2),f=Dt(u),m=ro(p,f);c.assign(d),h.assign(m);const y=te(O(we(r,s),we(d,te(m,this.epsilon))),i);i.assign(y)}),this.iteration.assign(te(this.iteration,1)),this.accBeta1.assign(O(this.accBeta1,this.beta1))}),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.iteration.dispose(),this.accumulatedFirstMoment!=null&&Oe(this.accumulatedFirstMoment.map(e=>e.variable)),this.accumulatedWeightedInfNorm!=null&&Oe(this.accumulatedWeightedInfNorm.map(e=>e.variable))}async getWeights(){throw new Error("getWeights() is not implemented for Adamax yet.")}async setWeights(e){throw new Error("setWeights() is not implemented for Adamax yet.")}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon,decay:this.decay}}static fromConfig(e,n){return new e(n.learningRate,n.beta1,n.beta2,n.epsilon,n.decay)}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class wb extends ea{static get className(){return"SGD"}constructor(e){super(),this.learningRate=e,this.setLearningRate(e)}applyGradients(e){(Array.isArray(e)?e.map(s=>s.name):Object.keys(e)).forEach((s,r)=>{const o=Array.isArray(e)?e[r].tensor:e[s];if(o==null)return;const a=A.registeredVariables[s];V(()=>{const i=te(O(this.c,o),a);a.assign(i)})}),this.incrementIterations()}setLearningRate(e){this.learningRate=e,this.c!=null&&this.c.dispose(),this.c=Ht(Se(-e))}dispose(){this.c.dispose()}async getWeights(){return[await this.saveIterations()]}async setWeights(e){if(e=await this.extractIterations(e),e.length!==0)throw new Error("SGD optimizer does not have settable weights.")}getConfig(){return{learningRate:this.learningRate}}static fromConfig(e,n){return new e(n.learningRate)}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class oT extends wb{static get className(){return"Momentum"}constructor(e,n,s=!1){super(e),this.learningRate=e,this.momentum=n,this.useNesterov=s,this.accumulations=[],this.m=Se(this.momentum)}applyGradients(e){(Array.isArray(e)?e.map(s=>s.name):Object.keys(e)).forEach((s,r)=>{const o=A.registeredVariables[s];this.accumulations[r]==null&&(this.accumulations[r]={originalName:`${s}/momentum`,variable:V(()=>Ue(o).variable(!1))});const a=this.accumulations[r].variable,i=Array.isArray(e)?e[r].tensor:e[s];i!=null&&V(()=>{let l;const u=te(O(this.m,a),i);this.useNesterov?l=te(O(this.c,te(i,O(u,this.m))),o):l=te(O(this.c,u),o),a.assign(u),o.assign(l)})}),this.incrementIterations()}dispose(){this.m.dispose(),this.accumulations!=null&&Oe(this.accumulations.map(e=>e.variable))}setMomentum(e){this.momentum=e}async getWeights(){return[await this.saveIterations()].concat(this.accumulations.map(e=>({name:e.originalName,tensor:e.variable})))}async setWeights(e){e=await this.extractIterations(e);const n=!1;this.accumulations=e.map(s=>({originalName:s.name,variable:s.tensor.variable(n)}))}getConfig(){return{learningRate:this.learningRate,momentum:this.momentum,useNesterov:this.useNesterov}}static fromConfig(e,n){return new e(n.learningRate,n.momentum,n.useNesterov)}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class aT extends ea{static get className(){return"RMSProp"}constructor(e,n=.9,s=0,r=null,o=!1){if(super(),this.learningRate=e,this.decay=n,this.momentum=s,this.epsilon=r,this.accumulatedMeanSquares=[],this.accumulatedMoments=[],this.accumulatedMeanGrads=[],this.centered=o,r==null&&(this.epsilon=A.backend.epsilon()),e==null)throw new Error("learningRate for RMSPropOptimizer must be defined.")}applyGradients(e){(Array.isArray(e)?e.map(s=>s.name):Object.keys(e)).forEach((s,r)=>{const o=A.registeredVariables[s],a=!1;this.accumulatedMeanSquares[r]==null&&(this.accumulatedMeanSquares[r]={originalName:`${s}/rms`,variable:V(()=>Ue(o).variable(a))}),this.accumulatedMoments[r]==null&&(this.accumulatedMoments[r]={originalName:`${s}/momentum`,variable:V(()=>Ue(o).variable(a))}),this.accumulatedMeanGrads[r]==null&&this.centered&&(this.accumulatedMeanGrads[r]={originalName:`${s}/mg`,variable:V(()=>Ue(o).variable(a))});const i=Array.isArray(e)?e[r].tensor:e[s];if(i==null)return;const l=this.accumulatedMeanSquares[r].variable,u=this.accumulatedMoments[r].variable;V(()=>{const c=te(O(l,this.decay),O(Je(i),1-this.decay));if(this.centered){const h=this.accumulatedMeanGrads[r].variable,d=te(O(h,this.decay),O(i,1-this.decay)),p=we(O(i,this.learningRate),dn(fe(c,te(Je(d),this.epsilon)))),f=te(O(u,this.momentum),p);l.assign(c),h.assign(d),u.assign(f);const m=fe(o,f);o.assign(m)}else{const h=te(O(l,this.decay),O(Je(i),1-this.decay)),d=te(O(u,this.momentum),we(O(i,this.learningRate),dn(te(h,this.epsilon))));l.assign(h),u.assign(d);const p=fe(o,d);o.assign(p)}})}),this.incrementIterations()}dispose(){this.accumulatedMeanSquares!=null&&Oe(this.accumulatedMeanSquares.map(e=>e.variable)),this.accumulatedMeanGrads!=null&&this.centered&&Oe(this.accumulatedMeanGrads.map(e=>e.variable)),this.accumulatedMoments!=null&&Oe(this.accumulatedMoments.map(e=>e.variable))}async getWeights(){const e=[...this.accumulatedMeanSquares,...this.accumulatedMoments];return this.centered&&e.push(...this.accumulatedMeanGrads),[await this.saveIterations()].concat(e.map(n=>({name:n.originalName,tensor:n.variable})))}async setWeights(e){e=await this.extractIterations(e);const n=this.centered?e.length/3:e.length/2,s=!1;this.accumulatedMeanSquares=e.slice(0,n).map(r=>({originalName:r.name,variable:r.tensor.variable(s)})),this.accumulatedMoments=e.slice(n,n*2).map(r=>({originalName:r.name,variable:r.tensor.variable(s)})),this.centered&&(this.accumulatedMeanGrads=e.slice(n*2,n*3).map(r=>({originalName:r.name,variable:r.tensor.variable(s)})))}getConfig(){return{learningRate:this.learningRate,decay:this.decay,momentum:this.momentum,epsilon:this.epsilon,centered:this.centered}}static fromConfig(e,n){return new e(n.learningRate,n.decay,n.momentum,n.epsilon,n.centered)}}/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const qV=[tT,nT,sT,rT,oT,aT,wb];function XV(){for(const t of qV)ne(t)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const YV="model",QV=".json",ZV=".weights.bin";function hS(t){return new Promise(e=>setTimeout(e)).then(t)}class Fa{constructor(e){if(!G().getBool("IS_BROWSER"))throw new Error("browserDownloads() cannot proceed because the current environment is not a browser.");e.startsWith(Fa.URL_SCHEME)&&(e=e.slice(Fa.URL_SCHEME.length)),(e==null||e.length===0)&&(e=YV),this.modelJsonFileName=e+QV,this.weightDataFileName=e+ZV}async save(e){if(typeof document>"u")throw new Error("Browser downloads are not supported in this environment since `document` is not present");const n=cr.join(e.weightData),s=window.URL.createObjectURL(new Blob([n],{type:"application/octet-stream"}));if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserDownloads.save() does not support saving model topology in binary formats yet.");{const r=[{paths:["./"+this.weightDataFileName],weights:e.weightSpecs}],o=FN(e,r),a=window.URL.createObjectURL(new Blob([JSON.stringify(o)],{type:"application/json"})),i=this.modelJsonAnchor==null?document.createElement("a"):this.modelJsonAnchor;if(i.download=this.modelJsonFileName,i.href=a,await hS(()=>i.dispatchEvent(new MouseEvent("click"))),e.weightData!=null){const l=this.weightDataAnchor==null?document.createElement("a"):this.weightDataAnchor;l.download=this.weightDataFileName,l.href=s,await hS(()=>l.dispatchEvent(new MouseEvent("click")))}return{modelArtifactsInfo:Kc(e)}}}}Fa.URL_SCHEME="downloads://";class JV{constructor(e){if(e==null||e.length<1)throw new Error(`When calling browserFiles, at least 1 file is required, but received ${e}`);this.jsonFile=e[0],this.weightsFiles=e.slice(1)}async load(){return new Promise((e,n)=>{const s=new FileReader;s.onload=r=>{const o=JSON.parse(r.target.result),a=o.modelTopology;if(a==null){n(new Error(`modelTopology field is missing from file ${this.jsonFile.name}`));return}if(o.weightsManifest==null){n(new Error(`weightManifest field is missing from file ${this.jsonFile.name}`));return}if(this.weightsFiles.length===0){e({modelTopology:a});return}const l=Rx(o,u=>this.loadWeights(u));e(l)},s.onerror=r=>n(`Failed to read model topology and weights manifest JSON from file '${this.jsonFile.name}'. BrowserFiles supports loading Keras-style tf.Model artifacts only.`),s.readAsText(this.jsonFile)})}loadWeights(e){const n=[],s=[];for(const a of e)n.push(...a.weights),s.push(...a.paths);const r=this.checkManifestAndWeightFiles(e),o=s.map(a=>this.loadWeightsFile(a,r[a]));return Promise.all(o).then(a=>[n,a])}loadWeightsFile(e,n){return new Promise((s,r)=>{const o=new FileReader;o.onload=a=>{const i=a.target.result;s(i)},o.onerror=a=>r(`Failed to weights data from file of path '${e}'.`),o.readAsArrayBuffer(n)})}checkManifestAndWeightFiles(e){const n=[],s=this.weightsFiles.map(o=>lS(o.name)),r={};for(const o of e)o.paths.forEach(a=>{const i=lS(a);if(n.indexOf(i)!==-1)throw new Error(`Duplicate file basename found in weights manifest: '${i}'`);if(n.push(i),s.indexOf(i)===-1)throw new Error(`Weight file with basename '${i}' is not provided.`);r[a]=this.weightsFiles[s.indexOf(i)]});if(n.length!==this.weightsFiles.length)throw new Error(`Mismatch in the number of files in weights manifest (${n.length}) and the number of weight files provided (${this.weightsFiles.length}).`);return r}}const e4=t=>G().getBool("IS_BROWSER")&&!Array.isArray(t)&&t.startsWith(Fa.URL_SCHEME)?t4(t.slice(Fa.URL_SCHEME.length)):null;pt.registerSaveRouter(e4);function t4(t="model"){return new Fa(t)}function n4(t){return new JV(t)}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function dS(t,e,n,s){a(t),n=n??0,s=s??1,i(n,s);let r=0;const o=l=>(l.then(u=>{const c=n+ ++r/t.length*(s-n);return e(c),u}),l);function a(l){C(l!=null&&Array.isArray(l)&&l.length>0,()=>"promises must be a none empty array")}function i(l,u){C(l>=0&&l<=1,()=>`Progress fraction must be in range [0, 1], but got startFraction ${l}`),C(u>=0&&u<=1,()=>`Progress fraction must be in range [0, 1], but got endFraction ${u}`),C(u>=l,()=>`startFraction must be no more than endFraction, but got startFraction ${l} and endFraction ${u}`)}return Promise.all(t.map(o))}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */async function iT(t,e){e==null&&(e={});const n=e.fetchFunc==null?G().platform.fetch:e.fetchFunc,s=t.map(h=>n(h,e.requestInit,{isBinary:!0})),r=0,o=.5,i=(e.onProgress==null?await Promise.all(s):await dS(s,e.onProgress,r,o)).map(h=>h.arrayBuffer()),l=.5,u=1;return e.onProgress==null?await Promise.all(i):await dS(i,e.onProgress,l,u)}async function s4(t,e="",n,s){return lT(a=>iT(a,{requestInit:s}))(t,e,n)}function lT(t){return async(e,n="",s)=>{const r=e.map(()=>!1),o={},a=s!=null?s.map(()=>!1):[],i=[];if(e.forEach((p,f)=>{let m=0;p.weights.forEach(y=>{const g="quantization"in y?y.quantization.dtype:y.dtype,x=My[g]*K(y.shape),w=()=>{r[f]=!0,o[f]==null&&(o[f]=[]),o[f].push({manifestEntry:y,groupOffset:m,sizeBytes:x})};s!=null?s.forEach((b,v)=>{b===y.name&&(w(),a[v]=!0)}):w(),i.push(y.name),m+=x})}),!a.every(p=>p)){const p=s.filter((f,m)=>!a[m]);throw new Error(`Could not find weights in manifest with names: ${p.join(", ")}. 
Manifest JSON has weights with names: ${i.join(", ")}.`)}const l=r.reduce((p,f,m)=>(f&&p.push(m),p),[]),u=[];l.forEach(p=>{e[p].paths.forEach(f=>{const m=n+(n.endsWith("/")?"":"/")+f;u.push(m)})});const c=await t(u),h={};let d=0;return l.forEach(p=>{const f=e[p].paths.length,m=new cr(c.slice(d,d+f));o[p].forEach(g=>{const x=m.slice(g.groupOffset,g.groupOffset+g.sizeBytes),w=_N(x,[g.manifestEntry]);for(const b in w)h[b]=w[b]}),d+=f}),h}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const r4="application/octet-stream",o4="application/json";class vb{constructor(e,n){if(this.DEFAULT_METHOD="POST",n==null&&(n={}),this.weightPathPrefix=n.weightPathPrefix,this.onProgress=n.onProgress,this.weightUrlConverter=n.weightUrlConverter,n.fetchFunc!=null?(C(typeof n.fetchFunc=="function",()=>"Must pass a function that matches the signature of `fetch` (see https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API)"),this.fetch=n.fetchFunc):this.fetch=G().platform.fetch,C(e!=null&&e.length>0,()=>"URL path for http must not be null, undefined or empty."),Array.isArray(e)&&C(e.length===2,()=>`URL paths for http must have a length of 2, (actual length is ${e.length}).`),this.path=e,n.requestInit!=null&&n.requestInit.body!=null)throw new Error("requestInit is expected to have no pre-existing body, but has one.");this.requestInit=n.requestInit||{}}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserHTTPRequest.save() does not support saving model topology in binary formats yet.");const n=Object.assign({method:this.DEFAULT_METHOD},this.requestInit);n.body=new FormData;const s=[{paths:["./model.weights.bin"],weights:e.weightSpecs}],r=FN(e,s);if(n.body.append("model.json",new Blob([JSON.stringify(r)],{type:o4}),"model.json"),e.weightData!=null){const a=cr.join(e.weightData);n.body.append("model.weights.bin",new Blob([a],{type:r4}),"model.weights.bin")}const o=await this.fetch(this.path,n);if(o.ok)return{modelArtifactsInfo:Kc(e),responses:[o]};throw new Error(`BrowserHTTPRequest.save() failed due to HTTP response status ${o.status}.`)}async load(){const e=await this.fetch(this.path,this.requestInit);if(!e.ok)throw new Error(`Request to ${this.path} failed with status code ${e.status}. Please verify this URL points to the model JSON of the model to load.`);let n;try{n=await e.json()}catch{let a=`Failed to parse model JSON of response from ${this.path}.`;throw this.path.endsWith(".pb")?a+=" Your path contains a .pb file extension. Support for .pb models have been removed in TensorFlow.js 1.0 in favor of .json models. You can re-convert your Python TensorFlow model using the TensorFlow.js 1.0 conversion scripts or you can convert your.pb models with the 'pb2json'NPM script in the tensorflow/tfjs-converter repository.":a+=" Please make sure the server is serving valid JSON for this request.",new Error(a)}const s=n.modelTopology,r=n.weightsManifest;if(s==null&&r==null)throw new Error(`The JSON from HTTP path ${this.path} contains neither model topology or manifest for weights.`);return Rx(n,o=>this.loadWeights(o))}async loadWeights(e){const n=Array.isArray(this.path)?this.path[1]:this.path,[s,r]=a4(n),o=this.weightPathPrefix||s,a=PN(e),i=[],l=[];for(const c of e)for(const h of c.paths)this.weightUrlConverter!=null?l.push(this.weightUrlConverter(h)):i.push(o+h+r);this.weightUrlConverter&&i.push(...await Promise.all(l));const u=await iT(i,{requestInit:this.requestInit,fetchFunc:this.fetch,onProgress:this.onProgress});return[a,u]}}vb.URL_SCHEME_REGEX=/^https?:\/\//;function a4(t){const e=t.lastIndexOf("/"),n=t.lastIndexOf("?"),s=t.substring(0,e),r=n>e?t.substring(n):"";return[s+"/",r]}function qy(t){return t.match(vb.URL_SCHEME_REGEX)!=null}const uT=(t,e)=>{if(typeof fetch>"u"&&(e==null||e.fetchFunc==null))return null;{let n=!0;if(Array.isArray(t)?n=t.every(s=>qy(s)):n=qy(t),n)return Sb(t,e)}return null};pt.registerSaveRouter(uT);pt.registerLoadRouter(uT);function Sb(t,e){return new vb(t,e)}function i4(t,e){return Sb(t,e)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class ug{constructor(e){this.modelArtifacts=e}load(){return this.modelArtifacts}}class cT{constructor(e){this.saveHandler=e}save(e){return this.saveHandler(e)}}class l4{constructor(e){e.load&&(this.load=()=>Promise.resolve(e.load())),e.save&&(this.save=n=>Promise.resolve(e.save(n)))}}function u4(t,e,n,s){const r=arguments;return new l4(hT(...r))}function hT(t,e,n,s){return arguments.length===1?t.modelTopology!=null||t.weightSpecs!=null?new ug(t):(console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new ug({modelTopology:t})):(console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new ug({modelTopology:t,weightSpecs:e,weightData:n,trainingConfig:s}))}function c4(t){return new cT(t)}function h4(t){return new cT(t)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const dT=Object.freeze(Object.defineProperty({__proto__:null,CompositeArrayBuffer:cr,browserFiles:n4,browserHTTPRequest:i4,concatenateArrayBuffers:ON,copyModel:d3,decodeWeights:_N,encodeWeights:By,fromMemory:u4,fromMemorySync:hT,getLoadHandlers:ZF,getModelArtifactsForJSON:Rx,getModelArtifactsForJSONSync:LN,getModelArtifactsInfoForJSON:Kc,getSaveHandlers:zN,getWeightSpecs:PN,http:Sb,isHTTPScheme:qy,listModels:c3,loadWeights:s4,moveModel:p3,registerLoadRouter:QF,registerSaveRouter:YF,removeModel:h3,weightsLoaderFactory:lT,withSaveHandler:c4,withSaveHandlerSync:h4},Symbol.toStringTag,{value:"Module"}));function kb(t,e){const n=t.shape.length,s=e.shape.length;if(n<1)throw new Error(`tf.gatherND() expects the input to be rank 1 or higher, but the rank was ${n}.`);if(s<1)throw new Error(`tf.gatherND() expects the indices to be rank 1 or higher, but the rank was ${s}.`);if(e.dtype!=="int32")throw new Error(`tf.gatherND() expects the indices to be int32 type, but the dtype was ${e.dtype}.`);if(e.shape[s-1]>n)throw new Error(`index innermost dimension length must be <= tensor rank; saw: ${e.shape[s-1]} vs. ${n}`);if(K(t.shape)===0)throw new Error(`Requested more than 0 entries, but input is empty. Input shape: ${t.shape}.`);const r=e.shape,o=r[r.length-1];let a=1;for(let h=0;h<r.length-1;++h)a*=r[h];const i=t.shape,l=r.slice();l.pop();let u=1;for(let h=o;h<n;++h)u*=i[h],l.push(i[h]);const c=[...ve(t.shape).map(h=>h/u),1].slice(0,o);return[l,a,u,c]}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Xy=-2,d4=-1;function $b(t,e,n){const s=t.shape.length;C(s===e.length,()=>`Error in slice${s}D: Length of begin ${e} must match the rank of the array (${s}).`),C(s===n.length,()=>`Error in slice${s}D: Length of size ${n} must match the rank of the array (${s}).`);for(let r=0;r<s;++r)C(e[r]+n[r]<=t.shape[r],()=>`Error in slice${s}D: begin[${r}] + size[${r}] (${e[r]+n[r]}) would overflow input.shape[${r}] (${t.shape[r]})`)}function p4(t){const e=[];let n=0;for(;t>0;)t&1&&e.push(n),t/=2,n++;return e}function Cb(t,e,n){const s=[];for(let r=0;r<t.length;r++)s[r]=Math.ceil((e[r]-t[r])/n[r]);return s}function pT(t,e,n,s){const r=[...t];for(let o=r.length;o<s.length;o++)r.push(1);for(let o=0;o<n;o++)o===0?r[e]=1:(r.splice(e,0,1),r.pop());return r}function fT(t,e,n){return n<=t?n:n-(e-1)}function mT(t,e){const n=[];for(let s=0;s<t;s++)n.push(e+s);return n}function f4(t,e,n,s,r,o,a,i,l){const u=t.length;let c=new Array(u),h=new Array(u),d=new Array(u);if(e.length&&n>0){const p=e[0],f=n+1;c=gT(a,p,f,s,t),h=yT(i,p,f,r,t),d=pT(o,p,f,t)}else for(let p=0;p<u;p++)c[p]=bT(a,s,o,t,p,l),h[p]=wT(i,r,o,t,p,l),d[p]=xT(o,p,l);return{begin:c,end:h,strides:d}}function gT(t,e,n,s,r){const o=[...r],a=mT(n,e);for(let i=0;i<o.length;i++)if(a.indexOf(i)>-1)o[i]=0;else{const l=fT(e,n,i);let u=s[l];t&1<<l&&(u=0),o[i]=u}return o}function yT(t,e,n,s,r){const o=[...r],a=mT(n,e);for(let i=0;i<o.length;i++)if(a.indexOf(i)>-1)o[i]=Number.MAX_SAFE_INTEGER;else{const l=fT(e,n,i);let u=s[l];t&1<<l&&(u=Number.MAX_SAFE_INTEGER),o[i]=u}for(let i=0;i<o.length;i++){const l=r[i];o[i]<0&&(o[i]+=l),o[i]=Ta(0,o[i],r[i])}return o}function xT(t,e,n){let s=t[e];return(n&1<<e||s==null)&&(s=1),s}function bT(t,e,n,s,r,o){let a=e[r];const i=n[r]||1;(t&1<<r||o&1<<r||a==null)&&(i>0?a=Number.MIN_SAFE_INTEGER:a=Number.MAX_SAFE_INTEGER);const l=s[r];return a<0&&(a+=l),a=Ta(0,a,l-1),a}function wT(t,e,n,s,r,o){let a=e[r];const i=n[r]||1;(t&1<<r||o&1<<r||a==null)&&(i>0?a=Number.MAX_SAFE_INTEGER:a=Number.MIN_SAFE_INTEGER);const l=s[r];return a<0&&(a+=l),i>0?a=Ta(0,a,l):a=Ta(-1,a,l-1),a}function Nb(t,e,n){let s=n.length;for(let r=0;r<n.length;r++)if(n[r]>1){s=r;break}for(let r=s+1;r<n.length;r++)if(e[r]>0||n[r]!==t[r])return!1;return!0}function Ib(t,e){let n=t.length>0?t[t.length-1]:1;for(let s=0;s<t.length-1;s++)n+=t[s]*e[s];return n}function um(t,e,n){let s;const r=t.shape.length;typeof e=="number"?s=[e,...new Array(r-1).fill(0)]:e.length<r?s=e.concat(new Array(r-e.length).fill(0)):s=e.slice(),s.forEach(a=>{C(a!==-1,()=>"slice() does not support negative begin indexing.")});let o;return n==null?o=new Array(r).fill(-1):typeof n=="number"?o=[n,...new Array(r-1).fill(-1)]:n.length<r?o=n.concat(new Array(r-n.length).fill(-1)):o=n,o=o.map((a,i)=>a>=0?a:(C(a===-1,()=>`Negative size values should be exactly -1 but got ${a} for the slice() size at index ${i}.`),t.shape[i]-s[i])),[s,o]}function Tb(t,e,n,s,r,o,a,i,l){let u;if(s==null?(u=new Array(e.length),u.fill(1)):u=s,a!=null&&a&a-1)throw new Error("Multiple ellipses in slice is not allowed.");let c=!1;const h={dims:u.length,numAddAxisAfterEllipsis:0,begin:e.slice(),end:n.slice(),strides:u.slice(),beginMask:r,endMask:o,ellipsisMask:a,newAxisMask:i,shrinkAxisMask:l};for(let w=0;w<h.dims;w++)c&&1<<w&i&&h.numAddAxisAfterEllipsis++,1<<w&a&&(c=!0);c||(h.ellipsisMask|=1<<h.dims,h.dims++);const d={dims:t.length,beginMask:0,endMask:0,beginValid:!1,endValid:!1};m4(h,d);let p=!0,f=!0,m=!0;const y=[],g=[];for(let w=0;w<t.length;++w){if(d.strides[w]===0)throw Error(`strides[${w}] must be non-zero`);const b=!!(d.shrinkAxisMask&1<<w),v=t[w];if(v===-1){y.push(b?1:-1);continue}const k=[d.beginMask&1<<w,d.endMask&1<<w],$=[d.strides[w]>0?0:-1,d.strides[w]>0?v:v-1];if(b&&d.strides[w]<=0)throw Error("only stride 1 allowed on non-range indexing.");m=m&&d.strides[w]===1;const N=!!(d.beginMask&1<<w&&d.endMask&1<<w);if(d.beginValid&&d.endValid){if(b){const z=d.begin[w]<0?v+d.begin[w]:d.begin[w];if(d.begin[w]=z,d.end[w]=d.begin[w]+1,z<0||z>=v)throw Error(`slice index ${d.begin[w]} of dimension ${w} out of bounds.`)}else d.begin[w]=pS(d.begin[w],0,d.strides[w],v,k,$),d.end[w]=pS(d.end[w],1,d.strides[w],v,k,$);const R=d.strides[w]===1&&d.begin[w]===0&&d.end[w]===v;p=p&&R,f=f&&(w===0&&d.strides[w]===1||R)}else p=p&&d.strides[w]===1&&N,f=f&&(w===0&&d.strides[w]===1||N);let E,T=!1;if(d.beginValid&&d.endValid?(E=d.end[w]-d.begin[w],T=!0):b?(E=1,T=!0):N&&v>=0&&(d.strides[w]<0?E=-v:E=v,T=!0),T){let R;E===0||E<0!=d.strides[w]<0?R=0:R=Math.trunc(E/d.strides[w])+(E%d.strides[w]!==0?1:0),y.push(R)}else y.push(-1)}for(let w=0;w<d.finalShapeGatherIndices.length;++w){const b=d.finalShapeGatherIndices[w];b>=0?g.push(y[b]):b===Xy&&g.push(1)}return{finalShapeSparse:g.filter((w,b)=>d.finalShapeGatherIndices[b]!==Xy),finalShape:g,isIdentity:p,sliceDim0:f,isSimpleSlice:m,begin:d.begin,end:d.end,strides:d.strides}}function m4(t,e){e.beginMask=0,e.endMask=0,e.shrinkAxisMask=0;let n=0;e.beginValid=t.begin!=null,e.endValid=t.end!=null,e.begin=new Array(e.dims),e.end=new Array(e.dims),e.strides=new Array(e.dims),e.finalShapeGatherIndices=[],e.finalShapeGatherIndicesSparse=[],e.inputShapeGatherIndicesSparse=new Array(e.dims);for(let s=0;s<t.dims;s++)if(1<<s&t.ellipsisMask){const r=Math.min(e.dims-(t.dims-s)+1+t.numAddAxisAfterEllipsis,e.dims);for(;n<r;n++)e.begin[n]=0,e.end[n]=0,e.strides[n]=1,e.beginMask|=1<<n,e.endMask|=1<<n,e.finalShapeGatherIndices.push(n),e.finalShapeGatherIndicesSparse.push(-1),e.inputShapeGatherIndicesSparse[n]=s}else if(1<<s&t.newAxisMask)e.finalShapeGatherIndices.push(Xy),e.finalShapeGatherIndicesSparse.push(-1);else{if(n===e.begin.length)throw Error(`Index out of range using input dim ${n}; input has only ${e.dims} dims, ${e.begin.length}.`);t.begin!=null&&(e.begin[n]=t.begin[s]),t.end!=null&&(e.end[n]=t.end[s]),e.strides[n]=t.strides[s],t.beginMask&1<<s&&(e.beginMask|=1<<n),t.endMask&1<<s&&(e.endMask|=1<<n),t.shrinkAxisMask&1<<s?(e.finalShapeGatherIndices.push(d4),e.finalShapeGatherIndicesSparse.push(-1),e.shrinkAxisMask|=1<<n):(e.finalShapeGatherIndices.push(n),e.finalShapeGatherIndicesSparse.push(s)),e.inputShapeGatherIndicesSparse[n]=s,n++}}function pS(t,e,n,s,r,o){if(r[e])return n>0?o[e]:o[e+1&1];{const a=t<0?s+t:t;return a<o[0]?o[0]:a>o[1]?o[1]:a}}const g4=Object.freeze(Object.defineProperty({__proto__:null,assertParamsValid:$b,computeFlatOffset:Ib,computeOutShape:Cb,getNormalizedAxes:f4,isSliceContinous:Nb,maskToAxes:p4,parseSliceParams:um,sliceInfo:Tb,startForAxis:bT,startIndicesWithElidedDims:gT,stopForAxis:wT,stopIndicesWithElidedDims:yT,stridesForAxis:xT,stridesWithElidedDims:pT},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class y4{static sgd(e){return new wb(e)}static momentum(e,n,s=!1){return new oT(e,n,s)}static rmsprop(e,n=.9,s=0,r=null,o=!1){return new aT(e,n,s,r,o)}static adam(e=.001,n=.9,s=.999,r=null){return new sT(e,n,s,r)}static adadelta(e=.001,n=.95,s=null){return new tT(e,n,s)}static adamax(e=.002,n=.9,s=.999,r=null,o=0){return new rT(e,n,s,r,o)}static adagrad(e,n=.1){return new nT(e,n)}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const oi=y4;/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const x4=(()=>typeof requestAnimationFrame<"u"?requestAnimationFrame:typeof setImmediate<"u"?setImmediate:t=>t())();function vT(){return new Promise(t=>x4(()=>t()))}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Eb(t,e){const n=t[0].length;t.forEach((r,o)=>{C(r.length===n,()=>`Error in concat${n}D: rank of tensors[${o}] must be the same as the rank of the rest (${n})`)}),C(e>=0&&e<n,()=>`Error in concat${n}D: axis must be between 0 and ${n-1}.`);const s=t[0];t.forEach((r,o)=>{for(let a=0;a<n;a++)C(a===e||r[a]===s[a],()=>`Error in concat${n}D: Shape of tensors[${o}] (${r}) does not match the shape of the rest (${s}) along the non-concatenated axis ${o}.`)})}function Ir(t,e){const n=t[0].slice();for(let s=1;s<t.length;s++)n[e]+=t[s][e];return n}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var er;(function(t){t[t.FIRST_DIM_SIZE=0]="FIRST_DIM_SIZE",t[t.VALUE_ROWIDS=1]="VALUE_ROWIDS",t[t.ROW_LENGTHS=2]="ROW_LENGTHS",t[t.ROW_SPLITS=3]="ROW_SPLITS",t[t.ROW_LIMITS=4]="ROW_LIMITS",t[t.ROW_STARTS=5]="ROW_STARTS"})(er||(er={}));function ST(t,e,n){let s=new Array;if(n==null&&e==null)return s;if(e==null)for(;s.length<t+n.length;)s.push(-1);else s=e.slice();if(n==null)return s;if(t+n.length!==s.length)throw new Error(`rt input.shape and shape=${e} are incompatible: rt input.rank = ${t+n.length}, but shape.rank = ${s.length}`);for(let r=1;r<n.length;++r){const o=n[r],a=s[s.length-n.length+r],i=s[a];if(o>=0)if(i>=0){if(i!==o)throw new Error(`rt input.shape and shape=${e} are incompatible: rt input.shape[${r+t}] = ${o} but shape[${r+t}] = ${i}`)}else s[a]=o}return s}function kT(t){const e={FIRST_DIM_SIZE:er.FIRST_DIM_SIZE,VALUE_ROWIDS:er.VALUE_ROWIDS,ROW_LENGTHS:er.ROW_LENGTHS,ROW_SPLITS:er.ROW_SPLITS,ROW_LIMITS:er.ROW_LIMITS,ROW_STARTS:er.ROW_STARTS},n=[];for(const s of t)if(s in e)n.push(e[s]);else break;return n}function $T(t){return t.length===0?0:t[0]===er.FIRST_DIM_SIZE?t.length-1:t.length}function CT(t,e){if(t==null||e==null)return;const n=t.length,s=e.length;if(n>=s)throw new Error(`defaultValue.shape=${t} and ragged tensor flatValues.shape=${e}, are incompatible: defaultValue.rank = ${n} must be less than ragged tensor input flatValues.rank = ${s})`);for(let r=0;r<Math.min(n,s-1);++r){const o=t[r],a=e[r+1];if(o>=0&&a>=0&&o!==1&&o!==a)throw new Error(`defaultValue.shape=${t}, and ragged tensor input flatValues.shape=${e} are incompatible: defaultValue.shape[${r-t.length}] = ${o} but ragged tensor input.flatValues.shape[${r-t.length}] = ${a}`)}}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Rb=30;function cm(t){return t<=Rb?t:Ey(t,Math.floor(Math.sqrt(t)))}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Db(t,e,n){const s=n*(typeof t=="number"?t:t[0]),r=e*(typeof t=="number"?t:t[1]);return[s,r]}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function th(t,e,n,s=!0){let r=[];if(s)r=r.concat(e.slice(0)),r.push(t[0]/n),r=r.concat(t.slice(1));else{r=r.concat(t[0]);const o=e.length;for(let a=0;a<o;++a)r=r.concat([t[a+1]/e[a],e[a]]);r=r.concat(t.slice(o+1))}return r}function nh(t,e,n=!0){const s=[];if(n){s.push(e);for(let r=e+1;r<t;++r)r<=2*e?(s.push(r),s.push(r-(e+1))):s.push(r)}else{const r=[],o=[];for(let a=1;a<t;++a)a>=e*2+1||a%2===1?o.push(a):r.push(a);s.push(...r),s.push(0),s.push(...o)}return s}function sh(t,e,n,s=!0){const r=[];s?r.push(t[0]/n):r.push(t[0]*n);for(let o=1;o<t.length;++o)o<=e.length?s?r.push(e[o-1]*t[o]):r.push(t[o]/e[o-1]):r.push(t[o]);return r}function Ab(t,e){const n=[0];for(let s=0;s<e;++s)n.push(t[s][0]);return n}function _b(t,e,n){const s=t.slice(0,1);for(let r=0;r<n;++r)s.push(t[r+1]-e[r][0]-e[r][1]);return s}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const hm=1.7580993408473768,dm=1.0507009873554805;/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ob=.3275911,Fb=.254829592,Lb=-.284496736,Pb=1.421413741,zb=-1.453152027,Mb=1.061405429;/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Jr(t,e){if(t.length!==e.length)throw new Error(`Cannot merge real and imag arrays of different lengths. real:${t.length}, imag: ${e.length}.`);const n=new Float32Array(t.length*2);for(let s=0;s<n.length;s+=2)n[s]=t[s/2],n[s+1]=e[s/2];return n}function NT(t){const e=new Float32Array(t.length/2),n=new Float32Array(t.length/2);for(let s=0;s<t.length;s+=2)e[s/2]=t[s],n[s/2]=t[s+1];return{real:e,imag:n}}function IT(t){const e=Math.ceil(t.length/4),n=new Float32Array(e),s=new Float32Array(e);for(let r=0;r<t.length;r+=4)n[Math.floor(r/4)]=t[r],s[Math.floor(r/4)]=t[r+1];return{real:n,imag:s}}function TT(t){const e=Math.floor(t.length/4),n=new Float32Array(e),s=new Float32Array(e);for(let r=2;r<t.length;r+=4)n[Math.floor(r/4)]=t[r],s[Math.floor(r/4)]=t[r+1];return{real:n,imag:s}}function Bb(t,e){const n=t[e*2],s=t[e*2+1];return{real:n,imag:s}}function ET(t,e,n,s){t[s*2]=e,t[s*2+1]=n}function RT(t,e){const n=new Float32Array(t/2),s=new Float32Array(t/2);for(let r=0;r<Math.ceil(t/2);r++){const o=(e?2:-2)*Math.PI*(r/t);n[r]=Math.cos(o),s[r]=Math.sin(o)}return{real:n,imag:s}}function DT(t,e,n){const s=(n?2:-2)*Math.PI*(t/e),r=Math.cos(s),o=Math.sin(s);return{real:r,imag:o}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const cg="->",b4=/->/g,fS=",",mS="...";function Vb(t,e){t=t.replace(/\s/g,"");const n=(t.length-t.replace(b4,"").length)/cg.length;if(n<1)throw new Error("Equations without an arrow are not supported.");if(n>1)throw new Error(`Equation must contain exactly one arrow ("${cg}").`);const[s,r]=t.split(cg);C(s.indexOf(mS)===-1,()=>`The ellipsis notation ("${mS}") is not supported yet.`);const o=s.split(fS),a=o.length;if(e!==a)throw new Error(`Expected ${a} input tensors, received ${e}`);if(a>2)throw new Error("Support for more than 2 input tensors is not implemented yet.");const i=[];for(let d=0;d<r.length;++d){const p=r[d];if(!o.some(f=>f.indexOf(p)!==-1))throw new Error(`Output subscripts contain the label ${p} not present in the input subscripts.`);i.indexOf(p)===-1&&i.push(p)}for(let d=0;d<s.length;++d){const p=s[d];i.indexOf(p)===-1&&p!==fS&&i.push(p)}const l=new Array(o.length);for(let d=0;d<a;++d){if(new Set(o[d].split("")).size!==o[d].length)throw new Error(`Found duplicate axes in input component ${o[d]}. Support for duplicate axes in input is not implemented yet.`);l[d]=[];for(let p=0;p<o[d].length;++p)l[d].push(i.indexOf(o[d][p]))}const u=i.length,c=r.length,h=[];for(let d=c;d<u;++d)h.push(d);return{allDims:i,summedDims:h,idDims:l}}function Wb(t,e){let n=new Array(t);n.fill(-1);for(let r=0;r<e.length;++r)n[e[r]]=r;const s=[];for(let r=0;r<t;++r)n[r]===-1&&s.push(r);return n=n.filter(r=>r!==-1),{permutationIndices:n,expandDims:s}}function Ub(t,e,n){const s=new Array(t);for(let r=0;r<n.length;++r){const o=n[r].shape;for(let a=0;a<e[r].length;++a)s[e[r][a]]===void 0?s[e[r][a]]=o[a]:C(s[e[r][a]]===o[a],()=>`Expected dimension ${s[e[r][a]]} at axis ${a} of input shaped ${JSON.stringify(o)}, but got dimension ${o[a]}`)}}function Gb(t,e){const n=t,s=[];let r=0;t.length===0&&n.push(-1),r=t.length+1;for(let a=0;a<r;++a)s.push([]);const o=[];for(let a=0;a<n.length;++a){const i=n[a],l=w4(e,i);for(const u of l)o.indexOf(u)===-1&&(s[a].push(u),o.push(u))}return{path:n,steps:s}}function Hb(t){return t.every((e,n)=>e===n)}function w4(t,e){const n=[];for(let s=0;s<t.length;++s)(t[s].length===0||t[s].indexOf(e)!==-1||e===-1)&&n.push(s);return n}function jb(t,e,n=0){let s=[];if(typeof e=="number")C(t.shape[n]%e===0,()=>"Number of splits must evenly divide the axis."),s=new Array(e).fill(t.shape[n]/e);else{const r=e.reduce((a,i)=>(i===-1&&(a+=1),a),0);C(r<=1,()=>"There should be only one negative value in split array.");const o=e.indexOf(-1);if(o!==-1){const a=e.reduce((i,l)=>l>0?i+l:i);e[o]=t.shape[n]-a}C(t.shape[n]===e.reduce((a,i)=>a+i),()=>"The sum of sizes must match the size of the axis dimension."),s=e}return s}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function AT(t){return`Received SparseTensor with denseShape[0] = 0 but
  indices.shape[0] = ${t}`}function _T(t,e){return`indices(${t}, 0) is invalid: ${e} < 0`}function OT(t,e,n){return`indices(${t}, 0) is invalid: ${e} >= ${n}`}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function FT(t,e){return`only one output dimension may be -1, not both ${t} and ${e}`}function LT(t,e){return`size ${t} must be non-negative, not ${e}`}function PT(){return"reshape cannot infer the missing input size for an empty tensor unless all specified input sizes are non-zero"}function zT(t,e){const n=K(t),s=K(e);return`Input to reshape is a SparseTensor with ${n}
  dense values, but the requested shape requires a multiple of ${s}. inputShape=${t} outputShape= ${e}`}function MT(t,e){const n=K(t),s=K(e);return`Input to reshape is a tensor with ${n} dense values, but the requested shape has ${s}. inputShape=${t} outputShape=${e}`}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Yy(){return"segment ids must be >= 0"}function BT(){return"segment ids are not increasing"}function VT(t,e){return`Segment id ${t} out of range [0, ${e}), possibly because segmentIds input is not sorted.`}function WT(t,e,n){return`Bad: indices[${t}] == ${e} out of range [0, ${n})`}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function UT(t,e){let n=!1,s;for(t<=Rb?(s=t,n=!0):s=Ey(t,Math.floor(Math.sqrt(t)));!n;)s>e||s===t?n=!0:s=Ey(t,s+1);return s}function GT(t,e,n){const s=[],r=t.length;for(let o=0;o<r;o++)o!==e?s.push(t[o]):s.push(n);return s}function Kb(t,e,n,s){const r=e.shape.length,o=t.shape.length;if(s!==0&&(s<-r||s>r))throw new Error(`Expect batchDims in the range of [-${r}, ${r}], but got ${s}`);if(s<0&&(s+=r),s>o)throw new Error(`batchDims (${s}) must be less than rank(x) (
    ${o}).`);if(n<s)throw new Error(`batchDims (${s}) must be less than or equal to axis (${n}).`);for(let h=0;h<s;++h)if(t.shape[h]!==e.shape[h])throw new Error(`x.shape[${h}]: ${t.shape[h]} should be equal to indices.shape[${h}]: ${e.shape[h]}.`);const a=t.shape[n],i=[];let l=1,u=1,c=1;for(let h=0;h<s;++h)i.push(t.shape[h]),l*=t.shape[h];for(let h=s;h<n;h++)i.push(t.shape[h]),u*=t.shape[h];for(let h=s;h<r;h++)i.push(e.shape[h]);for(let h=n+1;h<o;h++)i.push(t.shape[h]),c*=t.shape[h];return{batchSize:l,sliceSize:c,outerSize:u,dimSize:a,outputShape:i}}const v4=Object.freeze(Object.defineProperty({__proto__:null,collectGatherOpShapeInfo:Kb,computeOutShape:GT,segOpComputeOptimalWindowSize:UT},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function eo(t){try{return t.map(e=>_o(e))}catch(e){throw new Error(`Failed to decode encoded string bytes into utf-8, error: ${e}`)}}function HT(t){return t.map(e=>To(e))}const S4=Object.freeze(Object.defineProperty({__proto__:null,ERF_A1:Fb,ERF_A2:Lb,ERF_A3:Pb,ERF_A4:zb,ERF_A5:Mb,ERF_P:Ob,PARALLELIZE_THRESHOLD:Rb,get RowPartitionType(){return er},SELU_SCALE:dm,SELU_SCALEALPHA:hm,applyActivation:im,assertAndGetBroadcastShape:Re,assertAxesAreInnerMostDims:nn,assertParamsConsistent:Eb,assignToTypedArray:ET,axesAreInnerMostDims:Mx,calculateShapes:Qa,checkEinsumDimSizes:Ub,checkPadOnDimRoundingMode:Cn,combineLocations:wI,combineRaggedTensorToTensorShapes:ST,complexWithEvenIndex:IT,complexWithOddIndex:TT,computeConv2DInfo:Kt,computeConv3DInfo:Yo,computeDefaultPad:_x,computeDilation2DInfo:qc,computeOptimalWindowSize:cm,computeOutAndReduceShapes:qt,computeOutShape:Ir,computePool2DInfo:Ws,computePool3DInfo:no,convertConv2DDataFormat:so,decodeEinsumEquation:Vb,eitherStridesOrDilationsAreOne:tn,expandShapeToKeepDim:$t,exponent:DT,exponents:RT,fromStringArrayToUint8:HT,fromUint8ToStringArray:eo,getAxesPermutation:gt,getBroadcastDims:nl,getComplexWithIndex:Bb,getEinsumComputePath:Gb,getEinsumPermutation:Wb,getFusedBiasGradient:am,getFusedDyActivation:om,getImageCenter:Db,getInnerMostAxes:Ct,getPermuted:nh,getRaggedRank:$T,getReductionAxes:Bt,getReshaped:th,getReshapedPermuted:sh,getRowPartitionTypesHelper:kT,getSliceBeginCoords:Ab,getSliceSize:_b,getSparseFillEmptyRowsIndicesDenseShapeMismatch:AT,getSparseFillEmptyRowsNegativeIndexErrorMessage:_T,getSparseFillEmptyRowsOutOfRangeIndexErrorMessage:OT,getSparseReshapeEmptyTensorZeroOutputDimErrorMessage:PT,getSparseReshapeInputOutputMismatchErrorMessage:MT,getSparseReshapeInputOutputMultipleErrorMessage:zT,getSparseReshapeMultipleNegativeOneOutputDimErrorMessage:FT,getSparseReshapeNegativeOutputDimErrorMessage:LT,getSparseSegmentReductionIndicesOutOfRangeErrorMessage:WT,getSparseSegmentReductionNegativeSegmentIdsErrorMessage:Yy,getSparseSegmentReductionNonIncreasingSegmentIdsErrorMessage:BT,getSparseSegmentReductionSegmentIdOutOfRangeErrorMessage:VT,getUndoAxesPermutation:Qo,isIdentityPermutation:Hb,log:gF,mergeRealAndImagArrays:Jr,prepareAndValidate:kb,prepareSplitSize:jb,segment_util:v4,shouldFuse:lm,slice_util:g4,splitRealAndImagArrays:NT,stridesOrDilationsArePositive:_a,tupleValuesAreOne:Fo,upcastType:Xn,validateDefaultValueShape:CT,validateInput:cb,validateUpdateShape:BI,warn:ss},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */XV();/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const jT={kernelName:Pp,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>O(t,vl(he(n,"float32"),-1))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const k4={kernelName:Zu,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>{const s=Je(he(n,"float32")),r=dn(fe(Se(1),s));return it(we(t,r))}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const $4={kernelName:Ju,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>{const s=dn(fe(Je(he(n,"float32")),1));return we(t,s)}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const C4={kernelName:xl,inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,s]=e,r=Re(n.shape,s.shape);return{a:()=>{let i=t;const l=Bt(n.shape,r);return l.length>0&&(i=ye(i,l)),F(i,n.shape)},b:()=>{let i=t;const l=Bt(s.shape,r);return l.length>0&&(i=ye(i,l)),F(i,s.shape)}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const N4={kernelName:zp,saveAllInputs:!0,gradFunc:(t,e)=>{const n={};return e.forEach((s,r)=>{n[r]=()=>t.clone()}),n}};/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const I4={kernelName:Mp,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Ue(n)}}};/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const T4={kernelName:Bp,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Ue(n)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const E4={kernelName:ec,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>we(t,dn(fe(Se(1),Je(he(n,"float32")))))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const R4={kernelName:tc,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>{const s=dn(te(Se(1),Je(he(n,"float32"))));return we(t,s)}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const D4={kernelName:rc,inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,s]=e,r=Re(n.shape,s.shape);return{a:()=>{const i=te(Je(n),Je(s));let l=O(t,we(s,i));const u=Bt(n.shape,r);return u.length>0&&(l=ye(l,u)),F(l,n.shape)},b:()=>{const i=te(Je(n),Je(s));let l=it(O(t,we(n,i)));const u=Bt(s.shape,r);return u.length>0&&(l=ye(l,u)),F(l,s.shape)}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const A4={kernelName:nc,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>we(t,te(Je(he(n,"float32")),1))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const _4={kernelName:sc,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>we(t,fe(Se(1),Je(he(n,"float32"))))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function O4(t,e,n,s,r,o){const a=I(t,"dy","avgPool3dGrad"),i=I(e,"input","avgPool3dGrad");let l=a,u=i,c=!1;i.rank===4&&(c=!0,l=F(a,[1,a.shape[0],a.shape[1],a.shape[2],a.shape[3]]),u=F(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]])),C(l.rank===5,()=>`Error in avgPool3dGrad: dy must be rank 5 but got rank ${l.rank}.`),C(u.rank===5,()=>`Error in avgPool3dGrad: input must be rank 5 but got rank ${u.rank}.`),Cn("avgPool3dGrad",r,o);const h={dy:l,input:u},d={filterSize:n,strides:s,pad:r,dimRoundingMode:o},p=A.runKernel(N1,h,d);return c?F(p,[p.shape[1],p.shape[2],p.shape[3],p.shape[4]]):p}const F4=D({avgPool3dGrad_:O4});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const L4={kernelName:Wp,inputsToSave:["x"],gradFunc:(t,e,n)=>{const[s]=e,{filterSize:r,strides:o,pad:a,dimRoundingMode:i}=n;return{x:()=>F4(t,s,r,o,a,i)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function P4(t,e,n,s,r){const o=I(t,"dy","avgPoolGrad"),a=I(e,"input","avgPoolGrad");C(a.rank===o.rank,()=>`Rank of input (${a.rank}) does not match rank of dy (${o.rank})`);let i=a,l=o,u=!1;a.rank===3&&(u=!0,i=F(a,[1,a.shape[0],a.shape[1],a.shape[2]]),l=F(o,[1,o.shape[0],o.shape[1],o.shape[2]])),C(l.rank===4,()=>`Error in avgPoolGrad: dy must be rank 4 but got rank ${l.rank}.`),C(i.rank===4,()=>`Error in avgPoolGrad: input must be rank 4 but got rank ${i.rank}.`);const c={dy:l,input:i},h={filterSize:n,strides:s,pad:r},d=A.runKernel(C1,c,h);return u?F(d,[d.shape[1],d.shape[2],d.shape[3]]):d}const z4=D({avgPoolGrad_:P4});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const M4={kernelName:Vp,inputsToSave:["x"],gradFunc:(t,e,n)=>{const[s]=e,{filterSize:r,strides:o,pad:a}=n;return{x:()=>z4(t,s,r,o,a)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const B4={kernelName:Up,inputsToSave:["a","b"],gradFunc:(t,e,n)=>{const[s,r]=e,{transposeA:o,transposeB:a}=n;return!o&&!a?{a:()=>Pe(t,r,!1,!0),b:()=>Pe(s,t,!0,!1)}:!o&&a?{a:()=>Pe(t,r,!1,!1),b:()=>Pe(t,s,!0,!1)}:o&&!a?{a:()=>Pe(r,t,!1,!0),b:()=>Pe(s,t,!1,!1)}:{a:()=>Pe(r,t,!0,!0),b:()=>Pe(t,s,!0,!0)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const V4={kernelName:Gp,gradFunc:(t,e,n)=>{const{blockShape:s,crops:r}=n;return{x:()=>Qf(t,s,r)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const W4={kernelName:dF,gradFunc:(t,e,n)=>{const s=n,r=s.inputShape,o=s.shape,a=Array.from(o);for(let l=r.length-1;l>=0;l--)if(r[l]===o[l])a[l]=1;else if(r[l]!==1)throw new Error(`broadcastTo(): [${r}] cannot be broadcast to [${o}].`);const i=[];for(let l=0;l<a.length;l++)a[l]>1&&i.push(l);return{x:()=>ye(t,i,!0)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const U4={kernelName:oc,gradFunc:t=>({x:()=>t.clone()})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const G4={kernelName:ac,gradFunc:t=>({x:()=>Ue(t)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const H4={kernelName:ic,inputsToSave:["x"],gradFunc:(t,e,n)=>{const[s]=e,{clipValueMin:r,clipValueMax:o}=n;return{x:()=>un(Rr(Zo(s,r),Ka(s,o)),t,Ue(t))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const j4={kernelName:jp,inputsToSave:["x"],gradFunc:jT.gradFunc};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const K4={kernelName:Kp,saveAllInputs:!0,gradFunc:(t,e,n)=>{const s=e.map(l=>l.shape),{axis:r}=n,o=Fe(r,e[0].shape)[0],a=s.map(l=>l[o]);return qn(t,a,o).map(l=>()=>l)}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const q4={kernelName:qp,inputsToSave:["x","filter"],gradFunc:(t,e,n)=>{const[s,r]=e,{dilations:o,strides:a,pad:i,dataFormat:l}=n;return C(Fo(o),()=>`Error in gradient of conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${o}'`),{x:()=>Fx(s.shape,t,r,a,i,l),filter:()=>mb(s,t,r.shape,a,i,l)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const X4={kernelName:Xp,inputsToSave:["dy","filter"],gradFunc:(t,e,n)=>{const[s,r]=e,{strides:o,pad:a,dataFormat:i,dimRoundingMode:l}=n;return{dy:()=>Lo(t,r,o,a,i,1,l),filter:()=>mb(t,s,r.shape,o,a,i,l)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Y4(t,e,n,s,r){let o=t;t.rank===4&&(o=F(t,[1,t.shape[0],t.shape[1],t.shape[2],t.shape[3]]));let a=e;a.rank===4&&(a=F(e,[1,e.shape[0],e.shape[1],e.shape[2],e.shape[3]])),C(o.rank===5,()=>`Error in conv3dDerFilter: input must be rank 5, but got shape ${o.shape}.`),C(a.rank===5,()=>`Error in conv3dDerFilter: dy must be rank 5, but got shape ${a.shape}.`),C(n.length===5,()=>`Error in conv3dDerFilter: filterShape must be length 5, but got ${n}.`),C(o.shape[4]===n[3],()=>`Error in conv3dDerFilter: depth of input ${o.shape[4]}) must match input depth in filter (${n[3]}.`),C(a.shape[4]===n[4],()=>`Error in conv3dDerFilter: depth of dy (${a.shape[4]}) must match output depth for filter (${n[4]}).`);const i={x:o,dy:a},l={strides:s,pad:r,filterShape:n};return A.runKernel(D1,i,l)}const Q4=D({conv3DBackpropFilter_:Y4});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Z4={kernelName:Yp,inputsToSave:["x","filter"],gradFunc:(t,e,n)=>{const{dilations:s,strides:r,pad:o}=n;C(Fo(s),()=>`Error in gradient of conv3D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${s}'`);const[a,i]=e;return{x:()=>pI(a.shape,t,i,r,o),filter:()=>Q4(a,t,i.shape,r,o)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const J4={kernelName:lc,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>O(it(ob(he(n,"float32"))),t)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const eW={kernelName:uc,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>O(ab(he(n,"float32")),t)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const tW={kernelName:Qp,inputsToSave:["x"],gradFunc:(t,e,n)=>{const[s]=e,{axis:r,exclusive:o,reverse:a}=n;return{x:()=>{const i=gt([r],s.rank);let l=zx(t,r,o,!a);return i!=null&&(l=We(l,i)),l}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const nW={kernelName:Zp,inputsToSave:["x","filter"],gradFunc:(t,e,n)=>{const{dilations:s,strides:r,pad:o,dimRoundingMode:a}=n,i=s??[1,1];C(Fo(i),()=>`Error in gradient of depthwiseConv2dNative: dilation rates greater than 1 are not yet supported. Got dilations '${i}'`);const[l,u]=e;return C(l.rank===4,()=>`Error in gradient of depthwiseConv2dNative: input must be rank 4, but got rank ${l.rank}.`),C(u.rank===4,()=>`Error in gradient of depthwiseConv2dNative: filter must be rank 4, but got rank ${u.rank}.`),C(l.shape[3]===u.shape[2],()=>`Error in gradient of depthwiseConv2d: number of input channels (${l.shape[3]}) must match the inChannels dimension in filter ${u.shape[2]}.`),C(tn(r,i),()=>`Error in gradient of depthwiseConv2d: Either strides or dilations must be  1. Got strides ${r} and dilations '${i}'.`),Cn("depthwiseConv2d",o,a),{x:()=>XI(l.shape,t,u,r,o,i,a),filter:()=>qI(l,t,u.shape,r,o,i,a)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const sW={kernelName:Jp,inputsToSave:["x","filter"],gradFunc:(t,e,n)=>{const[s,r]=e,o={x:s,filter:r,dy:t},a={x:s,filter:r,dy:t};return{x:()=>A.runKernel(Ry,o,n),filter:()=>A.runKernel(Dy,a,n)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const rW={kernelName:hc,outputsToSave:[!0],gradFunc:(t,e)=>{const[n]=e,s={dy:t,y:n};return{x:()=>A.runKernel(V1,s)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const oW={kernelName:dc,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e,s=O(us(it(Je(n))),2/Math.sqrt(Math.PI));return{x:()=>O(t,s)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const aW={kernelName:pc,outputsToSave:[!0],gradFunc:(t,e)=>{const[n]=e;return{x:()=>O(t,n)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const iW={kernelName:tf,inputsToSave:["input"],gradFunc:(t,e)=>{const[n]=e;return{input:()=>F(t,n.shape)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const lW={kernelName:fc,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>O(t,us(n))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const uW={kernelName:mc,gradFunc:t=>({x:()=>Ue(t)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const cW={kernelName:gc,inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,s]=e,r=Re(n.shape,s.shape);return{a:()=>{const i=we(t,he(s,"float32")),l=Bt(n.shape,r);return l.length>0?F(ye(i,l),n.shape):i},b:()=>{let i=O(t,he(n,"float32"));const l=Bt(s.shape,r);l.length>0&&(i=F(ye(i,l),s.shape));const u=Je(s);return it(we(i,he(u,"float32")))}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const hW={kernelName:nf,inputsToSave:["x","mean","variance","scale"],gradFunc:(t,e,n)=>{const{varianceEpsilon:s}=n,[r,o,a,i]=e,l=i??Se(1),u=Bt(o.shape,r.shape),c=[];if(o.rank===1){for(let b=0;b<r.shape.length-1;++b)c.push(r.shape[b]);c.push(1)}const h=fe(r,o),d=O(t,l),p=nb(te(a,Se(s))),f=O(O(O(p,p),p),Se(-.5));return{x:()=>o.rank===1?F(O(O(t,Rs(F(p,[1,1,1,o.shape[0]]),c)),l),r.shape):F(O(O(t,p),l),r.shape),mean:()=>{let b=O(O(p,Se(-1)),d);return o.rank===1&&(b=ye(b,u)),F(b,o.shape)},variance:()=>{let b=O(O(f,h),d);return o.rank===1&&(b=ye(b,u)),F(b,o.shape)},scale:()=>{const b=O(h,p);let v=O(t,b);return o.rank===1&&(v=ye(v,u)),F(v,o.shape)},offset:()=>{let b=t;return o.rank===1&&(b=ye(b,u)),F(b,o.shape)}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const dW={kernelName:sf,inputsToSave:["x","indices"],gradFunc:(t,e,n)=>{const[s,r]=e,{axis:o}=n,a=Fe(o,s.shape)[0];return{x:()=>{const l=s.shape,u=r.size,c=l.slice(0,a),h=c.length,d=l.slice(o,l.length).slice(1),p=d.length,f=gS(0,h),m=gS(h+1,h+1+p),y=yS([c,[u],d]),g=F(t,y),x=F(r,[u]),w=yS([[h],f,m]),b=We(g,w);let v=db(b,x,s.shape[a]);const k=Qo(w);return v=We(v,k),v},indices:()=>r}}};function gS(t,e){const n=[];for(let s=t;s<e;++s)n.push(s);return n}function yS(t){const e=[];for(let n=0;n<t.length;++n)for(let s=0;s<t[n].length;++s)e.push(t[n][s]);return e}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const pW={kernelName:yc,inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,s]=e;return{a:()=>Ue(n),b:()=>Ue(s)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const fW={kernelName:xc,gradFunc:t=>({x:()=>he(t,"float32")})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const mW={kernelName:bc,gradFunc:t=>({x:()=>Ue(t)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const gW={kernelName:wc,gradFunc:t=>({x:()=>Ue(t)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const yW={kernelName:vc,gradFunc:t=>({x:()=>Ue(t)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const xW={kernelName:of,inputsToSave:["x"],gradFunc:(t,e,n)=>{const[s]=e,{alpha:r}=n,o=ts(s,0);return{x:()=>un(o,t,O(t,r))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const bW={kernelName:kc,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>we(t,te(n,1))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const wW={kernelName:Sc,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>we(t,he(n,"float32"))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const vW={kernelName:fF,inputsToSave:[],outputsToSave:[!0],gradFunc:(t,e,n)=>{const[s]=e,{axis:r}=n;return{logits:()=>{const a=us(s);return fe(t,O(ye(t,r,!0),a))}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function SW(t,e,n,s=5,r=1,o=1,a=.5){const i={x:t,y:e,dy:n},l={depthRadius:s,bias:r,alpha:o,beta:a};return A.runKernel(X1,i,l)}const kW=D({localResponseNormalizationBackprop_:SW});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const $W={kernelName:df,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(t,e,n)=>{const[s,r]=e,{depthRadius:o,bias:a,alpha:i,beta:l}=n;return{x:()=>kW(s,r,t,o,a,i,l)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function KT(t,e,n,s){return e.rank<n.rank&&(e=F(e,$t(e.shape,s))),t.rank<n.rank&&(t=F(t,$t(t.shape,s))),{x:()=>O(t,he(or(n,e),t.dtype))}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const xS={kernelName:pf,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(t,e,n)=>{const s=n,{reductionIndices:r}=s,o=e[0],a=e[1],i=Fe(r,o.shape),l=KT(t,a,o,i);return{x:()=>l.x()}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const CW={kernelName:$c,inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,s]=e;return{a:()=>O(t,he(Zo(n,s),"float32")),b:()=>O(t,he(Ou(n,s),"float32"))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function NW(t,e,n,s,r,o,a){const i=I(t,"dy","maxPool3dGrad"),l=I(e,"input","maxPool3dGrad"),u=I(n,"output","maxPool3dGrad");let c=i,h=l,d=u,p=!1;l.rank===4&&(p=!0,c=F(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]]),h=F(l,[1,l.shape[0],l.shape[1],l.shape[2],l.shape[3]]),d=F(u,[1,u.shape[0],u.shape[1],u.shape[2],u.shape[3]])),C(c.rank===5,()=>`Error in maxPool3dGrad: dy must be rank 5 but got rank ${c.rank}.`),C(h.rank===5,()=>`Error in maxPool3dGrad: input must be rank 5 but got rank ${h.rank}.`),C(d.rank===5,()=>`Error in maxPool3dGrad: output must be rank 5 but got rank ${d.rank}.`),Cn("maxPool3dGrad",o,a);const f={dy:c,input:h,output:d},m={filterSize:s,strides:r,pad:o,dimRoundingMode:a},y=A.runKernel(Q1,f,m);return p?F(y,[y.shape[1],y.shape[2],y.shape[3],y.shape[4]]):y}const IW=D({maxPool3dGrad_:NW});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const TW={kernelName:mf,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(t,e,n)=>{const[s,r]=e,{filterSize:o,strides:a,pad:i,dimRoundingMode:l}=n;return{x:()=>IW(t,s,r,o,a,i,l)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function EW(t,e,n,s,r,o,a){const i=I(t,"dy","maxPoolGrad"),l=I(e,"input","maxPoolGrad"),u=I(n,"output","maxPoolGrad");C(l.rank===i.rank,()=>`Rank of input (${l.rank}) does not match rank of dy (${i.rank})`),C(i.rank===4,()=>`Error in maxPoolGrad: dy must be rank 4 but got rank ${i.rank}.`),C(l.rank===4,()=>`Error in maxPoolGrad: input must be rank 4 but got rank ${l.rank}.`),Cn("maxPoolGrad",o,a);const c={dy:i,input:l,output:u},h={filterSize:s,strides:r,pad:o,dimRoundingMode:a};return A.runKernel(Y1,c,h)}const RW=D({maxPoolGrad_:EW});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const DW={kernelName:ff,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(t,e,n)=>{const[s,r]=e,{filterSize:o,strides:a,pad:i}=n;return{x:()=>RW(t,s,r,o,a,i)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const AW={kernelName:gf,inputsToSave:["x"],gradFunc:(t,e,n)=>{const[s]=e,{axis:r}=n,o=Fe(r,s.shape),i=qt(s.shape,o)[1],l=K(i);return{x:()=>{const c=s.shape.slice();o.forEach(p=>{c[p]=1});const h=F(t,c);return we(O(h,os(s.shape,"float32")),l)}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const _W={kernelName:yf,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(t,e,n)=>{const s=n,{axis:r}=s,[o,a]=e,i=Fe(r,o.shape),l=KT(t,a,o,i);return{x:()=>l.x()}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const OW={kernelName:Cc,inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,s]=e;return{a:()=>O(t,he(Ka(n,s),"float32")),b:()=>O(t,he(ts(n,s),"float32"))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const FW={kernelName:xf,inputsToSave:["x"],gradFunc:(t,e,n)=>{const s=e[0],{paddings:r}=n,o=r.map(a=>a[0]);return{x:()=>Ve(t,o,s.shape)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const LW={kernelName:Nc,inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,s]=e,r=Re(n.shape,s.shape);return{a:()=>{const i=Bt(n.shape,r);return i.length>0?F(ye(t,i),n.shape):t},b:()=>{const i=O(t,it(Jc(we(n,s)))),l=Bt(s.shape,r);return l.length>0?F(ye(i,l),s.shape):i}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const PW={kernelName:Ic,inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,s]=e,r=Re(n.shape,s.shape);return{a:()=>{const i=O(t,he(s,"float32")),l=Bt(n.shape,r);return l.length>0?F(ye(i,l),n.shape):i},b:()=>{const i=O(t,he(n,"float32")),l=Bt(s.shape,r);return l.length>0?F(ye(i,l),s.shape):i}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const zW={kernelName:bf,gradFunc:t=>({x:()=>it(t)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const MW={kernelName:Sf,inputsToSave:["indices"],gradFunc:(t,e)=>{const n=e[0];return{indices:()=>Ot(n.shape,"float32")}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const BW={kernelName:vf,gradFunc:t=>({x:()=>Ue(t)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const VW={kernelName:kf,saveAllInputs:!0,gradFunc:(t,e,n)=>{const{axis:s}=n;return Vs(t,s).map(o=>()=>o)}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const bS={kernelName:$f,inputsToSave:["x"],gradFunc:(t,e,n)=>{const s=e[0],{paddings:r}=n,o=r.map(a=>a[0]);return{x:()=>Ve(t,o,s.shape)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const WW={kernelName:Tc,inputsToSave:["a","b"],outputsToSave:[!0],gradFunc:(t,e)=>{const[n,s,r]=e,o=n,a=s,i=Re(o.shape,a.shape);return{a:()=>{const c=he(a,"float32");let h=O(t,O(c,Po(o,fe(c,Se(1)))));const d=Bt(o.shape,i);return d.length>0&&(h=ye(h,d)),F(h,o.shape)},b:()=>{const c=ts(o,0),h=un(c,cs(o),Ue(o));let d=O(t,O(r,h));const p=Bt(a.shape,i);return p.length>0&&(d=ye(d,p)),F(d,a.shape)}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const UW={kernelName:Cf,inputsToSave:["x","alpha"],gradFunc:(t,e)=>{const[n,s]=e,r=ts(n,0);return{x:()=>un(r,t,O(t,s)),alpha:()=>{let o=un(r,Ue(t),O(t,n));const a=Bt(s.shape,t.shape);return a.length>0&&(o=ye(o,a)),F(o,s.shape)}}}};/**
 * @license
 * Copyright 2022 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function GW(t,e,n){const s=t.shape.slice();s[n]=1;const r=F(e,s),o=Zd(t,n,!0,!1),a=Zd(t,n,!0,!0),i=O(o,a);return O(r,i)}function HW(t,e,n){const s=t.shape.length,r=s-n.length,o=gt(n,s);let a=t;o!=null&&(a=We(t,o));const i=a.shape.slice(),u=i.splice(s-n.length,n.length).reduce((d,p)=>d*p,1);i.push(u);const c=a.reshape(i);let h=GW(c,e,r);if(h=h.reshape(a.shape),o!=null){const d=Qo(o);h=We(h,d)}return h}const jW={kernelName:Nf,inputsToSave:["x"],gradFunc:(t,e,n)=>{const[s]=e,{axis:r}=n;let o=[];return r==null?o=s.shape.map((a,i)=>i):typeof r=="number"?o=[r]:o=r,{x:()=>HW(s,t,o)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const KW={kernelName:cc,inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,s]=e,r=Re(n.shape,s.shape);return{a:()=>{const i=we(t,he(s,"float32")),l=Bt(n.shape,r);return l.length>0?F(ye(i,l),n.shape):i},b:()=>{let i=O(t,he(n,"float32"));const l=Bt(s.shape,r);l.length>0&&(i=F(ye(i,l),s.shape));const u=Je(s);return it(we(i,he(u,"float32")))}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const qW={kernelName:Ec,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>we(t,it(Je(n)))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const XW={kernelName:Dc,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e,s=O(Ka(n,6),vl(n));return{x:()=>O(t,he(s,"float32"))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const YW={kernelName:Rc,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>O(t,he(vl(n),"float32"))}}};/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const QW={kernelName:If,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>F(t,n.shape)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ZW={kernelName:Ef,inputsToSave:["images"],gradFunc:(t,e,n)=>{const[s]=e,r={dy:t,images:s};return{images:()=>A.runKernel(ux,r,n)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const JW={kernelName:Tf,inputsToSave:["images"],gradFunc:(t,e,n)=>{const[s]=e,r={dy:t,images:s};return{images:()=>A.runKernel(lx,r,n)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const eU={kernelName:Rf,gradFunc:(t,e,n)=>{const{dims:s}=n,r=Fe(s,t.shape);return{x:()=>Bs(t,r)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const tU={kernelName:Ac,gradFunc:t=>({x:()=>Ue(t)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const nU={kernelName:_c,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>it(we(t,O(Po(n,1.5),2)))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const sU={kernelName:Df,inputsToSave:["condition"],gradFunc:(t,e)=>{const[n]=e;return{condition:()=>he(Ue(n),"float32"),t:()=>O(t,he(n,t.dtype)),e:()=>O(t,he(qf(n),t.dtype))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const rU={kernelName:Oc,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>{const s=ts(n,Se(0)),r=Se(hm),o=Se(dm),a=O(t,o),i=O(O(t,r),us(he(n,"float32")));return un(s,a,i)}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const oU={kernelName:zc,outputsToSave:[!0],gradFunc:(t,e)=>{const[n]=e;return{x:()=>O(t,O(n,fe(Se(1),n)))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const aU={kernelName:Pc,gradFunc:t=>({x:()=>Ue(t)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const iU={kernelName:Fc,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>O(Gf(he(n,"float32")),t)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const lU={kernelName:Lc,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>O(Px(he(n,"float32")),t)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const uU={kernelName:Af,inputsToSave:["x"],gradFunc:(t,e,n)=>{const[s]=e,{begin:r,size:o}=n,a=s.shape,[i,l]=um(s,r,o),u=[];for(let c=0;c<t.rank;c++)u.push([i[c],a[c]-i[c]-l[c]]);return{x:()=>Jo(t,u)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const cU={kernelName:Lf,outputsToSave:[!0],gradFunc:(t,e,n)=>{const[s]=e,{dim:r}=n,o=!0,a=O(t,s);return{logits:()=>fe(a,O(ye(a,[r],o),s))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const hU={kernelName:Mc,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>O(t,Nr(n))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const wS={kernelName:Of,gradFunc:(t,e,n)=>{const{blockShape:s,paddings:r}=n;return{x:()=>Uf(t,s,r)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const vS={kernelName:Ff,gradFunc:(t,e,n)=>{const{axis:s}=n;return{x:()=>Rt(t,s)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const dU={kernelName:Bc,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>we(t,O(dn(he(n,"float32")),2))}}};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const pU={kernelName:xx,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>O(t,O(he(n,"float32"),2))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const fU={kernelName:Vc,inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,s]=e,r=Se(2);return{a:()=>O(t,O(r,fe(n,s))),b:()=>O(t,O(r,fe(s,n)))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const mU={kernelName:jc,gradFunc:t=>({x:()=>Ue(t)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const gU={kernelName:Wc,inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,s]=e,r=Re(n.shape,s.shape);return{a:()=>{let i=t;const l=Bt(n.shape,r);return l.length>0&&(i=ye(i,l)),F(i,n.shape)},b:()=>{let i=t;const l=Bt(s.shape,r);return l.length>0&&(i=ye(i,l)),F(it(i),s.shape)}}}};/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const yU={kernelName:_f,inputsToSave:["x"],gradFunc:(t,e,n)=>{const[s]=e,r=s.shape.slice(),{axis:o}=n;Fe(o,s.shape).forEach(u=>{r[u]=1});const i=F(t,r),l=O(i,os(s.shape,"float32"));return{x:()=>l}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const xU={kernelName:Uc,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>we(t,Je(Gf(n)))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const bU={kernelName:Gc,outputsToSave:[!0],gradFunc:(t,e)=>{const[n]=e;return{x:()=>O(fe(Se(1),Je(n)),t)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const wU={kernelName:Hc,inputsToSave:["x"],gradFunc:(t,e,n)=>{const[s]=e,{reps:r}=n;return{x:()=>{let a=Ue(s);if(s.rank===1)for(let i=0;i<r[0];++i)a=te(a,Ve(t,[i*s.shape[0]],[s.shape[0]]));else if(s.rank===2)for(let i=0;i<r[0];++i)for(let l=0;l<r[1];++l)a=te(a,Ve(t,[i*s.shape[0],l*s.shape[1]],[s.shape[0],s.shape[1]]));else if(s.rank===3)for(let i=0;i<r[0];++i)for(let l=0;l<r[1];++l)for(let u=0;u<r[2];++u)a=te(a,Ve(t,[i*s.shape[0],l*s.shape[1],u*s.shape[2]],[s.shape[0],s.shape[1],s.shape[2]]));else if(s.rank===4)for(let i=0;i<r[0];++i)for(let l=0;l<r[1];++l)for(let u=0;u<r[2];++u)for(let c=0;c<r[3];++c)a=te(a,Ve(t,[i*s.shape[0],l*s.shape[1],u*s.shape[2],c*s.shape[3]],[s.shape[0],s.shape[1],s.shape[2],s.shape[3]]));else throw new Error(`Gradient for tile operation is not implemented for rank-${s.rank} tensors yet.`);return a}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const vU={kernelName:Li,gradFunc:(t,e,n)=>{const s=n,{perm:r}=s,o=Qo(r);return{x:()=>We(t,o)}}};/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const SU={kernelName:zf,gradFunc:(t,e,n)=>{const s=n,{axis:r}=s;return{value:()=>ds(t,r)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const kU={kernelName:Mf,inputsToSave:["segmentIds"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>$U(t,n)}}};function $U(t,e){const n=ro(e,Ue(e)),s=eh(t,n);let r=Zo(e,Se(0,"int32"));const o=s.rank-r.rank;for(let i=0;i<o;++i)r=wn(r,i+1);r=Rr(r,os(s.shape,"bool"));const a=Ue(s);return un(r,s,a)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const CU={kernelName:Bf,gradFunc:t=>({x:()=>Ue(t)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const NU=[jT,k4,$4,C4,N4,I4,T4,E4,R4,D4,A4,_4,L4,M4,B4,V4,W4,U4,G4,H4,j4,K4,X4,q4,Z4,J4,eW,tW,nW,sW,KW,rW,oW,aW,iW,lW,cW,uW,hW,dW,pW,fW,mW,gW,yW,xW,bW,wW,vW,$W,xS,xS,CW,TW,DW,AW,_W,OW,FW,LW,PW,zW,MW,BW,VW,bS,bS,WW,UW,jW,qW,XW,YW,QW,ZW,JW,eU,tU,nU,sU,rU,oU,aU,iU,lU,uU,cU,hU,wS,wS,vS,vS,dU,fU,pU,mU,gU,yU,xU,bU,wU,vU,SU,kU,CU];for(const t of NU)yF(t);/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q().prototype.abs=function(){return this.throwIfDisposed(),Dt(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q().prototype.acos=function(){return this.throwIfDisposed(),qN(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q().prototype.acosh=function(){return this.throwIfDisposed(),XN(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q().prototype.add=function(t){return this.throwIfDisposed(),te(this,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q().prototype.all=function(t,e){return this.throwIfDisposed(),Ax(this,t,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q().prototype.any=function(t,e){return this.throwIfDisposed(),Qd(this,t,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q().prototype.argMax=function(t){return this.throwIfDisposed(),el(this,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q().prototype.argMin=function(t){return this.throwIfDisposed(),YN(this,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q().prototype.asScalar=function(){return this.throwIfDisposed(),C(this.size===1,()=>"The array must have only 1 element."),F(this,[])};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q().prototype.asType=function(t){return this.throwIfDisposed(),he(this,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q().prototype.as1D=function(){return this.throwIfDisposed(),F(this,[this.size])};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q().prototype.as2D=function(t,e){return this.throwIfDisposed(),F(this,[t,e])};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q().prototype.as3D=function(t,e,n){return this.throwIfDisposed(),F(this,[t,e,n])};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q().prototype.as4D=function(t,e,n,s){return this.throwIfDisposed(),F(this,[t,e,n,s])};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q().prototype.as5D=function(t,e,n,s,r){return this.throwIfDisposed(),F(this,[t,e,n,s,r])};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q().prototype.asin=function(){return this.throwIfDisposed(),QN(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q().prototype.asinh=function(){return this.throwIfDisposed(),ZN(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q().prototype.atan=function(){return this.throwIfDisposed(),JN(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q().prototype.atan2=function(t){return this.throwIfDisposed(),eI(this,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q().prototype.atanh=function(){return this.throwIfDisposed(),tI(this)};q().prototype.avgPool=function(t,e,n,s){return this.throwIfDisposed(),Wf(this,t,e,n,s)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q().prototype.batchToSpaceND=function(t,e){return this.throwIfDisposed(),Uf(this,t,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q().prototype.batchNorm=function(t,e,n,s,r){return this.throwIfDisposed(),Xc(this,t,e,n,s,r)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q().prototype.broadcastTo=function(t){return this.throwIfDisposed(),Mi(this,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q().prototype.cast=function(t){return this.throwIfDisposed(),he(this,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q().prototype.ceil=function(){return this.throwIfDisposed(),iI(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q().prototype.clipByValue=function(t,e){return this.throwIfDisposed(),Yn(this,t,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q().prototype.concat=function(t,e){return this.throwIfDisposed(),t instanceof ut&&(t=[t]),Rt([this,...t],e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q().prototype.conv1d=function(t,e,n,s,r,o){return this.throwIfDisposed(),Ox(this,t,e,n,s,r,o)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q().prototype.conv2dTranspose=function(t,e,n,s,r){return this.throwIfDisposed(),Lx(this,t,e,n,s,r)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q().prototype.conv2d=function(t,e,n,s,r,o){return this.throwIfDisposed(),Lo(this,t,e,n,s,r,o)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q().prototype.cos=function(){return this.throwIfDisposed(),Gf(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q().prototype.cosh=function(){return this.throwIfDisposed(),Px(this)};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the 'License');
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an 'AS IS' BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q().prototype.cumprod=function(t,e,n){return this.throwIfDisposed(),Zd(this,t,e,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q().prototype.cumsum=function(t,e,n){return this.throwIfDisposed(),zx(this,t,e,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q().prototype.depthToSpace=function(t,e){return this.throwIfDisposed(),mI(this,t,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q().prototype.depthwiseConv2d=function(t,e,n,s,r,o){return this.throwIfDisposed(),Yc(this,t,e,n,s,r,o)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q().prototype.dilation2d=function(t,e,n,s,r){return this.throwIfDisposed(),gI(this,t,e,n,s,r)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q().prototype.divNoNan=function(t){return this.throwIfDisposed(),yI(this,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q().prototype.div=function(t){return this.throwIfDisposed(),we(this,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q().prototype.dot=function(t){return this.throwIfDisposed(),xI(this,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q().prototype.elu=function(){return this.throwIfDisposed(),Qc(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q().prototype.equal=function(t){return this.throwIfDisposed(),or(this,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q().prototype.erf=function(){return this.throwIfDisposed(),bI(this)};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q().prototype.euclideanNorm=function(t,e){return this.throwIfDisposed(),SI(this,t,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q().prototype.exp=function(){return this.throwIfDisposed(),us(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q().prototype.expandDims=function(t){return this.throwIfDisposed(),wn(this,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q().prototype.expm1=function(){return this.throwIfDisposed(),kI(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q().prototype.fft=function(){return this.throwIfDisposed(),sm(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q().prototype.flatten=function(){return this.throwIfDisposed(),F(this,[this.size])};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q().prototype.floor=function(){return this.throwIfDisposed(),Jc(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q().prototype.floorDiv=function(t){return this.throwIfDisposed(),Dx(this,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q().prototype.gather=function(t,e,n){return this.throwIfDisposed(),eh(this,t,e,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q().prototype.greaterEqual=function(t){return this.throwIfDisposed(),Zo(this,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q().prototype.greater=function(t){return this.throwIfDisposed(),ts(this,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q().prototype.ifft=function(){return this.throwIfDisposed(),Pu(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q().prototype.irfft=function(){return this.throwIfDisposed(),lb(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q().prototype.isFinite=function(){return this.throwIfDisposed(),$I(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q().prototype.isInf=function(){return this.throwIfDisposed(),CI(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q().prototype.isNaN=function(){return this.throwIfDisposed(),NI(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q().prototype.leakyRelu=function(t){return this.throwIfDisposed(),jf(this,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q().prototype.lessEqual=function(t){return this.throwIfDisposed(),Ka(this,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q().prototype.less=function(t){return this.throwIfDisposed(),Ou(this,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q().prototype.localResponseNormalization=function(t,e,n,s){return this.throwIfDisposed(),II(this,t,e,n,s)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q().prototype.logSigmoid=function(){return this.throwIfDisposed(),TI(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q().prototype.logSoftmax=function(t){return this.throwIfDisposed(),Vx(this,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q().prototype.logSumExp=function(t,e){return this.throwIfDisposed(),Wx(this,t,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q().prototype.log=function(){return this.throwIfDisposed(),cs(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q().prototype.log1p=function(){return this.throwIfDisposed(),Kf(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q().prototype.logicalAnd=function(t){return this.throwIfDisposed(),Rr(this,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q().prototype.logicalNot=function(){return this.throwIfDisposed(),qf(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q().prototype.logicalOr=function(t){return this.throwIfDisposed(),Ux(this,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q().prototype.logicalXor=function(t){return this.throwIfDisposed(),EI(this,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q().prototype.matMul=function(t,e,n){return this.throwIfDisposed(),Pe(this,t,e,n)};q().prototype.maxPool=function(t,e,n,s){return this.throwIfDisposed(),Xf(this,t,e,n,s)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q().prototype.max=function(t,e){return this.throwIfDisposed(),Ls(this,t,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q().prototype.maximum=function(t){return this.throwIfDisposed(),ro(this,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q().prototype.mean=function(t,e){return this.throwIfDisposed(),xt(this,t,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q().prototype.min=function(t,e){return this.throwIfDisposed(),_u(this,t,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q().prototype.minimum=function(t){return this.throwIfDisposed(),Oa(this,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q().prototype.mirrorPad=function(t,e){return this.throwIfDisposed(),DI(this,t,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q().prototype.mod=function(t){return this.throwIfDisposed(),AI(this,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q().prototype.mul=function(t){return this.throwIfDisposed(),O(this,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q().prototype.neg=function(){return this.throwIfDisposed(),it(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q().prototype.norm=function(t,e,n){return this.throwIfDisposed(),Zc(this,t,e,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q().prototype.notEqual=function(t){return this.throwIfDisposed(),sl(this,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q().prototype.oneHot=function(t,e=1,n=0){return this.throwIfDisposed(),Hx(this,t,e,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q().prototype.onesLike=function(){return this.throwIfDisposed(),hs(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q().prototype.pad=function(t,e){return this.throwIfDisposed(),Jo(this,t,e)};q().prototype.pool=function(t,e,n,s,r,o){return this.throwIfDisposed(),_I(this,t,e,n,s,r,o)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q().prototype.pow=function(t){return this.throwIfDisposed(),Po(this,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q().prototype.prelu=function(t){return this.throwIfDisposed(),Zf(this,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q().prototype.prod=function(t,e){return this.throwIfDisposed(),OI(this,t,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q().prototype.reciprocal=function(){return this.throwIfDisposed(),LI(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q().prototype.relu=function(){return this.throwIfDisposed(),_r(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q().prototype.relu6=function(){return this.throwIfDisposed(),eb(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q().prototype.reshapeAs=function(t){return this.throwIfDisposed(),F(this,t.shape)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q().prototype.reshape=function(t){return this.throwIfDisposed(),F(this,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q().prototype.resizeBilinear=function(t,e,n){return this.throwIfDisposed(),ZI(this,t,e,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q().prototype.resizeNearestNeighbor=function(t,e,n){return this.throwIfDisposed(),JI(this,t,e,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q().prototype.reverse=function(t){return this.throwIfDisposed(),Bs(this,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q().prototype.rfft=function(){return this.throwIfDisposed(),rm(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q().prototype.round=function(){return this.throwIfDisposed(),tb(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q().prototype.rsqrt=function(){return this.throwIfDisposed(),nb(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q().prototype.selu=function(){return this.throwIfDisposed(),sb(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q().prototype.separableConv2d=function(t,e,n,s,r,o){return this.throwIfDisposed(),rb(this,t,e,n,s,r,o)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q().prototype.sigmoid=function(){return this.throwIfDisposed(),Nr(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q().prototype.sign=function(){return this.throwIfDisposed(),PI(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q().prototype.sin=function(){return this.throwIfDisposed(),ob(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q().prototype.sinh=function(){return this.throwIfDisposed(),ab(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q().prototype.slice=function(t,e){return this.throwIfDisposed(),Ve(this,t,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q().prototype.softmax=function(t){return this.throwIfDisposed(),nm(this,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q().prototype.softplus=function(){return this.throwIfDisposed(),wl(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q().prototype.spaceToBatchND=function(t,e){return this.throwIfDisposed(),Qf(this,t,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q().prototype.split=function(t,e){return this.throwIfDisposed(),qn(this,t,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q().prototype.sqrt=function(){return this.throwIfDisposed(),dn(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q().prototype.square=function(){return this.throwIfDisposed(),Je(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q().prototype.squaredDifference=function(t){return this.throwIfDisposed(),ub(this,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q().prototype.squeeze=function(t){return this.throwIfDisposed(),Ya(this,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q().prototype.stack=function(t,e){this.throwIfDisposed();const n=t instanceof ut?[this,t]:[this,...t];return ds(n,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q().prototype.step=function(t){return this.throwIfDisposed(),vl(this,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q().prototype.stridedSlice=function(t,e,n,s,r,o,a,i){return this.throwIfDisposed(),zI(this,t,e,n,s,r,o,a,i)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q().prototype.sub=function(t){return this.throwIfDisposed(),fe(this,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q().prototype.sum=function(t,e){return this.throwIfDisposed(),ye(this,t,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q().prototype.tan=function(){return this.throwIfDisposed(),MI(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q().prototype.tanh=function(){return this.throwIfDisposed(),tl(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q().prototype.tile=function(t){return this.throwIfDisposed(),Rs(this,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q().prototype.toBool=function(){return this.throwIfDisposed(),he(this,"bool")};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q().prototype.toFloat=function(){return this.throwIfDisposed(),he(this,"float32")};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q().prototype.toInt=function(){return this.throwIfDisposed(),he(this,"int32")};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q().prototype.topk=function(t,e){return this.throwIfDisposed(),VI(this,t,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q().prototype.transpose=function(t){return this.throwIfDisposed(),We(this,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q().prototype.unique=function(t){return this.throwIfDisposed(),WI(this,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q().prototype.unsortedSegmentSum=function(t,e){return this.throwIfDisposed(),db(this,t,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q().prototype.unstack=function(t){return this.throwIfDisposed(),Vs(this,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q().prototype.where=function(t,e){return this.throwIfDisposed(),un(t,this,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q().prototype.zerosLike=function(){return this.throwIfDisposed(),Ue(this)};/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class gr extends Error{constructor(e){super(e),Object.setPrototypeOf(this,gr.prototype)}}class Ds extends Error{constructor(e){super(e),Object.setPrototypeOf(this,Ds.prototype)}}class L extends Error{constructor(e){super(e),Object.setPrototypeOf(this,L.prototype)}}class De extends Error{constructor(e){super(e),Object.setPrototypeOf(this,De.prototype)}}class qb extends Error{constructor(e){super(e),Object.setPrototypeOf(this,qb.prototype)}}/**
 * @license
 * Copyright 2022 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class qT{constructor(e){this.maxEntries=e||100,this.cache=new Map}get(e){let n;return this.cache.has(e)&&(n=this.cache.get(e),this.cache.delete(e),this.cache.set(e,n)),n}put(e,n){if(this.cache.has(e))this.cache.delete(e);else if(this.cache.size>=this.maxEntries){const s=this.cache.keys().next().value;this.cache.delete(s)}this.cache.set(e,n)}getMaxEntries(){return this.maxEntries}setMaxEntries(e){if(e<0)throw new Error(`The maxEntries of LRU caches must be at least 0, but got ${e}.`);if(this.maxEntries>e)for(let n=0;n<this.maxEntries-e;n++){const s=this.cache.keys().next().value;this.cache.delete(s)}this.maxEntries=e}}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function La(t,e){if(Array.isArray(t)){let n=[];for(let s=0;s<e;s++)n=n.concat(t);return n}else{const n=new Array(e);return n.fill(t),n}}function yr(t,e){if(!t)throw new qb(e)}function SS(t,e){let n=0;for(const s of t)s===e&&n++;return n}function En(t){return t.length===1?t[0]:t}function st(t){return Array.isArray(t)?t:[t]}function Pr(t){const n=t.replace(/(.)([A-Z][a-z0-9]+)/g,"$1_$2").replace(/([a-z])([A-Z])/g,"$1_$2").toLowerCase();return n[0]!=="_"?n:"private"+n}function ca(t){return t.length<=1||t.indexOf("_")===-1?t:t.replace(/[_]+(\w|$)/g,(e,n)=>n.toUpperCase())}let xs={};function Xb(t){if(t==null)return null;const e={};return e.className=t.getClassName(),e.config=t.getConfig(),e}function Qy(t){if(!(t==null||typeof t!="object"))if(Array.isArray(t))t.forEach(e=>Qy(e));else{const e=Object.keys(t);for(const n of e){const s=t[n];s!=null&&typeof s=="object"&&(!Array.isArray(s)&&s.type==="ndarray"&&typeof s.value=="number"?t[n]=s.value:Qy(s))}}}function rh(t,e={},n={},s="object",r=!1){if(typeof t=="string"){const o=t;let a;if(o in n)a=n[o];else if(o in xs)a=xs[o];else if(a=e[o],a==null)throw new L(`Unknown ${s}: ${t}. This may be due to one of the following reasons:
1. The ${s} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.
2. The custom ${s} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);return a}else{const o=t;if(o.className==null||o.config==null)throw new L(`${s}: Improper config format: ${JSON.stringify(o)}.
'className' and 'config' must set.`);const a=o.className;let i,l;if(a in n?[i,l]=n[a]:a in xs?[i,l]=xs.className:a in e&&([i,l]=e[a]),i==null)throw new L(`Unknown ${s}: ${a}. This may be due to one of the following reasons:
1. The ${s} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.
2. The custom ${s} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);if(l!=null){const u={};for(const p of Object.keys(xs))u[p]=xs[p];for(const p of Object.keys(n))u[p]=n[p];const c=o.config;c.customObjects=u;const h=Object.assign({},xs);for(const p of Object.keys(n))xs[p]=n[p];Qy(o.config);const d=l(i,o.config,n,r);return xs=Object.assign({},h),d}else{const u=Object.assign({},xs);for(const h of Object.keys(n))xs[h]=n[h];const c=new i(o.config);return xs=Object.assign({},u),c}}}function IU(t,e){return t<e?-1:t>e?1:0}function zh(t,e){return-1*IU(t,e)}function Eo(t){if(t==null)return t;const e=[];for(const n of t)e.indexOf(n)===-1&&e.push(n);return e}function TU(t){if(t==null)throw new L(`Invalid value in obj: ${JSON.stringify(t)}`);for(const e in t)if(t.hasOwnProperty(e))return!1;return!0}function Za(t,e,n){if(n!=null&&t.indexOf(n)<0)throw new L(`${n} is not a valid ${e}.  Valid values are ${t} or null/undefined.`)}function Yb(t,e,n=0,s=1/0){return yr(n>=0),yr(s>=n),Array.isArray(t)&&t.length>=n&&t.length<=s&&t.every(r=>typeof r===e)}function jt(t,e){Array.isArray(t)?(C(t.length>0,()=>`${e} is unexpectedly an empty array.`),t.forEach((n,s)=>jt(n,`element ${s+1} of ${e}`))):C(Number.isInteger(t)&&t>0,()=>`Expected ${e} to be a positive integer, but got ${XT(t)}.`)}function XT(t){return t===null?"null":Array.isArray(t)?"["+t.map(e=>XT(e)).join(",")+"]":typeof t=="string"?`"${t}"`:`${t}`}function EU(t,e,n){let s=n!=null?n():Tn(),r;return(...a)=>{const i=n!=null?n():Tn();return i-s<e||(s=i,r=t(...a)),r}}function YT(t){return t==="relu"?"relu":t==="linear"?"linear":t==="elu"?"elu":null}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */let RU=0;function QT(){return RU++}const Mh={};function pm(t=""){return t in Mh||(Mh[t]=0),Mh[t]+=1,t+Mh[t].toString()}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const DU=["channelsFirst","channelsLast"],AU=["nearest","bilinear"],_U=["valid","same","causal"],OU=["max","avg"],FU=["sum","mul","concat","ave"];/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const ai=new Map;function Nt(t){Za(DU,"DataFormat",t)}function LU(t){Za(AU,"InterpolationFormat",t)}function gs(t){Za(_U,"PaddingMode",t)}function ZT(t){Za(OU,"PoolMode",t)}const pu=[],kS="/";function va(t,e){pu.push(t);try{const n=e();return pu.pop(),n}catch(n){throw pu.pop(),n}}function PU(){return pu.length===0?"":pu.join(kS)+kS}function JT(t){if(!t2(t))throw new Error("Not a valid tensor name: '"+t+"'");return PU()+t}function e2(t){if(!t2(t))throw new Error("Not a valid tensor name: '"+t+"'");ai.has(t)||ai.set(t,0);const e=ai.get(t);if(ai.set(t,ai.get(t)+1),e>0){const n=`${t}_${e}`;return ai.set(n,1),n}else return t}const zU=new RegExp(/^[A-Za-z0-9][-A-Za-z0-9\._\/]*$/);function t2(t){return!!t.match(zU)}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function MU(t){return t===parseInt(t.toString(),10)}function Ro(t,e,n){e==null&&(e=0),n==null&&(n=t.length);let s=1;for(let r=e;r<n;++r)s*=t[r];return s}function ol(t){if(t.length===0)return Number.NaN;let e=Number.POSITIVE_INFINITY;for(let n=0;n<t.length;n++){const s=t[n];s<e&&(e=s)}return e}function zo(t){if(t.length===0)return Number.NaN;let e=Number.NEGATIVE_INFINITY;for(let n=0;n<t.length;n++){const s=t[n];s>e&&(e=s)}return e}function ar(t,e){if(e<t)throw new L(`end (${e}) < begin (${t}) is forbidden.`);const n=[];for(let s=t;s<e;++s)n.push(s);return n}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */let hg;function Ft(){return hg==null&&(hg=w3().epsilon()),hg}function ir(){return"channelsLast"}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function Tr(t,e){return he(t,e)}function oh(t,e=-1){const n=t.shape.slice();return e<0&&(e=n.length+e+1),n.splice(e,0,1),F(t,n)}function BU(t,e){return V(()=>{if(t.shape.length!==2)throw new L(`repeat() expects a rank-2 tensor, but received a rank-${t.shape.length} tensor.`);const n=oh(t,1);return Zy(n,[1,e,1])})}function VU(t){const e=[Ro(t.shape)];return F(t,e)}function WU(t){if(t.rank<=1)throw new L(`batchFlatten requires a minimum rank of 2. Got rank: ${t.rank}.`);const e=[t.shape[0],Ro(t.shape,1)];return F(t,e)}function Sa(t,e,n){return V(()=>{switch(t.rank){case 1:return em(t,e,n);case 2:return ib(t,[e,0],[n,t.shape[1]]);case 3:return tm(t,[e,0,0],[n,t.shape[1],t.shape[2]]);case 4:return Lu(t,[e,0,0,0],[n,t.shape[1],t.shape[2],t.shape[3]]);case 5:return Ve(t,[e,0,0,0,0],[n,t.shape[1],t.shape[2],t.shape[3],t.shape[4]]);case 6:return Ve(t,[e,0,0,0,0,0],[n,t.shape[1],t.shape[2],t.shape[3],t.shape[4],t.shape[5]]);default:throw new L(`sliceAlongFirstAxis() received an unsupported tensor rank: ${t.rank}`)}})}function dg(t,e,n){return V(()=>{switch(t.rank){case 1:return em(t,e,n);case 2:return ib(t,[0,e],[t.shape[0],n]);case 3:return tm(t,[0,0,e],[t.shape[0],t.shape[1],n]);case 4:return Lu(t,[0,0,0,e],[t.shape[0],t.shape[1],t.shape[2],n]);default:throw new L(`sliceAlongLastAxis() received an unsupported tensor rank: ${t.rank}`)}})}function Bh(t,e,n,s){return V(()=>{switch(t.rank){case 1:return em(t,e,n);case 2:switch(s){case 1:return Sa(t,e,n);case 2:return dg(t,e,n);default:throw new L(`The axis is not within the rank of the tensor ${s}`)}case 3:switch(s){case 1:return Sa(t,e,n);case 2:return tm(t,[0,e,0],[t.shape[0],n,t.shape[2]]);case 3:return dg(t,e,n);default:throw new L(`The axis is not within the rank of the tensor ${s}`)}case 4:switch(s){case 1:return Sa(t,e,n);case 2:return Lu(t,[0,e,0,0],[t.shape[0],n,t.shape[2],t.shape[3]]);case 3:return Lu(t,[0,0,e,0],[t.shape[0],t.shape[1],n,t.shape[3]]);case 4:return dg(t,e,n);default:throw new L(`The axis is not within the rank of the tensor ${s}`)}default:throw new L(`sliceAlongLastAxis() received an unsupported tensor rank: ${t.rank}`)}})}function Qb(t,e=-1){let n;return e<0&&(n=t[0].rank,n!==0?e=n:e=0),e===t[0].rank&&(e=-1),Rt(t,e)}function $S(t,e){switch(t.rank){case 1:return lI([t,e]);case 2:return uI([t,e],0);case 3:return cI([t,e],0);case 4:return hI([t,e],0);default:throw new L(`concatAlongFirstAxis() received an unsupported tensor rank: ${t.rank}`)}}function Zy(t,e){if(Array.isArray(e)||(e=[e]),t.rank!==e.length)throw new L(`The length of input n (${e.length}) does not match the number of dimensions in input x (${t.rank})`);return Rs(t,e)}function fm(t,e=0,n=1,s,r){return Jx(t,e,n,s,r)}function Er(t,e,n,s){if(t.rank<2||e.rank<2)throw new De(`dot requires both inputs to be rank >= 2 but got x shape = ${t.shape} and y shape = ${e.shape}`);if(e.rank>=3){const r=t.shape.slice(-1)[0],o=e.shape.slice(-2)[0];if(r!==o)throw new De(`If rank y >= 3, then the second last dim of y must equal the last dim of x but got x shape = ${t.shape} and  y shape = ${e.shape}`)}if(t.rank===2&&e.rank===2)return Ky({a:t,b:e,transposeA:!1,transposeB:!1,bias:s?Jy(t.rank,s,ir()):null,activation:n});{const r=t.shape.slice(),o=r.pop();t=F(t,[-1,o]);const a=e.shape.slice(),i=a.pop(),l=a.pop(),u=[...a,i],c=Array.from({length:e.rank},(f,m)=>m===0?e.rank-2:m<=e.rank-2?m-1:m);e=F(We(e,c),[l,-1]);const h=[...r,...u];return F(Ky({a:t,b:e,transposeA:!1,transposeB:!1,bias:s?Jy(t.rank,s,ir()):null,activation:n}),h)}}function n2(t,e,n){return V(()=>(Array.isArray(e)?e=Sn(e,"int32"):e=he(e,"int32"),eh(t,e,n)))}function ah(t){return O(t,t)}function Jy(t,e,n){const s=e.shape;if(e.rank!==1&&e.rank!==t)throw new L(`Unexpected bias dimensions: ${e.rank}; expected it to be 1 or ${t}`);if(t===5){if(n==="channelsFirst")return s.length===1?F(e,[1,s[0],1,1,1]):F(e,[1,s[3],s[0],s[1],s[2]]);if(n==="channelsLast")return s.length===1?F(e,[1,1,1,1,s[0]]):F(e,[1].concat(s))}else if(t===4){if(n==="channelsFirst")return s.length===1?F(e,[1,s[0],1,1]):F(e,[1,s[2],s[0],s[1]]);if(n==="channelsLast")return s.length===1?F(e,[1,1,1,s[0]]):F(e,[1].concat(s))}else if(t===3){if(n==="channelsFirst")return s.length===1?F(e,[1,s[0],1]):F(e,[1,s[1],s[0]]);if(n==="channelsLast")return s.length===1?F(e,[1,1,s[0]]):F(e,[1].concat(s))}else if(t<3)return e;throw new L(`Unsupported input rank by biasAdd: ${e.rank}`)}function hr(t,e,n){return V(()=>(n==null&&(n=ir()),Nt(n),te(t,Jy(t.rank,e,n))))}function UU(t,e=1){if(e!==1)throw new De(`Support for alpha values other than 1 (${e}) is not implemented yet.`);return Qc(t)}function GU(t){return V(()=>we(t,te(Dt(t),1)))}function s2(t,e,n,s){return V(()=>HI(t,e,n,s))}function HU(t){return V(()=>{const e=te(.5,O(.2,t));return Yn(e,0,1)})}function ih(t,e,n=!1){return n?t():e()}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const jU=["fanIn","fanOut","fanAvg"],KU=["normal","uniform","truncatedNormal"];/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function qU(t){Za(jU,"FanMode",t)}function XU(t){Za(KU,"Distribution",t)}class Us extends kl{fromConfigUsesCustomObjects(){return!1}getConfig(){return{}}}class r2 extends Us{apply(e,n){return Ot(e,n)}}r2.className="Zeros";ne(r2);class Zb extends Us{apply(e,n){return os(e,n)}}Zb.className="Ones";ne(Zb);class o2 extends Us{constructor(e){if(super(),typeof e!="object")throw new L(`Expected argument of type ConstantConfig but got ${e}`);if(e.value===void 0)throw new L(`config must have value set but got ${e}`);this.value=e.value}apply(e,n){return V(()=>O(Se(this.value),os(e,n)))}getConfig(){return{value:this.value}}}o2.className="Constant";ne(o2);class a2 extends Us{constructor(e){super(),this.DEFAULT_MINVAL=-.05,this.DEFAULT_MAXVAL=.05,this.minval=e.minval||this.DEFAULT_MINVAL,this.maxval=e.maxval||this.DEFAULT_MAXVAL,this.seed=e.seed}apply(e,n){return Xa(e,this.minval,this.maxval,n,this.seed)}getConfig(){return{minval:this.minval,maxval:this.maxval,seed:this.seed}}}a2.className="RandomUniform";ne(a2);class i2 extends Us{constructor(e){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=e.mean||this.DEFAULT_MEAN,this.stddev=e.stddev||this.DEFAULT_STDDEV,this.seed=e.seed}apply(e,n){if(n=n||"float32",n!=="float32"&&n!=="int32")throw new De(`randomNormal does not support dType ${n}.`);return fm(e,this.mean,this.stddev,n,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}}i2.className="RandomNormal";ne(i2);class l2 extends Us{constructor(e){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=e.mean||this.DEFAULT_MEAN,this.stddev=e.stddev||this.DEFAULT_STDDEV,this.seed=e.seed}apply(e,n){if(n=n||"float32",n!=="float32"&&n!=="int32")throw new De(`truncatedNormal does not support dType ${n}.`);return hb(e,this.mean,this.stddev,n,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}}l2.className="TruncatedNormal";ne(l2);class u2 extends Us{constructor(e){super(),this.gain=e.gain!=null?e.gain:1}apply(e,n){return V(()=>{if(e.length!==2||e[0]!==e[1])throw new L("Identity matrix initializer can only be used for 2D square matrices.");return O(this.gain,Bx(e[0]))})}getConfig(){return{gain:this.gain}}}u2.className="Identity";ne(u2);function YU(t,e="channelsLast"){let n,s;if(Nt(e),t.length===2)n=t[0],s=t[1];else if([3,4,5].indexOf(t.length)!==-1){if(e==="channelsFirst"){const r=Ro(t,2);n=t[1]*r,s=t[0]*r}else if(e==="channelsLast"){const r=Ro(t,0,t.length-2);n=t[t.length-2]*r,s=t[t.length-1]*r}}else{const r=Ro(t);n=Math.sqrt(r),s=Math.sqrt(r)}return[n,s]}class Qn extends Us{constructor(e){if(super(),e.scale<0)throw new L(`scale must be a positive float. Got: ${e.scale}`);this.scale=e.scale==null?1:e.scale,this.mode=e.mode==null?"fanIn":e.mode,qU(this.mode),this.distribution=e.distribution==null?"normal":e.distribution,XU(this.distribution),this.seed=e.seed}apply(e,n){const s=YU(e),r=s[0],o=s[1];let a=this.scale;if(this.mode==="fanIn"?a/=Math.max(1,r):this.mode==="fanOut"?a/=Math.max(1,o):a/=Math.max(1,(r+o)/2),this.distribution==="normal"){const i=Math.sqrt(a);if(n=n||"float32",n!=="float32"&&n!=="int32")throw new De(`${this.getClassName()} does not support dType ${n}.`);return hb(e,0,i,n,this.seed)}else{const i=Math.sqrt(3*a);return Xa(e,-i,i,n,this.seed)}}getConfig(){return{scale:this.scale,mode:this.mode,distribution:this.distribution,seed:this.seed}}}Qn.className="VarianceScaling";ne(Qn);class Jb extends Qn{constructor(e){super({scale:1,mode:"fanAvg",distribution:"uniform",seed:e==null?null:e.seed})}getClassName(){return Qn.className}}Jb.className="GlorotUniform";ne(Jb);class ew extends Qn{constructor(e){super({scale:1,mode:"fanAvg",distribution:"normal",seed:e==null?null:e.seed})}getClassName(){return Qn.className}}ew.className="GlorotNormal";ne(ew);class tw extends Qn{constructor(e){super({scale:2,mode:"fanIn",distribution:"normal",seed:e==null?null:e.seed})}getClassName(){return Qn.className}}tw.className="HeNormal";ne(tw);class nw extends Qn{constructor(e){super({scale:2,mode:"fanIn",distribution:"uniform",seed:e==null?null:e.seed})}getClassName(){return Qn.className}}nw.className="HeUniform";ne(nw);class sw extends Qn{constructor(e){super({scale:1,mode:"fanIn",distribution:"normal",seed:e==null?null:e.seed})}getClassName(){return Qn.className}}sw.className="LeCunNormal";ne(sw);class rw extends Qn{constructor(e){super({scale:1,mode:"fanIn",distribution:"uniform",seed:e==null?null:e.seed})}getClassName(){return Qn.className}}rw.className="LeCunUniform";ne(rw);class c2 extends Us{constructor(e){super(),this.DEFAULT_GAIN=1,this.ELEMENTS_WARN_SLOW=2e3,this.gain=e.gain==null?this.DEFAULT_GAIN:e.gain,this.seed=e.seed}apply(e,n){return V(()=>{if(e.length<2)throw new De("Shape must be at least 2D.");if(n!=="int32"&&n!=="float32"&&n!==void 0)throw new TypeError(`Unsupported data type ${n}.`);n=n;const s=K(e.slice(0,-1)),r=e[e.length-1],o=s*r;o>this.ELEMENTS_WARN_SLOW&&console.warn(`Orthogonal initializer is being called on a matrix with more than ${this.ELEMENTS_WARN_SLOW} (${o}) elements: Slowness may result.`);const a=[Math.max(r,s),Math.min(r,s)],i=fm(a,0,1,n,this.seed),l=eT.qr(i,!1);let u=l[0];const h=l[1].flatten().stridedSlice([0],[Math.min(r,s)*Math.min(r,s)],[Math.min(r,s)+1]);return u=O(u,h.sign()),s<r&&(u=u.transpose()),O(Se(this.gain),u.reshape(e))})}getConfig(){return{gain:this.gain,seed:this.seed}}}c2.className="Orthogonal";ne(c2);const CS={constant:"Constant",glorotNormal:"GlorotNormal",glorotUniform:"GlorotUniform",heNormal:"HeNormal",heUniform:"HeUniform",identity:"Identity",leCunNormal:"LeCunNormal",leCunUniform:"LeCunUniform",ones:"Ones",orthogonal:"Orthogonal",randomNormal:"RandomNormal",randomUniform:"RandomUniform",truncatedNormal:"TruncatedNormal",varianceScaling:"VarianceScaling",zeros:"Zeros"};function NS(t,e={}){return rh(t,Cs.getMap().classNameMap,e,"initializer")}function mt(t){return Xb(t)}function ht(t){if(typeof t=="string"){const e=t in CS?CS[t]:t;if(e==="GlorotNormal")return new ew;if(e==="GlorotUniform")return new Jb;if(e==="HeNormal")return new tw;if(e==="HeUniform")return new nw;if(e==="LeCunNormal")return new sw;if(e==="LeCunUniform")return new rw;{const n={};return n.className=e,n.config={},NS(n)}}else return t instanceof Us?t:NS(t)}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function e0(t){return Array.isArray(t)&&Array.isArray(t[0])}function Jd(t){return t.length===0?[]:Array.isArray(t[0])?t:[t]}function Ce(t){let e;if(Array.isArray(t)){if(t.length!==1)throw new L(`Expected Tensor length to be 1; got ${t.length}`);e=t[0]}else e=t;return e}function He(t){if(Array.isArray(t)&&Array.isArray(t[0])){if(t.length===1)return t=t,t[0];throw new L(`Expected exactly 1 Shape; got ${t.length}`)}else return t}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function ep(t){let e=0;for(const n of t)n.shape.length===0?e+=1:e+=n.shape.reduce((s,r)=>s*r);return e}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const IS="Variable";class QU{constructor(e,n="float32",s=IS,r=!0,o=null){this.dtype=n??"float32",this.shape=e.shape,this.id=QT(),s=s??IS,this.originalName=JT(s),this.name=e2(this.originalName),this.trainable_=r,this.constraint=o,this.val=UI(e,this.trainable_,this.name,this.dtype)}read(){return this.assertNotDisposed(),this.val}write(e){return this.assertNotDisposed(),ZU(this.val,e),this.val.id!==e.id&&(this.val.assign(e),this.constraint!=null&&this.val.assign(this.constraint.apply(this.val))),this}dispose(){this.assertNotDisposed(),this.val.dispose()}assertNotDisposed(){if(this.val.isDisposed)throw new Error(`LayersVariable ${this.name} is already disposed.`)}get trainable(){return this.trainable_}set trainable(e){this.trainable_=e,this.val.trainable=e}}function ZU(t,e){if(t.shape.toString()!==e.shape.toString())throw new Error("Shape mismatch: "+JSON.stringify(t.shape)+" vs. "+JSON.stringify(e.shape))}function t0(t){return t.map(e=>e.read())}function ow(t){t.forEach(e=>{e[0].write(e[1])})}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class Lt{constructor(e){this.dtype=e.dtype,this.shape=e.shape,e.shape!=null?this.ndim=e.shape.length:this.ndim=e.ndim,this.maxNDim=e.maxNDim,this.minNDim=e.minNDim,this.axes=e.axes||{}}}class vr{constructor(e,n,s,r,o,a,i){this.dtype=e,this.shape=n,this.sourceLayer=s,this.inputs=r,this.callArgs=o,this.outputTensorIndex=i,this.id=QT(),a!=null&&(this.originalName=JT(a),this.name=e2(this.originalName)),this.rank=n.length}}let JU=0;class mm{constructor(e,n){this.callArgs=n,this.id=JU++,this.outboundLayer=e.outboundLayer,this.inboundLayers=e.inboundLayers,this.nodeIndices=e.nodeIndices,this.tensorIndices=e.tensorIndices,this.inputTensors=e.inputTensors,this.outputTensors=e.outputTensors,this.inputMasks=e.inputMasks,this.outputMasks=e.outputMasks,this.inputShapes=e.inputShapes,this.outputShapes=e.outputShapes;for(const s of e.inboundLayers)s!=null&&s.outboundNodes.push(this);e.outboundLayer.inboundNodes.push(this)}getConfig(){const e=[];for(const n of this.inboundLayers)n!=null?e.push(n.name):e.push(null);return{outboundLayer:this.outboundLayer?this.outboundLayer.name:null,inboundLayers:e,nodeIndices:this.nodeIndices,tensorIndices:this.tensorIndices}}}let eG=0;class Le extends kl{constructor(e={}){super(),this._callHook=null,this._addedWeightNames=[],this._stateful=!1,this.id=eG++,this.activityRegularizer=null,this.inputSpec=null,this.supportsMasking=!1,this._trainableWeights=[],this._nonTrainableWeights=[],this._losses=[],this._updates=[],this._built=!1,this.inboundNodes=[],this.outboundNodes=[];let n=e.name;if(!n){const s=this.getClassName();n=Pr(s)+"_"+pm(s)}if(this.name=n,this.trainable_=e.trainable==null?!0:e.trainable,e.inputShape!=null||e.batchInputShape!=null){let s;if(e.batchInputShape!=null)s=e.batchInputShape;else if(e.inputShape!=null){let o=null;e.batchSize!=null&&(o=e.batchSize),s=[o].concat(e.inputShape)}this.batchInputShape=s;let r=e.dtype;r==null&&(r=e.inputDType),r==null&&(r="float32"),this.dtype=r}e.weights!=null?this.initialWeights=e.weights:this.initialWeights=null,this._refCount=null,this.fastWeightInitDuringBuild=!1}static nodeKey(e,n){return e.name+"_ib-"+n.toString()}getNodeAtIndex(e,n){if(this.inboundNodes.length===0)throw new Ds(`The layer has never been called and thus has no defined ${n}.`);if(this.inboundNodes.length<=e)throw new L(`Asked to get ${n} at node ${e}, but the layer has only ${this.inboundNodes.length} inbound nodes.`);return this.inboundNodes[e]}getInputAt(e){return En(this.getNodeAtIndex(e,"input").inputTensors)}getOutputAt(e){return En(this.getNodeAtIndex(e,"output").outputTensors)}get input(){if(this.inboundNodes.length>1)throw new gr(`Layer ${this.name} has multiple inbound nodes, hence the notion of "layer input" is ill-defined. Use \`getInputAt(nodeIndex)\` instead.`);if(this.inboundNodes.length===0)throw new gr(`Layer ${this.name} is not connected, no input to return.`);return En(this.getNodeAtIndex(0,"input").inputTensors)}get output(){if(this.inboundNodes.length===0)throw new gr(`Layer ${this.name} has no inbound nodes.`);if(this.inboundNodes.length>1)throw new gr(`Layer ${this.name} has multiple inbound nodes, hence the notion of "layer output" is ill-defined. Use \`getOutputAt(nodeIndex)\` instead.`);return En(this.getNodeAtIndex(0,"output").outputTensors)}get losses(){return this._losses}calculateLosses(){return this.losses.map(e=>e())}get updates(){return this._updates}get built(){return this._built}set built(e){this._built=e}get trainable(){return this.trainable_}set trainable(e){this._trainableWeights.forEach(n=>n.trainable=e),this.trainable_=e}get trainableWeights(){return this.trainable_?this._trainableWeights.filter(e=>e.trainable):[]}set trainableWeights(e){this._trainableWeights=e}get nonTrainableWeights(){return this.trainable?this._trainableWeights.filter(e=>!e.trainable).concat(this._nonTrainableWeights):this._trainableWeights.concat(this._nonTrainableWeights)}set nonTrainableWeights(e){this._nonTrainableWeights=e}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}get stateful(){return this._stateful}resetStates(){if(!this.stateful)throw new Error("Cannot call the resetStates() method of a non-stateful Layer object.")}assertInputCompatibility(e){if(e=st(e),this.inputSpec==null||this.inputSpec.length===0)return;const n=st(this.inputSpec);if(e.length!==n.length)throw new L(`Layer ${this.name} expects ${n.length} inputs, but it received ${e.length} input tensors. Input received: ${e}`);for(let s=0;s<e.length;s++){const r=e[s],o=n[s];if(o==null)continue;const a=r.rank;if(o.ndim!=null&&a!==o.ndim)throw new L(`Input ${s} is incompatible with layer ${this.name}: expected ndim=${o.ndim}, found ndim=${a}`);if(o.maxNDim!=null&&a>o.maxNDim)throw new L(`Input ${s} is incompatible with layer ${this.name}: expected max_ndim=${o.maxNDim}, found ndim=${a}`);if(o.minNDim!=null&&a<o.minNDim)throw new L(`Input ${s} is incompatible with layer ${this.name}: expected min_ndim=${o.minNDim}, found ndim=${a}.`);if(o.dtype!=null&&r.dtype!==o.dtype)throw new L(`Input ${s} is incompatible with layer ${this.name} : expected dtype=${o.dtype}, found dtype=${r.dtype}.`);if(o.axes){const i=r.shape;for(const l in o.axes){const u=Number(l),c=o.axes[l],h=u>=0?i[u]:i[i.length+u];if(c!=null&&[c,null].indexOf(h)===-1)throw new L(`Input ${s} is incompatible with layer ${this.name}: expected axis ${u} of input shape to have value ${c} but got shape ${i}.`)}}if(o.shape!=null)for(let i=0;i<o.shape.length;++i){const l=o.shape[i],u=r.shape[i];if(l!=null&&u!=null&&l!==u)throw new L(`Input ${s} is incompatible with layer ${this.name}: expected shape=${o.shape}, found shape=${r.shape}.`)}}}call(e,n){return e}invokeCallHook(e,n){this._callHook!=null&&this._callHook(e,n)}setCallHook(e){this._callHook=e}clearCallHook(){this._callHook=null}apply(e,n){n=n||{},this.assertNotDisposed();const s=st(e);let r=!0;for(const a of s)if(!(a instanceof vr)){r=!1;break}let o=!0;for(const a of s)if(a instanceof vr){o=!1;break}if(r===o)throw new L("Arguments to apply() must be all SymbolicTensors or all Tensors");return va(this.name,()=>{if(!this.built){this.assertInputCompatibility(e);const a=[];for(const i of st(e))a.push(i.shape);this.build(En(a)),this.built=!0,this.initialWeights&&this.setWeights(this.initialWeights),this._refCount===null&&o&&(this._refCount=1)}if(this.assertInputCompatibility(e),o){let a=this.call(e,n);const i=st(a),l=[];for(let u of i)s.indexOf(u)!==-1&&(u=u.clone()),l.push(u);if(a=En(l),this.activityRegularizer!=null)throw new De("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return a}else{const a=tG(e),i=this.computeOutputShape(a);let l;const u=nG(e);if(this.warnOnIncompatibleInputShape(Array.isArray(e)?a[0]:a),i!=null&&i.length>0&&Array.isArray(i[0])?l=i.map((c,h)=>new vr(u,c,this,st(e),n,this.name,h)):l=new vr(u,i,this,st(e),n,this.name),this.addInboundNode(e,l,null,null,a,i,n),this._refCount++,this.activityRegularizer!=null)throw new De("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return l}})}warnOnIncompatibleInputShape(e){if(this.batchInputShape!=null)if(e.length!==this.batchInputShape.length)console.warn(`The rank of the input tensor provided (shape: ${JSON.stringify(e)}) does not match that of the batchInputShape (${JSON.stringify(this.batchInputShape)}) of the layer ${this.name}`);else{let n=!1;this.batchInputShape.forEach((s,r)=>{s!=null&&e[r]!=null&&e[r]!==s&&(n=!0)}),n&&console.warn(`The shape of the input tensor (${JSON.stringify(e)}) does not match the expectation of layer ${this.name}: ${JSON.stringify(this.batchInputShape)}`)}}get outputShape(){if(this.inboundNodes==null||this.inboundNodes.length===0)throw new gr(`The layer ${this.name} has never been called and thus has no defined output shape.`);const e=[];for(const n of this.inboundNodes){const s=JSON.stringify(n.outputShapes);e.indexOf(s)===-1&&e.push(s)}if(e.length===1){const n=this.inboundNodes[0].outputShapes;return Array.isArray(n)&&Array.isArray(n[0])&&n.length===1?n[0]:n}else throw new gr(`The layer ${this.name} has multiple inbound nodes with different output shapes. Hence the notion of "output shape" is ill-defined for the layer.`)}countParams(){if(!this.built)throw new Ds(`You tried to call countParams() on ${this.name}, but the layer is not built yet. Build it first by calling build(batchInputShape).`);return ep(this.weights)}build(e){this.built=!0}getWeights(e=!1){return t0(e?this.trainableWeights:this.weights)}setWeights(e){V(()=>{const n=this.weights;if(n.length!==e.length)throw new L(`You called setWeights(weights) on layer "${this.name}" with a weight list of length ${e.length}, but the layer was expecting ${n.length} weights. Provided weights: ${e}...`);if(n.length===0)return;const s=[],r=t0(n);for(let o=0;o<r.length;++o){const a=r[o],i=n[o],l=e[o];if(!Me(a.shape,l.shape))throw new L(`Layer weight shape ${a.shape} not compatible with provided weight shape ${l.shape}`);s.push([i,l])}ow(s)})}addWeight(e,n,s,r,o,a,i,l){if(this._addedWeightNames.indexOf(e)!==-1)throw new L(`Duplicate weight name ${e} for layer ${this.name}`);this._addedWeightNames.push(e),s==null&&(s="float32"),this.fastWeightInitDuringBuild&&(r=l!=null?l():ht("zeros"));const u=r.apply(n,s),c=new QU(u,s,e,a,i);return u.dispose(),o!=null&&this.addLoss(()=>o.apply(c.read())),a==null&&(a=!0),a?this._trainableWeights.push(c):this._nonTrainableWeights.push(c),c}setFastWeightInitDuringBuild(e){this.fastWeightInitDuringBuild=e}addLoss(e){e==null||Array.isArray(e)&&e.length===0||(e=st(e),this._losses!==void 0&&this._losses!==null&&this.losses.push(...e))}computeOutputShape(e){return e}computeMask(e,n){if(!this.supportsMasking){if(n!=null)if(Array.isArray(n))n.forEach(s=>{if(s!=null)throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`)});else throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`);return null}return n}addInboundNode(e,n,s,r,o,a,i=null){const l=st(e);n=st(n),s=st(s),r=st(r),o=Jd(o),a=Jd(a);const u=[],c=[],h=[];for(const d of l)u.push(d.sourceLayer),c.push(d.nodeIndex),h.push(d.tensorIndex);new mm({outboundLayer:this,inboundLayers:u,nodeIndices:c,tensorIndices:h,inputTensors:l,outputTensors:n,inputMasks:s,outputMasks:r,inputShapes:o,outputShapes:a},i);for(let d=0;d<n.length;d++)n[d].sourceLayer=this,n[d].nodeIndex=this.inboundNodes.length-1,n[d].tensorIndex=d}getConfig(){const e={name:this.name,trainable:this.trainable};return this.batchInputShape!=null&&(e.batchInputShape=this.batchInputShape),this.dtype!=null&&(e.dtype=this.dtype),e}disposeWeights(){return this.weights.forEach(e=>e.dispose()),this.weights.length}assertNotDisposed(){if(this._refCount===0)throw new Error(`Layer '${this.name}' is already disposed.`)}dispose(){if(!this.built)throw new Error(`Cannot dispose Layer ${this.name} because it has not been built yet.`);if(this._refCount===null)throw new Error(`Cannot dispose Layer ${this.name} because it has not been used yet.`);this.assertNotDisposed();let e=0;return--this._refCount===0&&(e=this.disposeWeights()),{refCountAfterDispose:this._refCount,numDisposedVariables:e}}}function tG(t){t=st(t);const e=[];for(const n of t)e.push(n.shape);return En(e)}function nG(t){return"float32"}function h2(t,e,n){if((e==null||n!=null&&n>0)&&(e=t.sourceLayer,n=t.nodeIndex),e.inboundNodes.length===0)return[t];{const s=e.inboundNodes[n];if(s.inboundLayers.length===0)return s.inputTensors;{const r=[];for(let o=0;o<s.inboundLayers.length;o++){const a=s.inputTensors[o],i=s.inboundLayers[o],l=s.nodeIndices[o],u=h2(a,i,l);for(const c of u)r.indexOf(c)===-1&&r.push(c)}return r}}}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class lh extends Le{constructor(e){if(super({dtype:e.dtype,name:e.name!=null?e.name:pm("input").toString()}),e.batchSize==null&&(e.batchSize=null),e.sparse==null&&(e.sparse=!1),this.trainable=!1,this.built=!0,this.sparse=e.sparse,e.inputShape!=null&&e.batchInputShape!=null)throw new L("Only provide the inputShape OR batchInputShape argument to inputLayer, not both at the same time.");let n=e.batchInputShape;if(n==null){if(e.inputShape==null)throw new L("An InputLayer should be passed either a `batchInputShape` or an `inputShape`.");n=[e.batchSize].concat(e.inputShape)}else if(e.batchSize!=null)throw new L("Cannot specify batchSize if batchInputShape is specified when creating an InputLayer.");const s=e.dtype||"float32";this.batchInputShape=n,this.dtype=s,this.inputSpec=[{shape:n}];const r=new vr(this.dtype,this.batchInputShape,this,[],{},this.name);r.nodeIndex=0,r.tensorIndex=0,new mm({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:[r],outputTensors:[r],inputMasks:[null],outputMasks:[null],inputShapes:[n],outputShapes:[n]})}apply(e,n){throw new L(`Cannot pass any input to an InputLayer's apply() method. InputLayer name: ${this.name}`)}dispose(){return{refCountAfterDispose:this._refCount,numDisposedVariables:0}}getConfig(){return{batchInputShape:this.batchInputShape,dtype:this.dtype,sparse:this.sparse,name:this.name}}}lh.className="InputLayer";ne(lh);function sG(t){if(t.batchShape==null&&t.shape==null)throw new Error("Please provide to Input either a `shape` or a `batchShape` argument. Note that `shape` does not include the batch dimension.");if(t.batchShape!=null&&t.shape!=null)throw new L("Please provide either a `shape` or `batchShape` argument to Input, but not both.");let e=t.batchShape;t.shape!=null&&e==null&&(e=[null].concat(t.shape));let n=t.dtype;return n==null&&(n="float32"),new lh({batchInputShape:e,name:t.name,dtype:n,sparse:t.sparse}).inboundNodes[0].outputTensors[0]}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function rG(t,e){if(t.dtype==null||t.dtype===e.dtype)return e;try{return he(e,t.dtype)}catch{throw new L(`The dtype of the feed (${e.dtype}) can not be cast to the dtype of the key '${t.name}' (${t.dtype}).`)}}class yo{constructor(e){if(this.id2Value={},this.id2Mask={},this.name2Id={},e instanceof yo)for(const n in e.id2Value)this.id2Value[n]=e.id2Value[n],n in e.id2Mask&&(this.id2Mask[n]=e.id2Mask[n]);else{if(e==null)return;for(const n of e)this.add(n.key,n.value)}}add(e,n,s){if(this.id2Value[e.id]==null)this.id2Value[e.id]=rG(e,n),this.name2Id[e.name]=e.id,s!=null&&(this.id2Mask[e.id]=s);else throw new L(`Duplicate key: name=${e.name}, id=${e.id}`);return this}addFeed(e){this.add(e.key,e.value)}hasKey(e){return this.id2Value[e.id]!=null}names(){return Object.keys(this.name2Id)}getValue(e){if(e instanceof vr){if(this.id2Value[e.id]==null)throw new L(`Nonexistent key: ${e.name}`);return this.id2Value[e.id]}else{const n=this.name2Id[e];if(n==null)throw new L(`Feed dict has no SymbolicTensor name: ${e}`);return this.id2Value[n]}}getMask(e){if(e instanceof vr){if(this.id2Value[e.id]==null)throw new L(`Nonexistent key: ${e.name}`);return this.id2Mask[e.id]}else{const n=this.name2Id[e];if(n==null)throw new L(`Feed dict has no SymbolicTensor name: ${e}`);return this.id2Mask[n]}}disposeMasks(){this.id2Mask!=null&&Oe(this.id2Mask)}}const tp=new qT,np=new qT;function oG(t){tp!=null&&tp.setMaxEntries(t),np!=null&&np.setMaxEntries(t)}function Zl(t,e,n,s){const r=n==null?!1:n.training,o=Array.isArray(t),a=o?t:[t],i=a.map(f=>f.name),l=[],u=e.names();for(const f of i)u.indexOf(f)!==-1?l.push(e.getValue(f)):l.push(null);s!=null&&(s.maxNumTensors=-1/0,s.minNumTensors=1/0);const c=i.join(",")+"|"+e.names().sort().join(",");let h=tp.get(c),d;if(h==null){const f=aG(a,e);h=f.sorted,d=f.recipientCounts,tp.put(c,h),np.put(c,d)}d={},r||Object.assign(d,np.get(c));const p=new yo(e);for(let f=0;f<h.length;++f){if(s!=null){const E=Gy().numTensors;E>s.maxNumTensors&&(s.maxNumTensors=E),E<s.minNumTensors&&(s.minNumTensors=E)}const m=h[f],y=m.sourceLayer;if(y instanceof lh)continue;const g=[],x=[],w=[];let b=!1;for(const E of m.inputs){const T=p.getValue(E),R=p.getMask(E);g.push(T),x.push(R),R!=null&&(b=!0),r||(d[E.name]--,d[E.name]===0&&!e.hasKey(E)&&i.indexOf(E.name)===-1&&!T.isDisposed&&E.sourceLayer.stateful!==!0&&w.push(T))}b&&(n=n||{},n.mask=x[0]);const v=st(y.apply(g,n));let k=null;y.supportsMasking&&(k=y.computeMask(g,x));const $=lG(m),N=Array.isArray($)?$:[$];for(let E=0;E<N.length;++E){p.hasKey(N[E])||p.add(N[E],v[E],Array.isArray(k)?k[0]:k);const T=i.indexOf(N[E].name);T!==-1&&(l[T]=v[E])}r||Oe(w)}return p.disposeMasks(),o?l:l[0]}function aG(t,e){C(t!=null&&t.length>0,()=>"Expected at least one fetch, got none");let n=[],s={};if(t.length===1){const r=TS(t[0],e);n=r.sorted,s=r.recipientMap}else{const r=new Set;for(const o of t){const{sorted:a,recipientMap:i}=TS(o,e);for(const l of a)r.has(l.name)||(n.push(l),r.add(l.name));for(const l in i)s[l]==null&&(s[l]=new Set),i[l].forEach(u=>s[l].add(u))}}return{sorted:n,recipientCounts:iG(s)}}function iG(t){const e={};for(const n in t)e[n]=t[n].size;return e}function TS(t,e){const n=new Set,s=[],r={};for(const i of e.names())n.add(i);const o=[],a=[];for(o.push(t);o.length>0;){const i=o[o.length-1];if(n.has(i.name)){o.pop();continue}const l=a[a.length-1]===o.length-1;if(i.inputs.length===0||l)o.pop(),s.push(i),n.add(i.name),l&&a.pop();else{a.push(o.length-1);for(const u of i.inputs)r[u.name]==null&&(r[u.name]=new Set),r[u.name].add(i.name),!n.has(u.name)&&o.push(u)}}return{sorted:s,recipientMap:r}}function lG(t){let e;if(t.sourceLayer.inboundNodes.length===1)e=t.sourceLayer.output;else{let n=null;for(let s=0;s<t.sourceLayer.inboundNodes.length;++s)for(const r of t.sourceLayer.inboundNodes[s].outputTensors)if(r.id===t.id){n=s;break}e=t.sourceLayer.getOutputAt(n)}return e}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const uG=G();uG.registerFlag("TOPOLOGICAL_SORT_CACHE_MAX_ENTRIES",()=>100,oG);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function aw(t,e){return V(()=>dn(ye(O(t,t),e,!0)))}class uh extends kl{getConfig(){return{}}}class d2 extends uh{constructor(e){super(),this.defaultMaxValue=2,this.defaultAxis=0,this.maxValue=e.maxValue!=null?e.maxValue:this.defaultMaxValue,this.axis=e.axis!=null?e.axis:this.defaultAxis}apply(e){return V(()=>{const n=aw(e,this.axis),s=Yn(n,0,this.maxValue);return O(e,we(s,te(Ft(),n)))})}getConfig(){return{maxValue:this.maxValue,axis:this.axis}}}d2.className="MaxNorm";ne(d2);class p2 extends uh{constructor(e){super(),this.defaultAxis=0,this.axis=e.axis!=null?e.axis:this.defaultAxis}apply(e){return V(()=>we(e,te(Ft(),aw(e,this.axis))))}getConfig(){return{axis:this.axis}}}p2.className="UnitNorm";ne(p2);class f2 extends uh{apply(e){return _r(e)}}f2.className="NonNeg";ne(f2);class m2 extends uh{constructor(e){super(),this.defaultMinValue=0,this.defaultMaxValue=1,this.defaultRate=1,this.defaultAxis=0,this.minValue=e.minValue!=null?e.minValue:this.defaultMinValue,this.maxValue=e.maxValue!=null?e.maxValue:this.defaultMaxValue,this.rate=e.rate!=null?e.rate:this.defaultRate,this.axis=e.axis!=null?e.axis:this.defaultAxis}apply(e){return V(()=>{const n=aw(e,this.axis),s=te(O(this.rate,Yn(n,this.minValue,this.maxValue)),O(1-this.rate,n));return O(e,we(s,te(Ft(),n)))})}getConfig(){return{minValue:this.minValue,maxValue:this.maxValue,rate:this.rate,axis:this.axis}}}m2.className="MinMaxNorm";ne(m2);const ES={maxNorm:"MaxNorm",minMaxNorm:"MinMaxNorm",nonNeg:"NonNeg",unitNorm:"UnitNorm"};function zt(t){return Xb(t)}function RS(t,e={}){return rh(t,Cs.getMap().classNameMap,e,"constraint")}function Mt(t){if(t==null)return null;if(typeof t=="string"){const n={className:t in ES?ES[t]:t,config:{}};return RS(n)}else return t instanceof uh?t:RS(t)}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */async function ra(t){if(t==null)return;const e=[],n=[],s=[];for(const r in t){const o=t[r];if(typeof o!="number"){const a=o;e.push(a.data()),n.push(r),s.push(a)}}if(e.length>0){const r=await Promise.all(e);for(let o=0;o<r.length;++o)t[n[o]]=r[o][0];Oe(s)}}function g2(t){if(t!=null)for(const e in t){const n=t[e];typeof n!="number"&&n.dispose()}}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */var DS;(function(t){t[t.SILENT=0]="SILENT",t[t.VERBOSE=1]="VERBOSE"})(DS||(DS={}));const cG=125;class zu{constructor(){this.validationData=null}setParams(e){this.params=e}async onEpochBegin(e,n){}async onEpochEnd(e,n){}async onBatchBegin(e,n){}async onBatchEnd(e,n){}async onTrainBegin(e){}async onTrainEnd(e){}setModel(e){}}class hG{constructor(e,n=10){e==null&&(e=[]),this.callbacks=e,this.queueLength=n}append(e){this.callbacks.push(e)}setParams(e){for(const n of this.callbacks)n.setParams(e)}setModel(e){for(const n of this.callbacks)n.setModel(e)}async onEpochBegin(e,n){n==null&&(n={});for(const s of this.callbacks)await s.onEpochBegin(e,n)}async onEpochEnd(e,n){n==null&&(n={});for(const s of this.callbacks)await s.onEpochEnd(e,n)}async onBatchBegin(e,n){n==null&&(n={});for(const s of this.callbacks)await s.onBatchBegin(e,n)}async onBatchEnd(e,n){n==null&&(n={});for(const s of this.callbacks)await s.onBatchEnd(e,n)}async onTrainBegin(e){e==null&&(e={});for(const n of this.callbacks)await n.onTrainBegin(e)}async onTrainEnd(e){e==null&&(e={});for(const n of this.callbacks)await n.onTrainEnd(e)}}class dG extends zu{constructor(){super()}async onEpochBegin(e){this.seen=0,this.totals={}}async onBatchEnd(e,n){n==null&&(n={});const s=n.size==null?0:n.size;this.seen+=s;for(const r in n){const o=n[r];if(typeof o=="number")this.totals.hasOwnProperty(r)||(this.totals[r]=0),this.totals[r]=this.totals[r]+o*s;else{let a;r in this.totals?a=this.totals[r]:this.totals[r]=0;const i=V(()=>te(this.totals[r],O(o,s)));this.totals[r]=i,a!=null&&a.dispose()}}}async onEpochEnd(e,n){if(n!=null)for(const s of this.params.metrics)this.totals[s]!=null&&(typeof this.totals[s]=="number"?n[s]=this.totals[s]/this.seen:V(()=>{const r=O(we(1,this.seen),this.totals[s]);n[s]=r,this.totals[s].dispose(),Ht(n[s])}))}}class pG extends zu{async onTrainBegin(e){this.epoch=[],this.history={}}async onEpochEnd(e,n){n==null&&(n={}),this.epoch.push(e);for(const s in n)this.history[s]==null&&(this.history[s]=[]),this.history[s].push(n[s])}async syncData(){const e=[],n=[],s=[];for(const o in this.history){const a=this.history[o];for(let i=0;i<a.length;++i)if(typeof a[i]!="number"){const l=a[i];e.push(l.data()),n.push(o),s.push(i)}}const r=await Promise.all(e);for(let o=0;o<r.length;++o)this.history[n[o]][s[o]].dispose(),this.history[n[o]][s[o]]=r[o][0]}}class fG extends zu{constructor(e,n){if(super(),this.currentEpoch=0,this.nowFunc=e.nowFunc,this.nextFrameFunc=e.nextFrameFunc||vT,this.yieldEvery=n||"auto",this.yieldEvery==="auto"&&(this.yieldEvery=cG),this.yieldEvery==="never"&&e.onYield!=null)throw new Error("yieldEvery is `never` but you provided an `onYield` callback. Either change `yieldEvery` or remove the callback");Iy(this.yieldEvery)&&(this.maybeWait=EU(this.maybeWait.bind(this),this.yieldEvery,this.nowFunc)),this.trainBegin=e.onTrainBegin,this.trainEnd=e.onTrainEnd,this.epochBegin=e.onEpochBegin,this.epochEnd=e.onEpochEnd,this.batchBegin=e.onBatchBegin,this.batchEnd=e.onBatchEnd,this.yield=e.onYield}async maybeWait(e,n,s){const r=[];this.yield!=null&&(await ra(s),r.push(this.yield(e,n,s))),r.push(this.nextFrameFunc()),await Promise.all(r)}async onEpochBegin(e,n){this.currentEpoch=e,this.epochBegin!=null&&(await ra(n),await this.epochBegin(e,n))}async onEpochEnd(e,n){const s=[];this.epochEnd!=null&&(await ra(n),s.push(this.epochEnd(e,n))),this.yieldEvery==="epoch"&&s.push(this.nextFrameFunc()),await Promise.all(s)}async onBatchBegin(e,n){this.batchBegin!=null&&(await ra(n),await this.batchBegin(e,n))}async onBatchEnd(e,n){const s=[];this.batchEnd!=null&&(await ra(n),s.push(this.batchEnd(e,n))),this.yieldEvery==="batch"?s.push(this.nextFrameFunc()):Iy(this.yieldEvery)&&s.push(this.maybeWait(this.currentEpoch,e,n)),await Promise.all(s)}async onTrainBegin(e){this.trainBegin!=null&&(await ra(e),await this.trainBegin(e))}async onTrainEnd(e){this.trainEnd!=null&&(await ra(e),await this.trainEnd(e))}}function y2(t,e){return t==null&&(t={}),t instanceof zu?[t]:Array.isArray(t)&&t[0]instanceof zu?t:st(t).map(s=>new fG(s,e))}class vs{constructor(){}static registerCallbackConstructor(e,n){C(e>=0&&Number.isInteger(e),()=>`Verbosity level is expected to be an integer >= 0, but got ${e}`),vs.checkForDuplicate(n),vs.constructors[e]==null&&(vs.constructors[e]=[]),vs.constructors[e].push(n)}static checkForDuplicate(e){for(const n in vs.constructors)vs.constructors[+n].forEach(r=>{if(r===e)throw new L("Duplicate callback constructor.")})}static clear(){vs.constructors={}}static createCallbacks(e){const n=[];for(const s in vs.constructors){const r=+s;e>=r&&n.push(...vs.constructors[r])}return n.map(s=>new s)}}vs.constructors={};function x2(t,e,n,s,r,o,a,i,l){const u=new pG,c=[new dG,...vs.createCallbacks(e)];t!=null&&c.push(...t),c.push(u);const h=new hG(c);return h.setParams({epochs:n,initialEpoch:s,samples:r,steps:o,batchSize:a,verbose:e,doValidation:i,metrics:l}),{callbackList:h,history:u}}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function jr(t,e={},n=!1){return rh(t,Cs.getMap().classNameMap,e,"layer",n)}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function sp(t,e){return V(()=>{t.dtype!=="float32"&&(t=he(t,"float32"));const n=ye(ah(t),e,!0),s=bl(n.shape,Ft()),r=dn(ro(n,s));return we(t,r)})}function gm(t,e){return V(()=>xt(ah(fe(e,t)),-1))}function iw(t,e){return V(()=>xt(Dt(fe(e,t)),-1))}function lw(t,e){return V(()=>{const n=fe(t,e),s=Yn(Dt(t),Ft(),Number.MAX_VALUE),r=Dt(we(n,s));return O(100,xt(r,-1))})}function mG(t,e){return V(()=>{const n=Yn(e,Ft(),Number.MAX_VALUE),s=cs(te(1,n)),r=Yn(t,Ft(),Number.MAX_VALUE),o=cs(te(1,r));return xt(ah(fe(s,o)),-1)})}function gG(t,e){return V(()=>{const n=ro(0,fe(1,O(t,e)));return xt(ah(n),-1)})}function yG(t,e){return V(()=>{const n=ro(0,fe(1,O(t,e)));return xt(n,-1)})}function xG(t,e){return V(()=>{const n=ye(O(t,e),-1),s=Ls(O(fe(1,t),e),-1);return ro(0,te(1,fe(s,n)))})}function bG(t,e){return V(()=>{const n=Math.log(2),s=fe(e,t),r=fe(te(s,wl(O(-2,s))),n);return xt(r,-1)})}function Mu(t,e,n=!1){return V(()=>{if(n)e=nm(e);else{const s=ye(e,e.shape.length-1,!0);e=we(e,s)}return e=Yn(e,Ft(),1-Ft()),it(ye(O(he(t,"float32"),cs(e)),e.shape.length-1))})}function rp(t,e,n=!1){return V(()=>{const s=he(Jc(VU(t)),"int32");e=Yn(e,Ft(),1-Ft());const r=e.shape,o=F(Hx(s,r[r.length-1]),r);return Mu(o,e,n)})}function wG(t,e){if(!Me(t.shape,e.shape))throw new L(`logits and labels must have the same shape, but got shapes ${JSON.stringify(t.shape)} and ${JSON.stringify(e.shape)}`);return V(()=>{const n=_r(e),s=it(Dt(e));return te(fe(n,O(e,t)),Kf(us(s)))})}function ym(t,e){return V(()=>{let n;return n=Yn(e,Ft(),1-Ft()),n=cs(we(n,fe(1,n))),xt(wG(t,n),-1)})}function vG(t,e){return V(()=>{const n=Yn(t,Ft(),1),s=Yn(e,Ft(),1);return ye(O(t,cs(we(n,s))),-1)})}function SG(t,e){return V(()=>{const n=cs(te(Ft(),e));return xt(fe(e,O(t,n)),-1)})}function b2(t,e){return V(()=>{const n=sp(t,-1),s=sp(e,-1),r=O(n,s);return it(ye(r,-1))})}const op={meanSquaredError:gm,meanAbsoluteError:iw,meanAbsolutePercentageError:lw,meanSquaredLogarithmicError:mG,squaredHinge:gG,hinge:yG,categoricalHinge:xG,logcosh:bG,categoricalCrossentropy:Mu,sparseCategoricalCrossentropy:rp,binaryCrossentropy:ym,kullbackLeiblerDivergence:vG,poisson:SG,cosineProximity:b2};function pg(t){if(typeof t=="string"){if(t in op)return op[t];let e=`Unknown loss ${t}`;throw t.toLowerCase().includes("softmaxcrossentropy")&&(e=`Unknown loss ${t}. Use "categoricalCrossentropy" as the string name for tf.losses.softmaxCrossEntropy`),new L(e)}else return t}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function w2(t,e){return V(()=>{const n=O(.5,hs(e)),s=Tr(ts(e,n),t.dtype);return xt(or(t,s),-1)})}function v2(t,e){return V(()=>Tr(or(el(t,-1),el(e,-1)),"float32"))}function kG(t,e){return V(()=>he(ye(Rr(or(t,1),or(e,1))),"float32"))}function $G(t,e){return V(()=>he(ye(Rr(or(t,0),or(e,1))),"float32"))}function CG(t,e){return V(()=>{const n=kG(t,e),s=$G(t,e),r=te(n,s);return he(un(ts(r,0),we(n,r),0),"float32")})}function NG(t,e){return ym(t,e)}function IG(t,e){return t.rank===e.rank&&(t=Ya(t,[t.rank-1])),e=el(e,-1),e.dtype!==t.dtype&&(e=he(e,t.dtype)),he(or(t,e),"float32")}const TG=gm,EG=gm,RG=iw,DG=iw,AG=lw,_G=lw,S2=Mu,OG=b2,k2=rp,ap={binaryAccuracy:w2,categoricalAccuracy:v2,precision:CG,categoricalCrossentropy:S2,sparseCategoricalCrossentropy:k2,mse:TG,MSE:EG,mae:RG,MAE:DG,mape:AG,MAPE:_G,cosine:OG};function FG(t){if(typeof t=="string"&&t in ap)return ap[t];if(typeof t!="string"&&t!=null)return t;throw new L(`Unknown metric ${t}`)}function Vh(t){if(yr(t!==null,`Unknown LossOrMetricFn ${t}`),typeof t=="string")return t;{let e;for(const n of Object.keys(op))if(op[n]===t){e=n;break}if(e!==void 0)return e;for(const n of Object.keys(ap))if(ap[n]===t){e=n;break}return e!==void 0?e:t.name}}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function LG(t){const e={Adagrad:()=>oi.adagrad(.01),Adadelta:()=>oi.adadelta(1,.95,Ft()),Adam:()=>oi.adam(.001,.9,.999,Ft()),Adamax:()=>oi.adamax(.002,.9,.999,Ft(),0),RMSProp:()=>oi.rmsprop(.001,.9,0,Ft()),SGD:()=>oi.sgd(.01)};if(e.adagrad=e.Adagrad,e.adadelta=e.Adadelta,e.adam=e.Adam,e.adamax=e.Adamax,e.rmsprop=e.RMSProp,e.sgd=e.SGD,t in e)return e[t]();throw new L(`Unknown Optimizer ${t}`)}/**
 * @license
 * Copyright 2019 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const AS=1*1024*1024;function _S(t,e,n=!1){if(t==null||typeof t!="object"||Object.getPrototypeOf(t)!==Object.prototype||!n0(t))throw new Error("User-defined metadata is expected to be a JSON object, but is not.");if(n){const s=JSON.stringify(t);s.length>AS&&console.warn(`User-defined metadata of model "${e}" is too large in size (length=${s.length} when serialized). It is not recommended to store such large objects in user-defined metadata. Please make sure its serialized length is <= ${AS}.`)}}function n0(t){if(t===null)return!0;if(typeof t=="object")if(Object.getPrototypeOf(t)===Object.prototype){const e=Object.keys(t);for(const n of e)if(typeof n!="string"||!n0(t[n]))return!1;return!0}else if(Array.isArray(t)){for(const e of t)if(!n0(e))return!1;return!0}else return!1;else{const e=typeof t;return e==="string"||e==="number"||e==="boolean"}}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function PG(t,e,n,s=console.log){const r=MG(t),o=["Layer (type)","Input Shape","Output shape","Param #"];r?(e=e||90,n=n||[.32,.61,.89,1]):(e=e||115,n=n||[.24,.48,.7,.8,1]),n[n.length-1]<=1&&(n=n.map(c=>Math.floor(e*c)));let a;if(!r){o.push("Receives inputs"),a=[];for(const c in t.nodesByDepth)a.push(...t.nodesByDepth[c])}s("_".repeat(e)),ip(o,n,s),s("=".repeat(e));const i=t.layers;for(let c=0;c<i.length;++c)r?BG(i[c],n,s):VG(i[c],n,a,s),s((c===i.length-1?"=":"_").repeat(e));t.checkTrainableWeightsConsistency();const l=zG(t),u=ep(t.nonTrainableWeights);s(`Total params: ${l+u}`),s(`Trainable params: ${l}`),s(`Non-trainable params: ${u}`),s("_".repeat(e))}function zG(t){let e;return t.collectedTrainableWeights!=null?e=ep(t.collectedTrainableWeights):e=ep(t.trainableWeights),e}function MG(t){let e=!0;const n=[],s=[];for(const r in t.nodesByDepth)n.push(t.nodesByDepth[r]);for(const r of n){if(r.length>1||r.length===1&&r[0].inboundLayers.length>1){e=!1;break}s.push(...r)}if(e)for(const r of t.layers){let o=!1;for(const a of r.inboundNodes)if(s.indexOf(a)!==-1)if(o){e=!1;break}else o=!0;if(!e)break}return e}function ip(t,e,n=console.log){let s="";for(let r=0;r<t.length;++r)r>0&&(s=s.slice(0,s.length-1)+" "),s+=t[r],s=s.slice(0,e[r]),s+=" ".repeat(e[r]-s.length);n(s)}function BG(t,e,n){let s,r;try{r=t.inboundNodes.map(l=>JSON.stringify(l.inputShapes)).join(",")}catch{r="multiple"}try{s=JSON.stringify(t.outputShape)}catch{s="multiple"}const o=t.name,a=t.getClassName(),i=[`${o} (${a})`,r,s,t.countParams().toString()];ip(i,e,n)}function VG(t,e,n,s){let r,o;try{o=t.inboundNodes.map(h=>JSON.stringify(h.inputShapes)).join(",")}catch{o="multiple"}try{r=JSON.stringify(t.outputShape)}catch{r="multiple"}const a=[];for(const h of t.inboundNodes)if(!(n!=null&&n.length>0&&n.indexOf(h)===-1))for(let d=0;d<h.inboundLayers.length;++d){const p=h.inboundLayers[d].name,f=h.nodeIndices[d],m=h.tensorIndices[d];a.push(`${p}[${f}][${m}]`)}const i=t.name,l=t.getClassName(),u=a.length===0?"":a[0],c=[`${i} (${l})`,o,r,t.countParams().toString(),u];ip(c,e,s);for(let h=1;h<a.length;++h)ip(["","","","",a[h]],e,s)}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function $2(t,e,n){return(t==="inboundNodes"||t==="outputLayers"||t==="inputLayers")&&e===0&&typeof n=="string"}function s0(t,e){if(t===null)return null;if(typeof t=="string")return ca(t);if(typeof t=="number"||typeof t=="boolean")return t;if(t instanceof Array){const n=[],s=t.length;for(let r=0;r<s;++r){const o=t[r];$2(e,r,o)?n.push(o):n.push(s0(o,e))}return n}else{const n={};for(const s of Object.keys(t)){const r=t[s];if(s==="name"&&typeof r=="string")n[s]=r;else{const o=ca(s);n[o]=s0(r,o)}}return n}}function r0(t,e){if(t==null)return null;if(typeof t=="string")return Pr(t);if(typeof t=="number"||typeof t=="boolean")return t;if(t instanceof Array){const n=[],s=t.length;for(let r=0;r<s;++r){const o=t[r];$2(e,r,o)?n.push(o):n.push(r0(o,e))}return n}else{const n={};for(const s of Object.keys(t)){const r=t[s],o=Pr(s);(s==="name"||s==="className")&&typeof r=="string"?n[o]=r:n[o]=r0(r,s)}return n}}/** @license See the LICENSE file. */const C2="4.9.0";/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class Xs extends Le{constructor(e){if(super({}),this.containerNodes=new Set,this.name=e.name,this.name==null){const x=this.getClassName().toLowerCase();this.name=pm(x)}if(this.supportsMasking=!1,this.trainable_=!0,Array.isArray(e.inputs)?this.inputs=e.inputs.slice():this.inputs=[e.inputs],Array.isArray(e.outputs)?this.outputs=e.outputs.slice():this.outputs=[e.outputs],Eo(this.inputs).length!==this.inputs.length)throw new L(`The list of inputs passed to the model is redundant. All inputs should only appear once. Found: ${this.inputs.map(x=>x.name)}`);Eo(this.outputs).length!==this.outputs.length&&console.warn(`The list of outputs passed to the model is redundant. All outputs should only appear once. Found: ${this.outputs.map(x=>x.name)}`),this.inputLayers=[],this.inputLayersNodeIndices=[],this.inputLayersTensorIndices=[],this.outputLayers=[],this.outputLayersNodeIndices=[],this.outputLayersTensorIndices=[],this.layers=[],this.internalContainerRefs=[];for(const x of this.outputs){const w=x.sourceLayer,b=x.nodeIndex,v=x.tensorIndex;this.outputLayers.push(w),this.outputLayersNodeIndices.push(b),this.outputLayersTensorIndices.push(v)}for(const x of this.inputs){const w=x.sourceLayer,b=x.nodeIndex,v=x.tensorIndex;yr(b===0,"input layer has >1 nodes"),yr(v===0,"input layer has >1 tensors"),this.inputLayers.push(w),this.inputLayersNodeIndices.push(b),this.inputLayersTensorIndices.push(v)}this.inputNames=[],this.outputNames=[],this.feedInputShapes=[],this.feedInputNames=[],this.feedOutputNames=[];for(let x=0;x<this.inputLayers.length;x++){const w=this.inputLayers[x];if(!(w instanceof lh))throw new TypeError(`Input layers to a LayersModel must be InputLayer objects. Received inputs: ${e.inputs}. Input ${x} (0-based) originates from layer type ${w.getClassName()}.`);this.inputNames.push(w.name),this.feedInputShapes.push(w.batchInputShape),this.feedInputNames.push(w.name)}for(const x of this.outputLayers)this.outputNames.push(x.name);this.internalInputShapes=this.inputs.map(x=>x.shape),this.internalOutputShapes=this.outputs.map(x=>x.shape);const n={},s={},r={},o={},a={},i=[],l=(x,w,b,v,k,$)=>{(v==null||k==null||$==null)&&(v=x.sourceLayer,k=x.nodeIndex,$=x.tensorIndex);const N=v.inboundNodes[k];if(b.indexOf(N)!==-1)throw new Ds(`The tensor ${x.name} at layer "${v.name}" is part of a cycle.`);if(w.indexOf(N)!==-1)return;this.containerNodes.add(Xs.nodeKey(v,k)),v.id in a||(a[v.id]=Object.keys(a).length),b.indexOf(N)===-1&&b.push(N);const E=N.inboundLayers.length;for(let T=0;T<E;T++){const R=N.inputTensors[T],z=N.inboundLayers[T],P=N.nodeIndices[T],W=N.tensorIndices[T];l(R,w,b,z,P,W)}for(w.push(N);b.indexOf(N)>=0;)b.splice(b.indexOf(N),1);i.push(N)},u=[],c=[];for(const x of this.outputs)l(x,u,c);const h=i.slice().reverse();for(const x of h){s[x.id]=x,x.id in n||(n[x.id]=0);let w=n[x.id];const b=r[x.outboundLayer.id]==null?0:r[x.outboundLayer.id];w=Math.max(w,b),r[x.outboundLayer.id]=w,o[x.outboundLayer.id]=x.outboundLayer,n[x.id]=w;for(let v=0;v<x.inboundLayers.length;v++){const k=x.inboundLayers[v],$=x.nodeIndices[v],N=k.inboundNodes[$],E=n[N.id]==null?0:n[N.id];n[N.id]=Math.max(w+1,E),s[N.id]=N}}const d={};for(const x in n){const w=n[x];w in d||(d[w]=[]),d[w].push(s[x])}const p={};for(const x in r){const w=r[x];w in p||(p[w]=[]),p[w].push(o[x])}let f=Object.keys(p).map(x=>parseInt(x,10)).sort(zh);this.layers=[];for(const x of f){const w=p[x];w.sort((b,v)=>{const k=a[b.id],$=a[v.id];return k<$?-1:k>$?1:0});for(const b of w)b instanceof Xs&&this.internalContainerRefs.push(b),this.layers.push(b)}this.layersByDepth=p,f=Object.keys(d).map(x=>parseInt(x,10)).sort(zh);const m=this.inputs.slice(),y=[];for(const x of f)for(const w of d[x]){const b=w.outboundLayer;if(b!=null){for(const v of w.inputTensors)if(m.indexOf(v)===-1)throw new Ds(`Graph disconnected: cannot obtain value for tensor ${v} at layer "${b.name}". The following previous layers were accessed without issue: ${y}`);for(const v of w.outputTensors)m.push(v);y.push(b.name)}}this.nodesByDepth=d;const g=this.layers.map(x=>x.name);for(const x of g){const w=g.filter(b=>b===x).length;if(w!==1)throw new Ds(`The name "${x}" is used ${w} times in the model. All layer names should be unique. Layer names: `+JSON.stringify(g))}this.outboundNodes=[],this.inboundNodes=[],new mm({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:this.inputs.map(x=>null),outputMasks:this.outputs.map(x=>null),inputShapes:this.inputs.map(x=>x.shape),outputShapes:this.outputs.map(x=>x.shape)}),this.built=!0,this._refCount=1}assertNotDisposed(){if(this._refCount===0)throw new Error(`Container '${this.name}' is already disposed.`)}dispose(){this.assertNotDisposed();const e={refCountAfterDispose:null,numDisposedVariables:0};if(--this._refCount===0){for(const n of this.layers)e.numDisposedVariables+=n.dispose().numDisposedVariables;for(const n of this.internalContainerRefs)e.numDisposedVariables+=n.dispose().numDisposedVariables}return e.refCountAfterDispose=this._refCount,e}get trainable(){return this.trainable_}set trainable(e){this.layers.forEach(n=>{n._trainableWeights.forEach(s=>s.trainable=e)}),this.trainable_=e}get trainableWeights(){if(this._trainableWeights.length>0)throw new L("Container instance unexpectedly contains _trainableWeights.The trainable weights of a Container are a union of the trainable weights of its consituent Layers. Its own _trainableWeights must remain an empty Array.");if(!this.trainable)return[];let e=[];for(const n of this.layers)e=e.concat(n.trainableWeights);return e}get nonTrainableWeights(){const e=[];for(const n of this.layers)e.push(...n.nonTrainableWeights);if(!this.trainable){const n=[];for(const s of this.layers)n.push(...s.trainableWeights);return n.concat(e)}return e}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}loadWeights(e,n=!0){const s={};let r=0;const o=Object.keys(e)[0].split("/"),a=!isNaN(parseInt(o[o.length-1],10));for(const l of this.layers)for(const[u,c]of l.weights.entries()){const h=a?`${c.name.split("/").slice(0,-1).join("/")+"/"}${u}`:c.originalName;if(s[h]!=null)throw new L(`Duplicate weight name: ${h}`);s[h]=c,r++}const i=[];for(const l in e){let u=l;if(s[l]==null){const c=l.split("/");u=c.slice(0,-2).concat([c[c.length-1]]).join("/")}if(s[u]!=null)i.push([s[u],e[l]]);else if(n)throw new L(`Provided weight data has no target variable: ${l}`);delete s[u]}if(n){const l=[];for(const u in s)l.push(u);if(l.length>0)throw new L(`${l.length} of ${r} weights are not set: ${l}`)}ow(i)}updatedConfig(){const e=this.getConfig(),n={};return n.className=this.getClassName(),n.config=e,n.kerasVersion=`tfjs-layers ${C2}`,n.backend="TensorFlow.js",n}toJSON(e,n=!0){const s=r0(this.updatedConfig());return n?JSON.stringify(s):s}call(e,n){return V(()=>{e=st(e);const s=new yo;for(let r=0;r<this.inputs.length;++r)s.add(this.inputs[r],e[r]);return Zl(this.outputs,s,n)})}computeMask(e,n){return V(()=>{e=st(e);let s;return n==null?s=La(null,e.length):s=st(n),this.runInternalGraph(e,s)[1]})}computeOutputShape(e){const n=Jd(e);if(n.length!==this.inputLayers.length)throw new L(`Invalid inputShape argument ${e}: model has ${this.inputLayers.length} tensor inputs.`);const s={};for(let i=0;i<n.length;i++){const l=this.inputLayers[i],u=n[i],c=l.name+"_0_0";s[c]=u}const r=Object.keys(this.nodesByDepth).map(i=>parseInt(i,10)).sort(zh);if(r.length>1)for(const i of r){const l=this.nodesByDepth[i];for(const u of l){const c=u.outboundLayer;if(this.inputLayers.map(m=>m.id).indexOf(c.id)!==-1)continue;const h=[];for(let m=0;m<u.inboundLayers.length;m++){const y=u.inboundLayers[m],g=u.nodeIndices[m],x=u.tensorIndices[m],w=`${y.name}_${g}_${x}`,b=s[w];h.push(b)}const d=c.computeOutputShape(En(h)),p=Jd(d),f=c.inboundNodes.indexOf(u);for(let m=0;m<p.length;m++){const y=`${c.name}_${f}_${m}`;s[y]=p[m]}}}const o=[],a=[];for(let i=0;i<this.outputLayers.length;i++){const l=this.outputLayers[i],u=this.outputLayersNodeIndices[i],c=this.outputLayersTensorIndices[i],h=`${l.name}_${u}_${c}`;a.push(h)}for(let i=0;i<a.length;i++){const l=a[i];yr(l in s),o.push(s[l])}return En(o)}runInternalGraph(e,n){n==null&&(n=La(null,e.length));const s={};for(let l=0;l<this.inputs.length;++l){const u=this.inputs[l],c=e[l],h=n[l];s[u.id]=[c,h]}const r=Object.keys(this.nodesByDepth).map(l=>parseInt(l,10)).sort(zh);for(const l of r){const u=this.nodesByDepth[l];for(const c of u){const h=c.outboundLayer,d=c.inputTensors,p=c.outputTensors,f=new Array;for(const m of d)m.id in s&&f.push(s[m.id]);if(f.length===d.length){let m={},y,g,x,w;if(c.callArgs!=null&&(m=c.callArgs),f.length===1){const[b,v]=f[0];m.mask==null&&(m.mask=v),x=st(h.call(b,m)),w=st(h.computeMask(b,v)),y=[b],g=[v]}else y=f.map(b=>b[0]),g=f.map(b=>b[1]),m.mask==null&&(m.mask=g),x=st(h.call(y,m)),w=st(h.computeMask(y,g));if(h.activityRegularizer)throw new De("LayersModel invocation with concrete Tensor value(s) in the presence of activity regularizer(s) is not supported yet.");for(let b=0;b<p.length;++b){const v=p[b],k=x[b],$=w[b];s[v.id]=[k,$]}}}}const o=[],a=[],i=[];for(const l of this.outputs){yr(l.id in s,`Could not compute output ${l.name} : ${l.id}`);const[u,c]=s[l.id];i.push(u.shape),o.push(u),a.push(c)}return[o,a,i]}buildNodeConversionMap(e){const n={};let s;for(const r of this.layers){s=r instanceof Xs?1:0;for(let o=0;o<r.inboundNodes.length;o++){const a=Xs.nodeKey(r,o);this.containerNodes.has(a)&&(n[a]=s,s+=1)}}return n}getLayer(e,n){if(n!=null)return this.findLayer(n);if(e==null)throw new L("Provide either a layer name or layer index");if(typeof e=="number")return this.findLayer(e);for(const s of this.layers)if(s.name===e)return s;throw new L(`No such layer: ${e}`)}findLayer(e){if(this.layers.length<=e)throw new L(`Was asked to retrieve layer at index ${e}, but model only has ${this.layers.length} layer(s).`);return this.layers[e]}calculateLosses(){return V(()=>{const e=[];for(const n of this.layers)for(let s=0;s<n.inboundNodes.length;++s){const r=Xs.nodeKey(n,s);this.containerNodes.has(r)&&e.push(...n.calculateLosses())}return e})}getConfig(){const e={name:this.name},n=this.buildNodeConversionMap(this.layers),s=[];for(const a of this.layers){const i=a.getClassName(),l=a.getConfig(),u=[];for(let h=0;h<a.inboundNodes.length;h++){const d=a.inboundNodes[h],p=Xs.nodeKey(a,h);let f={};if(this.containerNodes.has(p)){if(d.callArgs)try{JSON.stringify(d.callArgs),f=d.callArgs}catch{console.warn(`Layer ${a.name} was passed non-serializable keyword arguments: ${d.callArgs}. They will not be included in the serialized model (and thus will be missing at deserialization time).`),f={}}if(d.inboundLayers.length>0){const m=[];for(let y=0;y<d.inboundLayers.length;y++){const g=d.inboundLayers[y],x=d.nodeIndices[y],w=d.tensorIndices[y],b=Xs.nodeKey(g,x);let v=n[b];v==null&&(v=0),m.push([g.name,v,w,f])}u.push(m)}}}const c={};c.name=a.name,c.className=i,c.config=l,c.inboundNodes=u,s.push(c)}e.layers=s;const r=[];for(let a=0;a<this.inputLayers.length;a++){const i=this.inputLayers[a],l=this.inputLayersNodeIndices[a],u=Xs.nodeKey(i,l);if(!this.containerNodes.has(u))continue;let c=n[u];c==null&&(c=0);const h=this.inputLayersTensorIndices[a];r.push([i.name,c,h])}e.inputLayers=r;const o=[];for(let a=0;a<this.outputLayers.length;a++){const i=this.outputLayers[a],l=this.outputLayersNodeIndices[a],u=Xs.nodeKey(i,l);if(!this.containerNodes.has(u))continue;let c=n[u];c==null&&(c=0);const h=this.outputLayersTensorIndices[a];o.push([i.name,c,h])}return e.outputLayers=o,e}static fromConfig(e,n,s={},r=!1){const o={},a={};function i(y,g){y.name in a?a[y.name].push(g):a[y.name]=[g]}function l(y,g){const x=[];let w;for(const b of g){const v=b[0],k=b[1],$=b[2];if(w=b[3]==null?{}:b[3],!(v in o)){i(y,g);return}const N=o[v];if(N.inboundNodes.length<=k){i(y,g);return}const E=N.inboundNodes[k];x.push(E.outputTensors[$])}x.length>0&&y.apply(En(x),w)}function u(y){const g=y.name,x=jr(y,n.customObjects!=null?n.customObjects:{});x.setFastWeightInitDuringBuild(r),o[g]=x,y.inboundNodes.forEach(b=>{if(!(b instanceof Array))throw new L(`Corrupted configuration, expected array for nodeData: ${b}`);i(x,b)})}const c=n.name,h=n.layers;for(const y of h)u(y);for(;!TU(a);)for(const y of h){const g=o[y.name];if(g.name in a){const x=a[g.name];delete a[g.name];for(const w of x)l(g,w)}}const d=[],p=[],f=n.inputLayers;for(const y of f){const g=y[0],x=y[1],w=y[2];yr(g in o);const v=o[g].inboundNodes[x].outputTensors;d.push(v[w])}const m=n.outputLayers;for(const y of m){const g=y[0],x=y[1],w=y[2];yr(g in o);const v=o[g].inboundNodes[x].outputTensors;p.push(v[w])}return new e({inputs:d,outputs:p,name:c})}get stateful(){if(this._stateful)throw new L("Container instance unexpectedly has _stateful = true. The statefulness of a Container is determined by the Layers it contains. Its _stateful property must remain the default false.");for(const e of this.layers)if(e.stateful)return!0;return!1}resetStates(){V(()=>{this.layers.forEach(e=>{e.stateful&&e.resetStates()})})}}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function WG(t,e,n){const s=e.length;if(t==null||Array.isArray(t)&&t.length===0)return e.map(r=>null);if(s===1)return Array.isArray(t)&&t.length===1?t:typeof t=="object"&&e[0]in t?[t[e[0]]]:[t];if(Array.isArray(t)){if(t.length!==s)throw new Error(`Provided ${n} is an array of ${t.length} element(s), but the model has ${s} outputs. Make sure a set of weights is provided for each model output.`);return t}else if(typeof t=="object"&&Object.keys(t).length>0&&typeof t[Object.keys(t)[0]]=="object"){const r=[];return e.forEach(o=>{o in t?r.push(t[o]):r.push(null)}),r}else throw new Error(`The model has multiple (${s}) outputs, so ${n} must be either an array with ${s} elements or an object with ${e} keys. Provided ${n} not understood: ${JSON.stringify(t)}`)}function N2(t,e){return WG(t,e,"classWeight")}async function I2(t,e,n,s){if(e!=null||s!=null)throw new Error("Support sampleWeight is not implemented yet");if(n!=null){const r=V(()=>{if(t.shape.length===1)return Hr(t);if(t.shape.length===2){if(t.shape[1]>1)return el(t,1);if(t.shape[1]===1)return F(t,[t.shape[0]]);throw new Error(`Encountered unexpected last-dimension size (${t.shape[1]}) during handling of class weights. The size is expected to be >= 1.`)}else throw new Error(`Unexpected rank of target (y) tensor (${t.rank}) during handling of class weights. The rank is expected to be 1 or 2.`)}),o=Array.from(await r.data());Oe(r);const a=[];return o.forEach(i=>{if(n[i]==null)throw new Error(`classWeight must contain all classes in the training data. The class ${i} exists in the data but not in classWeight`);a.push(n[i])}),Sn(a,"float32")}else return null}function UG(t,e){return O(t,e)}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const GG=32;function T2(t,e){let n,s;const r=e;n=r.xs,s=r.ys,C(n!=null&&s!=null,()=>`A Dataset iterator for fitDataset() is expected to generate objects of the form \`{xs: xVal, ys: yVal}\`, where the two values may be \`tf.Tensor\`, an array of Tensors, or a map of string to Tensor.  The provided Dataset instead generates ${e}`);const o=OS("input",t.inputNames,n),a=OS("output",t.outputNames,s),i=o[0].shape[0];C(o.length===t.inputs.length,()=>`LayersModel has ${t.inputs.length} inputs, but the dataset provides ${o.length} inputs.  (Expected input keys: ${JSON.stringify(t.inputNames)})`),C(a.length===t.outputs.length,()=>`LayersModel has ${t.outputs.length} outputs, but the dataset provides ${a.length} outputs.  (Expected output keys: ${JSON.stringify(t.outputNames)})`);for(let l=0;l<o.length;l++)C(o[l].shape[0]===i,()=>`Batch size mismatch: input ${t.inputNames[l]} has ${o[l].shape[0]}; expected  ${i} based on input ${t.inputNames[0]}.`);for(let l=0;l<a.length;l++)C(a[l].shape[0]===i,()=>`Batch size mismatch: output ${t.outputNames[l]} has ${a[l].shape[0]}; expected  ${i} based on input ${t.inputNames[0]}.`);return{xs:o,ys:a}}function OS(t,e,n){if(n instanceof ut)return[n];if(Array.isArray(n))return C(n.length===e.length,()=>`Received an array of ${n.length} Tensors, but expected ${e.length} to match the ${t} keys ${e}.`),n;{const s=[];for(const r of e){if(n[r]==null)throw new L(`The feature data generated by the dataset lacks the required ${t} key '${r}'.`);s.push(n[r])}return s}}function HG(t){if(t.length===3)throw new De("Validation with sample weights is not implemented yet.");return{xs:t[0],ys:t[1]}}async function jG(t,e,n){const s=n.batchesPerEpoch!=null;if(C(t.optimizer!=null,()=>"You must compile a model before training/testing. Use LayersModel.compile(modelCompileConfig)."),C(n!=null,()=>"For fitDataset(), the 2nd argument (config) is required, but it is not provided in this call."),C(n.epochs!=null&&n.epochs>0&&Number.isInteger(n.epochs),()=>`For fitDataset(), config.epochs is expected to be a positive integer, but got ${n.epochs}`),C(!s||n.batchesPerEpoch>0&&Number.isInteger(n.batchesPerEpoch),()=>`For fitDataset(), config.batchesPerEpoch is expected to be a positive integer if specified, but got ${n.batchesPerEpoch}`),C(n.validationSplit==null,()=>"`validationSplit` is not supported by `fitDataset()`. Use validationData instead."),t.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");t.isTraining=!0;try{const r=n.validationData!=null;let o,a;if(r)if(FS(n.validationData))C(n.validationBatches==null||n.validationBatches>0&&Number.isInteger(n.validationBatches),()=>`For fitDataset() with dataset-based validation, config.validationBatches is expected not to be provided, or to be a positive integer, but got ${n.validationBatches}`);else{const y=HG(n.validationData);o=y.xs,a=y.ys}const i=t.makeTrainFunction(),l=t.getDedupedMetricsNames();let u;r?u=l.slice().concat(l.map(y=>"val_"+y)):u=l.slice();const c=y2(n.callbacks,n.yieldEvery),h=n.verbose==null?1:n.verbose,{callbackList:d,history:p}=x2(c,h,n.epochs,null,null,KG(e,n),null,r,u);d.setModel(t),t.history=p,await d.onTrainBegin(),t.stopTraining_=!1;let f=n.initialEpoch==null?0:n.initialEpoch,m=await e.iterator();for(;f<n.epochs;){const y={};await d.onEpochBegin(f);let g=0,x=0;for(s||(m=await e.iterator());!s||g<n.batchesPerEpoch;){const w=await m.next();if(s&&w.done){console.warn(`You provided \`batchesPerEpoch\` as ${n.batchesPerEpoch}, but your dataset iterator ran out of data after ${g} batches; interrupting training. Make sure that your dataset can generate at least \`batchesPerEpoch * epochs\` batches (in this case, ${n.batchesPerEpoch*n.epochs} batches). You may need to use the repeat() function when building your dataset.`);break}if(w.value!=null){const{xs:b,ys:v}=T2(t,w.value),k={};k.batch=x,k.size=b[0].shape[0],await d.onBatchBegin(x,k);const $=[];if(n.classWeight!=null){const T=N2(n.classWeight,t.outputNames);for(let R=0;R<T.length;++R)$.push(await I2(v[R],null,T[R]))}const N=b.concat(v).concat($),E=i(N);Oe(N);for(let T=0;T<l.length;++T){const R=l[T],z=E[T];k[R]=z,Ht(z)}await d.onBatchEnd(x,k),g2(k),x++,g++}if(s?g>=n.batchesPerEpoch:w.done){if(r){let b;FS(n.validationData)?b=st(await t.evaluateDataset(n.validationData,{batches:n.validationBatches})):b=st(t.evaluate(o,a,{batchSize:n.validationBatchSize==null?GG:n.validationBatchSize,verbose:0}));for(let v=0;v<t.metricsNames.length;++v)y[`val_${t.metricsNames[v]}`]=b[v]}break}if(t.stopTraining_)break}if(await d.onEpochEnd(f,y),f++,t.stopTraining_)break}return await d.onTrainEnd(),await t.history.syncData(),t.history}finally{t.isTraining=!1}}function KG(t,e){let n=null;return e.batchesPerEpoch!=null?n=e.batchesPerEpoch:Number.isFinite(t.size)&&(n=t.size),n}function FS(t){return typeof t.iterator=="function"}function qG(t){return typeof t.next=="function"}async function XG(t,e,n){n=n||{};const s=n.batches!=null,r=t.testFunction;let o=[];if(n.verbose>0)throw new De("Verbose mode is not implemented yet.");C(!s||n.batches>0&&Number.isInteger(n.batches),()=>`Test loop expects \`batches\` to be a positive integer, but received ${JSON.stringify(n.batches)}`);const a=qG(e)?e:await e.iterator();let i=0,l=0;for(;!s||l<n.batches;){const u=await a.next();if(o=V(()=>{if(u.value){const{xs:c,ys:h}=T2(t,u.value),d=c.concat(h),p=V(()=>r(d));if(Oe(d),l===0)for(let m=0;m<p.length;++m)o.push(Se(0));const f=d[0].shape[0];for(let m=0;m<p.length;++m){const y=p[m],g=o[m];o[m]=V(()=>te(o[m],O(f,y))),l>0&&Oe(g)}Oe(p),i+=f,++l}return o}),u.done){s&&console.warn(`Your dataset iterator ran out of data during evaluateDataset(). Interrupting evalution. Make sure that your dataset can generate at least \`batches\` batches (in this case, ${n.batches} batches). You may need to use the repeat() function when building your dataset.`);break}}for(let u=0;u<o.length;++u){const c=o[u];o[u]=we(o[u],i),Oe(c)}return En(o)}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function fg(t){C(t>0&&Number.isInteger(t),()=>`batchSize is required to be a positive integer, but got ${t}`)}function Ul(t,e,n){return t==null?[null]:Array.isArray(t)?t.map(s=>Sa(s,e,n-e)):Sa(t,e,n-e)}function o0(t,e){return V(()=>t==null?null:Array.isArray(t)?t.map(n=>o0(n,e)):n2(t,e.dtype==="int32"?e:he(e,"int32")))}function mg(t,e){const n=[];let s=0,r=null;for(;s<t;)r=s+e,r>=t&&(r=t),n.push([s,r]),s=r;return n}function E2(t){const e=[];t instanceof ut&&(t=[t]);for(let n=0;n<t.length;++n){const s=t[n];if(s.rank===1)e.push(oh(s,1));else{if(s.rank===0)throw new Error("Expected tensor to be at least 1D, but received a 0D tensor (scalar).");e.push(s)}}return e}function qs(t,e){if(t==null)return;const n=[];if(e instanceof ut)n.push(e.id);else if(Array.isArray(e))e.forEach(r=>n.push(r.id));else if(e!=null)for(const r in e){const o=e[r];n.push(o.id)}const s=[];if(t instanceof ut)n.indexOf(t.id)===-1&&s.push(t);else if(Array.isArray(t))t.forEach(r=>{n.indexOf(r.id)===-1&&s.push(r)});else if(t!=null)for(const r in t){const o=t[r];n.indexOf(o.id)===-1&&s.push(o)}s.forEach(r=>{r.isDisposed||r.dispose()})}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function YG(t){return t instanceof ut}function a0(t){return Array.isArray(t)}function LS(t){return!YG(t)&&!a0(t)}function PS(t,e,n,s=!0,r=""){if(e==null||e.length===0){if(t!=null){let a=!1;if(a0(t)&&t.length>0)a=!0;else if(LS(t)){for(const i in t)if(t.hasOwnProperty(i)){a=!0;break}}else a=!0;if(a)throw new L(`Error when checking model ${r} expected no data, but got ${t}`)}return[]}if(t==null)return e.map(a=>null);let o;if(LS(t)){t=t,o=[];for(const a of e){if(t[a]==null)throw new L(`No data provided for "${a}". Need data for each key in: ${e}`);o.push(t[a])}}else if(a0(t)){if(t=t,t.length!==e.length)throw new L(`Error when checking model ${r}: the Array of Tensors that you are passing to your model is not the size the model expected. Expected to see ${e.length} Tensor(s), but instead got the following list of Tensor(s): ${t}`);o=t}else{if(t=t,e.length>1)throw new L(`The model ${r} expects ${e.length} Tensor(s), but only received one Tensor. Found: Tensor with shape ${t.shape}`);o=[t]}if(o=E2(o),n!=null)for(let a=0;a<e.length;++a){if(n[a]==null)continue;const i=o[a];if(i.shape.length!==n[a].length)throw new L(`Error when checking ${r}: expected ${e[a]} to have ${n[a].length} dimension(s). but got array with shape ${i.shape}`);for(let l=0;l<n[a].length;++l){if(l===0&&!s)continue;const u=i.shape[l],c=n[a][l];if(c!=null&&c>=0&&u!==c)throw new L(`${r} expected a batch of elements where each example has shape [${n[a].slice(1,n[a].length)}] (i.e.,tensor shape [*,${n[a].slice(1,n[a].length)}]) but the ${r} received an input with ${i.shape[0]} examples, each with shape [${i.shape.slice(1,i.shape.length)}] (tensor shape [${i.shape}])`)}}return o}function QG(t,e,n){const s=Eo(t.map(o=>o.shape[0]));s.sort();const r=Eo(e.map(o=>o.shape[0]));if(r.sort(),s.length>1)throw new L(`All input Tensors (x) should have the same number of samples. Got array shapes: ${JSON.stringify(t.map(o=>o.shape))}`);if(r.length>1)throw new L(`All target Tensors (y) should have the same number of samples. Got array shapes: ${JSON.stringify(e.map(o=>o.shape))}`);if(s.length>0&&r.length>0&&!Me(s,r))throw new L(`Input Tensors should have the same number of samples as target Tensors. Found ${s[0]} input sample(s) and ${r[0]} target sample(s).`)}function ZG(t,e,n){const s=[gm,ym,Mu];for(let r=0;r<t.length;++r){const o=t[r],a=e[r],i=n[r];if(a!=null){if(a===Mu&&o.shape[o.shape.length-1]===1)throw new L(`You are passing a target array of shape ${o.shape} while using a loss 'categorical_crossentropy'. 'categorical_crossentropy'expects targets to be binary matrices (1s and 0s) of shape [samples, classes].`);if(s.indexOf(a)!==-1){const l=o.shape.slice(1),u=i.slice(1);for(let c=0;c<l.length;++c){const h=l[c],d=u[c];if(d!=null&&h!==d)throw new L(`A target Tensor with shape ${o.shape} was passed for an output of shape ${i}, while using a loss function that expects targets to have the same shape as the output.`)}}}}}function zS(t,e,n,s=!0,r=""){let o;if(Array.isArray(t)){if(t.length!==e.length)throw new L(`Error when checking model ${r}: the Array of Tensors that you are passing to your model is not the size the the model expected. Expected to see ${e.length} Tensor(s), but instead got ${t.length} Tensors(s).`);o=t}else{if(e.length>1)throw new L(`The model expects ${e.length} ${r} Tensors, but only received one Tensor. Found: array with shape ${JSON.stringify(t.shape)}.`);o=[t]}if(n!=null)for(let a=0;a<e.length;++a){if(n[a]==null)continue;const i=o[a];if(i.shape.length!==n[a].length)throw new L(`Error when checking ${r}: expected ${e[a]} to have ${n[a].length} dimension(s), but got array with shape ${JSON.stringify(i.shape)}`);for(let l=0;l<n[a].length;++l){if(l===0&&!s)continue;const u=i.shape[l],c=n[a][l];if(c!=null&&c!==u)throw new L(`Error when checking ${r}: expected ${e[a]} to have shape ${JSON.stringify(n[a])} but got array with shape ${JSON.stringify(i.shape)}.`)}}}function JG(t,e){if(t==null||Array.isArray(t)&&t.length===0)return e.map(s=>[]);let n;if(typeof t=="string"||typeof t=="function")n=[t];else if(Array.isArray(t)||typeof t=="object")n=t;else throw new TypeError(`Type of metrics argument not understood. Expected an string,function, Array, or Object, found: ${t}`);if(Array.isArray(n))return e.map(s=>n);{const s=[];for(const r of e){let o=n.hasOwnProperty(r)?n[r]:[];Array.isArray(o)||(o=[o]),s.push(o)}return s}}const eH="layers-model";class Bi extends Xs{constructor(e){super(e),this.isTraining=!1}summary(e,n,s=console.log){if(!this.built)throw new L("This model has never been called, thus its weights have not been created yet. So no summary can be displayed. Build the model first (e.g., by calling it on some test data).");PG(this,e,n,s)}compile(e){if(e.loss==null&&(e.loss=[]),this.loss=e.loss,typeof e.optimizer=="string")this.optimizer_=LG(e.optimizer),this.isOptimizerOwned=!0;else{if(!(e.optimizer instanceof ea))throw new L("User-defined optimizer must be an instance of tf.Optimizer.");this.optimizer_=e.optimizer,this.isOptimizerOwned=!1}let n=[];if(!Array.isArray(e.loss)&&typeof e.loss!="string"&&typeof e.loss!="function"){e.loss=e.loss;for(const a in e.loss)if(this.outputNames.indexOf(a)===-1)throw new L(`Unknown entry in loss dictionary: "${a}". Only expected the following keys: ${this.outputNames}`);for(const a of this.outputNames)e.loss[a]==null&&console.warn(`Output "${a}" is missing from loss dictionary. We assume this was done on purpose, and we will not be expecting data to be passed to ${a} during training`),n.push(pg(e.loss[a]))}else if(Array.isArray(e.loss)){if(e.loss.length!==this.outputs.length)throw new L(`When passing an Array as loss, it should have one entry per model output. The model has ${this.outputs.length} output(s), but you passed loss=${e.loss}.`);n=e.loss.map(i=>pg(i))}else{const a=pg(e.loss);this.outputs.forEach(i=>{n.push(a)})}this.lossFunctions=n,this.feedOutputNames=[],this.feedOutputShapes=[],this.feedLossFns=[];for(let a=0;a<this.outputs.length;++a){const i=this.internalOutputShapes[a],l=this.outputNames[a];this.feedOutputNames.push(l),this.feedOutputShapes.push(i),this.feedLossFns.push(this.lossFunctions[a])}const s=[];this.metrics=e.metrics,this.metricsNames=["loss"],this.metricsTensors=[],va("loss",()=>{for(let a=0;a<this.outputs.length;++a){if(s.indexOf(a)!==-1)continue;const i=this.lossFunctions[a];this.outputs.length>1&&(this.metricsTensors.push([i,a]),this.metricsNames.push(this.outputNames[a]+"_loss"))}});const r=JG(e.metrics,this.outputNames),o=(a,i,l)=>{this.outputNames.length>1&&(i=this.outputNames[a]+"_"+i),this.metricsNames.push(i),this.metricsTensors.push([l,a])};va("metric",()=>{for(let a=0;a<this.outputs.length;++a){if(s.indexOf(a)!==-1)continue;const i=r[a];(u=>{const c="";let h,d,p;for(const f of u){if(typeof f=="string"&&["accuracy","acc","crossentropy","ce"].indexOf(f)!==-1){const y=this.internalOutputShapes[a];y[y.length-1]===1||this.lossFunctions[a]===ym?["accuracy","acc"].indexOf(f)!==-1?d=w2:["crossentropy","ce"].indexOf(f)!==-1&&(d=NG):this.lossFunctions[a]===rp?["accuracy","acc"].indexOf(f)!==-1?d=IG:["crossentropy","ce"].indexOf(f)!==-1&&(d=k2):["accuracy","acc"].indexOf(f)!==-1?d=v2:["crossentropy","ce"].indexOf(f)!==-1&&(d=S2);let g;["accuracy","acc"].indexOf(f)!==-1?g="acc":["crossentropy","ce"].indexOf(f)!==-1&&(g="ce"),p=d,h=c+g}else p=FG(f),h=c+Vh(f);let m;va(h,()=>{m=p}),o(a,h,m)}})(i)}}),this.collectedTrainableWeights=this.trainableWeights}checkTrainableWeightsConsistency(){this.collectedTrainableWeights!=null&&this.trainableWeights.length!==this.collectedTrainableWeights.length&&console.warn("Discrepancy between trainableweights and collected trainable weights. Did you set `model.trainable` without calling `model.compile()` afterwards?")}evaluate(e,n,s={}){const r=s.batchSize==null?32:s.batchSize;fg(r);const o=!0,a=this.standardizeUserDataXY(e,n,o,r);try{const i=a[0].concat(a[1]);this.makeTestFunction();const l=this.testFunction,u=this.testLoop(l,i,r,s.verbose,s.steps);return En(u)}finally{qs(a[0],e),qs(a[1],n)}}async evaluateDataset(e,n){return this.makeTestFunction(),XG(this,e,n)}checkNumSamples(e,n,s,r="steps"){let o;if(s!=null){if(o=null,n!=null)throw new L(`If ${r} is set, batchSize must be null or undefined.Got batchSize = ${n}`)}else if(e!=null)Array.isArray(e)?o=e[0].shape[0]:o=e.shape[0];else throw new L(`Either the input data should have a defined shape, or ${r} shoud be specified.`);return o}execute(e,n){if(Array.isArray(n)&&n.length===0)throw new L("`outputs` is an empty Array, which is not allowed.");const s=Array.isArray(n),r=s?n:[n],o=this.retrieveSymbolicTensors(r),a=new yo;if(e instanceof ut&&(e=[e]),Array.isArray(e)){if(e.length!==this.inputs.length)throw new L(`The number of inputs provided (${e.length}) does not match the number of inputs of this model (${this.inputs.length}).`);for(let l=0;l<this.inputs.length;++l)a.add(this.inputs[l],e[l])}else for(const l of this.inputs){const u=e[l.name];if(u==null)throw new L(`No value is provided for the model's input ${l.name}`);a.add(l,u)}const i=Zl(o,a);return s?i:i[0]}retrieveSymbolicTensors(e){const n=La(null,e.length);let s=e.length;for(const r of this.layers){const o=Array.isArray(r.output)?r.output:[r.output],a=o.map(i=>i.name);for(let i=0;i<e.length;++i){const l=a.indexOf(e[i]);if(l!==-1&&(n[i]=o[l],s--),s===0)break}if(s===0)break}if(s>0){const r=[];throw n.forEach((o,a)=>{o==null&&r.push(e[a])}),new L(`Cannot find SymbolicTensors for output name(s): ${JSON.stringify(r)}`)}return n}predictLoop(e,n=32,s=!1){return V(()=>{const r=this.checkNumSamples(e);if(s)throw new De("Verbose predictLoop() is not implemented yet.");const o=mg(r,n),a=this.outputs.map(i=>[]);for(let i=0;i<o.length;++i)V(()=>{const u=o[i][0],c=o[i][1],h=Ul(e,u,c),d=[];if(Array.isArray(h))for(let f=0;f<h.length;++f)d.push({key:this.inputs[f],value:h[f]});else d.push({key:this.inputs[0],value:h});const p=new yo(d);return Zl(this.outputs,p)}).forEach((u,c)=>a[c].push(u));return En(a.map(i=>Rt(i,0)))})}predict(e,n={}){const s=E2(e);zS(s,this.inputNames,this.feedInputShapes,!1);try{const r=n.batchSize==null?32:n.batchSize;return fg(r),this.predictLoop(s,r)}finally{qs(s,e)}}predictOnBatch(e){zS(e,this.inputNames,this.feedInputShapes,!0);const n=(Array.isArray(e)?e[0]:e).shape[0];return this.predictLoop(e,n)}standardizeUserDataXY(e,n,s=!0,r){if(this.optimizer_==null)throw new Ds("You must compile a model before training/testing. Use LayersModel.compile(modelCompileArgs).");const o=[];for(let a=0;a<this.feedOutputShapes.length;++a){const i=this.feedOutputShapes[a];this.feedLossFns[a]===rp?o.push(i.slice(0,i.length-1).concat([1])):o.push(i)}if(e=PS(e,this.feedInputNames,this.feedInputShapes,!1,"input"),n=PS(n,this.feedOutputNames,o,!1,"target"),QG(e,n),ZG(n,this.feedLossFns,this.feedOutputShapes),this.stateful&&r!=null&&r>0&&e[0].shape[0]%r!==0)throw new L(`In a stateful network, you should only pass inputs with a number of samples that is divisible by the batch size ${r}. Found: ${e[0].shape[0]} sample(s).`);return[e,n]}async standardizeUserData(e,n,s,r,o=!0,a){const[i,l]=this.standardizeUserDataXY(e,n,o,a);if(s!=null)throw new Error("sample weight is not supported yet.");let u=null;if(r!=null){const c=N2(r,this.outputNames);u=[];for(let h=0;h<c.length;++h)u.push(await I2(l[h],null,c[h]))}return[i,l,u]}testLoop(e,n,s,r=0,o){return V(()=>{const a=this.checkNumSamples(n,s,o,"steps"),i=[];if(r>0)throw new De("Verbose mode is not implemented yet.");if(o!=null)throw new De("steps mode in testLoop() is not implemented yet");{const l=mg(a,s),u=Sn(ar(0,a));for(let c=0;c<l.length;++c){const h=l[c][0],d=l[c][1],p=Sa(u,h,d-h),f=o0(n,p),m=e(f);if(c===0)for(let y=0;y<m.length;++y)i.push(Se(0));for(let y=0;y<m.length;++y){const g=m[y];i[y]=te(i[y],O(d-h,g))}}for(let c=0;c<i.length;++c)i[c]=we(i[c],a)}return i})}getDedupedMetricsNames(){const e=this.metricsNames,n=[];for(let s=0;s<e.length;++s){const r=e[s];let o=r;if(SS(e,r)>1){const a=SS(e.slice(0,s),r);o+=`_${a}`}n.push(o)}return n}makeTrainFunction(){return e=>{const n=[],s=e.slice(0,this.inputs.length),r=e.slice(this.inputs.length,this.inputs.length+this.outputs.length),o=e.slice(this.inputs.length+this.outputs.length,this.inputs.length+this.outputs.length*2),a=[],i=()=>{const h=[];for(let m=0;m<this.inputs.length;++m)h.push({key:this.inputs[m],value:s[m]});const d=new yo(h),p=Zl(this.outputs,d,{training:!0});let f;for(let m=0;m<this.lossFunctions.length;++m){const y=this.lossFunctions[m];let g=y(r[m],p[m]);o[m]!=null&&(g=UG(g,o[m]));const x=xt(g);n.push(x),m===0?f=g:f=te(f,g)}for(let m=0;m<this.metricsTensors.length;++m){let y;if(this.outputs.length>1&&m<this.outputs.length)y=n[m];else{const g=this.metricsTensors[m][0],x=this.metricsTensors[m][1];y=xt(g(r[x],p[x]))}Ht(y),a.push(y)}return f=xt(f),this.calculateLosses().forEach(m=>{f=te(f,m)}),f},l=this.collectedTrainableWeights.map(h=>h.read()),u=!0;return[this.optimizer_.minimize(i,u,l)].concat(a)}}makeTestFunction(){this.testFunction=e=>V(()=>{const n=[];let s;const r=e.slice(0,this.inputs.length),o=e.slice(this.inputs.length,this.inputs.length+this.outputs.length),a=[];for(let u=0;u<this.inputs.length;++u)a.push({key:this.inputs[u],value:r[u]});const i=new yo(a),l=Zl(this.outputs,i);for(let u=0;u<this.lossFunctions.length;++u){const c=this.lossFunctions[u],h=xt(c(o[u],l[u]));u===0?s=h:s=te(s,h),n.push(s)}for(let u=0;u<this.metricsTensors.length;++u){const c=this.metricsTensors[u][0],h=this.metricsTensors[u][1],d=xt(c(o[h],l[h]));n.push(d)}return n})}async fit(e,n,s={}){if(this.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");this.isTraining=!0;let r,o,a,i,l,u,c,h,d;try{const p=s.batchSize==null?32:s.batchSize;fg(p);const f=!1,m=await this.standardizeUserData(e,n,s.sampleWeight,s.classWeight,f,p);r=m[0],o=m[1],d=m[2];let y=!1,g;if(s.validationData!=null&&s.validationData.length>0){if(y=!0,s.validationData.length===2)l=s.validationData[0],u=s.validationData[1];else throw s.validationData.length===3?new De("validationData including sample weights is not supported yet."):new L(`When passing validation data, it must contain 2 (valX, valY) or 3 (valX, valY, valSampleWeight) items; ${s.validationData} is invalid.`);const E=!0,T=await this.standardizeUserData(l,u,null,null,E,p);c=T[0],h=T[1],g=c.concat(h)}else if(s.validationSplit!=null&&s.validationSplit>0&&s.validationSplit<1){y=!0;const E=Math.floor(r[0].shape[0]*(1-s.validationSplit)),T=r[0].shape[0];c=Ul(r,E,T),a=r,r=Ul(r,0,E),h=Ul(o,E,T),i=o,o=Ul(o,0,E),g=c.concat(h)}else s.validationSteps!=null&&(y=!0);const x=r.concat(o).concat(d);this.checkTrainableWeightsConsistency();const w=this.makeTrainFunction(),b=this.getDedupedMetricsNames();let v,k;y?(this.makeTestFunction(),v=this.testFunction,k=b.slice().concat(b.map(E=>"val_"+E))):(v=null,g=[],k=b.slice());const $=y2(s.callbacks,s.yieldEvery);return await this.fitLoop(w,x,b,p,s.epochs,s.verbose,$,v,g,s.shuffle,k,s.initialEpoch,null,null)}finally{this.isTraining=!1,qs(r,e),qs(o,n),qs(a,e),qs(i,n),qs(c,l),qs(h,u),d!=null&&Oe(d)}}async fitLoop(e,n,s,r,o,a,i,l,u,c,h,d,p,f){r==null&&(r=32),o==null&&(o=1),c==null&&(c=!0),d==null&&(d=0);let m=!1;if(l!=null&&u!=null&&(m=!0),f!=null&&(m=!0,p==null))throw new L("Can only use `validationSteps` when doing step-wise training, i.e., `stepsPerEpoch` must be set.");const y=this.checkNumSamples(n,r,p,"steps_per_epoch");let g;y!=null&&(g=ar(0,y)),a==null&&(a=1);const{callbackList:x,history:w}=x2(i,a,o,d,y,p,r,m,h);x.setModel(this),this.history=w,await x.onTrainBegin(),this.stopTraining_=!1;for(let b=d;b<o;++b){await x.onEpochBegin(b);const v={};if(p!=null)throw new De("stepsPerEpoch mode is not implemented yet.");{if(c==="batch")throw new De("batch shuffling is not implemneted yet");c&&ZO(g);const k=Sn(g),$=mg(y,r);for(let N=0;N<$.length;++N){const E={};if(await x.onBatchBegin(N,E),V(()=>{const T=$[N][0],R=$[N][1],z=Sa(k,T,R-T);E.batch=N,E.size=R-T;const P=o0(n,z),W=e(P);for(let M=0;M<s.length;++M){const U=s[M],j=W[M];E[U]=j,Ht(j)}if(N===$.length-1&&m){const M=this.testLoop(l,u,r);for(let U=0;U<s.length;++U){const j=s[U],_=M[U];Ht(_),v["val_"+j]=_}}}),await x.onBatchEnd(N,E),g2(E),this.stopTraining_)break}k.dispose()}if(await x.onEpochEnd(b,v),this.stopTraining_)break}return await x.onTrainEnd(),await this.history.syncData(),this.history}async fitDataset(e,n){return jG(this,e,n)}async trainOnBatch(e,n){const s=await this.standardizeUserData(e,n),r=s[0],o=s[1],i=this.makeTrainFunction()(r.concat(o)),l=[];for(const u of i){const c=await u.data();l.push(c[0])}return Oe(i),qs(s[0],e),qs(s[1],n),En(l)}getNamedWeights(e){const n=[],s=e!=null&&e.trainableOnly,r=s?this.trainableWeights:this.weights,o=this.getWeights(s);for(let a=0;a<r.length;++a)s&&!r[a].trainable||n.push({name:r[a].originalName,tensor:o[a]});return n}set stopTraining(e){this.stopTraining_=e}get stopTraining(){return this.stopTraining_}get optimizer(){return this.optimizer_}set optimizer(e){this.optimizer_!==e&&(this.optimizer_=e,this.isOptimizerOwned=!1)}dispose(){const e=super.dispose();if(e.refCountAfterDispose===0&&this.optimizer!=null&&this.isOptimizerOwned){const n=Gy().numTensors;this.optimizer_.dispose(),e.numDisposedVariables+=n-Gy().numTensors}return e}getLossIdentifiers(){let e;if(typeof this.loss=="string")e=Pr(this.loss);else if(Array.isArray(this.loss)){for(const n of this.loss)if(typeof n!="string")throw new Error("Serialization of non-string loss is not supported.");e=this.loss.map(n=>Pr(n))}else{const n=Object.keys(this.loss);e={};const s=this.loss;for(const r of n)if(typeof s[r]=="string")e[r]=Pr(s[r]);else throw new Error("Serialization of non-string loss is not supported.")}return e}getMetricIdentifiers(){if(typeof this.metrics=="string"||typeof this.metrics=="function")return[Pr(Vh(this.metrics))];if(Array.isArray(this.metrics))return this.metrics.map(e=>Pr(Vh(e)));{const e={};for(const n in this.metrics)e[n]=Pr(Vh(this.metrics[n]));return e}}getTrainingConfig(){return{loss:this.getLossIdentifiers(),metrics:this.getMetricIdentifiers(),optimizer_config:{class_name:this.optimizer.getClassName(),config:this.optimizer.getConfig()}}}loadTrainingConfig(e){if(e.weighted_metrics!=null)throw new Error("Loading weight_metrics is not supported yet.");if(e.loss_weights!=null)throw new Error("Loading loss_weights is not supported yet.");if(e.sample_weight_mode!=null)throw new Error("Loading sample_weight_mode is not supported yet.");const n=s0(e.optimizer_config),s=jr(n);let r;if(typeof e.loss=="string")r=ca(e.loss);else if(Array.isArray(e.loss))r=e.loss.map(a=>ca(a));else if(e.loss!=null){r={};for(const a in e.loss)r[a]=ca(e.loss[a])}let o;if(Array.isArray(e.metrics))o=e.metrics.map(a=>ca(a));else if(e.metrics!=null){o={};for(const a in e.metrics)o[a]=ca(e.metrics[a])}this.compile({loss:r,metrics:o,optimizer:s})}async save(e,n){if(typeof e=="string"){const u=zN(e);if(u.length===0)throw new L(`Cannot find any save handlers for URL '${e}'`);if(u.length>1)throw new L(`Found more than one (${u.length}) save handlers for URL '${e}'`);e=u[0]}if(e.save==null)throw new L("LayersModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");const s=await By(this.getNamedWeights(n)),r=!1,o=null,i={modelTopology:this.toJSON(o,r),format:eH,generatedBy:`TensorFlow.js tfjs-layers v${C2}`,convertedBy:null};if((n==null?!1:n.includeOptimizer)&&this.optimizer!=null){i.trainingConfig=this.getTrainingConfig();const u="optimizer",{data:c,specs:h}=await By(await this.optimizer.getWeights(),u);s.specs.push(...h),s.data=ON([s.data,c])}return this.userDefinedMetadata!=null&&(_S(this.userDefinedMetadata,this.name,!0),i.userDefinedMetadata=this.userDefinedMetadata),i.weightData=s.data,i.weightSpecs=s.specs,e.save(i)}setUserDefinedMetadata(e){_S(e,this.name),this.userDefinedMetadata=e}getUserDefinedMetadata(){return this.userDefinedMetadata}}Bi.className="Model";ne(Bi);class R2 extends Bi{}R2.className="Functional";ne(R2);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class Bu extends Bi{constructor(e){if(super({inputs:[],outputs:[]}),e=e||{},this.trainable=!0,this.built=!1,this.name=e.name!=null?e.name:pm("sequential_"),e.layers!=null)for(const n of e.layers)this.add(n)}checkShape(e){if(e.inboundNodes[0].outputTensors[0].shape.some(s=>s<0))throw new L(`Negative dimension size caused by adding layer ${e.name} with input shape [${e.inboundNodes[0].inputTensors[0].shape}]`)}add(e){const n=e instanceof Bu||e instanceof Bi;let s;if(n){if(s=e,s.outputs.length!==1)throw new L("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");if(s.inputs.length!==1)throw new L("All layers in a Sequential model should have a single input tensor. For multi-input layers, use the functional API.")}if(this.outputs.length===0){if(e.inboundNodes.length===0){if(e.batchInputShape==null)throw new L("The first layer in a Sequential model must get an `inputShape` or `batchInputShape` argument.");const r=sG({batchShape:e.batchInputShape,dtype:e.dtype,name:e.name+"_input"});e.apply(r)}if(n)this.outputs=s.outputs,this.inputs=s.inputs;else{if(e.inboundNodes.length!==1)throw new L(`A layer added to a Sequential model must not already be connected somewhere else. LayersModel received layer ${e.name} which has ${e.inboundNodes.length} pre-existing inbound connections.`);if(e.inboundNodes[0].outputTensors.length!==1)throw new L("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(e),this.outputs=[e.inboundNodes[0].outputTensors[0]],this.inputs=h2(this.outputs[0])}this.inboundNodes=[],new mm({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:La(null,this.inputs.length),outputMasks:[null],inputShapes:this.inputs.map(r=>r.shape),outputShapes:this.outputs[0].shape})}else{const r=e.apply(this.outputs[0]);if(Array.isArray(r))throw new TypeError("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(e),this.outputs=[r],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}this.layers.push(e),this.built=!1}pop(){if(this.layers.length===0)throw new TypeError("There are no layers in the model.");if(this.layers.pop(),this.layers.length===0)this.outputs=[],this.inboundNodes=[],this.outboundNodes=[];else{const e=this.layers.length-1;this.layers[e].outboundNodes=[],this.outputs=[this.layers[e].output],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}}call(e,n){return this.model==null&&this.build(),this.model.call(e,n)}build(e){if(He(e),this.inputs.length===0||this.outputs.length===0)throw new TypeError("Sequential model cannot be built: model is empty. Add some layers first.");this.model=new Bi({inputs:this.inputs,outputs:this.outputs[0],name:this.name+"_model"}),this.model.trainable=this.trainable,this.supportsMasking=this.model.supportsMasking,this.inputLayers=this.model.inputLayers,this.inputLayersNodeIndices=this.model.inputLayersNodeIndices,this.inputLayersTensorIndices=this.model.inputLayersTensorIndices,this.outputLayers=this.model.outputLayers,this.outputLayersNodeIndices=this.model.outputLayersNodeIndices,this.outputLayersTensorIndices=this.model.outputLayersTensorIndices,this.nodesByDepth=this.model.nodesByDepth,this.containerNodes=this.model.containerNodes,this.outputNames=this.model.outputNames,this.inputNames=this.model.inputNames,this.built=!0}countParams(){return this.built||this.build(),super.countParams()}summary(e,n,s=console.log){this.built||this.build(),super.summary(e,n,s)}setWeights(e){this.model==null&&this.build(),this.model.setWeights(e)}evaluate(e,n,s={}){if(!this.built)throw new Ds("The model needs to be compiled before being used.");return this.model.evaluate(e,n,s)}async evaluateDataset(e,n){if(!this.built)throw new Ds("The model needs to be compiled before being used.");return this.model.evaluateDataset(e,n)}predict(e,n={}){return this.model==null&&this.build(),this.model.predict(e,n)}predictOnBatch(e){return this.model==null&&this.build(),this.model.predictOnBatch(e)}compile(e){this.build(),this.model.compile(e),this.optimizer_=this.model.optimizer,this.isOptimizerOwned=this.model.isOptimizerOwned,this.loss=this.model.loss,this.metrics=this.model.metrics,this.metricsTensors=this.model.metricsTensors,this.metricsNames=this.model.metricsNames}get optimizer(){return this.model==null?void 0:this.model.optimizer}set optimizer(e){this.model.optimizer=e}async fit(e,n,s={}){if(!this.built)throw new Ds("The model needs to be compiled before being used.");return this.model.fit(e,n,s)}async fitDataset(e,n){if(!this.built)throw new Ds("The model needs to be compiled before being used.");return this.model.fitDataset(e,n)}async trainOnBatch(e,n){return this.model.trainOnBatch(e,n)}static fromConfig(e,n,s={},r=!1){let o,a={};if(n instanceof Array){if(n[0].className==null||n[0].className==="Merge")throw new L("Legacy serialization format not supported yet.");o=n}else C(n.layers!=null,()=>"When the config data for a Sequential model is not an Array, it must be an Object that contains the 'layers' field."),o=n.layers,delete n.layers,a=n;const i=new e(a);if(!(i instanceof Bu))throw new De(`Sequential.fromConfig called on non-Sequential input: ${i}`);for(const l of o){const c=jr(l,void 0,r);r&&c.setFastWeightInitDuringBuild(!0),i.add(c)}return i}set stopTraining(e){if(this.model==null)throw new L("Cannot set the stopTraining property of a sequential model before it is compiled.");this.model.stopTraining=e}get stopTraining(){if(this.model==null)throw new L("Cannot get the stopTraining property of a sequential model before it is compiled.");return this.model.stopTraining}getConfig(){const e=[];for(const n of this.layers){const s={};s.className=n.getClassName(),s.config=n.getConfig(),e.push(s)}return{name:this.name,layers:e}}}Bu.className="Sequential";ne(Bu);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */let Ln=class extends kl{getConfig(){return{}}};class D2 extends Ln{apply(e,n=1){return UU(e,n)}}D2.className="elu";ne(D2);class A2 extends Ln{apply(e){return sb(e)}}A2.className="selu";ne(A2);class _2 extends Ln{apply(e){return _r(e)}}_2.className="relu";ne(_2);class O2 extends Ln{apply(e){return V(()=>Oa(6,_r(e)))}}O2.className="relu6";ne(O2);class F2 extends Ln{apply(e){return e}}F2.className="linear";ne(F2);class L2 extends Ln{apply(e){return Nr(e)}}L2.className="sigmoid";ne(L2);class P2 extends Ln{apply(e){return HU(e)}}P2.className="hardSigmoid";ne(P2);class z2 extends Ln{apply(e){return wl(e)}}z2.className="softplus";ne(z2);class M2 extends Ln{apply(e){return GU(e)}}M2.className="softsign";ne(M2);class B2 extends Ln{apply(e){return tl(e)}}B2.className="tanh";ne(B2);let uw=class extends Ln{apply(e,n=-1){return nm(e,n)}};uw.className="softmax";ne(uw);class V2 extends Ln{apply(e,n=-1){return Vx(e,n)}}V2.className="logSoftmax";ne(V2);class W2 extends Ln{apply(e,n=1){return V(()=>O(Nr(O(e,n)),e))}}W2.className="swish";ne(W2);class U2 extends Ln{apply(e){return V(()=>O(e,tl(wl(e))))}}U2.className="mish";ne(U2);function Mo(t){return t.getClassName()}function gg(t,e={}){return rh(t,Cs.getMap().classNameMap,e,"activation")}function Bo(t){if(t==null){const e={};return e.className="linear",e.config={},gg(e)}if(typeof t=="string"){const e={};return e.className=t,e.config={},gg(e)}else return t instanceof Ln?t:gg(t)}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function tH(t){if(t!=null&&typeof t!="object")throw new Error(`Argument to L1L2 regularizer's constructor is expected to be an object, but received: ${t}`)}class G2 extends kl{}class H2 extends G2{constructor(e){super(),tH(e),this.l1=e==null||e.l1==null?.01:e.l1,this.l2=e==null||e.l2==null?.01:e.l2,this.hasL1=this.l1!==0,this.hasL2=this.l2!==0}apply(e){return V(()=>{let n=Ot([1]);return this.hasL1&&(n=te(n,ye(O(this.l1,Dt(e))))),this.hasL2&&(n=te(n,ye(O(this.l2,ah(e))))),F(n,[])})}getConfig(){return{l1:this.l1,l2:this.l2}}static fromConfig(e,n){return new e({l1:n.l1,l2:n.l2})}}H2.className="L1L2";ne(H2);const MS={l1l2:"L1L2"};function et(t){return Xb(t)}function BS(t,e={}){return rh(t,Cs.getMap().classNameMap,e,"regularizer")}function dt(t){if(t==null)return null;if(typeof t=="string"){const n={className:t in MS?MS[t]:t,config:{}};return BS(n)}else return t instanceof G2?t:BS(t)}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class j2 extends Le{constructor(e){super(e??{}),this.supportsMasking=!0,e!=null&&(this.maxValue=e.maxValue)}call(e,n){e=Ce(e);let s=_r(e);return this.maxValue!=null&&(s=Yn(s,0,this.maxValue)),s}computeOutputShape(e){return e}getConfig(){const e={maxValue:this.maxValue},n=super.getConfig();return Object.assign(e,n),e}}j2.className="ReLU";ne(j2);class K2 extends Le{constructor(e){super(e??{}),this.DEFAULT_ALPHA=.3,e==null&&(e={}),this.alpha=e.alpha==null?this.DEFAULT_ALPHA:e.alpha}call(e,n){const s=Ce(e);return jf(s,this.alpha)}computeOutputShape(e){return e}getConfig(){const e={alpha:this.alpha},n=super.getConfig();return Object.assign(e,n),e}}K2.className="LeakyReLU";ne(K2);class q2 extends Le{constructor(e){if(super(e??{}),this.DEFAULT_ALPHA_INITIALIZER="zeros",e==null&&(e={}),this.supportsMasking=!0,this.alphaInitializer=ht(e.alphaInitializer||this.DEFAULT_ALPHA_INITIALIZER),this.alphaRegularizer=dt(e.alphaRegularizer),this.alphaConstraint=Mt(e.alphaConstraint),e.sharedAxes==null)this.sharedAxes=null;else if(Array.isArray(e.sharedAxes))this.sharedAxes=e.sharedAxes;else if(typeof e.sharedAxes=="number")this.sharedAxes=[e.sharedAxes];else throw new L(`Expected sharedAxes to be a number or an array of numbers, but got ${e.sharedAxes}`)}build(e){e=He(e);const n=e.slice(1);if(this.sharedAxes!=null)for(const r of this.sharedAxes)n[r-1]=1;this.alpha=this.addWeight("alpha",n,"float32",this.alphaInitializer,this.alphaRegularizer,!0,this.alphaConstraint);const s={};if(this.sharedAxes!=null)for(let r=1;r<e.length;++r)s[r]=e[r];this.inputSpec=[new Lt({ndim:e.length,axes:s})],this.built=!0}call(e,n){return e=Ce(e),Zf(e,this.alpha.read())}getConfig(){const e={alphaInitializer:mt(this.alphaInitializer),alphaRegularizer:et(this.alphaRegularizer),alphaConstraint:zt(this.alphaConstraint),sharedAxes:this.sharedAxes},n=super.getConfig();return Object.assign(e,n),e}}q2.className="PReLU";ne(q2);let X2=class extends Le{constructor(e){if(super(e??{}),this.DEFAULT_ALPHA=1,e==null&&(e={}),e.alpha!=null&&e.alpha!==this.DEFAULT_ALPHA)throw new De(`Non-default alpha value (${e.alpha}) is not supported by the ELU layer yet.`);this.alpha=e.alpha==null?this.DEFAULT_ALPHA:e.alpha}call(e,n){const s=Ce(e);return Qc(s)}computeOutputShape(e){return e}getConfig(){const e={alpha:this.alpha},n=super.getConfig();return Object.assign(e,n),e}};X2.className="ELU";ne(X2);class Y2 extends Le{constructor(e){super(e??{}),this.DEFAULT_THETA=1,e==null&&(e={}),this.theta=e.theta==null?this.DEFAULT_THETA:e.theta}call(e,n){const s=Ce(e);return O(s,he(ts(s,this.theta),"float32"))}computeOutputShape(e){return e}getConfig(){const e={theta:this.theta},n=super.getConfig();return Object.assign(e,n),e}}Y2.className="ThresholdedReLU";ne(Y2);class Q2 extends Le{constructor(e){super(e??{}),this.DEFAULT_AXIS=1,e==null&&(e={}),this.softmax=new uw().apply,this.axis=e.axis==null?this.DEFAULT_AXIS:e.axis}call(e,n){const s=Ce(e);return this.softmax(s,this.axis)}computeOutputShape(e){return e}getConfig(){const e={axis:this.axis},n=super.getConfig();return Object.assign(e,n),e}}Q2.className="Softmax";ne(Q2);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function Vi(t,e,n){if(typeof t=="number")return La(t,e);if(t.length!==e)throw new L(`The ${n} argument must be an integer or tuple of ${e} integers. Received: ${t.length} elements.`);for(let s=0;s<e;++s){const r=t[s];if(!MU(r))throw new L(`The ${n} argument must be an integer or tuple of ${e} integers. Received: ${JSON.stringify(t)} including a non-integer number ${r}`)}return t}function sr(t,e,n,s,r=1){if(t==null)return t;const o=e+(e-1)*(r-1);let a;return n==="same"?a=t:a=t-o+1,Math.floor((a+s-1)/s)}function xr(t,e,n,s){if(t==null)return null;if(s==="valid")t=t*e+zo([n-e,0]);else if(s==="same")t=t*e;else throw new L(`Unsupport padding mode: ${s}.`);return t}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function cw(t,e){return V(()=>(Nt(e),e==="channelsFirst"?We(t,[0,2,3,1]):t))}function Z2(t,e){return V(()=>(Nt(e),e==="channelsFirst"?We(t,[0,2,3,4,1]):t))}function nH(t,e,n,s=1,r="valid",o,a=1){return V(()=>{if(o==null&&(o=ir()),Nt(o),t.shape.length!==3)throw new L(`The input of a conv1dWithBias operation should be 3, but is ${t.shape.length} instead.`);if(e.shape.length!==3)throw new L(`The kernel for a conv1dWithBias operation should be 3, but is ${e.shape.length} instead`);if(n!=null&&n.shape.length!==1)throw new L(`The bias for a conv1dWithBias operation should be 1, but is ${e.shape.length} instead`);if(o==="channelsFirst"&&(t=We(t,[0,2,1])),r==="causal")throw new De("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");let i=Ox(t,e,s,r==="same"?"same":"valid","NWC",a);return n!=null&&(i=hr(i,n)),i})}function VS(t,e,n,s=[1,1],r="valid",o,a,i=null){return V(()=>{if(o==null&&(o=ir()),Nt(o),t.rank!==3&&t.rank!==4)throw new L(`conv2dWithBiasActivation expects input to be of rank 3 or 4, but received ${t.rank}.`);if(e.rank!==3&&e.rank!==4)throw new L(`conv2dWithBiasActivation expects kernel to be of rank 3 or 4, but received ${t.rank}.`);let l=cw(t,o);if(r==="causal")throw new De("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");return l=KI({x:l,filter:e,strides:s,pad:r==="same"?"same":"valid",dilations:a,dataFormat:"NHWC",bias:n,activation:i}),o==="channelsFirst"&&(l=We(l,[0,3,1,2])),l})}function sH(t,e,n,s=[1,1,1],r="valid",o,a){return V(()=>{if(o==null&&(o=ir()),Nt(o),t.rank!==4&&t.rank!==5)throw new L(`conv3dWithBias expects input to be of rank 4 or 5, but received ${t.rank}.`);if(e.rank!==4&&e.rank!==5)throw new L(`conv3dWithBias expects kernel to be of rank 4 or 5, but received ${t.rank}.`);let i=Z2(t,o);if(r==="causal")throw new De("The support for CAUSAL padding mode in conv3dWithBias is not implemented yet.");return i=dI(i,e,s,r==="same"?"same":"valid","NDHWC",a),n!=null&&(i=hr(i,n)),o==="channelsFirst"&&(i=We(i,[0,4,1,2,3])),i})}class xm extends Le{constructor(e,n){if(super(n),this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",xm.verifyArgs(n),this.rank=e,jt(this.rank,"rank"),this.rank!==1&&this.rank!==2&&this.rank!==3)throw new De(`Convolution layer for rank other than 1, 2, or 3 (${this.rank}) is not implemented yet.`);if(this.kernelSize=Vi(n.kernelSize,e,"kernelSize"),this.strides=Vi(n.strides==null?1:n.strides,e,"strides"),this.padding=n.padding==null?"valid":n.padding,gs(this.padding),this.dataFormat=n.dataFormat==null?"channelsLast":n.dataFormat,Nt(this.dataFormat),this.activation=Bo(n.activation),this.useBias=n.useBias==null?!0:n.useBias,this.biasInitializer=ht(n.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.biasConstraint=Mt(n.biasConstraint),this.biasRegularizer=dt(n.biasRegularizer),this.activityRegularizer=dt(n.activityRegularizer),this.dilationRate=Vi(n.dilationRate==null?1:n.dilationRate,e,"dilationRate"),this.rank===1&&Array.isArray(this.dilationRate)&&this.dilationRate.length!==1)throw new L(`dilationRate must be a number or an array of a single number for 1D convolution, but received ${JSON.stringify(this.dilationRate)}`);if(this.rank===2){if(typeof this.dilationRate=="number")this.dilationRate=[this.dilationRate,this.dilationRate];else if(this.dilationRate.length!==2)throw new L(`dilationRate must be a number or array of two numbers for 2D convolution, but received ${JSON.stringify(this.dilationRate)}`)}else if(this.rank===3){if(typeof this.dilationRate=="number")this.dilationRate=[this.dilationRate,this.dilationRate,this.dilationRate];else if(this.dilationRate.length!==3)throw new L(`dilationRate must be a number or array of three numbers for 3D convolution, but received ${JSON.stringify(this.dilationRate)}`)}}static verifyArgs(e){if(yr("kernelSize"in e,"required key 'kernelSize' not in config"),typeof e.kernelSize!="number"&&!Yb(e.kernelSize,"number",1,3))throw new L(`BaseConv expects config.kernelSize to be number or number[] with length 1, 2, or 3, but received ${JSON.stringify(e.kernelSize)}.`)}getConfig(){const e={kernelSize:this.kernelSize,strides:this.strides,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,activation:Mo(this.activation),useBias:this.useBias,biasInitializer:mt(this.biasInitializer),biasRegularizer:et(this.biasRegularizer),activityRegularizer:et(this.activityRegularizer),biasConstraint:zt(this.biasConstraint)},n=super.getConfig();return Object.assign(e,n),e}}class $l extends xm{constructor(e,n){super(e,n),this.kernel=null,$l.verifyArgs(n),this.filters=n.filters,jt(this.filters,"filters"),this.kernelInitializer=ht(n.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.kernelConstraint=Mt(n.kernelConstraint),this.kernelRegularizer=dt(n.kernelRegularizer)}build(e){e=He(e);const n=this.dataFormat==="channelsFirst"?1:e.length-1;if(e[n]==null)throw new L(`The channel dimension of the input should be defined. Found ${e[n]}`);const s=e[n],r=this.kernelSize.concat([s,this.filters]);this.kernel=this.addWeight("kernel",r,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[{ndim:this.rank+2,axes:{[n]:s}}],this.built=!0}call(e,n){return V(()=>{e=Ce(e);let s;const r=this.bias==null?null:this.bias.read(),o=YT(this.activation.getClassName());if(o!=null&&this.rank===2)s=VS(e,this.kernel.read(),r,this.strides,this.padding,this.dataFormat,this.dilationRate,o);else{if(this.rank===1)s=nH(e,this.kernel.read(),r,this.strides[0],this.padding,this.dataFormat,this.dilationRate[0]);else if(this.rank===2)s=VS(e,this.kernel.read(),r,this.strides,this.padding,this.dataFormat,this.dilationRate);else if(this.rank===3)s=sH(e,this.kernel.read(),r,this.strides,this.padding,this.dataFormat,this.dilationRate);else throw new De("convolutions greater than 3D are not implemented yet.");this.activation!=null&&(s=this.activation.apply(s))}return s})}computeOutputShape(e){e=He(e);const n=[],s=this.dataFormat==="channelsLast"?e.slice(1,e.length-1):e.slice(2);for(let o=0;o<s.length;++o){const a=sr(s[o],this.kernelSize[o],this.padding,this.strides[o],typeof this.dilationRate=="number"?this.dilationRate:this.dilationRate[o]);n.push(a)}let r=[e[0]];return this.dataFormat==="channelsLast"?(r=r.concat(n),r.push(this.filters)):(r.push(this.filters),r=r.concat(n)),r}getConfig(){const e={filters:this.filters,kernelInitializer:mt(this.kernelInitializer),kernelRegularizer:et(this.kernelRegularizer),kernelConstraint:zt(this.kernelConstraint)},n=super.getConfig();return Object.assign(e,n),e}static verifyArgs(e){if(!("filters"in e)||typeof e.filters!="number"||e.filters<1)throw new L(`Convolution layer expected config.filters to be a 'number' > 0 but got ${JSON.stringify(e.filters)}`)}}class ch extends $l{constructor(e){super(2,e),ch.verifyArgs(e)}getConfig(){const e=super.getConfig();return delete e.rank,e}static verifyArgs(e){if(typeof e.kernelSize!="number"&&!Yb(e.kernelSize,"number",1,2))throw new L(`Conv2D expects config.kernelSize to be number or number[] with length 1 or 2, but received ${JSON.stringify(e.kernelSize)}.`)}}ch.className="Conv2D";ne(ch);class hh extends $l{constructor(e){super(3,e),hh.verifyArgs(e)}getConfig(){const e=super.getConfig();return delete e.rank,e}static verifyArgs(e){if(typeof e.kernelSize!="number"&&!(Array.isArray(e.kernelSize)&&(e.kernelSize.length===1||e.kernelSize.length===3)))throw new L(`Conv3D expects config.kernelSize to be number or [number, number, number], but received ${JSON.stringify(e.kernelSize)}.`)}}hh.className="Conv3D";ne(hh);class J2 extends ch{constructor(e){if(super(e),this.inputSpec=[new Lt({ndim:4})],this.padding!=="same"&&this.padding!=="valid")throw new L(`Conv2DTranspose currently supports only padding modes 'same' and 'valid', but received padding mode ${this.padding}`)}build(e){if(e=He(e),e.length!==4)throw new L("Input should have rank 4; Received input shape: "+JSON.stringify(e));const n=this.dataFormat==="channelsFirst"?1:e.length-1;if(e[n]==null)throw new L("The channel dimension of the inputs should be defined. Found `None`.");const s=e[n],r=this.kernelSize.concat([this.filters,s]);this.kernel=this.addWeight("kernel",r,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new Lt({ndim:4,axes:{[n]:s}})],this.built=!0}call(e,n){return V(()=>{let s=Ce(e);if(s.shape.length!==4)throw new L(`Conv2DTranspose.call() expects input tensor to be rank-4, but received a tensor of rank-${s.shape.length}`);const r=s.shape,o=r[0];let a,i;this.dataFormat==="channelsFirst"?(a=2,i=3):(a=1,i=2);const l=r[a],u=r[i],c=this.kernelSize[0],h=this.kernelSize[1],d=this.strides[0],p=this.strides[1],f=xr(l,d,c,this.padding),m=xr(u,p,h,this.padding),y=[o,f,m,this.filters];this.dataFormat!=="channelsLast"&&(s=We(s,[0,2,3,1]));let g=Lx(s,this.kernel.read(),y,this.strides,this.padding);return this.dataFormat!=="channelsLast"&&(g=We(g,[0,3,1,2])),this.bias!=null&&(g=hr(g,this.bias.read(),this.dataFormat)),this.activation!=null&&(g=this.activation.apply(g)),g})}computeOutputShape(e){e=He(e);const n=e.slice();let s,r,o;this.dataFormat==="channelsFirst"?(s=1,r=2,o=3):(s=3,r=1,o=2);const a=this.kernelSize[0],i=this.kernelSize[1],l=this.strides[0],u=this.strides[1];return n[s]=this.filters,n[r]=xr(n[r],l,a,this.padding),n[o]=xr(n[o],u,i,this.padding),n}getConfig(){const e=super.getConfig();return delete e.dilationRate,e}}J2.className="Conv2DTranspose";ne(J2);class eE extends hh{constructor(e){if(super(e),this.inputSpec=[new Lt({ndim:5})],this.padding!=="same"&&this.padding!=="valid")throw new L(`Conv3DTranspose currently supports only padding modes 'same' and 'valid', but received padding mode ${this.padding}`)}build(e){if(e=He(e),e.length!==5)throw new L("Input should have rank 5; Received input shape: "+JSON.stringify(e));const n=this.dataFormat==="channelsFirst"?1:e.length-1;if(e[n]==null)throw new L("The channel dimension of the inputs should be defined. Found `None`.");const s=e[n],r=this.kernelSize.concat([this.filters,s]);this.kernel=this.addWeight("kernel",r,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new Lt({ndim:5,axes:{[n]:s}})],this.built=!0}call(e,n){return V(()=>{let s=Ce(e);if(s.shape.length!==5)throw new L(`Conv3DTranspose.call() expects input tensor to be rank-4, but received a tensor of rank-${s.shape.length}`);const r=s.shape,o=r[0];let a,i,l;this.dataFormat==="channelsFirst"?(l=2,a=3,i=4):(l=1,a=2,i=3);const u=r[l],c=r[a],h=r[i],d=this.kernelSize[0],p=this.kernelSize[1],f=this.kernelSize[2],m=this.strides[0],y=this.strides[1],g=this.strides[2],x=xr(u,m,d,this.padding),w=xr(c,y,p,this.padding),b=xr(h,g,f,this.padding),v=[o,x,w,b,this.filters];this.dataFormat!=="channelsLast"&&(s=We(s,[0,2,3,4,1]));let k=fI(s,this.kernel.read(),v,this.strides,this.padding);return this.dataFormat!=="channelsLast"&&(k=We(k,[0,4,1,2,3])),this.bias!==null&&(k=hr(k,this.bias.read(),this.dataFormat)),this.activation!==null&&(k=this.activation.apply(k)),k})}computeOutputShape(e){e=He(e);const n=e.slice();let s,r,o,a;this.dataFormat==="channelsFirst"?(s=1,r=2,o=3,a=4):(s=4,r=1,o=2,a=3);const i=this.kernelSize[0],l=this.kernelSize[1],u=this.kernelSize[2],c=this.strides[0],h=this.strides[1],d=this.strides[2];return n[s]=this.filters,n[r]=xr(n[r],c,i,this.padding),n[o]=xr(n[o],h,l,this.padding),n[a]=xr(n[a],d,u,this.padding),n}getConfig(){const e=super.getConfig();return delete e.dilationRate,e}}eE.className="Conv3DTranspose";ne(eE);class tE extends $l{constructor(e,n){if(super(e,n),this.DEFAULT_DEPTHWISE_INITIALIZER="glorotUniform",this.DEFAULT_POINTWISE_INITIALIZER="glorotUniform",this.depthwiseKernel=null,this.pointwiseKernel=null,n.filters==null)throw new L("The `filters` configuration field is required by SeparableConv, but is unspecified.");if(n.kernelInitializer!=null||n.kernelRegularizer!=null||n.kernelConstraint!=null)throw new L("Fields kernelInitializer, kernelRegularizer and kernelConstraint are invalid for SeparableConv2D. Use depthwiseInitializer, depthwiseRegularizer, depthwiseConstraint, pointwiseInitializer, pointwiseRegularizer and pointwiseConstraint instead.");if(n.padding!=null&&n.padding!=="same"&&n.padding!=="valid")throw new L(`SeparableConv${this.rank}D supports only padding modes: 'same' and 'valid', but received ${JSON.stringify(n.padding)}`);this.depthMultiplier=n.depthMultiplier==null?1:n.depthMultiplier,this.depthwiseInitializer=ht(n.depthwiseInitializer||this.DEFAULT_DEPTHWISE_INITIALIZER),this.depthwiseRegularizer=dt(n.depthwiseRegularizer),this.depthwiseConstraint=Mt(n.depthwiseConstraint),this.pointwiseInitializer=ht(n.depthwiseInitializer||this.DEFAULT_POINTWISE_INITIALIZER),this.pointwiseRegularizer=dt(n.pointwiseRegularizer),this.pointwiseConstraint=Mt(n.pointwiseConstraint)}build(e){if(e=He(e),e.length<this.rank+2)throw new L(`Inputs to SeparableConv${this.rank}D should have rank ${this.rank+2}, but received input shape: ${JSON.stringify(e)}`);const n=this.dataFormat==="channelsFirst"?1:e.length-1;if(e[n]==null||e[n]<0)throw new L(`The channel dimension of the inputs should be defined, but found ${JSON.stringify(e[n])}`);const s=e[n],r=this.kernelSize.concat([s,this.depthMultiplier]),o=[];for(let i=0;i<this.rank;++i)o.push(1);o.push(s*this.depthMultiplier,this.filters);const a=!0;this.depthwiseKernel=this.addWeight("depthwise_kernel",r,"float32",this.depthwiseInitializer,this.depthwiseRegularizer,a,this.depthwiseConstraint),this.pointwiseKernel=this.addWeight("pointwise_kernel",o,"float32",this.pointwiseInitializer,this.pointwiseRegularizer,a,this.pointwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,a,this.biasConstraint):this.bias=null,this.inputSpec=[new Lt({ndim:this.rank+2,axes:{[n]:s}})],this.built=!0}call(e,n){return V(()=>{e=Ce(e);let s;if(this.rank===1)throw new De("1D separable convolution is not implemented yet.");return this.rank===2&&(this.dataFormat==="channelsFirst"&&(e=We(e,[0,2,3,1])),s=rb(e,this.depthwiseKernel.read(),this.pointwiseKernel.read(),this.strides,this.padding,this.dilationRate,"NHWC")),this.useBias&&(s=hr(s,this.bias.read(),this.dataFormat)),this.activation!=null&&(s=this.activation.apply(s)),this.dataFormat==="channelsFirst"&&(s=We(s,[0,3,1,2])),s})}getConfig(){const e=super.getConfig();return delete e.rank,delete e.kernelInitializer,delete e.kernelRegularizer,delete e.kernelConstraint,e.depthwiseInitializer=mt(this.depthwiseInitializer),e.pointwiseInitializer=mt(this.pointwiseInitializer),e.depthwiseRegularizer=et(this.depthwiseRegularizer),e.pointwiseRegularizer=et(this.pointwiseRegularizer),e.depthwiseConstraint=zt(this.depthwiseConstraint),e.pointwiseConstraint=zt(this.pointwiseConstraint),e}}tE.className="SeparableConv";class nE extends tE{constructor(e){super(2,e)}}nE.className="SeparableConv2D";ne(nE);class bm extends $l{constructor(e){super(1,e),bm.verifyArgs(e),this.inputSpec=[{ndim:3}]}getConfig(){const e=super.getConfig();return delete e.rank,delete e.dataFormat,e}static verifyArgs(e){if(typeof e.kernelSize!="number"&&!Yb(e.kernelSize,"number",1,1))throw new L(`Conv1D expects config.kernelSize to be number or number[] with length 1, but received ${JSON.stringify(e.kernelSize)}.`)}}bm.className="Conv1D";ne(bm);class sE extends Le{constructor(e){super(e),typeof e.cropping=="number"?this.cropping=[[e.cropping,e.cropping],[e.cropping,e.cropping]]:typeof e.cropping[0]=="number"?this.cropping=[[e.cropping[0],e.cropping[0]],[e.cropping[1],e.cropping[1]]]:this.cropping=e.cropping,this.dataFormat=e.dataFormat===void 0?"channelsLast":e.dataFormat,this.inputSpec=[{ndim:4}]}computeOutputShape(e){return this.dataFormat==="channelsFirst"?[e[0],e[1],e[2]-this.cropping[0][0]-this.cropping[0][1],e[3]-this.cropping[1][0]-this.cropping[1][1]]:[e[0],e[1]-this.cropping[0][0]-this.cropping[0][1],e[2]-this.cropping[1][0]-this.cropping[1][1],e[3]]}call(e,n){return V(()=>{if(e=Ce(e),this.dataFormat==="channelsLast"){const s=Bh(e,this.cropping[0][0],e.shape[1]-this.cropping[0][0]-this.cropping[0][1],2);return Bh(s,this.cropping[1][0],e.shape[2]-this.cropping[1][1]-this.cropping[1][0],3)}else{const s=Bh(e,this.cropping[0][0],e.shape[2]-this.cropping[0][0]-this.cropping[0][1],3);return Bh(s,this.cropping[1][0],e.shape[3]-this.cropping[1][1]-this.cropping[1][0],4)}})}getConfig(){const e={cropping:this.cropping,dataFormat:this.dataFormat},n=super.getConfig();return Object.assign(e,n),e}}sE.className="Cropping2D";ne(sE);class rE extends Le{constructor(e){super(e),this.DEFAULT_SIZE=[2,2],this.inputSpec=[{ndim:4}],this.size=e.size==null?this.DEFAULT_SIZE:e.size,this.dataFormat=e.dataFormat==null?"channelsLast":e.dataFormat,Nt(this.dataFormat),this.interpolation=e.interpolation==null?"nearest":e.interpolation,LU(this.interpolation)}computeOutputShape(e){if(this.dataFormat==="channelsFirst"){const n=e[2]==null?null:this.size[0]*e[2],s=e[3]==null?null:this.size[1]*e[3];return[e[0],e[1],n,s]}else{const n=e[1]==null?null:this.size[0]*e[1],s=e[2]==null?null:this.size[1]*e[2];return[e[0],n,s,e[3]]}}call(e,n){return V(()=>{let s=Ce(e);const r=s.shape;if(this.dataFormat==="channelsFirst"){s=We(s,[0,2,3,1]);const o=this.size[0]*r[2],a=this.size[1]*r[3],i=this.interpolation==="nearest"?wr.resizeNearestNeighbor(s,[o,a]):wr.resizeBilinear(s,[o,a]);return We(i,[0,3,1,2])}else{const o=this.size[0]*r[1],a=this.size[1]*r[2];return this.interpolation==="nearest"?wr.resizeNearestNeighbor(s,[o,a]):wr.resizeBilinear(s,[o,a])}})}getConfig(){const e={size:this.size,dataFormat:this.dataFormat,interpolation:this.interpolation},n=super.getConfig();return Object.assign(e,n),e}}rE.className="UpSampling2D";ne(rE);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function rH(t,e,n=[1,1],s="valid",r,o){return V(()=>{r==null&&(r=ir()),Nt(r);let a=cw(t,r);if(t.rank!==4)throw new L(`Input for depthwiseConv2d is required to be 4-D, but is instead ${t.rank}-D`);if(e.rank!==4)throw new L(`depthwiseKernel is required to be 4-D, but is instead ${e.rank}-D`);return a=Yc(a,e,n,s==="same"?"same":"valid","NHWC",o),r==="channelsFirst"&&(a=We(a,[0,3,1,2])),a})}class oE extends xm{constructor(e){super(2,e),this.depthwiseKernel=null,this.depthMultiplier=e.depthMultiplier==null?1:e.depthMultiplier,this.depthwiseInitializer=ht(e.depthwiseInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.depthwiseConstraint=Mt(e.depthwiseConstraint),this.depthwiseRegularizer=dt(e.depthwiseRegularizer)}build(e){if(e=He(e),e.length<4)throw new L(`Inputs to DepthwiseConv2D should have rank 4. Received input shape: ${JSON.stringify(e)}.`);const n=this.dataFormat==="channelsFirst"?1:3;if(e[n]==null||e[n]<0)throw new L(`The channel dimension of the inputs to DepthwiseConv2D should be defined, but is not (${e[n]}).`);const s=e[n],r=[this.kernelSize[0],this.kernelSize[1],s,this.depthMultiplier];this.depthwiseKernel=this.addWeight("depthwise_kernel",r,null,this.depthwiseInitializer,this.depthwiseRegularizer,!0,this.depthwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[s*this.depthMultiplier],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,n){return V(()=>{e=Ce(e);let s=rH(e,this.depthwiseKernel.read(),this.strides,this.padding,this.dataFormat,null);return this.useBias&&(s=hr(s,this.bias.read(),this.dataFormat)),this.activation!=null&&(s=this.activation.apply(s)),s})}computeOutputShape(e){e=He(e);const n=this.dataFormat==="channelsFirst"?e[2]:e[1],s=this.dataFormat==="channelsFirst"?e[3]:e[2],r=this.dataFormat==="channelsFirst"?e[1]*this.depthMultiplier:e[3]*this.depthMultiplier,o=sr(n,this.kernelSize[0],this.padding,this.strides[0]),a=sr(s,this.kernelSize[1],this.padding,this.strides[1]);return this.dataFormat==="channelsFirst"?[e[0],r,o,a]:[e[0],o,a,r]}getConfig(){const e=super.getConfig();return e.depthMultiplier=this.depthMultiplier,e.depthwiseInitializer=mt(this.depthwiseInitializer),e.depthwiseRegularizer=et(this.depthwiseRegularizer),e.depthwiseConstraint=zt(this.depthwiseRegularizer),e}}oE.className="DepthwiseConv2D";ne(oE);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function aE(t,e,n,s){if(Array.isArray(t)){if(e!=null||n!=null)throw new L("When inputs is an array, neither initialState or constants should be provided");s!=null&&(n=t.slice(t.length-s,t.length),t=t.slice(0,t.length-s)),t.length>1&&(e=t.slice(1,t.length)),t=t[0]}function r(o){return o==null||Array.isArray(o)?o:[o]}return e=r(e),n=r(n),{inputs:t,initialState:e,constants:n}}function iE(t,e,n,s=!1,r,o,a=!1,i=!1){return V(()=>{const l=e.shape.length;if(l<3)throw new L(`Input should be at least 3D, but is ${l}D.`);const u=[1,0].concat(ar(2,l));if(e=We(e,u),o!=null)throw new De("The rnn() functoin of the deeplearn.js backend does not support constants yet.");a&&console.warn("Backend rnn(): the unroll = true option is not applicable to the imperative deeplearn.js backend."),r!=null&&(r=he(he(r,"bool"),"float32"),r.rank===l-1&&(r=wn(r,-1)),r=We(r,u)),s&&(e=Bs(e,0),r!=null&&(r=Bs(r,0)));const c=[];let h,d=n;const p=e.shape[0],f=Vs(e);let m;r!=null&&(m=Vs(r));for(let g=0;g<p;++g){const x=f[g],w=V(()=>t(x,d));if(r==null)h=w[0],d=w[1];else{const b=V(()=>{const v=m[g],k=fe(hs(v),v),$=te(O(w[0],v),O(d[0],k)),N=d.map((E,T)=>te(O(w[1][T],v),O(E,k)));return{output:$,newStates:N}});h=b.output,d=b.newStates}i&&c.push(h)}let y;return i&&(y=ds(c,1)),[h,y,d]})}class ta extends Le{constructor(e){super(e);let n;if(e.cell==null)throw new L("cell property is missing for the constructor of RNN.");if(Array.isArray(e.cell)?n=new pw({cells:e.cell}):n=e.cell,n.stateSize==null)throw new L("The RNN cell should have an attribute `stateSize` (tuple of integers, one integer per RNN state).");this.cell=n,this.returnSequences=e.returnSequences==null?!1:e.returnSequences,this.returnState=e.returnState==null?!1:e.returnState,this.goBackwards=e.goBackwards==null?!1:e.goBackwards,this._stateful=e.stateful==null?!1:e.stateful,this.unroll=e.unroll==null?!1:e.unroll,this.supportsMasking=!0,this.inputSpec=[new Lt({ndim:3})],this.stateSpec=null,this.states_=null,this.numConstants=null,this.keptStates=[]}getStates(){if(this.states_==null){const e=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1;return ar(0,e).map(n=>null)}else return this.states_}setStates(e){this.states_=e}computeOutputShape(e){e0(e)&&(e=e[0]),e=e;let n=this.cell.stateSize;Array.isArray(n)||(n=[n]);const s=n[0];let r;if(this.returnSequences?r=[e[0],e[1],s]:r=[e[0],s],this.returnState){const o=[];for(const a of n)o.push([e[0],a]);return[r].concat(o)}else return r}computeMask(e,n){return V(()=>{Array.isArray(n)&&(n=n[0]);const s=this.returnSequences?n:null;if(this.returnState){const r=this.states.map(o=>null);return[s].concat(r)}else return s})}get states(){if(this.states_==null){const e=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1,n=[];for(let s=0;s<e;++s)n.push(null);return n}else return this.states_}set states(e){this.states_=e}build(e){if(this.numConstants!=null)throw new De("Constants support is not implemented in RNN yet.");e0(e)&&(e=e[0]),e=e;const n=this.stateful?e[0]:null,s=e.slice(2);this.inputSpec[0]=new Lt({shape:[n,null,...s]});const r=[e[0]].concat(e.slice(2));this.cell.build(r);let o;if(Array.isArray(this.cell.stateSize)?o=this.cell.stateSize:o=[this.cell.stateSize],this.stateSpec!=null){if(!Me(this.stateSpec.map(a=>a.shape[a.shape.length-1]),o))throw new L(`An initialState was passed that is not compatible with cell.stateSize. Received stateSpec=${this.stateSpec}; However cell.stateSize is ${this.cell.stateSize}`)}else this.stateSpec=o.map(a=>new Lt({shape:[null,a]}));this.stateful&&this.resetStates()}resetStates(e,n=!1){V(()=>{if(!this.stateful)throw new gr("Cannot call resetStates() on an RNN Layer that is not stateful.");const s=this.inputSpec[0].shape[0];if(s==null)throw new L("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(this.states_==null)Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(r=>Ot([s,r])):this.states_=[Ot([s,this.cell.stateSize])];else if(e==null)Oe(this.states_),this.keptStates!=null&&(Oe(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(r=>Ot([s,r])):this.states_[0]=Ot([s,this.cell.stateSize]);else{if(Array.isArray(e)||(e=[e]),e.length!==this.states_.length)throw new L(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${e.length} state value(s). Input received: ${e}`);n===!0?this.keptStates.push(this.states_.slice()):Oe(this.states_);for(let r=0;r<this.states_.length;++r){const o=e[r],a=Array.isArray(this.cell.stateSize)?this.cell.stateSize[r]:this.cell.stateSize,i=[s,a];if(!Me(o.shape,i))throw new L(`State ${r} is incompatible with layer ${this.name}: expected shape=${i}, received shape=${o.shape}`);this.states_[r]=o}}this.states_=this.states_.map(r=>Ht(r.clone()))})}apply(e,n){let s=n==null?null:n.initialState,r=n==null?null:n.constants;n==null&&(n={});const o=aE(e,s,r,this.numConstants);e=o.inputs,s=o.initialState,r=o.constants;let a=[],i=[];if(s!=null){n.initialState=s,a=a.concat(s),this.stateSpec=[];for(const u of s)this.stateSpec.push(new Lt({shape:u.shape}));i=i.concat(this.stateSpec)}if(r!=null&&(n.constants=r,a=a.concat(r),this.numConstants=r.length),a[0]instanceof vr){const u=[e].concat(a),c=this.inputSpec.concat(i),h=this.inputSpec;this.inputSpec=c;const d=super.apply(u,n);return this.inputSpec=h,d}else return super.apply(e,n)}call(e,n){return V(()=>{const s=n==null?null:n.mask,r=n==null?null:n.training;let o=n==null?null:n.initialState;e=Ce(e),o==null&&(this.stateful?o=this.states_:o=this.getInitialState(e));const a=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1;if(o.length!==a)throw new L(`RNN Layer has ${a} state(s) but was passed ${o.length} initial state(s).`);this.unroll&&console.warn("Ignoring unroll = true for RNN layer, due to imperative backend.");const i={training:r},u=iE((f,m)=>{const y=this.cell.call([f].concat(m),i);return[y[0],y.slice(1)]},e,o,this.goBackwards,s,null,this.unroll,this.returnSequences),c=u[0],h=u[1],d=u[2];this.stateful&&this.resetStates(d,r);const p=this.returnSequences?h:c;return this.returnState?[p].concat(d):p})}getInitialState(e){return V(()=>{let n=Ot(e.shape);return n=ye(n,[1,2]),n=oh(n),Array.isArray(this.cell.stateSize)?this.cell.stateSize.map(s=>s>1?Zy(n,[1,s]):n):this.cell.stateSize>1?[Zy(n,[1,this.cell.stateSize])]:[n]})}get trainableWeights(){return this.trainable?this.cell.trainableWeights:[]}get nonTrainableWeights(){return this.trainable?this.cell.nonTrainableWeights:this.cell.weights}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),this.cell!=null&&this.cell.setFastWeightInitDuringBuild(e)}getConfig(){const e=super.getConfig(),n={returnSequences:this.returnSequences,returnState:this.returnState,goBackwards:this.goBackwards,stateful:this.stateful,unroll:this.unroll};this.numConstants!=null&&(n.numConstants=this.numConstants);const s=this.cell.getConfig();return this.getClassName()===ta.className&&(n.cell={className:this.cell.getClassName(),config:s}),Object.assign(Object.assign(Object.assign({},s),e),n)}static fromConfig(e,n,s={}){const r=n.cell,o=jr(r,s);return new e(Object.assign(n,{cell:o}))}}ta.className="RNN";ne(ta);class wm extends Le{}class hw extends wm{constructor(e){super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=e.units,jt(this.units,"units"),this.activation=Bo(e.activation==null?this.DEFAULT_ACTIVATION:e.activation),this.useBias=e.useBias==null?!0:e.useBias,this.kernelInitializer=ht(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=ht(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=ht(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=dt(e.kernelRegularizer),this.recurrentRegularizer=dt(e.recurrentRegularizer),this.biasRegularizer=dt(e.biasRegularizer),this.kernelConstraint=Mt(e.kernelConstraint),this.recurrentConstraint=Mt(e.recurrentConstraint),this.biasConstraint=Mt(e.biasConstraint),this.dropout=ol([1,zo([0,e.dropout==null?0:e.dropout])]),this.recurrentDropout=ol([1,zo([0,e.recurrentDropout==null?0:e.recurrentDropout])]),this.dropoutFunc=e.dropoutFunc,this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){e=He(e),this.kernel=this.addWeight("kernel",[e[e.length-1],this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,n){return V(()=>{if(e=e,e.length!==2)throw new L(`SimpleRNNCell expects 2 input Tensors, got ${e.length}.`);let s=e[1];e=e[0];const r=n.training==null?!1:n.training;0<this.dropout&&this.dropout<1&&this.dropoutMask==null&&(this.dropoutMask=Vo({ones:()=>hs(e),rate:this.dropout,training:r,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&this.recurrentDropoutMask==null&&(this.recurrentDropoutMask=Vo({ones:()=>hs(s),rate:this.recurrentDropout,training:r,dropoutFunc:this.dropoutFunc}));let o;const a=this.dropoutMask,i=this.recurrentDropoutMask;a!=null?o=Er(O(e,a),this.kernel.read()):o=Er(e,this.kernel.read()),this.bias!=null&&(o=hr(o,this.bias.read())),i!=null&&(s=O(s,i));let l=te(o,Er(s,this.recurrentKernel.read()));return this.activation!=null&&(l=this.activation.apply(l)),[l,l]})}getConfig(){const e=super.getConfig(),n={units:this.units,activation:Mo(this.activation),useBias:this.useBias,kernelInitializer:mt(this.kernelInitializer),recurrentInitializer:mt(this.recurrentInitializer),biasInitializer:mt(this.biasInitializer),kernelRegularizer:et(this.kernelRegularizer),recurrentRegularizer:et(this.recurrentRegularizer),biasRegularizer:et(this.biasRegularizer),activityRegularizer:et(this.activityRegularizer),kernelConstraint:zt(this.kernelConstraint),recurrentConstraint:zt(this.recurrentConstraint),biasConstraint:zt(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout};return Object.assign(Object.assign({},e),n)}}hw.className="SimpleRNNCell";ne(hw);class lE extends ta{constructor(e){e.cell=new hw(e),super(e)}call(e,n){return V(()=>{this.cell.dropoutMask!=null&&(Oe(this.cell.dropoutMask),this.cell.dropoutMask=null),this.cell.recurrentDropoutMask!=null&&(Oe(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const s=n==null?null:n.mask,r=n==null?null:n.training,o=n==null?null:n.initialState;return super.call(e,{mask:s,training:r,initialState:o})})}static fromConfig(e,n){return new e(n)}}lE.className="SimpleRNN";ne(lE);class dw extends wm{constructor(e){if(super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",e.resetAfter)throw new L("GRUCell does not support reset_after parameter set to true.");this.units=e.units,jt(this.units,"units"),this.activation=Bo(e.activation===void 0?this.DEFAULT_ACTIVATION:e.activation),this.recurrentActivation=Bo(e.recurrentActivation===void 0?this.DEFAULT_RECURRENT_ACTIVATION:e.recurrentActivation),this.useBias=e.useBias==null?!0:e.useBias,this.kernelInitializer=ht(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=ht(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=ht(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=dt(e.kernelRegularizer),this.recurrentRegularizer=dt(e.recurrentRegularizer),this.biasRegularizer=dt(e.biasRegularizer),this.kernelConstraint=Mt(e.kernelConstraint),this.recurrentConstraint=Mt(e.recurrentConstraint),this.biasConstraint=Mt(e.biasConstraint),this.dropout=ol([1,zo([0,e.dropout==null?0:e.dropout])]),this.recurrentDropout=ol([1,zo([0,e.recurrentDropout==null?0:e.recurrentDropout])]),this.dropoutFunc=e.dropoutFunc,this.implementation=e.implementation,this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){e=He(e);const n=e[e.length-1];this.kernel=this.addWeight("kernel",[n,this.units*3],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units*3],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[this.units*3],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,n){return V(()=>{if(e=e,e.length!==2)throw new L(`GRUCell expects 2 input Tensors (inputs, h, c), got ${e.length}.`);const s=n.training==null?!1:n.training;let r=e[1];e=e[0],0<this.dropout&&this.dropout<1&&this.dropoutMask==null&&(this.dropoutMask=Vo({ones:()=>hs(e),rate:this.dropout,training:s,count:3,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&this.recurrentDropoutMask==null&&(this.recurrentDropoutMask=Vo({ones:()=>hs(r),rate:this.recurrentDropout,training:s,count:3,dropoutFunc:this.dropoutFunc}));const o=this.dropoutMask,a=this.recurrentDropoutMask;let i,l,u;0<this.dropout&&this.dropout<1&&(e=O(e,o[0]));let c=Er(e,this.kernel.read());this.useBias&&(c=hr(c,this.bias.read())),0<this.recurrentDropout&&this.recurrentDropout<1&&(r=O(r,a[0]));const h=this.recurrentKernel.read(),[d,p]=qn(h,[2*this.units,this.units],h.rank-1),f=Er(r,d),[m,y,g]=qn(c,3,c.rank-1),[x,w]=qn(f,2,f.rank-1);i=this.recurrentActivation.apply(te(m,x)),l=this.recurrentActivation.apply(te(y,w));const b=Er(O(l,r),p);u=this.activation.apply(te(g,b));const v=te(O(i,r),O(te(1,it(i)),u));return[v,v]})}getConfig(){const e=super.getConfig(),n={units:this.units,activation:Mo(this.activation),recurrentActivation:Mo(this.recurrentActivation),useBias:this.useBias,kernelInitializer:mt(this.kernelInitializer),recurrentInitializer:mt(this.recurrentInitializer),biasInitializer:mt(this.biasInitializer),kernelRegularizer:et(this.kernelRegularizer),recurrentRegularizer:et(this.recurrentRegularizer),biasRegularizer:et(this.biasRegularizer),activityRegularizer:et(this.activityRegularizer),kernelConstraint:zt(this.kernelConstraint),recurrentConstraint:zt(this.recurrentConstraint),biasConstraint:zt(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation,resetAfter:!1};return Object.assign(Object.assign({},e),n)}}dw.className="GRUCell";ne(dw);class uE extends ta{constructor(e){e.implementation===0&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),e.cell=new dw(e),super(e)}call(e,n){return V(()=>{this.cell.dropoutMask!=null&&(Oe(this.cell.dropoutMask),this.cell.dropoutMask=null),this.cell.recurrentDropoutMask!=null&&(Oe(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const s=n==null?null:n.mask,r=n==null?null:n.training,o=n==null?null:n.initialState;return super.call(e,{mask:s,training:r,initialState:o})})}static fromConfig(e,n){return n.implmentation===0&&(n.implementation=1),new e(n)}}uE.className="GRU";ne(uE);class vm extends wm{constructor(e){super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=e.units,jt(this.units,"units"),this.activation=Bo(e.activation===void 0?this.DEFAULT_ACTIVATION:e.activation),this.recurrentActivation=Bo(e.recurrentActivation===void 0?this.DEFAULT_RECURRENT_ACTIVATION:e.recurrentActivation),this.useBias=e.useBias==null?!0:e.useBias,this.kernelInitializer=ht(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=ht(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=ht(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.unitForgetBias=e.unitForgetBias,this.kernelRegularizer=dt(e.kernelRegularizer),this.recurrentRegularizer=dt(e.recurrentRegularizer),this.biasRegularizer=dt(e.biasRegularizer),this.kernelConstraint=Mt(e.kernelConstraint),this.recurrentConstraint=Mt(e.recurrentConstraint),this.biasConstraint=Mt(e.biasConstraint),this.dropout=ol([1,zo([0,e.dropout==null?0:e.dropout])]),this.recurrentDropout=ol([1,zo([0,e.recurrentDropout==null?0:e.recurrentDropout])]),this.dropoutFunc=e.dropoutFunc,this.implementation=e.implementation,this.stateSize=[this.units,this.units],this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){var n;e=He(e);const s=e[e.length-1];this.kernel=this.addWeight("kernel",[s,this.units*4],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units*4],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint);let r;if(this.useBias){if(this.unitForgetBias){const o=this.biasInitializer,a=this.units;r=new(n=class extends Us{apply(l,u){const c=o.apply([a]),h=new Zb().apply([a]),d=o.apply([a*2]);return $S($S(c,h),d)}},n.className="CustomInit",n)}else r=this.biasInitializer;this.bias=this.addWeight("bias",[this.units*4],null,r,this.biasRegularizer,!0,this.biasConstraint)}else this.bias=null;this.built=!0}call(e,n){return V(()=>{const s=n.training==null?!1:n.training;if(e=e,e.length!==3)throw new L(`LSTMCell expects 3 input Tensors (inputs, h, c), got ${e.length}.`);let r=e[1];const o=e[2];e=e[0],0<this.dropout&&this.dropout<1&&this.dropoutMask==null&&(this.dropoutMask=Vo({ones:()=>hs(e),rate:this.dropout,training:s,count:4,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&this.recurrentDropoutMask==null&&(this.recurrentDropoutMask=Vo({ones:()=>hs(r),rate:this.recurrentDropout,training:s,count:4,dropoutFunc:this.dropoutFunc}));const a=this.dropoutMask,i=this.recurrentDropoutMask;let l,u,c,h;0<this.dropout&&this.dropout<1&&(e=O(e,a[0]));let d=Er(e,this.kernel.read());0<this.recurrentDropout&&this.recurrentDropout<1&&(r=O(r,i[0])),d=te(d,Er(r,this.recurrentKernel.read())),this.useBias&&(d=hr(d,this.bias.read()));const[p,f,m,y]=qn(d,4,d.rank-1);l=this.recurrentActivation.apply(p),u=this.recurrentActivation.apply(f),c=te(O(u,o),O(l,this.activation.apply(m))),h=this.recurrentActivation.apply(y);const g=O(h,this.activation.apply(c));return[g,g,c]})}getConfig(){const e=super.getConfig(),n={units:this.units,activation:Mo(this.activation),recurrentActivation:Mo(this.recurrentActivation),useBias:this.useBias,kernelInitializer:mt(this.kernelInitializer),recurrentInitializer:mt(this.recurrentInitializer),biasInitializer:mt(this.biasInitializer),unitForgetBias:this.unitForgetBias,kernelRegularizer:et(this.kernelRegularizer),recurrentRegularizer:et(this.recurrentRegularizer),biasRegularizer:et(this.biasRegularizer),activityRegularizer:et(this.activityRegularizer),kernelConstraint:zt(this.kernelConstraint),recurrentConstraint:zt(this.recurrentConstraint),biasConstraint:zt(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation};return Object.assign(Object.assign({},e),n)}}vm.className="LSTMCell";ne(vm);class cE extends ta{constructor(e){e.implementation===0&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),e.cell=new vm(e),super(e)}call(e,n){return V(()=>{this.cell.dropoutMask!=null&&(Oe(this.cell.dropoutMask),this.cell.dropoutMask=null),this.cell.recurrentDropoutMask!=null&&(Oe(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const s=n==null?null:n.mask,r=n==null?null:n.training,o=n==null?null:n.initialState;return super.call(e,{mask:s,training:r,initialState:o})})}static fromConfig(e,n){return n.implmentation===0&&(n.implementation=1),new e(n)}}cE.className="LSTM";ne(cE);class pw extends wm{constructor(e){super(e),this.cells=e.cells}get stateSize(){const e=[];for(const n of this.cells.slice().reverse())Array.isArray(n.stateSize)?e.push(...n.stateSize):e.push(n.stateSize);return e}call(e,n){return V(()=>{e=e;let s=e.slice(1);const r=[];for(const i of this.cells.slice().reverse())Array.isArray(i.stateSize)?r.push(s.splice(0,i.stateSize.length)):r.push(s.splice(0,1));r.reverse();const o=[];let a;for(let i=0;i<this.cells.length;++i){const l=this.cells[i];s=r[i],i===0?a=[e[0]].concat(s):a=[a[0]].concat(s),a=l.call(a,n),o.push(a.slice(1))}s=[];for(const i of o.slice().reverse())s.push(...i);return[a[0]].concat(s)})}build(e){e0(e)&&(e=e[0]),e=e;let n;this.cells.forEach((s,r)=>{va(`RNNCell_${r}`,()=>{s.build(e),Array.isArray(s.stateSize)?n=s.stateSize[0]:n=s.stateSize,e=[e[0],n]})}),this.built=!0}getConfig(){const e=super.getConfig(),n=o=>({className:o.getClassName(),config:o.getConfig()}),r={cells:this.cells.map(n)};return Object.assign(Object.assign({},e),r)}static fromConfig(e,n,s={}){const r=[];for(const o of n.cells)r.push(jr(o,s));return new e({cells:r})}get trainableWeights(){if(!this.trainable)return[];const e=[];for(const n of this.cells)e.push(...n.trainableWeights);return e}get nonTrainableWeights(){const e=[];for(const n of this.cells)e.push(...n.nonTrainableWeights);if(!this.trainable){const n=[];for(const s of this.cells)n.push(...s.trainableWeights);return n.concat(e)}return e}getWeights(){const e=[];for(const n of this.cells)e.push(...n.weights);return t0(e)}setWeights(e){const n=[];for(const s of this.cells){const r=s.weights.length,o=e.splice(r);for(let a=0;a<s.weights.length;++a)n.push([s.weights[a],o[a]])}ow(n)}}pw.className="StackedRNNCells";ne(pw);function Vo(t){const{ones:e,rate:n,training:s=!1,count:r=1,dropoutFunc:o}=t,a=()=>o!=null?o(e(),n):s2(e(),n),i=()=>ih(a,e,s);return!r||r<=1?Ht(i().clone()):Array(r).fill(void 0).map(i).map(u=>Ht(u.clone()))}/**
 * @license
 * Copyright 2020 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */var oH=globalThis&&globalThis.__rest||function(t,e){var n={};for(var s in t)Object.prototype.hasOwnProperty.call(t,s)&&e.indexOf(s)<0&&(n[s]=t[s]);if(t!=null&&typeof Object.getOwnPropertySymbols=="function")for(var r=0,s=Object.getOwnPropertySymbols(t);r<s.length;r++)e.indexOf(s[r])<0&&Object.prototype.propertyIsEnumerable.call(t,s[r])&&(n[s[r]]=t[s[r]]);return n};class hE extends ta{constructor(e){if(e.unroll)throw new De("Unrolling is not possible with convolutional RNNs.");if(Array.isArray(e.cell))throw new De("It is not possible at the moment to stack convolutional cells.");super(e),this.inputSpec=[new Lt({ndim:5})]}call(e,n){return V(()=>{if(this.cell.dropoutMask!=null&&(Oe(this.cell.dropoutMask),this.cell.dropoutMask=null),this.cell.recurrentDropoutMask!=null&&(Oe(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null),n&&n.constants)throw new L("ConvRNN2D cell does not support constants");const s=n==null?null:n.mask,r=n==null?null:n.training,o=n==null?null:n.initialState;return super.call(e,{mask:s,training:r,initialState:o})})}computeOutputShape(e){let n=this.computeSingleOutputShape(e);return this.returnSequences||(n=[n[0],...n.slice(2)]),this.returnState&&(n=[n,...Array(2).fill([e[0],...n.slice(-3)])]),n}getInitialState(e){return V(()=>{const{stateSize:n}=this.cell,s=e.shape,r=this.computeSingleOutputShape(s),o=[r[0],...r.slice(2)],a=Ot(o);return Array.isArray(n)?Array(n.length).fill(a):[a]})}resetStates(e,n=!1){V(()=>{if(!this.stateful)throw new gr("Cannot call resetStates() on an RNN Layer that is not stateful.");const s=this.inputSpec[0].shape,r=this.computeSingleOutputShape(s),o=[r[0],...r.slice(2)];if(s[0]==null)throw new L("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(this.getStates()==null)Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(()=>Ot(o)):this.states_=[Ot(o)];else if(e==null)Oe(this.states_),this.keptStates!=null&&(Oe(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(()=>Ot(o)):this.states_[0]=Ot(o);else{if(Array.isArray(e)||(e=[e]),e.length!==this.states_.length)throw new L(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${e.length} state value(s). Input received: ${e}`);n?this.keptStates.push(this.states_.slice()):Oe(this.states_);for(let i=0;i<this.states_.length;++i){const l=e[i],u=o;if(!Me(l.shape,u))throw new L(`State ${i} is incompatible with layer ${this.name}: expected shape=${u}, received shape=${l.shape}`);this.states_[i]=l}}this.states_=this.states_.map(i=>Ht(i.clone()))})}computeSingleOutputShape(e){const{dataFormat:n,filters:s,kernelSize:r,padding:o,strides:a,dilationRate:i}=this.cell,l=n==="channelsFirst",u=e[l?3:2],c=e[l?4:3],h=sr(u,r[0],o,a[0],i[0]),d=sr(c,r[1],o,a[1],i[1]);return[...e.slice(0,2),...l?[s,h,d]:[h,d,s]]}}hE.className="ConvRNN2D";class fw extends vm{constructor(e){const{filters:n,kernelSize:s,strides:r,padding:o,dataFormat:a,dilationRate:i}=e;super(Object.assign(Object.assign({},e),{units:n})),this.filters=n,jt(this.filters,"filters"),this.kernelSize=Vi(s,2,"kernelSize"),this.kernelSize.forEach(l=>jt(l,"kernelSize")),this.strides=Vi(r||1,2,"strides"),this.strides.forEach(l=>jt(l,"strides")),this.padding=o||"valid",gs(this.padding),this.dataFormat=a||"channelsLast",Nt(this.dataFormat),this.dilationRate=Vi(i||1,2,"dilationRate"),this.dilationRate.forEach(l=>jt(l,"dilationRate"))}build(e){var n;e=He(e);const s=this.dataFormat==="channelsFirst"?1:e.length-1;if(e[s]==null)throw new L(`The channel dimension of the input should be defined. Found ${e[s]}`);const r=e[s],o=4,a=this.kernelSize.concat([r,this.filters*o]);this.kernel=this.addWeight("kernel",a,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint);const i=this.kernelSize.concat([this.filters,this.filters*o]);if(this.recurrentKernel=this.addWeight("recurrent_kernel",i,null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias){let l;if(this.unitForgetBias){const u=this.biasInitializer,c=this.filters;l=new(n=class extends Us{apply(d,p){const f=u.apply([c]),m=os([c]),y=u.apply([c*2]);return Qb([f,m,y])}},n.className="CustomInit",n)}else l=this.biasInitializer;this.bias=this.addWeight("bias",[this.filters*o],null,l,this.biasRegularizer,!0,this.biasConstraint)}this.built=!0}call(e,n){return V(()=>{if(e.length!==3)throw new L(`ConvLSTM2DCell expects 3 input Tensors (inputs, h, c), got ${e.length}.`);const s=n.training||!1,r=e[0],o=e[1],a=e[2],i=4;0<this.dropout&&this.dropout<1&&this.dropoutMask==null&&(this.dropoutMask=Vo({ones:()=>hs(r),rate:this.dropout,training:s,count:i,dropoutFunc:this.dropoutFunc}));const l=this.dropoutMask,u=(H,X,Q)=>!X||!X[Q]?H:O(X[Q],H);let c=u(r,l,0),h=u(r,l,1),d=u(r,l,2),p=u(r,l,3);0<this.recurrentDropout&&this.recurrentDropout<1&&this.recurrentDropoutMask==null&&(this.recurrentDropoutMask=Vo({ones:()=>hs(o),rate:this.recurrentDropout,training:s,count:i,dropoutFunc:this.dropoutFunc}));const f=this.recurrentDropoutMask;let m=u(o,f,0),y=u(o,f,1),g=u(o,f,2),x=u(o,f,3);const w=3,[b,v,k,$]=qn(this.kernel.read(),i,w),[N,E,T,R]=this.useBias?qn(this.bias.read(),i):[null,null,null,null];c=this.inputConv(c,b,N,this.padding),h=this.inputConv(h,v,E,this.padding),d=this.inputConv(d,k,T,this.padding),p=this.inputConv(p,$,R,this.padding);const[z,P,W,M]=qn(this.recurrentKernel.read(),i,w);m=this.recurrentConv(m,z),y=this.recurrentConv(y,P),g=this.recurrentConv(g,W),x=this.recurrentConv(x,M);const U=this.recurrentActivation.apply(te(c,m)),j=this.recurrentActivation.apply(te(h,y)),_=te(O(j,a),O(U,this.activation.apply(te(d,g)))),B=O(this.recurrentActivation.apply(te(p,x)),this.activation.apply(_));return[B,B,_]})}getConfig(){const e=super.getConfig(),n=oH(e,["units"]),s={filters:this.filters,kernelSize:this.kernelSize,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,strides:this.strides};return Object.assign(Object.assign({},n),s)}inputConv(e,n,s,r){const o=Lo(e,n,this.strides,r||"valid",this.dataFormat==="channelsFirst"?"NCHW":"NHWC",this.dilationRate);return s?hr(o,s,this.dataFormat):o}recurrentConv(e,n){return Lo(e,n,1,"same",this.dataFormat==="channelsFirst"?"NCHW":"NHWC")}}fw.className="ConvLSTM2DCell";ne(fw);class dE extends hE{constructor(e){const n=new fw(e);super(Object.assign(Object.assign({},e),{cell:n}))}static fromConfig(e,n){return new e(n)}}dE.className="ConvLSTM2D";ne(dE);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class mw extends Le{constructor(e){super(e),this.rate=Math.max(Math.min(e.rate,1),0),this.noiseShape=e.noiseShape,this.seed=e.seed,this.supportsMasking=!0}getNoiseShape(e){if(this.noiseShape==null)return this.noiseShape;const n=e.shape,s=[];for(let r=0;r<this.noiseShape.length;++r)s.push(this.noiseShape[r]==null?n[r]:this.noiseShape[r]);return s}call(e,n){return V(()=>{this.invokeCallHook(e,n);const s=Ce(e);if(0<this.rate&&this.rate<1){const r=n.training==null?!1:n.training,o=this.getNoiseShape(s);return ih(()=>s2(s,this.rate,o,this.seed),()=>s,r)}return e})}getConfig(){const e={rate:this.rate,noiseShape:this.noiseShape,seed:this.seed},n=super.getConfig();return Object.assign(e,n),e}dispose(){return super.dispose()}}mw.className="Dropout";ne(mw);class pE extends mw{constructor(e){super(e),this.inputSpec=[{ndim:3}]}getNoiseShape(e){const n=e.shape;return[n[0],1,n[2]]}}pE.className="SpatialDropout1D";ne(pE);class fE extends Le{constructor(e){if(super(e),this.activation=null,this.useBias=!0,this.kernel=null,this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",e.batchInputShape==null&&e.inputShape==null&&e.inputDim!=null){let n=null;e.batchSize!=null&&(n=e.batchSize),this.batchInputShape=[n,e.inputDim]}this.units=e.units,jt(this.units,"units"),this.activation=Bo(e.activation),e.useBias!=null&&(this.useBias=e.useBias),this.kernelInitializer=ht(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.biasInitializer=ht(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelConstraint=Mt(e.kernelConstraint),this.biasConstraint=Mt(e.biasConstraint),this.kernelRegularizer=dt(e.kernelRegularizer),this.biasRegularizer=dt(e.biasRegularizer),this.activityRegularizer=dt(e.activityRegularizer),this.supportsMasking=!0,this.inputSpec=[{minNDim:2}]}build(e){e=He(e);const n=e[e.length-1];this.kernel==null&&(this.kernel=this.addWeight("kernel",[n,this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint))),this.inputSpec=[{minNDim:2,axes:{[-1]:n}}],this.built=!0}computeOutputShape(e){e=He(e);const n=e.slice();return n[n.length-1]=this.units,n}call(e,n){return V(()=>{this.invokeCallHook(e,n);const s=Ce(e),r=YT(this.activation.getClassName());let o;return r!=null?o=Er(s,this.kernel.read(),r,this.bias?this.bias.read():null):(o=Er(s,this.kernel.read()),this.bias!=null&&(o=hr(o,this.bias.read())),this.activation!=null&&(o=this.activation.apply(o))),o})}getConfig(){const e={units:this.units,activation:Mo(this.activation),useBias:this.useBias,kernelInitializer:mt(this.kernelInitializer),biasInitializer:mt(this.biasInitializer),kernelRegularizer:et(this.kernelRegularizer),biasRegularizer:et(this.biasRegularizer),activityRegularizer:et(this.activityRegularizer),kernelConstraint:zt(this.kernelConstraint),biasConstraint:zt(this.biasConstraint)},n=super.getConfig();return Object.assign(e,n),e}}fE.className="Dense";ne(fE);class mE extends Le{constructor(e){e=e||{},super(e),this.inputSpec=[{minNDim:3}],this.dataFormat=e.dataFormat}computeOutputShape(e){e=He(e);for(const n of e.slice(1))if(n==null)throw new L(`The shape of the input to "Flatten" is not fully defined (got ${e.slice(1)}). Make sure to pass a complete "input_shape" or "batch_input_shape" argument to the first layer in your model.`);return[e[0],Ro(e,1)]}call(e,n){return V(()=>{this.invokeCallHook(e,n);let s=Ce(e);if(this.dataFormat==="channelsFirst"&&s.rank>1){const r=[0];for(let o=2;o<s.rank;++o)r.push(o);r.push(1),s=We(s,r)}return WU(s)})}getConfig(){const e={};this.dataFormat!=null&&(e.dataFormat=this.dataFormat);const n=super.getConfig();return Object.assign(e,n),e}}mE.className="Flatten";ne(mE);class gE extends Le{constructor(e){super(e),this.supportsMasking=!0,this.activation=Bo(e.activation)}call(e,n){return V(()=>{this.invokeCallHook(e,n);const s=Ce(e);return this.activation.apply(s)})}getConfig(){const e={activation:Mo(this.activation)},n=super.getConfig();return Object.assign(e,n),e}}gE.className="Activation";ne(gE);class yE extends Le{constructor(e){super(e),this.n=e.n,this.inputSpec=[{ndim:2}]}computeOutputShape(e){return[e[0],this.n,e[1]]}call(e,n){return V(()=>(e=Ce(e),BU(e,this.n)))}getConfig(){const e={n:this.n},n=super.getConfig();return Object.assign(e,n),e}}yE.className="RepeatVector";ne(yE);class xE extends Le{constructor(e){super(e),this.targetShape=e.targetShape;for(let n=0;n<this.targetShape.length;++n)this.isUnknown(this.targetShape[n])&&(this.targetShape[n]=null)}isUnknown(e){return e<0||e==null}fixUnknownDimension(e,n){const s="Total size of new array must be unchanged.",r=n.slice();let o=1,a=null;for(let l=0;l<r.length;++l){const u=r[l];if(this.isUnknown(u))if(a===null)a=l;else throw new L("Can only specifiy one unknown dimension.");else o*=u}const i=Ro(e);if(a!==null){if(o===0||i%o!==0)throw new L(s);r[a]=i/o}else if(i!==o)throw new L(s);return r}computeOutputShape(e){let n=!1;for(let s=0;s<e.length;++s)if(this.isUnknown(e[s])){n=!0;break}return n?e.slice(0,1).concat(this.targetShape):e.slice(0,1).concat(this.fixUnknownDimension(e.slice(1),this.targetShape))}call(e,n){return V(()=>{this.invokeCallHook(e,n);const s=Ce(e),r=s.shape,o=r.slice(0,1).concat(this.fixUnknownDimension(r.slice(1),this.targetShape));return F(s,o)})}getConfig(){const e={targetShape:this.targetShape},n=super.getConfig();return Object.assign(e,n),e}}xE.className="Reshape";ne(xE);class bE extends Le{constructor(e){if(super(e),e.dims==null)throw new Error("Required configuration field `dims` is missing during Permute constructor call.");if(!Array.isArray(e.dims))throw new Error(`Permute constructor requires \`dims\` to be an Array, but received ${e.dims} instead.`);const n=ar(1,e.dims.length+1);if(!Me(e.dims.slice().sort(),n))throw new Error("Invalid permutation `dims`: "+JSON.stringify(e.dims)+" `dims` must contain consecutive integers starting from 1.");this.dims=e.dims,this.dimsIncludingBatch=[0].concat(this.dims),this.inputSpec=[new Lt({ndim:this.dims.length+1})]}computeOutputShape(e){e=He(e);const n=e.slice();return this.dims.forEach((s,r)=>{n[r+1]=e[s]}),n}call(e,n){return We(Ce(e),this.dimsIncludingBatch)}getConfig(){const e={dims:this.dims},n=super.getConfig();return Object.assign(e,n),e}}bE.className="Permute";ne(bE);class wE extends Le{constructor(e){super(e??{}),this.supportsMasking=!0,e!=null?this.maskValue=e.maskValue==null?0:e.maskValue:this.maskValue=0}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),n={maskValue:this.maskValue};return Object.assign(n,e),n}computeMask(e,n){const s=Ce(e),r=-1;return Qd(sl(s,this.maskValue),r)}call(e,n){return V(()=>{this.invokeCallHook(e,n);const s=Ce(e),r=-1,o=!0,a=Qd(sl(s,this.maskValue),r,o);return O(s,he(a,s.dtype))})}}wE.className="Masking";ne(wE);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class vE extends Le{constructor(e){if(super(e),this.embeddings=null,this.DEFAULT_EMBEDDINGS_INITIALIZER="randomUniform",e.batchInputShape==null&&e.inputShape==null){let n=null;e.batchSize!=null&&(n=e.batchSize),e.inputLength==null?this.batchInputShape=[n,null]:this.batchInputShape=[n].concat(st(e.inputLength))}this.inputDim=e.inputDim,jt(this.inputDim,"inputDim"),this.outputDim=e.outputDim,jt(this.outputDim,"outputDim"),this.embeddingsInitializer=ht(e.embeddingsInitializer||this.DEFAULT_EMBEDDINGS_INITIALIZER),this.embeddingsRegularizer=dt(e.embeddingsRegularizer),this.activityRegularizer=dt(e.activityRegularizer),this.embeddingsConstraint=Mt(e.embeddingsConstraint),this.maskZero=e.maskZero,this.supportsMasking=e.maskZero,this.inputLength=e.inputLength}build(e){this.embeddings=this.addWeight("embeddings",[this.inputDim,this.outputDim],this.dtype,this.embeddingsInitializer,this.embeddingsRegularizer,!0,this.embeddingsConstraint),this.built=!0}warnOnIncompatibleInputShape(e){}computeMask(e,n){return V(()=>this.maskZero?(e=Ce(e),sl(e,Ue(e))):null)}computeOutputShape(e){if(e=He(e),this.inputLength==null)return[...e,this.outputDim];const n=st(this.inputLength);if(n.length!==e.length-1)throw new L(`"inputLength" is ${this.inputLength}, but received input shape has shape ${e}`);{let s=0;for(let r=0;r<n.length;++r){const o=n[r],a=e[r+1];if(o!=null&&a!=null&&o!==a)throw new L(`"inputLength" is ${this.inputLength}, but received input shape has shape ${e}`);o==null&&(n[s]=a),s++}}return[e[0],...n,this.outputDim]}call(e,n){return V(()=>{this.invokeCallHook(e,n);let s=Ce(e);s.dtype!=="int32"&&(s=Tr(s,"int32"));const r=n2(this.embeddings.read(),F(s,[s.size]));return F(r,He(this.computeOutputShape(s.shape)))})}getConfig(){const e={inputDim:this.inputDim,outputDim:this.outputDim,embeddingsInitializer:mt(this.embeddingsInitializer),embeddingsRegularizer:et(this.embeddingsRegularizer),activityRegularizer:et(this.activityRegularizer),embeddingsConstraint:zt(this.embeddingsConstraint),maskZero:this.maskZero,inputLength:this.inputLength},n=super.getConfig();return Object.assign(e,n),e}}vE.className="Embedding";ne(vE);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class Ja extends Le{constructor(e){super(e||{}),this.supportsMasking=!0}mergeFunction(e){throw new De}computeElementwiseOpOutputShape(e,n){if(e==null||n==null)return null;if(e.length<n.length)return this.computeElementwiseOpOutputShape(n,e);if(n.length===0)return e;const s=e.slice(0,e.length-n.length);for(let r=0;r<n.length;++r){const o=e[e.length-n.length+r],a=n[r];if(o==null||a==null||o<0||a<0)s.push(null);else if(o===1)s.push(a);else if(a===1)s.push(o);else{if(o!==a)throw new L("Operands could not be broadcast together with shapes "+JSON.stringify(e)+" "+JSON.stringify(n));s.push(o)}}return s}build(e){if(Array.isArray(e)&&!Array.isArray(e[0])&&(e=[He(e)]),e=e,e.length<2)throw new L(`A merge layer should be called on an Array of at least 2 inputs. Got ${e.length} input(s).`);let n=[];for(const o of e)o!=null&&o[0]!==null&&n.push(o[0]);if(n=Eo(n),n.length>1)throw new L(`Can not merge tensors with different batch sizes. Got tensors with shapes: ${JSON.stringify(e)}.`);let s=e[0]==null?null:e[0].slice(1);for(let o=1;o<e.length;++o){const a=e[o]==null?null:e[o].slice(1);s=this.computeElementwiseOpOutputShape(s,a)}const r=e.map(o=>o.length);e.indexOf(null)===-1&&Eo(r).length===1?this.reshapeRequired=!1:this.reshapeRequired=!0}call(e,n){return V(()=>{if(e=e,this.reshapeRequired){const s=[],r=e.map(o=>o.rank);if(r.indexOf(null)===-1){const o=zo(r);for(let a of e){const i=a.rank;for(let l=0;l<o-i;++l)a=oh(a,1);s.push(a)}return this.mergeFunction(s)}else{let o=!1;for(const l of e){const u=l.rank;if(u==null){const c=l.shape,h=c[0],d=c.slice(1).concat([h]);let p=F(l,[h].concat(Ro(c.slice(1))));p=We(p,[1,0]),p=F(p,d),s.push(p),o=!0}else if(u>1){const c=ar(1,u).concat([0]);s.push(We(l,c)),o=!0}else s.push(l)}let a=this.mergeFunction(s);const i=a.rank;if(o){if(i==null){const l=a.shape,u=l.length,c=l[u-1],h=[c].concat(l.slice(0,l.length-1));a=F(We(F(a,[-1,c]),[1,0]),h)}else if(i>1){const l=[i-1].concat(ar(0,i-1));a=We(a,l)}}return a}}else return this.mergeFunction(e)})}computeOutputShape(e){e=e;let n;e[0]==null?n=null:n=e[0].slice(1);for(let r=1;r<e.length;++r){const o=e[r]==null?null:e[r].slice(1);n=this.computeElementwiseOpOutputShape(n,o)}let s=[];for(const r of e)r!=null&&r[0]!==null&&s.push(r[0]);return s=Eo(s),s.length===1?n=s.concat(n):n=[null].concat(n),n}computeMask(e,n){return V(()=>{if(n==null)return null;if(!Array.isArray(n))throw new L("`mask` should be an Array");if(!Array.isArray(e))throw new L("`inputs` should be an Array");if(n.length!==e.length)throw new L(`The Array 'inputs' and 'mask' are expected to have the same length, but have different lengths (${e.length} vs ${n.length})`);if(n.every(r=>r==null))return null;n=n.map(r=>r==null?r:wn(r,0));let s=n[0];for(let r=1;r<n.length-1;++r)s=Rr(s,n[r]);return s})}}class SE extends Ja{constructor(e){super(e)}mergeFunction(e){return V(()=>{let n=e[0].clone();for(let s=1;s<e.length;++s)n=te(n,e[s]);return n})}}SE.className="Add";ne(SE);class kE extends Ja{constructor(e){super(e)}mergeFunction(e){return V(()=>{let n=e[0].clone();for(let s=1;s<e.length;++s)n=O(n,e[s]);return n})}}kE.className="Multiply";ne(kE);class $E extends Ja{constructor(e){super(e)}mergeFunction(e){return V(()=>{let n=e[0].clone();for(let s=1;s<e.length;++s)n=te(n,e[s]);return O(1/e.length,n)})}}$E.className="Average";ne($E);class CE extends Ja{constructor(e){super(e)}mergeFunction(e){return V(()=>{let n=e[0];for(let s=1;s<e.length;++s)n=ro(n,e[s]);return n})}}CE.className="Maximum";ne(CE);class NE extends Ja{constructor(e){super(e)}mergeFunction(e){return V(()=>{let n=e[0];for(let s=1;s<e.length;++s)n=Oa(n,e[s]);return n})}}NE.className="Minimum";ne(NE);class IE extends Ja{constructor(e){super(e),this.DEFAULT_AXIS=-1,e==null&&(e={}),this.axis=e.axis==null?this.DEFAULT_AXIS:e.axis,this.supportsMasking=!0,this.reshapeRequired=!1}build(e){if(!(Array.isArray(e)&&Array.isArray(e[0]))||e.length===1)throw new L("A `Concatenate` layer should be called on a list of at least 2 inputs");e=e;let n=!0;for(const r of e)if(r!=null){n=!1;break}if(n)return;const s=[];for(let r=0;r<e.length;++r){const o=e[r].slice();o.splice(this.axis,1);let a=!1;for(const i of s)if(Me(i,o)){a=!0;break}a||s.push(o)}if(s.length>1)throw new L("A `Concatenate` layer requires inputs with matching shapes except for the concat axis. Got input shapes: "+JSON.stringify(e))}mergeFunction(e){return V(()=>Qb(e,this.axis))}computeOutputShape(e){if(!(Array.isArray(e)&&Array.isArray(e[0])))throw new L("A `Concatenate` layer should be called on a list of inputs.");const n=e,s=n[0].slice(),r=this.axis<0?s.length+this.axis:this.axis;for(const o of n.slice(1)){if(s[r]==null||o[r]==null){s[r]=null;break}s[r]+=o[r]}return s}computeMask(e,n){if(n==null)return null;if(!Array.isArray(n))throw new L("`mask` should be an array for Concatenate");if(!Array.isArray(e))throw new L("`inputs` should be an array for Concatenate");if(n.length!==e.length)throw new L(`Mismatch in the length of mask (${n.length}) and the legnth of inputs (${e.length})`);return V(()=>{let s=!0;if(n.forEach(a=>{if(a!=null){s=!1;return}}),s)return null;const r=[];for(let a=0;a<e.length;++a)n[a]==null?r.push(he(hs(e[a]),"bool")):n[a].rank<e[a].rank?r.push(wn(n[a],-1)):r.push(n[a]);const o=Rt(r,this.axis);return Ax(o,-1,!1)})}getConfig(){const e={axis:this.axis},n=super.getConfig();return Object.assign(e,n),e}}IE.className="Concatenate";ne(IE);function Gl(t,e){for(;t<0;)t+=e;return t}function aH(t,e,n){if(t.shape.length>3||e.shape.length>3)throw new De("batchDot is not implemented for tensors of 4D or higher rank yet");if(C(t.shape.length>=2,()=>`batchDot requires the rank of x to be >= 2, but got ${t.shape.length}`),C(t.shape.length>=2,()=>`batchDot requires the rank of y to be >= 2, but got ${e.shape.length}`),typeof n=="number"&&(n=[n,n]),t.dtype==="complex64"||e.dtype==="complex64")throw new De("batchDot is not implemented for complex64-type Tensors yet.");const s=t.shape.length,r=e.shape.length;n==null&&(n=[s-1,r-2]);const o=n;return V(()=>{let a;if(s>r){a=s-r;const l=[];for(let u=0;u<a;++u)l.push(1);e=F(e,e.shape.concat(l))}else if(r>s){a=r-s;const l=[];for(let u=0;u<a;++u)l.push(1);t=F(t,t.shape.concat(l))}else a=0;let i;if(t.shape.length===2&&e.shape.length===2)o[0]===o[1]?i=ye(O(t,e),o[0]):i=ye(O(We(t,[1,0]),e),o[1]);else{const l=o[0]!==t.shape.length-1,u=o[1]===e.shape.length-1;i=Pe(t,e,l,u)}if(a>0){let l;s>r?l=s+r-3:l=s-1;const u=[];for(let c=l;c<l+a;++c)u.push(c);i=Ya(i,u)}return i.shape.length===1&&(i=wn(i,1)),i})}class TE extends Ja{constructor(e){super(e),this.axes=e.axes,this.normalize=e.normalize==null?!1:e.normalize,this.supportsMasking=!0,this.reshapeRequired=!1}build(e){C(Array.isArray(e)&&e.length===2&&Array.isArray(e[0])&&Array.isArray(e[1]),()=>"A `Dot` layer should be called on a list of exactly 2 inputs.");const n=e[0],s=e[1];if(n.length>3||s.length>3)throw new De("Dot layer does not support tensors of 4D or higher rank yet.");const r=this.interpretAxes(n,s);if(n[r[0]]!==s[r[1]])throw new L(`Dimension incompatibility: ${n[r[0]]} !== ${s[r[1]]}`)}mergeFunction(e){if(e.length!==2)throw new L(`A \`Dot\` layer must be called on exactly 2 inputs, but received ${e.length} input(s).`);let n=e[0],s=e[1],r;return Array.isArray(this.axes)?r=this.axes.map((o,a)=>Gl(o,e[a].shape.length)):r=[Gl(this.axes,n.shape.length),Gl(this.axes,s.shape.length)],this.normalize&&(n=sp(n,r[0]),s=sp(s,r[1])),aH(n,s,r)}interpretAxes(e,n){let s;return Array.isArray(this.axes)?s=this.axes:s=[Gl(this.axes,e.length),Gl(this.axes,n.length)],s}computeOutputShape(e){C(Array.isArray(e)&&e.length===2&&Array.isArray(e[0])&&Array.isArray(e[1]),()=>"A `Dot` layer should be called on a list of exactly 2 inputs.");const n=e[0].slice(),s=e[1].slice();if(n.length>3||s.length>3)throw new De("Dot layer does not support tensors of 4D or higher rank yet.");const r=this.interpretAxes(n,s);n.splice(r[0],1),s.splice(r[1],1),s.splice(0,1);const o=n.concat(s);return o.length===1&&o.push(1),o}computeMask(e,n){return null}getConfig(){const e={axes:this.axes,normalize:this.normalize},n=super.getConfig();return Object.assign(e,n),e}}TE.className="Dot";ne(TE);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class EE extends Le{constructor(e){super(e),this.supportsMasking=!0,this.stddev=e.stddev}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),n={stddev:this.stddev};return Object.assign(n,e),n}call(e,n){return V(()=>{this.invokeCallHook(e,n);const s=Ce(e);return ih(()=>te(fm(s.shape,0,this.stddev),s),()=>s,n.training||!1)})}}EE.className="GaussianNoise";ne(EE);class RE extends Le{constructor(e){super(e),this.supportsMasking=!0,this.rate=e.rate}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),n={rate:this.rate};return Object.assign(n,e),n}call(e,n){return V(()=>{this.invokeCallHook(e,n);const s=Ce(e);return this.rate>0&&this.rate<1?ih(()=>{const o=Math.sqrt(this.rate/(1-this.rate));return O(s,fm(s.shape,1,o))},()=>s,n.training||!1):s})}}RE.className="GaussianDropout";ne(RE);class DE extends Le{constructor(e){super(e),this.supportsMasking=!0,this.rate=e.rate,this.noiseShape=e.noiseShape}_getNoiseShape(e){return this.noiseShape||Ce(e).shape}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),n={rate:this.rate};return Object.assign(n,e),n}call(e,n){return V(()=>{if(this.rate<1&&this.rate>0){const s=this._getNoiseShape(e);return ih(()=>{const o=Ce(e),a=1.6732632423543772,i=1.0507009873554805,l=-a*i;let u=Zo(Xa(s),this.rate);u=Tr(u,"float32");const c=((1-this.rate)*(1+this.rate*l**2))**-.5,h=-c*l*this.rate,d=te(O(o,u),O(te(u,-1),l));return te(O(d,c),h)},()=>Ce(e),n.training||!1)}return e})}}DE.className="AlphaDropout";ne(DE);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function Vu(t,e,n,s,r,o=.001){let a;if(t.rank===2)a=sI(t,e,n,s,r,o);else if(t.rank===3)a=rI(t,e,n,s,r,o);else if(t.rank===4)a=oI(t,e,n,s,r,o);else throw new De(`batchNormalization is not implemented for array of rank ${t.rank} yet`);return a}function iH(t,e,n,s,r=.001){return V(()=>{const o=Yf(t,s),a=o.mean,i=o.variance;return[Vu(t,a,i,n,e,r),a,i]})}function lH(t,e,n,s,r=.001){return V(()=>{const o=Yf(t,s),a=o.mean,i=o.variance,l=[];for(const f of ar(0,t.rank))s.indexOf(f)!==-1?l.push(1):l.push(t.shape[f]);const u=F(a,l),c=F(i,l),h=e==null?null:F(e,l),d=n==null?null:F(n,l);return[Vu(t,u,c,d,h,r),a,i]})}function uH(t,e,n,s,r=.001){return Me(s.slice().sort(),ar(0,t.rank-1))?iH(t,e,n,s,r):lH(t,e,n,s,r)}class AE extends Le{constructor(e){e==null&&(e={}),super(e),this.supportsMasking=!0,this.axis=e.axis==null?-1:e.axis,this.momentum=e.momentum==null?.99:e.momentum,this.epsilon=e.epsilon==null?.001:e.epsilon,this.center=e.center==null?!0:e.center,this.scale=e.scale==null?!0:e.scale,this.betaInitializer=ht(e.betaInitializer||"zeros"),this.gammaInitializer=ht(e.gammaInitializer||"ones"),this.movingMeanInitializer=ht(e.movingMeanInitializer||"zeros"),this.movingVarianceInitializer=ht(e.movingVarianceInitializer||"ones"),this.betaConstraint=Mt(e.betaConstraint),this.gammaConstraint=Mt(e.gammaConstraint),this.betaRegularizer=dt(e.betaRegularizer),this.gammaRegularizer=dt(e.gammaRegularizer)}build(e){e=He(e);const n=this.axis>=0?this.axis:this.axis+e.length,s=e[n];if(s==null)throw new L(`Axis ${n} of input tensor should have a defined dimension but the layer received an input with shape ${JSON.stringify(e)}.`);this.inputSpec=[new Lt({ndim:e.length,axes:{[n]:s}})];const r=[s];this.scale&&(this.gamma=this.addWeight("gamma",r,null,this.gammaInitializer,this.gammaRegularizer,!0,this.gammaConstraint)),this.center&&(this.beta=this.addWeight("beta",r,null,this.betaInitializer,this.betaRegularizer,!0,this.betaConstraint)),this.movingMean=this.addWeight("moving_mean",r,null,this.movingMeanInitializer,null,!1),this.movingVariance=this.addWeight("moving_variance",r,null,this.movingVarianceInitializer,null,!1),this.built=!0}call(e,n){return V(()=>{const s=n.training==null?!1:n.training,r=Ce(e),o=r.shape,a=o.length,i=ar(0,a),l=this.axis>=0?this.axis:this.axis+a;i.splice(l,1);const u=La(1,a);u[l]=o[l];const c=i.slice();c.sort();const h=!Me(c,ar(0,a).slice(0,a-1)),d=()=>{if(h){const x=F(this.movingMean.read(),u),w=F(this.movingVariance.read(),u),b=this.center?F(this.beta.read(),u):null,v=this.scale?F(this.gamma.read(),u):null;return Vu(r,x,w,b,v,this.epsilon)}else return Vu(r,this.movingMean.read(),this.movingVariance.read(),this.beta==null?null:this.beta.read(),this.gamma==null?null:this.gamma.read(),this.epsilon)};if(!s)return d();const[p,f,m]=uH(r,this.gamma.read(),this.beta.read(),i,this.epsilon),y=(x,w,b)=>{V(()=>{const v=1-b,k=x.read(),$=O(fe(k,w),v);x.write(fe(k,$))})};return(()=>{y(this.movingMean,f,this.momentum),y(this.movingVariance,m,this.momentum)})(),p})}getConfig(){const e={axis:this.axis,momentum:this.momentum,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:mt(this.betaInitializer),gammaInitializer:mt(this.gammaInitializer),movingMeanInitializer:mt(this.movingMeanInitializer),movingVarianceInitializer:mt(this.movingVarianceInitializer),betaRegularizer:et(this.betaRegularizer),gammaRegularizer:et(this.gammaRegularizer),betaConstraint:zt(this.betaConstraint),gammaConstraint:zt(this.gammaConstraint)},n=super.getConfig();return Object.assign(e,n),e}}AE.className="BatchNormalization";ne(AE);class _E extends Le{constructor(e){if(e==null&&(e={}),super(e),this.axis=e.axis==null?-1:e.axis,typeof this.axis=="number"){if(!Number.isInteger(this.axis))throw new Error(`Expected axis to be an integer, but received ${this.axis}`)}else if(Array.isArray(this.axis)){for(const n of this.axis)if(!Number.isInteger(n))throw new Error(`Expected axis to be an array of integers, but received ${JSON.stringify(this.axis)}`)}else throw new Error(`Expected axis to be an integer or an array of integers, but received ${JSON.stringify(this.axis)}`);this.epsilon=e.epsilon==null?.001:e.epsilon,this.center=e.center==null?!0:e.center,this.scale=e.scale==null?!0:e.scale,this.betaInitializer=ht(e.betaInitializer||"zeros"),this.gammaInitializer=ht(e.gammaInitializer||"ones"),this.betaRegularizer=dt(e.betaRegularizer),this.gammaRegularizer=dt(e.gammaRegularizer),this.supportsMasking=!0}build(e){e=He(e);const n=e.length;typeof this.axis=="number"&&(this.axis=[this.axis]);for(let o=0;o<this.axis.length;++o)this.axis[o]<0&&(this.axis[o]+=n);for(const o of this.axis)if(o<0||o>=n)throw new Error(`Invalid axis: ${o}`);if(this.axis.length!==Eo(this.axis).length)throw new Error(`Found duplicate axes in: ${this.axis}`);const s=this.axis.map(o=>e[o]),r=!0;this.scale?this.gamma=this.addWeight("gamma",s,"float32",this.gammaInitializer,this.gammaRegularizer,r):this.gamma=null,this.center?this.beta=this.addWeight("beta",s,"float32",this.betaInitializer,this.betaRegularizer,r):this.beta=null,this.built=!0}call(e,n){const s=Ce(e),r=s.shape,o=r.length;return V(()=>{let{mean:i,variance:l}=Yf(s,this.axis,!0);const u=La(1,o);for(const m of this.axis)u[m]=r[m];const c=m=>m!=null&&m.shape.length!==o?F(m,u):m;let h=this.scale?c(this.gamma.read()):null,d=this.center?c(this.beta.read()):null;const p=[],f=[];for(let m=0;m<o;++m)this.axis.indexOf(m)!==-1?(p.push(r[m]),f.push(1)):(p.push(1),f.push(r[m]));return i=Rs(i,p),l=Rs(l,p),h!=null&&(h=Rs(h,f)),d!=null&&(d=Rs(d,f)),Vu(s,i,l,d,h,this.epsilon)})}getConfig(){const e={axis:this.axis,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:mt(this.betaInitializer),gammaInitializer:mt(this.gammaInitializer),betaRegularizer:et(this.betaRegularizer),gammaRegularizer:et(this.gammaRegularizer)},n=super.getConfig();return Object.assign(e,n),e}}_E.className="LayerNormalization";ne(_E);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function cH(t,e,n){return V(()=>{if(t.rank!==4)throw new L(`temporalPadding expects input tensor to be 4-D, but received a ${t.rank}-D tensor.`);if(e==null&&(e=[[1,1],[1,1]]),e.length!==2||e[0].length!==2||e[1].length!==2)throw new L("spatial2dPadding expects `padding` to be an Array of two Arrays, each of which is an Array of two integers.");if(n==null&&(n=ir()),n!=="channelsLast"&&n!=="channelsFirst")throw new L(`Unknown data format: ${n}. Supported data formats are 'channelsLast' and 'channelsFirst.`);let s;return n==="channelsFirst"?s=[[0,0],[0,0],e[0],e[1]]:s=[[0,0],e[0],e[1],[0,0]],Jo(t,s)})}class OE extends Le{constructor(e){if(e==null&&(e={}),super(e),this.dataFormat=e.dataFormat==null?ir():e.dataFormat,e.padding==null)this.padding=[[1,1],[1,1]];else if(typeof e.padding=="number")this.padding=[[e.padding,e.padding],[e.padding,e.padding]];else{if(e.padding=e.padding,e.padding.length!==2)throw new L(`ZeroPadding2D expects padding to be a length-2 array, but received a length-${e.padding.length} array.`);let n,s;if(typeof e.padding[0]=="number")n=[e.padding[0],e.padding[0]],s=[e.padding[1],e.padding[1]];else{if(e.padding=e.padding,e.padding[0].length!==2)throw new L(`ZeroPadding2D expects height padding to be a length-2 array, but received a length-${e.padding[0].length} array.`);if(n=e.padding[0],e.padding[1].length!==2)throw new L(`ZeroPadding2D expects width padding to be a length-2 array, but received a length-${e.padding[1].length} array.`);s=e.padding[1]}this.padding=[n,s]}this.inputSpec=[new Lt({ndim:4})]}computeOutputShape(e){e=He(e);let n,s;return this.dataFormat==="channelsFirst"?(e[2]!=null&&e[2]>=0?n=e[2]+this.padding[0][0]+this.padding[0][1]:n=null,e[3]!=null&&e[3]>=0?s=e[3]+this.padding[1][0]+this.padding[1][1]:s=null,[e[0],e[1],n,s]):(e[1]!=null&&e[1]>=0?n=e[1]+this.padding[0][0]+this.padding[0][1]:n=null,e[2]!=null&&e[2]>=0?s=e[2]+this.padding[1][0]+this.padding[1][1]:s=null,[e[0],n,s,e[3]])}call(e,n){return V(()=>cH(Ce(e),this.padding,this.dataFormat))}getConfig(){const e={padding:this.padding,dataFormat:this.dataFormat},n=super.getConfig();return Object.assign(e,n),e}}OE.className="ZeroPadding2D";ne(OE);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function Sm(t,e,n,s,r,o){return V(()=>{Nt(r),ZT(o),gs(s),n==null&&(n=[1,1]),s==null&&(s="valid"),r==null&&(r=ir()),o==null&&(o="max"),t=cw(t,r);let a;const i=s==="same"?"same":"valid";return o==="max"?a=Xf(t,e,n,i):a=Wf(t,e,n,i),r==="channelsFirst"&&(a=We(a,[0,3,1,2])),a})}function FE(t,e,n,s,r,o){return V(()=>{Nt(r),ZT(o),gs(s),n==null&&(n=[1,1,1]),s==null&&(s="valid"),r==null&&(r=ir()),o==null&&(o="max"),t=Z2(t,r);let a;const i=s==="same"?"same":"valid";return o==="max"?a=RI(t,e,n,i):a=nI(t,e,n,i),r==="channelsFirst"&&(a=We(a,[0,4,1,2,3])),a})}class LE extends Le{constructor(e){if(e.poolSize==null&&(e.poolSize=2),super(e),typeof e.poolSize=="number")this.poolSize=[e.poolSize];else if(Array.isArray(e.poolSize)&&e.poolSize.length===1&&typeof e.poolSize[0]=="number")this.poolSize=e.poolSize;else throw new L(`poolSize for 1D convolutional layer must be a number or an Array of a single number, but received ${JSON.stringify(e.poolSize)}`);if(jt(this.poolSize,"poolSize"),e.strides==null)this.strides=this.poolSize;else if(typeof e.strides=="number")this.strides=[e.strides];else if(Array.isArray(e.strides)&&e.strides.length===1&&typeof e.strides[0]=="number")this.strides=e.strides;else throw new L(`strides for 1D convolutional layer must be a number or an Array of a single number, but received ${JSON.stringify(e.strides)}`);jt(this.strides,"strides"),this.padding=e.padding==null?"valid":e.padding,gs(this.padding),this.inputSpec=[new Lt({ndim:3})]}computeOutputShape(e){e=He(e);const n=sr(e[1],this.poolSize[0],this.padding,this.strides[0]);return[e[0],n,e[2]]}call(e,n){return V(()=>{this.invokeCallHook(e,n),e=oh(Ce(e),2);const s=this.poolingFunction(Ce(e),[this.poolSize[0],1],[this.strides[0],1],this.padding,"channelsLast");return Ya(s,[2])})}getConfig(){const e={poolSize:this.poolSize,padding:this.padding,strides:this.strides},n=super.getConfig();return Object.assign(e,n),e}}class PE extends LE{constructor(e){super(e)}poolingFunction(e,n,s,r,o){return Nt(o),gs(r),Sm(e,n,s,r,o,"max")}}PE.className="MaxPooling1D";ne(PE);class zE extends LE{constructor(e){super(e)}poolingFunction(e,n,s,r,o){return Nt(o),gs(r),Sm(e,n,s,r,o,"avg")}}zE.className="AveragePooling1D";ne(zE);class ME extends Le{constructor(e){if(e.poolSize==null&&(e.poolSize=[2,2]),super(e),this.poolSize=Array.isArray(e.poolSize)?e.poolSize:[e.poolSize,e.poolSize],e.strides==null)this.strides=this.poolSize;else if(Array.isArray(e.strides)){if(e.strides.length!==2)throw new L(`If the strides property of a 2D pooling layer is an Array, it is expected to have a length of 2, but received length ${e.strides.length}.`);this.strides=e.strides}else this.strides=[e.strides,e.strides];jt(this.poolSize,"poolSize"),jt(this.strides,"strides"),this.padding=e.padding==null?"valid":e.padding,this.dataFormat=e.dataFormat==null?"channelsLast":e.dataFormat,Nt(this.dataFormat),gs(this.padding),this.inputSpec=[new Lt({ndim:4})]}computeOutputShape(e){e=He(e);let n=this.dataFormat==="channelsFirst"?e[2]:e[1],s=this.dataFormat==="channelsFirst"?e[3]:e[2];return n=sr(n,this.poolSize[0],this.padding,this.strides[0]),s=sr(s,this.poolSize[1],this.padding,this.strides[1]),this.dataFormat==="channelsFirst"?[e[0],e[1],n,s]:[e[0],n,s,e[3]]}call(e,n){return V(()=>(this.invokeCallHook(e,n),this.poolingFunction(Ce(e),this.poolSize,this.strides,this.padding,this.dataFormat)))}getConfig(){const e={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},n=super.getConfig();return Object.assign(e,n),e}}class BE extends ME{constructor(e){super(e)}poolingFunction(e,n,s,r,o){return Nt(o),gs(r),Sm(e,n,s,r,o,"max")}}BE.className="MaxPooling2D";ne(BE);class VE extends ME{constructor(e){super(e)}poolingFunction(e,n,s,r,o){return Nt(o),gs(r),Sm(e,n,s,r,o,"avg")}}VE.className="AveragePooling2D";ne(VE);class WE extends Le{constructor(e){if(e.poolSize==null&&(e.poolSize=[2,2,2]),super(e),this.poolSize=Array.isArray(e.poolSize)?e.poolSize:[e.poolSize,e.poolSize,e.poolSize],e.strides==null)this.strides=this.poolSize;else if(Array.isArray(e.strides)){if(e.strides.length!==3)throw new L(`If the strides property of a 3D pooling layer is an Array, it is expected to have a length of 3, but received length ${e.strides.length}.`);this.strides=e.strides}else this.strides=[e.strides,e.strides,e.strides];jt(this.poolSize,"poolSize"),jt(this.strides,"strides"),this.padding=e.padding==null?"valid":e.padding,this.dataFormat=e.dataFormat==null?"channelsLast":e.dataFormat,Nt(this.dataFormat),gs(this.padding),this.inputSpec=[new Lt({ndim:5})]}computeOutputShape(e){e=He(e);let n=this.dataFormat==="channelsFirst"?e[2]:e[1],s=this.dataFormat==="channelsFirst"?e[3]:e[2],r=this.dataFormat==="channelsFirst"?e[4]:e[3];return n=sr(n,this.poolSize[0],this.padding,this.strides[0]),s=sr(s,this.poolSize[1],this.padding,this.strides[1]),r=sr(r,this.poolSize[2],this.padding,this.strides[2]),this.dataFormat==="channelsFirst"?[e[0],e[1],n,s,r]:[e[0],n,s,r,e[4]]}call(e,n){return V(()=>(this.invokeCallHook(e,n),this.poolingFunction(Ce(e),this.poolSize,this.strides,this.padding,this.dataFormat)))}getConfig(){const e={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},n=super.getConfig();return Object.assign(e,n),e}}class UE extends WE{constructor(e){super(e)}poolingFunction(e,n,s,r,o){return Nt(o),gs(r),FE(e,n,s,r,o,"max")}}UE.className="MaxPooling3D";ne(UE);class GE extends WE{constructor(e){super(e)}poolingFunction(e,n,s,r,o){return Nt(o),gs(r),FE(e,n,s,r,o,"avg")}}GE.className="AveragePooling3D";ne(GE);class HE extends Le{constructor(e){super(e),this.inputSpec=[new Lt({ndim:3})]}computeOutputShape(e){return[e[0],e[2]]}call(e,n){throw new De}}class jE extends HE{constructor(e){super(e||{})}call(e,n){return V(()=>{const s=Ce(e);return xt(s,1)})}}jE.className="GlobalAveragePooling1D";ne(jE);class KE extends HE{constructor(e){super(e||{})}call(e,n){return V(()=>{const s=Ce(e);return Ls(s,1)})}}KE.className="GlobalMaxPooling1D";ne(KE);class qE extends Le{constructor(e){super(e),this.dataFormat=e.dataFormat==null?"channelsLast":e.dataFormat,Nt(this.dataFormat),this.inputSpec=[new Lt({ndim:4})]}computeOutputShape(e){return e=e,this.dataFormat==="channelsLast"?[e[0],e[3]]:[e[0],e[1]]}call(e,n){throw new De}getConfig(){const e={dataFormat:this.dataFormat},n=super.getConfig();return Object.assign(e,n),e}}class XE extends qE{call(e,n){return V(()=>{const s=Ce(e);return this.dataFormat==="channelsLast"?xt(s,[1,2]):xt(s,[2,3])})}}XE.className="GlobalAveragePooling2D";ne(XE);class YE extends qE{call(e,n){return V(()=>{const s=Ce(e);return this.dataFormat==="channelsLast"?Ls(s,[1,2]):Ls(s,[2,3])})}}YE.className="GlobalMaxPooling2D";ne(YE);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class QE extends Le{constructor(e){super(e),this.layer=e.layer}build(e){this.built=!0}get trainable(){return this.layer!=null?this.layer.trainable:!1}set trainable(e){this.layer!=null&&(this.layer.trainable=e)}get trainableWeights(){return this.layer.trainableWeights}get nonTrainableWeights(){return this.layer.nonTrainableWeights}get updates(){return this.layer._updates}get losses(){return this.layer.losses}getWeights(){return this.layer.getWeights()}setWeights(e){this.layer.setWeights(e)}getConfig(){const e={layer:{className:this.layer.getClassName(),config:this.layer.getConfig()}},n=super.getConfig();return Object.assign(e,n),e}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),this.layer!=null&&this.layer.setFastWeightInitDuringBuild(e)}static fromConfig(e,n,s={}){const r=n.layer,o=jr(r,s);delete n.layer;const a={layer:o};return Object.assign(a,n),new e(a)}}class ZE extends QE{constructor(e){super(e),this.supportsMasking=!0}build(e){if(e=He(e),e.length<3)throw new L(`TimeDistributed layer expects an input shape >= 3D, but received input shape ${JSON.stringify(e)}`);this.inputSpec=[{shape:e}];const n=[e[0]].concat(e.slice(2));this.layer.built||(this.layer.build(n),this.layer.built=!0),super.build(e)}computeOutputShape(e){e=He(e);const n=[e[0]].concat(e.slice(2)),s=this.layer.computeOutputShape(n),r=e[1];return[s[0],r].concat(s.slice(1))}call(e,n){return V(()=>(e=Ce(e),iE((a,i)=>[Ce(this.layer.call(a,n)),[]],e,[],!1,null,null,!1,!0)[1]))}}ZE.className="TimeDistributed";ne(ZE);function hH(t){Za(FU,"BidirectionalMergeMode",t)}const dH="concat";class JE extends QE{constructor(e){super(e);const n=e.layer.getConfig(),s={};s.className=e.layer.getClassName(),s.config=n,this.forwardLayer=jr(s),n.goBackwards=n.goBackwards!==!0;const r={};if(r.className=e.layer.getClassName(),r.config=n,this.backwardLayer=jr(r),this.forwardLayer.name="forward_"+this.forwardLayer.name,this.backwardLayer.name="backward_"+this.backwardLayer.name,this.mergeMode=e.mergeMode===void 0?dH:e.mergeMode,hH(this.mergeMode),e.weights)throw new De("weights support is not implemented for Bidirectional layer yet.");this._stateful=e.layer.stateful,this.returnSequences=e.layer.returnSequences,this.returnState=e.layer.returnState,this.supportsMasking=!0,this._trainable=!0,this.inputSpec=e.layer.inputSpec,this.numConstants=null}get trainable(){return this._trainable}set trainable(e){this._trainable=e,this.forwardLayer!=null&&(this.forwardLayer.trainable=e),this.backwardLayer!=null&&(this.backwardLayer.trainable=e)}getWeights(){return this.forwardLayer.getWeights().concat(this.backwardLayer.getWeights())}setWeights(e){const n=e.length,s=Math.floor(n/2);this.forwardLayer.setWeights(e.slice(0,s)),this.backwardLayer.setWeights(e.slice(s))}computeOutputShape(e){let n=this.forwardLayer.computeOutputShape(e);Array.isArray(n)&&Array.isArray(n[0])||(n=[n]),n=n;let s,r,o;return this.returnState&&(o=n.slice(1)),s=n[0],s=s,this.mergeMode==="concat"?(s[s.length-1]*=2,r=[s]):this.mergeMode==null?r=[s,s.slice()]:r=[s],this.returnState?this.mergeMode==null?r.concat(o).concat(o.slice()):[s].concat(o).concat(o.slice()):En(r)}apply(e,n){let s=n==null?null:n.initialState,r=n==null?null:n.constants;n==null&&(n={});const o=aE(e,s,r,this.numConstants);if(e=o.inputs,s=o.initialState,r=o.constants,Array.isArray(e)&&(s=e.slice(1),e=e[0]),(s==null||s.length===0)&&r==null)return super.apply(e,n);const a=[],i=[];if(s!=null){const u=s.length;if(u%2>0)throw new L("When passing `initialState` to a Bidrectional RNN, the state should be an Array containing the states of the underlying RNNs.");n.initialState=s,a.push(...s);const c=s.map(h=>new Lt({shape:h.shape}));this.forwardLayer.stateSpec=c.slice(0,u/2),this.backwardLayer.stateSpec=c.slice(u/2),i.push(...c)}if(r!=null)throw new De("Support for constants in Bidirectional layers is not implemented yet.");const l=a[0]instanceof vr;for(const u of a)if(u instanceof vr!==l)throw new L("The initial state of a Bidirectional layer cannot be specified as a mix of symbolic and non-symbolic tensors");if(l){const u=[e].concat(a),c=this.inputSpec.concat(i),h=this.inputSpec;this.inputSpec=c;const d=super.apply(u,n);return this.inputSpec=h,d}else return super.apply(e,n)}call(e,n){return V(()=>{const s=n.initialState;let r,o;if(s==null)r=this.forwardLayer.call(e,n),o=this.backwardLayer.call(e,n);else{const l=s.slice(0,s.length/2),u=s.slice(s.length/2);r=this.forwardLayer.call(e,Object.assign(n,{initialState:l})),o=this.backwardLayer.call(e,Object.assign(n,{initialState:u}))}let a;this.returnState&&(Array.isArray(r)&&(a=r.slice(1).concat(o.slice(1))),r=r[0],o=o[0]),this.returnSequences&&(o=Bs(o,1));let i;return this.mergeMode==="concat"?i=Qb([r,o]):this.mergeMode==="sum"?i=te(r,o):this.mergeMode==="ave"?i=O(.5,te(r,o)):this.mergeMode==="mul"?i=O(r,o):this.mergeMode==null&&(i=[r,o]),this.returnState?this.mergeMode==null?i.concat(a):[i].concat(a):i})}resetStates(e){this.forwardLayer.resetStates(),this.backwardLayer.resetStates()}build(e){va(this.forwardLayer.name,()=>{this.forwardLayer.build(e)}),va(this.backwardLayer.name,()=>{this.backwardLayer.build(e)}),this.built=!0}computeMask(e,n){Array.isArray(n)&&(n=n[0]);let s;if(this.returnSequences?this.mergeMode==null?s=[n,n]:s=n:this.mergeMode==null?s=[null,null]:s=null,this.returnState){const o=this.forwardLayer.states.map(a=>null);return Array.isArray(s)?s.concat(o).concat(o):[s].concat(o).concat(o)}else return s}get trainableWeights(){return this.forwardLayer.trainableWeights.concat(this.backwardLayer.trainableWeights)}get nonTrainableWeights(){return this.forwardLayer.nonTrainableWeights.concat(this.backwardLayer.nonTrainableWeights)}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),this.forwardLayer!=null&&this.forwardLayer.setFastWeightInitDuringBuild(e),this.backwardLayer!=null&&this.backwardLayer.setFastWeightInitDuringBuild(e)}getConfig(){const e={mergeMode:this.mergeMode},n=super.getConfig();return Object.assign(e,n),e}static fromConfig(e,n){const s=jr(n.layer);if(delete n.layer,n.numConstants!=null)throw new De("Deserialization of a Bidirectional layer with numConstants present is not supported yet.");const r=n;return r.layer=s,new e(r)}}JE.className="Bidirectional";ne(JE);/**
 * @license
 * Copyright 2022 CodeSmith LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class eR extends Le{constructor(e){super(e),this.scale=e.scale,e.offset?this.offset=e.offset:this.offset=0}getConfig(){const e={scale:this.scale,offset:this.offset},n=super.getConfig();return Object.assign(e,n),e}call(e,n){return V(()=>(e=Ce(e),e.dtype!=="float32"&&(e=Tr(e,"float32")),te(O(e,this.scale),this.offset)))}}eR.className="Rescaling";ne(eR);/**
 * @license
 * Copyright 2022 CodeSmith LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const{resizeBilinear:pH,cropAndResize:fH}=wr;class tR extends Le{constructor(e){super(e),this.height=e.height,this.width=e.width}centerCrop(e,n,s,r,o,a,i,l){return V(()=>{let u,c=!1;const h=n/a,d=s/i,p=(r+n)/a,f=(o+s)/i,m=[h,d,p,f],y=[];e.rank===3?(c=!0,u=ds([e])):u=e;for(let v=0;v<u.shape[0];v++)y.push(m);const g=Fs(y,[y.length,4]),x=rl(0,y.length,1,"int32"),b=fH(u,g,x,[r,o],"nearest");return Tr(c?Ce(Vs(b)):b,l)})}upsize(e,n,s,r){return V(()=>{const o=pH(e,[n,s]);return Tr(o,r)})}call(e,n){return V(()=>{const s=Ce(e),r=s.dtype,o=s.shape,a=o[o.length-3],i=o[o.length-2];let l=0;a!==this.height&&(l=Math.floor((a-this.height)/2));let u=0;return i!==this.width&&(u=Math.floor((i-this.width)/2),u===0&&(u=1)),l>=0&&u>=0?this.centerCrop(s,l,u,this.height,this.width,a,i,r):this.upsize(e,this.height,this.width,r)})}getConfig(){const e={height:this.height,width:this.width},n=super.getConfig();return Object.assign(e,n),e}computeOutputShape(e){e=He(e);const n=e.length-3,s=e.length-2;return e[n]=this.height,e[s]=this.width,e}}tR.className="CenterCrop";ne(tR);/**
 * @license
 * Copyright 2022 CodeSmith LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function mH(t,e,n,s){let r=Ce(t);if(r.dtype!=="int32"&&(r=Tr(r,"int32")),e==="int")return r;const o=r.shape;if(r.rank===0&&(r=wn(r,-1)),e==="oneHot"&&r.shape[r.shape.length-1]!==1&&(r=wn(r,-1)),r.rank>2)throw new L(`When outputMode is not int, maximum output rank is 2 Received outputMode ${e} and input shape ${o} which would result in output rank ${r.rank}.`);const a=["multiHot","oneHot"].includes(e),i=r;let l;if(typeof s<"u"&&e==="count"?l=jy(i,s,n,a):l=jy(i,[],n,a),e!=="tfIdf")return l;if(s)return O(l,s);throw new L("When outputMode is 'tfIdf', weights must be provided.")}/**
 * @license
 * Copyright 2022 CodeSmith LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class nR extends Le{constructor(e){super(e),this.numTokens=e.numTokens,e.outputMode?this.outputMode=e.outputMode:this.outputMode="multiHot"}getConfig(){const e={numTokens:this.numTokens,outputMode:this.outputMode},n=super.getConfig();return Object.assign(e,n),e}computeOutputShape(e){return e=He(e),e==null?[this.numTokens]:this.outputMode==="oneHot"&&e[e.length-1]!==1?(e.push(this.numTokens),e):(e[e.length-1]=this.numTokens,e)}call(e,n){return V(()=>{e=Ce(e),e.dtype!=="int32"&&(e=Tr(e,"int32"));let s;if(typeof n.countWeights<"u"){if(this.outputMode!=="count")throw new L(`countWeights is not used when outputMode !== count.
              Received countWeights=${n.countWeights}`);s=Ce(n.countWeights)}const r=Ls(e),o=_u(e),a=ts(this.numTokens,r).bufferSync().get(0),i=Zo(o,0).bufferSync().get(0);if(!(a&&i))throw new L(`Input values must be between 0 < values <= numTokens with numTokens=${this.numTokens}`);return mH(e,this.outputMode,this.numTokens,s)})}}nR.className="CategoryEncoding";ne(nR);/**
 * @license
 * Copyright 2022 CodeSmith LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const gH=["bilinear","nearest"],WS=new Set(gH);class sR extends Le{constructor(e){if(super(e),this.height=e.height,this.width=e.width,e.interpolation)if(WS.has(e.interpolation))this.interpolation=e.interpolation;else throw new L(`Invalid interpolation parameter: ${e.interpolation} is not implemented`);else this.interpolation="bilinear";this.cropToAspectRatio=!!e.cropToAspectRatio}computeOutputShape(e){e=He(e);const n=e[2];return[this.height,this.width,n]}getConfig(){const e={height:this.height,width:this.width,interpolation:this.interpolation,cropToAspectRatio:this.cropToAspectRatio},n=super.getConfig();return Object.assign(e,n),e}call(e,n){return V(()=>{const s=[this.height,this.width];if(this.interpolation==="bilinear")return wr.resizeBilinear(e,s,!this.cropToAspectRatio);if(this.interpolation==="nearest")return wr.resizeNearestNeighbor(e,s,!this.cropToAspectRatio);throw new Error(`Interpolation is ${this.interpolation} but only ${[...WS]} are supported`)})}}sR.className="Resizing";ne(sR);/**
 * @license
 * Copyright 2023 CodeSmith LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class rR{constructor(e){this.seed=e}next(){if(this.seed!==void 0)return this.seed++}}rR.className="RandomSeed";/**
 * @license
 * Copyright 2023 CodeSmith LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class oR extends Le{constructor(e){super(e),this.randomGenerator=new rR(e.seed)}getConfig(){const e={seed:this.randomGenerator.seed},n=super.getConfig();return Object.assign(e,n),e}}oR.className="BaseRandomLayer";/**
 * @license
 * Copyright 2023 CodeSmith LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const yH=["bilinear","nearest"],US=new Set(yH);class aR extends oR{constructor(e){super(e);const{factor:n,interpolation:s="bilinear"}=e;if(this.factor=n,Array.isArray(this.factor)&&this.factor.length===2)this.widthLower=this.factor[0],this.widthUpper=this.factor[1];else if(!Array.isArray(this.factor)&&this.factor>0)this.widthLower=-this.factor,this.widthUpper=this.factor;else throw new L(`Invalid factor: ${this.factor}. Must be positive number or tuple of 2 numbers`);if(this.widthLower<-1||this.widthUpper<-1)throw new L(`factor must have values larger than -1. Got: ${this.factor}`);if(this.widthUpper<this.widthLower)throw new L(`factor cannot have upper bound less than lower bound.
        Got upper bound: ${this.widthUpper}.
        Got lower bound: ${this.widthLower}
      `);if(s)if(US.has(s))this.interpolation=s;else throw new L(`Invalid interpolation parameter: ${s} is not implemented`)}getConfig(){const e={factor:this.factor,interpolation:this.interpolation},n=super.getConfig();return Object.assign(e,n),e}computeOutputShape(e){e=He(e);const n=e[2];return[this.imgHeight,-1,n]}call(e,n){return V(()=>{const s=Ce(e);this.imgHeight=s.shape[s.shape.length-3];const r=s.shape[s.shape.length-2];this.widthFactor=Xa([1],1+this.widthLower,1+this.widthUpper,"float32",this.randomGenerator.next());let o=this.widthFactor.dataSync()[0]*r;o=Math.round(o);const a=[this.imgHeight,o];switch(this.interpolation){case"bilinear":return wr.resizeBilinear(e,a);case"nearest":return wr.resizeNearestNeighbor(e,a);default:throw new Error(`Interpolation is ${this.interpolation}
          but only ${[...US]} are supported`)}})}}aR.className="RandomWidth";ne(aR);/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const xH=G();xH.registerFlag("KEEP_INTERMEDIATE_TENSORS",()=>!1,t=>{t&&console.warn("Keep intermediate tensors is ON. This will print the values of all intermediate tensors during model inference. Not all models support this mode. For details, check e2e/benchmarks/ model_config.js. This significantly impacts performance.")});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */var ws;(function(t){t[t.DT_INVALID=0]="DT_INVALID",t[t.DT_FLOAT=1]="DT_FLOAT",t[t.DT_DOUBLE=2]="DT_DOUBLE",t[t.DT_INT32=3]="DT_INT32",t[t.DT_UINT8=4]="DT_UINT8",t[t.DT_INT16=5]="DT_INT16",t[t.DT_INT8=6]="DT_INT8",t[t.DT_STRING=7]="DT_STRING",t[t.DT_COMPLEX64=8]="DT_COMPLEX64",t[t.DT_INT64=9]="DT_INT64",t[t.DT_BOOL=10]="DT_BOOL",t[t.DT_QINT8=11]="DT_QINT8",t[t.DT_QUINT8=12]="DT_QUINT8",t[t.DT_QINT32=13]="DT_QINT32",t[t.DT_BFLOAT16=14]="DT_BFLOAT16",t[t.DT_QINT16=15]="DT_QINT16",t[t.DT_QUINT16=16]="DT_QUINT16",t[t.DT_UINT16=17]="DT_UINT16",t[t.DT_COMPLEX128=18]="DT_COMPLEX128",t[t.DT_HALF=19]="DT_HALF",t[t.DT_RESOURCE=20]="DT_RESOURCE",t[t.DT_VARIANT=21]="DT_VARIANT",t[t.DT_UINT32=22]="DT_UINT32",t[t.DT_UINT64=23]="DT_UINT64",t[t.DT_FLOAT_REF=101]="DT_FLOAT_REF",t[t.DT_DOUBLE_REF=102]="DT_DOUBLE_REF",t[t.DT_INT32_REF=103]="DT_INT32_REF",t[t.DT_UINT8_REF=104]="DT_UINT8_REF",t[t.DT_INT16_REF=105]="DT_INT16_REF",t[t.DT_INT8_REF=106]="DT_INT8_REF",t[t.DT_STRING_REF=107]="DT_STRING_REF",t[t.DT_COMPLEX64_REF=108]="DT_COMPLEX64_REF",t[t.DT_INT64_REF=109]="DT_INT64_REF",t[t.DT_BOOL_REF=110]="DT_BOOL_REF",t[t.DT_QINT8_REF=111]="DT_QINT8_REF",t[t.DT_QUINT8_REF=112]="DT_QUINT8_REF",t[t.DT_QINT32_REF=113]="DT_QINT32_REF",t[t.DT_BFLOAT16_REF=114]="DT_BFLOAT16_REF",t[t.DT_QINT16_REF=115]="DT_QINT16_REF",t[t.DT_QUINT16_REF=116]="DT_QUINT16_REF",t[t.DT_UINT16_REF=117]="DT_UINT16_REF",t[t.DT_COMPLEX128_REF=118]="DT_COMPLEX128_REF",t[t.DT_HALF_REF=119]="DT_HALF_REF",t[t.DT_RESOURCE_REF=120]="DT_RESOURCE_REF",t[t.DT_VARIANT_REF=121]="DT_VARIANT_REF",t[t.DT_UINT32_REF=122]="DT_UINT32_REF",t[t.DT_UINT64_REF=123]="DT_UINT64_REF"})(ws||(ws={}));var GS;(function(t){(function(e){e[e.LEGACY=0]="LEGACY",e[e.V1=1]="V1",e[e.V2=2]="V2"})(t.CheckpointFormatVersion||(t.CheckpointFormatVersion={}))})(GS||(GS={}));/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const bH={};function iR(t){return bH[t]}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function S(t,e,n,s,r){const o=e.inputParams[t];if(o&&o.inputIndexStart!==void 0){const i=o.inputIndexStart,l=o.inputIndexEnd===0?void 0:o.inputIndexEnd===void 0?i+1:o.inputIndexEnd,u=i<0?e.inputNames.length+i:i;if(o.type==="tensor")return Qt(e.inputNames[u],n,s,r);if(o.type==="tensors"){const d=e.inputs.slice(i,l);return e.inputNames.slice(i,l).filter((f,m)=>{var y;return((y=d[m])===null||y===void 0?void 0:y.op)!=="NoOp"}).map(f=>Qt(f,n,s,r))}const c=Qt(e.inputNames[u],n,s,r),h=c.dataSync();return o.type==="number"?h[0]:Os(c.shape,h)}const a=e.attrParams[t];return a&&a.value}function Qt(t,e,n,s){const[r,o]=Mn(t,n);if(s!=null){const i=s.getHashTableHandleByName(r);if(i!=null)return i}const a=n.currentContextIds.find(i=>!!e[lp(r,i)]);return a!==void 0?e[lp(r,a)][o]:void 0}function HS(t,e,n){return e[lp(t,n.currentContextId)]}function zr(t,e){const[n,s,r]=Mn(t,e);return[lp(n,e&&e.currentContextId),s,r]}function lp(t,e){return e?`${t}-${e}`:t}function Mn(t,e){if(t==="")return["",0,void 0];const n=e!=null&&e.parseNodeNameCache!=null;if(n){const o=e.parseNodeNameCache.get(t);if(o!=null)return o}const s=t.split(":");let r;if(s.length===1)r=[t,0,void 0];else{const o=s[0],a=s.length===3?s[1]:void 0,i=Number(s[s.length-1]);r=[o,i,a]}return n&&e.parseNodeNameCache.set(t,r),r}function gd(t,e,n){let s=S("pad",t,e,n);if(s==="explicit"){s=S("explicitPaddings",t,e,n);const r=[[0,0],[0,0],[0,0],[0,0]];for(let o=0;o<4;o++)r[o][0]=s[o*2],r[o][1]=s[o*2+1];return r}return s}function Mr(t){return t.kept?t:Hr(t)}/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const wH=[{tfOpName:"Add",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddV2",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddN",category:"arithmetic",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"BiasAdd",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"Sub",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"RealDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Div",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"DivNoNan",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mul",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Maximum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Minimum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Pow",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SquaredDifference",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorMod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],vH=Object.freeze(Object.defineProperty({__proto__:null,json:wH},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const SH=[{tfOpName:"Abs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan2",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Ceil",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ClipByValue",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"clipValueMin",type:"number"},{start:2,name:"clipValueMax",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Complex",category:"basic_math",inputs:[{start:0,name:"real",type:"tensor"},{start:1,name:"imag",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ComplexAbs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Elu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Exp",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Floor",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Imag",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Neg",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Real",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Prelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"alpha",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu6",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Selu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sigmoid",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Rsqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Square",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sign",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Round",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Expm1",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log1p",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Reciprocal",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Softplus",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Erf",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LeakyRelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"alpha",name:"alpha",type:"number",defaultValue:.2},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"IsNan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"IsFinite",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"IsInf",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],kH=Object.freeze(Object.defineProperty({__proto__:null,json:SH},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const $H=[{tfOpName:"EmptyTensorList",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"maxNumElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"LoopCond",category:"control",inputs:[{start:0,name:"pred",type:"tensor"}]},{tfOpName:"Switch",category:"control",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"pred",type:"tensor"}]},{tfOpName:"Merge",category:"control",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"Enter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"frame_name",name:"frameName",type:"string"},{tfName:"is_constant",name:"isConstant",type:"bool"}]},{tfOpName:"Exit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NextIteration",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayV3",category:"control",inputs:[{start:0,name:"size",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"dynamic_size",name:"dynamicSize",type:"bool"},{tfName:"clear_after_read",name:"clearAfterRead",type:"bool"},{tfName:"identical_element_shapes",name:"identicalElementShapes",type:"bool"},{tfName:"tensor_array_name",name:"name",type:"string"}]},{tfOpName:"TensorArrayWriteV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayReadV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayGatherV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"}]},{tfOpName:"TensorArrayScatterV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArrayConcatV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape_except0",name:"elementShapeExcept0",type:"shape",notSupported:!0}]},{tfOpName:"TensorArraySplitV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"tensor",type:"tensor"},{start:2,name:"lengths",type:"number[]"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArraySizeV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}]},{tfOpName:"TensorArrayCloseV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"}]},{tfOpName:"StatelessIf",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"If",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"StatelessWhile",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"While",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"TensorListScatter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListScatterV2",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"},{start:3,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGather",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListSetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListReserve",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListFromTensor",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListStack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"},{tfName:"num_elements",name:"numElements",type:"dtype"}]},{tfOpName:"TensorListSplit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"},{start:2,name:"lengths",type:"number[]"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListConcat",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}],attrs:[{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListConcatV2",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}],attrs:[{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPopBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPushBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListLength",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}]},{tfOpName:"TensorListResize",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"size",type:"number"}]}],CH=Object.freeze(Object.defineProperty({__proto__:null,json:$H},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const NH=[{tfOpName:"AvgPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[],notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPoolWithArgmax",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"include_batch_in_index",name:"includeBatchInIndex",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AvgPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Conv1D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"stride",name:"stride",type:"number"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NWC"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"dilation",name:"dilation",type:"number",defaultValue:1}]},{tfOpName:"Conv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"useCudnnOnGpu",name:"useCudnnOnGpu",type:"bool"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"_FusedConv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"use_cudnn_on_gpu",name:"useCudnnOnGpu",type:"bool",defaultValue:!0},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"leakyrelu_alpha",name:"leakyreluAlpha",type:"number",defaultValue:.2}]},{tfOpName:"Conv2DBackpropInput",category:"convolution",inputs:[{start:2,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:0,name:"outputShape",type:"number[]"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]",notSupported:!0}]},{tfOpName:"DepthwiseConv2d",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"DepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"FusedDepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]}]},{tfOpName:"Conv3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"Dilation2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"rates",name:"dilations",type:"number[]"},{tfName:"padding",name:"pad",type:"string"}]}],IH=Object.freeze(Object.defineProperty({__proto__:null,json:NH},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const TH=[{tfOpName:"Fill",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"},{start:1,name:"value",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"LinSpace",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"num",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"OneHot",category:"creation",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"depth",type:"number"},{start:2,name:"onValue",type:"number",defaultValue:1},{start:3,name:"offValue",type:"number",defaultValue:0}],attrs:[{tfName:"axis",name:"axis",type:"number",notSupported:!0},{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"Ones",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"OnesLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"RandomStandardNormal",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"RandomUniform",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"minval",name:"minval",type:"number",defaultValue:0},{tfName:"maxval",name:"maxval",type:"number",defaultValue:1},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"RandomUniformInt",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"minval",name:"minval",type:"number"},{tfName:"maxval",name:"maxval",type:"number"},{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0}]},{tfOpName:"Range",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"step",type:"number",defaultValue:0}],attrs:[{tfName:"Tidx",name:"dtype",type:"dtype"}]},{tfOpName:"TruncatedNormal",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"means",name:"mean",type:"number",defaultValue:0},{tfName:"stddev",name:"stdDev",type:"number",defaultValue:1},{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"Zeros",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"ZerosLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"Multinomial",category:"creation",inputs:[{start:0,name:"logits",type:"tensor"},{start:1,name:"numSamples",type:"number"}],attrs:[{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number"},{tfName:"T",name:"dtype",type:"dtype"},{tfName:"output_dtype",name:"output_dtype",type:"dtype"}]}],EH=Object.freeze(Object.defineProperty({__proto__:null,json:TH},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const RH=[{tfOpName:"NonMaxSuppressionV2",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV3",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV4",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"T_threshold",name:"threshold",type:"dtype",notSupported:!0},{tfName:"pad_to_max_output_size",name:"padToMaxOutputSize",type:"bool"}]},{tfOpName:"NonMaxSuppressionV5",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"},{start:5,name:"softNmsSigma",type:"number"}]},{tfOpName:"Where",category:"dynamic",inputs:[{start:0,name:"condition",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ListDiff",category:"dynamic",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],DH=Object.freeze(Object.defineProperty({__proto__:null,json:RH},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const AH=[{tfOpName:"LowerBound",category:"evaluation",inputs:[{start:0,name:"sortedSequence",type:"tensor"},{start:1,name:"values",type:"tensor"}]},{tfOpName:"TopKV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"k",type:"number"}],attrs:[{tfName:"sorted",name:"sorted",type:"bool"}]},{tfOpName:"UpperBound",category:"evaluation",inputs:[{start:0,name:"sortedSequence",type:"tensor"},{start:1,name:"values",type:"tensor"}]},{tfOpName:"Unique",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"UniqueV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]}],_H=Object.freeze(Object.defineProperty({__proto__:null,json:AH},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const OH=[{tfOpName:"PlaceholderWithDefault",category:"graph",inputs:[{start:0,name:"default",type:"tensor"}],attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Placeholder",category:"graph",attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Const",category:"graph"},{tfOpName:"Identity",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IdentityN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Snapshot",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Rank",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Size",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Shape",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"ShapeN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Print",category:"graph",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"data",type:"tensors"}],attrs:[{tfName:"message",name:"message",type:"string"},{tfName:"first_n",name:"firstN",type:"number",notSupported:!0},{tfName:"summarize",name:"summarize",type:"number",defaultValue:3}]},{tfOpName:"NoOp",category:"graph",inputs:[]},{tfOpName:"StopGradient",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"FakeQuantWithMinMaxVars",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"min",name:"min",type:"number"},{tfName:"max",name:"max",type:"number"}]}],FH=Object.freeze(Object.defineProperty({__proto__:null,json:OH},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const LH=[{tfOpName:"HashTable",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"HashTableV2",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"LookupTableImport",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableImportV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFind",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFindV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableSize",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"}]},{tfOpName:"LookupTableSizeV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"}]},{tfOpName:"InitializeTable",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}]},{tfOpName:"InitializeTableV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}]}],PH=Object.freeze(Object.defineProperty({__proto__:null,json:LH},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const zH=[{tfOpName:"ResizeBilinear",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"half_pixel_centers",name:"halfPixelCenters",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ResizeNearestNeighbor",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"half_pixel_centers",name:"halfPixelCenters",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"CropAndResize",category:"image",inputs:[{start:0,name:"image",type:"tensor"},{start:1,name:"boxes",type:"tensor"},{start:2,name:"boxInd",type:"tensor"},{start:3,name:"cropSize",type:"number[]"}],attrs:[{tfName:"method",name:"method",type:"string"},{tfName:"extrapolation_value",name:"extrapolationValue",type:"number"}]},{tfOpName:"ImageProjectiveTransformV3",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"transforms",type:"tensor"},{start:2,name:"outputShape",type:"number[]"},{start:3,name:"fillValue",type:"number"}],attrs:[{tfName:"interpolation",name:"interpolation",type:"string"},{tfName:"fill_mode",name:"fillMode",type:"string"}]}],MH=Object.freeze(Object.defineProperty({__proto__:null,json:zH},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const BH=[{tfOpName:"Equal",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NotEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Greater",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"GreaterEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Less",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LessEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalAnd",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalNot",category:"logical",inputs:[{start:0,name:"a",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalOr",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Select",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SelectV2",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BitwiseAnd",category:"logical",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}]}],VH=Object.freeze(Object.defineProperty({__proto__:null,json:BH},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const WH=[{tfOpName:"_FusedMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"leakyrelu_alpha",name:"leakyreluAlpha",type:"number",defaultValue:.2},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMulV2",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Transpose",category:"matrices",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"perm",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Einsum",category:"matrices",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}],attrs:[{tfName:"equation",name:"equation",type:"string"},{tfName:"N",name:"n",type:"number",defaultValue:2},{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"MatrixBandPart",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"numLower",type:"tensor"},{start:1,name:"numUpper",type:"tensor"}]}],UH=Object.freeze(Object.defineProperty({__proto__:null,json:WH},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const GH=[{tfOpName:"EuclideanNorm",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool",defaultValue:!1}]},{tfOpName:"FusedBatchNorm",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV2",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV3",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"LRN",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"depth_radius",name:"radius",type:"number",defaultValue:5},{tfName:"bias",name:"bias",type:"number",defaultValue:1},{tfName:"alpha",name:"alpha",type:"number",defaultValue:1},{tfName:"beta",name:"beta",type:"number",defaultValue:.5}]},{tfOpName:"Softmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"LogSoftmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]}],HH=Object.freeze(Object.defineProperty({__proto__:null,json:GH},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const jH=[{tfOpName:"Bincount",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"size",type:"number"},{start:2,name:"weights",type:"tensor"}]},{tfOpName:"DenseBincount",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"size",type:"number"},{start:2,name:"weights",type:"tensor"}],attrs:[{tfName:"binary_output",name:"binaryOutput",type:"bool"}]},{tfOpName:"Max",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Mean",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Min",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Sum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"All",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Any",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"ArgMax",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"ArgMin",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"Prod",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cumprod",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}],attrs:[{tfName:"exclusive",name:"exclusive",type:"bool"},{tfName:"reverse",name:"reverse",type:"bool"}]},{tfOpName:"Cumsum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}],attrs:[{tfName:"exclusive",name:"exclusive",type:"bool"},{tfName:"reverse",name:"reverse",type:"bool"}]}],KH=Object.freeze(Object.defineProperty({__proto__:null,json:jH},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const qH=[{tfOpName:"ConcatV2",category:"slice_join",inputs:[{start:0,end:-1,name:"tensors",type:"tensors"},{start:-1,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"Concat",category:"slice_join",inputs:[{start:1,end:0,name:"tensors",type:"tensors"},{start:0,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"GatherV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"axis",type:"number",defaultValue:0}],attrs:[{tfName:"batch_dims",name:"batchDims",type:"number",defaultValue:0}]},{tfOpName:"Gather",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",notSupported:!0}]},{tfOpName:"Reverse",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"dims",type:"bool[]"}]},{tfOpName:"ReverseV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}]},{tfOpName:"Slice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"size",type:"number[]"}]},{tfOpName:"StridedSlice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"end",type:"number[]"},{start:3,name:"strides",type:"number[]"}],attrs:[{tfName:"begin_mask",name:"beginMask",type:"number",defaultValue:0},{tfName:"end_mask",name:"endMask",type:"number",defaultValue:0},{tfName:"new_axis_mask",name:"newAxisMask",type:"number",defaultValue:0},{tfName:"ellipsis_mask",name:"ellipsisMask",type:"number",defaultValue:0},{tfName:"shrink_axis_mask",name:"shrinkAxisMask",type:"number",defaultValue:0}]},{tfOpName:"Pack",category:"slice_join",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0}]},{tfOpName:"Unpack",category:"slice_join",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0},{tfName:"num",name:"num",type:"number",defaultValue:0,notSupported:!0}]},{tfOpName:"Tile",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"reps",type:"number[]"}]},{tfOpName:"Split",category:"slice_join",inputs:[{start:0,name:"axis",type:"number",defaultValue:0},{start:1,name:"x",type:"tensor"}],attrs:[{tfName:"num_split",name:"numOrSizeSplits",type:"number",defaultValue:1}]},{tfOpName:"SplitV",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"numOrSizeSplits",type:"number[]"},{start:2,name:"axis",type:"number",defaultValue:0}]},{tfOpName:"ScatterNd",category:"slice_join",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"values",type:"tensor"},{start:2,name:"shape",type:"number[]"}]},{tfOpName:"GatherNd",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}]},{tfOpName:"SparseToDense",category:"slice_join",inputs:[{start:0,name:"sparseIndices",type:"tensor"},{start:1,name:"outputShape",type:"number[]"},{start:2,name:"sparseValues",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",defaultValue:!1,notSupported:!0}]},{tfOpName:"TensorScatterUpdate",category:"slice_join",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"values",type:"tensor"}]}],XH=Object.freeze(Object.defineProperty({__proto__:null,json:qH},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const YH=[{tfOpName:"SparseFillEmptyRows",category:"sparse",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"values",type:"tensor"},{start:2,name:"denseShape",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}]},{tfOpName:"SparseReshape",category:"sparse",inputs:[{start:0,name:"inputIndices",type:"tensor"},{start:1,name:"inputShape",type:"tensor"},{start:2,name:"newShape",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SparseSegmentMean",category:"sparse",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"segmentIds",type:"tensor"}]},{tfOpName:"SparseSegmentSum",category:"sparse",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"segmentIds",type:"tensor"}]}],QH=Object.freeze(Object.defineProperty({__proto__:null,json:YH},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ZH=[{tfOpName:"FFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"RFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]},{tfOpName:"IRFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]}],JH=Object.freeze(Object.defineProperty({__proto__:null,json:ZH},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const e5=[{tfOpName:"StaticRegexReplace",category:"string",inputs:[{start:0,name:"input",type:"tensor"}],attrs:[{tfName:"pattern",name:"pattern",type:"string"},{tfName:"rewrite",name:"rewrite",type:"string"},{tfName:"replace_global",name:"replaceGlobal",type:"bool"}]},{tfOpName:"StringNGrams",category:"string",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"dataSplits",type:"tensor"}],attrs:[{tfName:"separator",name:"separator",type:"string"},{tfName:"ngram_widths",name:"nGramWidths",type:"number[]"},{tfName:"left_pad",name:"leftPad",type:"string"},{tfName:"right_pad",name:"rightPad",type:"string"},{tfName:"pad_width",name:"padWidth",type:"number"},{tfName:"preserve_short_sequences",name:"preserveShortSequences",type:"bool"}],outputs:["ngrams","ngrams_splits"]},{tfOpName:"StringSplit",category:"string",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"delimiter",type:"tensor"}],attrs:[{tfName:"skip_empty",name:"skipEmpty",type:"bool"}],outputs:["indices","values","shape"]},{tfOpName:"StringToHashBucketFast",category:"string",inputs:[{start:0,name:"input",type:"tensor"}],attrs:[{tfName:"num_buckets",name:"numBuckets",type:"number"}]}],t5=Object.freeze(Object.defineProperty({__proto__:null,json:e5},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const n5=[{tfOpName:"Cast",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"SrcT",name:"sdtype",type:"dtype",notSupported:!0},{tfName:"DstT",name:"dtype",type:"dtype"}]},{tfOpName:"ExpandDims",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"MirrorPad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"mode",name:"mode",type:"string"}]},{tfOpName:"Pad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"constant_value",name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"PadV2",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"},{start:2,name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"Reshape",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}]},{tfOpName:"EnsureShape",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}]},{tfOpName:"Squeeze",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"axis",tfDeprecatedName:"squeeze_dims",name:"axis",type:"number[]"}]},{tfOpName:"SpaceToBatchND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"paddings",type:"number[]"}]},{tfOpName:"BatchToSpaceND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"crops",type:"number[]"}]},{tfOpName:"DepthToSpace",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"block_size",name:"blockSize",type:"number"},{tfName:"data_format",name:"dataFormat",type:"string"}]},{tfOpName:"BroadcastTo",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}],attrs:[]},{tfOpName:"BroadcastArgs",category:"transformation",inputs:[{start:0,name:"s0",type:"tensor"},{start:1,name:"s1",type:"tensor"}],attrs:[]}],s5=Object.freeze(Object.defineProperty({__proto__:null,json:n5},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class jS{static get Instance(){return this._instance||(this._instance=new this)}constructor(){const e=[vH,kH,CH,IH,EH,DH,_H,FH,PH,MH,VH,UH,HH,KH,XH,QH,JH,t5,s5],n=[].concat(...e.map(s=>s.json));this.opMappers=n.reduce((s,r)=>(s[r.tfOpName]=r,s),{})}transformGraph(e,n={}){const s=e.node,r=[],o=[],a=[],i=s.reduce((m,y)=>(m[y.name]=this.mapNode(y),y.op.startsWith("Placeholder")?r.push(m[y.name]):y.op==="Const"?o.push(m[y.name]):(y.input==null||y.input.length===0)&&a.push(m[y.name]),m),{});let l=[];const u=[];let c={},h={};n!=null&&(c=this.mapSignatureEntries(n.inputs),h=this.mapSignatureEntries(n.outputs));const d=Object.keys(i);d.forEach(m=>{const y=i[m];y.inputNames.forEach((g,x)=>{const[w,,b]=zr(g),v=i[w];if(v.outputs!=null){const k=v.outputs.indexOf(b);if(k!==-1){const $=`${w}:${k}`;y.inputNames[x]=$}}y.inputs.push(v),v.children.push(y)})}),Object.keys(h).length===0?d.forEach(m=>{const y=i[m];y.children.length===0&&u.push(y)}):Object.keys(h).forEach(m=>{const[y]=zr(m),g=i[y];g!=null&&(g.signatureKey=h[m],u.push(g))}),Object.keys(c).length>0?Object.keys(c).forEach(m=>{const[y]=zr(m),g=i[y];g&&(g.signatureKey=c[m],l.push(g))}):l=r;let p={};e.library!=null&&e.library.function!=null&&(p=e.library.function.reduce((m,y)=>(m[y.signature.name]=this.mapFunction(y),m),{}));const f={nodes:i,inputs:l,outputs:u,weights:o,placeholders:r,signature:n,functions:p};return a.length>0&&(f.initNodes=a),f}mapSignatureEntries(e){return Object.keys(e||{}).reduce((n,s)=>(n[e[s].name]=s,n),{})}mapNode(e){const n=iR(e.op)||this.opMappers[e.op]||{};e.attr==null&&(e.attr={});const s={name:e.name,op:e.op,category:n.category,inputNames:(e.input||[]).map(r=>r.startsWith("^")?r.slice(1):r),inputs:[],children:[],inputParams:{},attrParams:{},rawAttrs:e.attr,outputs:n.outputs};return n.inputs!=null&&(s.inputParams=n.inputs.reduce((r,o)=>(r[o.name]={type:o.type,inputIndexStart:o.start,inputIndexEnd:o.end},r),{})),n.attrs!=null&&(s.attrParams=n.attrs.reduce((r,o)=>{const a=o.type;let i;switch(o.type){case"string":i=i0(e.attr,o.tfName,o.defaultValue),i===void 0&&o.tfDeprecatedName&&(i=i0(e.attr,o.tfDeprecatedName,o.defaultValue));break;case"string[]":i=f0(e.attr,o.tfName,o.defaultValue),i===void 0&&o.tfDeprecatedName&&(i=f0(e.attr,o.tfDeprecatedName,o.defaultValue));break;case"number":i=u0(e.attr,o.tfName,o.defaultValue||0),i===void 0&&o.tfDeprecatedName&&(i=u0(e.attr,o.tfDeprecatedName,o.defaultValue));break;case"number[]":i=p0(e.attr,o.tfName,o.defaultValue),i===void 0&&o.tfDeprecatedName&&(i=p0(e.attr,o.tfDeprecatedName,o.defaultValue));break;case"bool":i=l0(e.attr,o.tfName,o.defaultValue),i===void 0&&o.tfDeprecatedName&&(i=l0(e.attr,o.tfDeprecatedName,o.defaultValue));break;case"bool[]":i=g0(e.attr,o.tfName,o.defaultValue),i===void 0&&o.tfDeprecatedName&&(i=g0(e.attr,o.tfDeprecatedName,o.defaultValue));break;case"shape":i=d0(e.attr,o.tfName,o.defaultValue),i===void 0&&o.tfDeprecatedName&&(i=d0(e.attr,o.tfDeprecatedName,o.defaultValue));break;case"shape[]":i=m0(e.attr,o.tfName,o.defaultValue),i===void 0&&o.tfDeprecatedName&&(i=m0(e.attr,o.tfDeprecatedName,o.defaultValue));break;case"dtype":i=c0(e.attr,o.tfName,o.defaultValue),i===void 0&&o.tfDeprecatedName&&(i=c0(e.attr,o.tfDeprecatedName,o.defaultValue));break;case"dtype[]":i=h0(e.attr,o.tfName,o.defaultValue),i===void 0&&o.tfDeprecatedName&&(i=h0(e.attr,o.tfDeprecatedName,o.defaultValue));break;case"func":i=KS(e.attr,o.tfName,o.defaultValue),i===void 0&&o.tfDeprecatedName&&(i=KS(e.attr,o.tfDeprecatedName,o.defaultValue));break;case"tensor":case"tensors":break;default:throw new Error(`Unsupported param type: ${o.type} for op: ${e.op}`)}return r[o.name]={value:i,type:a},r},{})),s}mapFunction(e){const n=e.nodeDef,s=[],r=[];let o={};n!=null&&(o=n.reduce((h,d)=>(h[d.name]=this.mapNode(d),d.op==="Const"&&r.push(h[d.name]),h),{}));const a=[],i=[];e.signature.inputArg.forEach(h=>{const[d]=zr(h.name),p={name:d,op:"Placeholder",inputs:[],inputNames:[],category:"graph",inputParams:{},attrParams:{dtype:{value:gw(h.type),type:"dtype"}},children:[]};p.signatureKey=h.name,a.push(p),o[d]=p}),Object.keys(o).forEach(h=>{const d=o[h];d.inputNames.forEach((p,f)=>{const[m,,y]=zr(p),g=o[m];if(g.outputs!=null){const x=g.outputs.indexOf(y);if(x!==-1){const w=`${m}:${x}`;d.inputNames[f]=w}}d.inputs.push(g),g.children.push(d)})});const u=e.ret;e.signature.outputArg.forEach(h=>{const[d,p]=zr(u[h.name]),f=o[d];f!=null&&(f.defaultOutput=p,i.push(f))});const c=this.mapArgsToSignature(e);return{nodes:o,inputs:a,outputs:i,weights:r,placeholders:s,signature:c}}mapArgsToSignature(e){return{methodName:e.signature.name,inputs:e.signature.inputArg.reduce((n,s)=>(n[s.name]=this.mapArgToTensorInfo(s),n),{}),outputs:e.signature.outputArg.reduce((n,s)=>(n[s.name]=this.mapArgToTensorInfo(s,e.ret),n),{})}}mapArgToTensorInfo(e,n){let s=e.name;return n!=null&&(s=n[s]),{name:s,dtype:e.type}}}function r5(t){const e=G().global;if(typeof e.atob<"u")return e.atob(t);if(typeof Buffer<"u")return new Buffer(t,"base64").toString();throw new Error("Unable to decode base64 in this environment. Missing built-in atob() or Buffer()")}function lR(t,e){const n=Array.isArray(t)?String.fromCharCode.apply(null,t):r5(t);return e?n:n.toLowerCase()}function i0(t,e,n,s=!1){const r=t[e];return r!=null?lR(r.s,s):n}function l0(t,e,n){const s=t[e];return s?s.b:n}function u0(t,e,n){const s=t[e]||{},r=s.i!=null?s.i:s.f!=null?s.f:n;return typeof r=="number"?r:parseInt(r,10)}function gw(t){switch(typeof t=="string"&&(t=ws[t]),t){case ws.DT_FLOAT:case ws.DT_HALF:return"float32";case ws.DT_INT32:case ws.DT_INT64:case ws.DT_INT8:case ws.DT_UINT8:return"int32";case ws.DT_BOOL:return"bool";case ws.DT_DOUBLE:return"float32";case ws.DT_STRING:return"string";default:return null}}function KS(t,e,n){const s=t[e];return s&&s.func?s.func.name:n}function c0(t,e,n){const s=t[e];return s&&s.type?gw(s.type):n}function h0(t,e,n){const s=t[e];return s&&s.list&&s.list.type?s.list.type.map(r=>gw(r)):n}function uR(t){if(!t.unknownRank)return t.dim!=null?t.dim.map(e=>typeof e.size=="number"?e.size:parseInt(e.size,10)):[]}function d0(t,e,n){const s=t[e];return s&&s.shape?uR(s.shape):n}function p0(t,e,n){const s=t[e];return s?((s.list.f&&s.list.f.length?s.list.f:s.list.i)||[]).map(r=>typeof r=="number"?r:parseInt(r,10)):n}function f0(t,e,n,s=!1){const r=t[e];return r&&r.list&&r.list.s?r.list.s.map(o=>lR(o,s)):n}function m0(t,e,n){const s=t[e];return s&&s.list&&s.list.shape?s.list.shape.map(r=>uR(r)):n}function g0(t,e,n){const s=t[e];return s&&s.list&&s.list.b?s.list.b:n}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class o5{constructor(e,n,s){this.node=e,this.tensorMap=n,this.context=s,this.inputs=[],this.attrs={},this.inputs=e.inputNames.map(r=>this.getInput(r)),e.rawAttrs!=null&&(this.attrs=Object.keys(e.rawAttrs).reduce((r,o)=>(r[o]=this.getAttr(o),r),{}))}getInput(e){return Qt(e,this.tensorMap,this.context)}getAttr(e,n){const s=this.node.rawAttrs[e];if(s.tensor!=null)return Qt(e,this.tensorMap,this.context);if(s.i!=null||s.f!=null)return u0(this.node.rawAttrs,e,n);if(s.s!=null)return i0(this.node.rawAttrs,e,n);if(s.b!=null)return l0(this.node.rawAttrs,e,n);if(s.shape!=null)return d0(this.node.rawAttrs,e,n);if(s.type!=null)return c0(this.node.rawAttrs,e,n);if(s.list!=null){if(s.list.i!=null||s.list.f!=null)return p0(this.node.rawAttrs,e,n);if(s.list.s!=null)return f0(this.node.rawAttrs,e,n);if(s.list.shape!=null)return m0(this.node.rawAttrs,e,n);if(s.list.b!=null)return g0(this.node.rawAttrs,e,n);if(s.list.type!=null)return h0(this.node.rawAttrs,e,n)}return n}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const sn=Object.freeze(Object.defineProperty({__proto__:null,OP_SCOPE_SUFFIX:AN,abs:Dt,acos:qN,acosh:XN,add:te,addN:E3,all:Ax,any:Qd,argMax:el,argMin:YN,asin:QN,asinh:ZN,atan:JN,atan2:eI,atanh:tI,avgPool:Wf,avgPool3d:nI,basicLSTMCell:Z3,batchNorm:Xc,batchNorm2d:sI,batchNorm3d:rI,batchNorm4d:oI,batchToSpaceND:Uf,bincount:aI,bitwiseAnd:iL,booleanMaskAsync:GM,broadcastArgs:uL,broadcastTo:Mi,buffer:Ae,cast:he,ceil:iI,clipByValue:Yn,clone:Hr,complex:Oo,concat:Rt,concat1d:lI,concat2d:uI,concat3d:cI,concat4d:hI,conv1d:Ox,conv2d:Lo,conv2dTranspose:Lx,conv3d:dI,conv3dTranspose:fI,cos:Gf,cosh:Px,cosineWindow:fb,cumprod:Zd,cumsum:zx,denseBincount:jy,depthToSpace:mI,depthwiseConv2d:Yc,diag:AL,dilation2d:gI,div:we,divNoNan:yI,dot:xI,dropout:HI,einsum:pi,elu:Qc,enclosingPowerOfTwo:jI,ensureShape:WL,equal:or,erf:bI,euclideanNorm:SI,exp:us,expandDims:wn,expm1:kI,eye:Bx,fft:sm,fill:bl,floor:Jc,floorDiv:Dx,fused:dB,gather:eh,gatherND:eB,greater:ts,greaterEqual:Zo,ifft:Pu,imag:Hf,image:wr,inTopKAsync:rB,irfft:lb,isFinite:$I,isInf:CI,isNaN:NI,leakyRelu:jf,less:Ou,lessEqual:Ka,linalg:eT,linspace:fP,localResponseNormalization:II,log:cs,log1p:Kf,logSigmoid:TI,logSoftmax:Vx,logSumExp:Wx,logicalAnd:Rr,logicalNot:qf,logicalOr:Ux,logicalXor:EI,losses:UV,lowerBound:RP,matMul:Pe,max:Ls,maxPool:Xf,maxPool3d:RI,maxPoolWithArgmax:OP,maximum:ro,mean:xt,meshgrid:PP,min:_u,minimum:Oa,mirrorPad:DI,mod:AI,moments:Yf,movingAverage:KM,mul:O,multiRNNCell:UP,multinomial:HP,neg:it,norm:Zc,notEqual:sl,oneHot:Hx,ones:os,onesLike:hs,op:D,outerProduct:YP,pad:Jo,pad1d:JP,pad2d:tz,pad3d:sz,pad4d:oz,pool:_I,pow:Po,prelu:Zf,print:jN,prod:OI,raggedGather:pz,raggedRange:mz,raggedTensorToTensor:yz,rand:bz,randomGamma:Mz,randomNormal:Jx,randomStandardNormal:Wz,randomUniform:Xa,randomUniformInt:Hz,range:rl,real:Fu,reciprocal:LI,relu:_r,relu6:eb,reshape:F,reverse:Bs,reverse1d:Zz,reverse2d:eM,reverse3d:nM,reverse4d:rM,rfft:rm,round:tb,rsqrt:nb,scalar:Se,scatterND:XM,searchSorted:Gx,selu:sb,separableConv2d:rb,setdiff1dAsync:cM,sigmoid:Nr,sign:PI,signal:WV,sin:ob,sinh:ab,slice:Ve,slice1d:em,slice2d:ib,slice3d:tm,slice4d:Lu,softmax:nm,softplus:wl,spaceToBatchND:Qf,sparse:GV,sparseToDense:ZM,spectral:VV,split:qn,sqrt:dn,square:Je,squaredDifference:ub,squeeze:Ya,stack:ds,step:vl,stridedSlice:zI,string:HV,sub:fe,sum:ye,tan:MI,tanh:tl,tensor:Fs,tensor1d:Sn,tensor2d:du,tensor3d:RM,tensor4d:DM,tensor5d:AM,tensor6d:_M,tensorScatterUpdate:FM,tile:Rs,topk:VI,transpose:We,truncatedNormal:hb,unique:WI,unsortedSegmentSum:db,unstack:Vs,upperBound:VM,variable:UI,where:un,whereAsync:GI,zeros:Ot,zerosLike:Ue},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const a5=(t,e,n,s=sn)=>{switch(t.op){case"BiasAdd":case"AddV2":case"Add":return[s.add(S("a",t,e,n),S("b",t,e,n))];case"AddN":return[s.addN(S("tensors",t,e,n))];case"FloorMod":case"Mod":return[s.mod(S("a",t,e,n),S("b",t,e,n))];case"Mul":return[s.mul(S("a",t,e,n),S("b",t,e,n))];case"RealDiv":case"Div":return[s.div(S("a",t,e,n),S("b",t,e,n))];case"DivNoNan":return[s.divNoNan(S("a",t,e,n),S("b",t,e,n))];case"FloorDiv":return[s.floorDiv(S("a",t,e,n),S("b",t,e,n))];case"Sub":return[s.sub(S("a",t,e,n),S("b",t,e,n))];case"Minimum":return[s.minimum(S("a",t,e,n),S("b",t,e,n))];case"Maximum":return[s.maximum(S("a",t,e,n),S("b",t,e,n))];case"Pow":return[s.pow(S("a",t,e,n),S("b",t,e,n))];case"SquaredDifference":return[s.squaredDifference(S("a",t,e,n),S("b",t,e,n))];default:throw TypeError(`Node type ${t.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const i5=(t,e,n,s=sn)=>{switch(t.op){case"Abs":case"ComplexAbs":return[s.abs(S("x",t,e,n))];case"Acos":return[s.acos(S("x",t,e,n))];case"Acosh":return[s.acosh(S("x",t,e,n))];case"Asin":return[s.asin(S("x",t,e,n))];case"Asinh":return[s.asinh(S("x",t,e,n))];case"Atan":return[s.atan(S("x",t,e,n))];case"Atan2":return[s.atan2(S("x",t,e,n),S("y",t,e,n))];case"Atanh":return[s.atanh(S("x",t,e,n))];case"Ceil":return[s.ceil(S("x",t,e,n))];case"Complex":return[s.complex(S("real",t,e,n),S("imag",t,e,n))];case"Cos":return[s.cos(S("x",t,e,n))];case"Cosh":return[s.cosh(S("x",t,e,n))];case"Elu":return[s.elu(S("x",t,e,n))];case"Erf":return[s.erf(S("x",t,e,n))];case"Exp":return[s.exp(S("x",t,e,n))];case"Expm1":return[s.expm1(S("x",t,e,n))];case"Floor":return[s.floor(S("x",t,e,n))];case"Log":return[s.log(S("x",t,e,n))];case"Log1p":return[s.log1p(S("x",t,e,n))];case"Imag":return[s.imag(S("x",t,e,n))];case"Neg":return[s.neg(S("x",t,e,n))];case"Reciprocal":return[s.reciprocal(S("x",t,e,n))];case"Real":return[s.real(S("x",t,e,n))];case"Relu":return[s.relu(S("x",t,e,n))];case"Round":return[s.round(S("x",t,e,n))];case"Selu":return[s.selu(S("x",t,e,n))];case"Sigmoid":return[s.sigmoid(S("x",t,e,n))];case"Sin":return[s.sin(S("x",t,e,n))];case"Sign":return[s.sign(S("x",t,e,n))];case"Sinh":return[s.sinh(S("x",t,e,n))];case"Softplus":return[s.softplus(S("x",t,e,n))];case"Sqrt":return[s.sqrt(S("x",t,e,n))];case"Square":return[s.square(S("x",t,e,n))];case"Tanh":return[s.tanh(S("x",t,e,n))];case"Tan":return[s.tan(S("x",t,e,n))];case"ClipByValue":return[s.clipByValue(S("x",t,e,n),S("clipValueMin",t,e,n),S("clipValueMax",t,e,n))];case"Relu6":return[s.relu6(S("x",t,e,n))];case"Rsqrt":return[s.rsqrt(Qt(t.inputNames[0],e,n))];case"LeakyRelu":return[s.leakyRelu(S("x",t,e,n),S("alpha",t,e,n))];case"Prelu":return[s.prelu(S("x",t,e,n),S("alpha",t,e,n))];case"IsNan":return[s.isNaN(Qt(t.inputNames[0],e,n))];case"IsInf":return[s.isInf(Qt(t.inputNames[0],e,n))];case"IsFinite":return[s.isFinite(Qt(t.inputNames[0],e,n))];default:throw TypeError(`Node type ${t.op} is not implemented`)}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ss(t,e,n=""){if(!(typeof t=="number"||typeof e=="number")){C(t.length===e.length,()=>n+` Shapes ${t} and ${e} must match`);for(let s=0;s<t.length;s++){const r=t[s],o=e[s];C(r<0||o<0||r===o,()=>n+` Shapes ${t} and ${e} must match`)}}}function qS(t){return!(typeof t=="number"||t.some(e=>e<0))}function Hl(t,e,n){let s=y0(t,n);const r=!qS(s);if(r&&e.length===0)throw new Error(`Tried to calculate elements of an empty list with non-fully-defined elementShape: ${s}`);if(r&&e.forEach(o=>{s=y0(o.shape,s)}),!qS(s))throw new Error(`Non-fully-defined elementShape: ${s}`);return s}function y0(t,e){if(typeof t=="number")return e;if(typeof e=="number")return t;if(t.length!==e.length)throw new Error(`Incompatible ranks during merge: ${t} vs. ${e}`);const n=[];for(let s=0;s<t.length;++s){const r=t[s],o=e[s];if(r>=0&&o>=0&&r!==o)throw new Error(`Incompatible shape during merge: ${t} vs. ${e}`);n[s]=r>=0?r:o}return n}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class l5{constructor(e,n,s,r,o,a,i){this.name=e,this.dtype=n,this.maxSize=s,this.elementShape=r,this.identicalElementShapes=o,this.dynamicSize=a,this.clearAfterRead=i,this.tensors=[],this.closed_=!1,this.idTensor=Se(0),Ht(this.idTensor)}get id(){return this.idTensor.id}get closed(){return this.closed_}clearAndClose(e){this.tensors.forEach(n=>{(e==null||!e.has(n.tensor.id))&&n.tensor.dispose()}),this.tensors=[],this.closed_=!0,this.idTensor.dispose()}size(){return this.tensors.length}read(e){if(this.closed_)throw new Error(`TensorArray ${this.name} has already been closed.`);if(e<0||e>=this.size())throw new Error(`Tried to read from index ${e}, but array size is: ${this.size()}`);const n=this.tensors[e];if(n.cleared)throw new Error(`TensorArray ${this.name}: Could not read index ${e} twice because it was cleared after a previous read (perhaps try setting clear_after_read = false?).`);return this.clearAfterRead&&(n.cleared=!0),n.read=!0,n.tensor}readMany(e){return e.map(n=>this.read(n))}write(e,n){if(this.closed_)throw new Error(`TensorArray ${this.name} has already been closed.`);if(e<0||!this.dynamicSize&&e>=this.maxSize)throw new Error(`Tried to write to index ${e}, but array is not resizeable and size is: ${this.maxSize}`);const s=this.tensors[e]||{};if(n.dtype!==this.dtype)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e},
          because the value dtype is ${n.dtype}, but TensorArray dtype is ${this.dtype}.`);if(this.size()===0&&(this.elementShape==null||this.elementShape.length===0)&&(this.elementShape=n.shape),Ss(this.elementShape,n.shape,`TensorArray ${this.name}: Could not write to TensorArray index ${e}.`),s.read)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e}, because it has already been read.`);if(s.written)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e}, because it has already been written.`);s.tensor=n,Ht(n),s.written=!0,this.tensors[e]=s}writeMany(e,n){if(e.length!==n.length)throw new Error(`TensorArray ${this.name}: could not write multiple tensors,because the index size: ${e.length} is not the same as tensors size: ${n.length}.`);e.forEach((s,r)=>this.write(s,n[r]))}gather(e,n){if(n&&n!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but gather requested dtype ${n}`);if(e)e=e.slice(0,this.size());else{e=[];for(let r=0;r<this.size();r++)e.push(r)}if(e.length===0)return Fs([],[0].concat(this.elementShape));const s=this.readMany(e);return Ss(this.elementShape,s[0].shape,"TensorArray shape mismatch: "),ds(s,0)}concat(e){if(e&&e!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but concat requested dtype ${e}`);if(this.size()===0)return Fs([],[0].concat(this.elementShape));const n=[];for(let r=0;r<this.size();r++)n.push(r);const s=this.readMany(n);return Ss(this.elementShape,s[0].shape,`TensorArray shape mismatch: tensor array shape (${this.elementShape}) vs first tensor shape (${s[0].shape})`),Rt(s,0)}scatter(e,n){if(n.dtype!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but tensor has dtype ${n.dtype}`);if(e.length!==n.shape[0])throw new Error(`Expected len(indices) == tensor.shape[0], but saw: ${e.length} vs. ${n.shape[0]}`);const s=Math.max(...e);if(!this.dynamicSize&&s>=this.maxSize)throw new Error(`Max index must be < array size (${s}  vs. ${this.maxSize})`);this.writeMany(e,Vs(n,0))}split(e,n){if(n.dtype!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but tensor has dtype ${n.dtype}`);let s=0;const r=e.map(l=>(s+=l,s));if(s!==n.shape[0])throw new Error(`Expected sum of lengths to be equal to
          tensor.shape[0], but sum of lengths is
        ${s}, and tensor's shape is: ${n.shape}`);if(!this.dynamicSize&&e.length!==this.maxSize)throw new Error(`TensorArray's size is not equal to the size of lengths (${this.maxSize} vs. ${e.length}), and the TensorArray is not marked as dynamically resizeable`);const o=s===0?0:n.size/s,a=[];V(()=>{n=F(n,[1,s,o]);for(let l=0;l<e.length;++l){const c=[0,l===0?0:r[l-1],0],h=[1,e[l],o];a[l]=F(Ve(n,c,h),this.elementShape)}return a});const i=[];for(let l=0;l<e.length;l++)i[l]=l;this.writeMany(i,a)}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Pa{get id(){return this.idTensor.id}constructor(e,n,s,r=-1){this.tensors=e,this.elementShape=n,this.elementDtype=s,e!=null&&e.forEach(o=>{if(s!==o.dtype)throw new Error(`Invalid data types; op elements ${s}, but list elements ${o.dtype}`);Ss(n,o.shape,"TensorList shape mismatch: "),Ht(o)}),this.idTensor=Se(0),this.maxNumElements=r,Ht(this.idTensor)}copy(){return new Pa([...this.tensors],this.elementShape,this.elementDtype)}clearAndClose(e){this.tensors.forEach(n=>{(e==null||!e.has(n.id))&&n.dispose()}),this.tensors.length=0,this.idTensor.dispose()}size(){return this.tensors.length}stack(e,n,s=-1){if(n!==this.elementDtype)throw new Error(`Invalid data types; op elements ${n}, but list elements ${this.elementDtype}`);if(s!==-1&&this.tensors.length!==s)throw new Error(`Operation expected a list with ${s} elements but got a list with ${this.tensors.length} elements.`);Ss(e,this.elementShape,"TensorList shape mismatch: ");const r=Hl(this.elementShape,this.tensors,e);return V(()=>{const o=this.tensors.map(a=>F(a,r));return ds(o,0)})}popBack(e,n){if(n!==this.elementDtype)throw new Error(`Invalid data types; op elements ${n}, but list elements ${this.elementDtype}`);if(this.size()===0)throw new Error("Trying to pop from an empty list.");const s=Hl(this.elementShape,this.tensors,e),r=this.tensors.pop();return r.kept=!1,Ss(r.shape,e,"TensorList shape mismatch: "),F(r,s)}pushBack(e){if(e.dtype!==this.elementDtype)throw new Error(`Invalid data types; op elements ${e.dtype}, but list elements ${this.elementDtype}`);if(Ss(e.shape,this.elementShape,"TensorList shape mismatch: "),this.maxNumElements===this.size())throw new Error("Trying to push element into a full list.");Ht(e),this.tensors.push(e)}resize(e){if(e<0)throw new Error(`TensorListResize expects size to be non-negative. Got: ${e}`);if(this.maxNumElements!==-1&&e>this.maxNumElements)throw new Error(`TensorListResize input size ${e} is greater maxNumElement ${this.maxNumElements}.`);const n=new Pa([],this.elementShape,this.elementDtype,this.maxNumElements);n.tensors.length=e;for(let s=0;s<Math.min(this.tensors.length,e);++s)n.tensors[s]=this.tensors[s];return n}getItem(e,n,s){if(s!==this.elementDtype)throw new Error(`Invalid data types; op elements ${s}, but list elements ${this.elementDtype}`);if(e<0||e>this.tensors.length)throw new Error(`Trying to access element ${e} in a list with ${this.tensors.length} elements.`);if(this.tensors[e]==null)throw new Error(`element at index ${e} is null.`);Ss(this.tensors[e].shape,n,"TensorList shape mismatch: ");const r=Hl(this.elementShape,this.tensors,n);return F(this.tensors[e],r)}setItem(e,n){if(n.dtype!==this.elementDtype)throw new Error(`Invalid data types; op elements ${n.dtype}, but list elements ${this.elementDtype}`);if(e<0||this.maxNumElements!==-1&&e>=this.maxNumElements)throw new Error(`Trying to set element ${e} in a list with max ${this.maxNumElements} elements.`);Ss(this.elementShape,n.shape,"TensorList shape mismatch: "),Ht(n),this.tensors[e]!=null&&(this.tensors[e].kept=!1),this.tensors[e]=n}gather(e,n,s){if(n!==this.elementDtype)throw new Error(`Invalid data types; op elements ${n}, but list elements ${this.elementDtype}`);Ss(this.elementShape,s,"TensorList shape mismatch: "),e=e.slice(0,this.size());const r=Hl(this.elementShape,this.tensors,s);return e.length===0?Fs([],[0].concat(r)):V(()=>{const o=e.map(a=>F(this.tensors[a],r));return ds(o,0)})}concat(e,n){if(e&&e!==this.elementDtype)throw new Error(`TensorList dtype is ${this.elementDtype} but concat requested dtype ${e}`);Ss(this.elementShape,n,"TensorList shape mismatch: ");const s=Hl(this.elementShape,this.tensors,n);return this.size()===0?Fs([],[0].concat(s)):V(()=>{const r=this.tensors.map(o=>F(o,s));return Rt(r,0)})}}function u5(t,e,n){const s=t.dtype;if(t.shape.length<1)throw new Error(`Tensor must be at least a vector, but saw shape: ${t.shape}`);if(t.dtype!==n)throw new Error(`Invalid data types; op elements ${t.dtype}, but list elements ${n}`);const r=t.shape.slice(1);Ss(r,e,"TensorList shape mismatch: ");const o=Vs(t);return new Pa(o,e,s)}function c5(t,e,n,s){return new Pa([],t,e,s)}function h5(t,e,n,s){if(e.length!==t.shape[0])throw new Error(`Expected len(indices) == tensor.shape[0], but saw: ${e.length} vs. ${t.shape[0]}`);const r=Math.max(...e);if(s!=null&&s!==-1&&r>=s)throw new Error(`Max index must be < array size (${r}  vs. ${s})`);const o=new Pa([],n,t.dtype,s),a=Vs(t,0);return e.forEach((i,l)=>{o.setItem(i,a[l])}),o}function d5(t,e,n){let s=0;const r=e.map(c=>(s+=c,s));if(s!==t.shape[0])throw new Error(`Expected sum of lengths to be equal to
          tensor.shape[0], but sum of lengths is
        ${s}, and tensor's shape is: ${t.shape}`);const o=t.shape.slice(1),a=y0(o,n),i=s===0?0:t.size/s,l=V(()=>{const c=[];t=F(t,[1,s,i]);for(let h=0;h<e.length;++h){const p=[0,h===0?0:r[h-1],0],f=[1,e[h],i];c[h]=F(Ve(t,p,f),a)}return t.dispose(),c}),u=new Pa([],n,t.dtype,e.length);for(let c=0;c<l.length;c++)u.setItem(c,l[c]);return u}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const p5=async(t,e,n)=>{switch(t.op){case"If":case"StatelessIf":{const s=S("thenBranch",t,e,n),r=S("elseBranch",t,e,n),o=S("cond",t,e,n),a=S("args",t,e,n);return(await o.data())[0]?n.functionMap[s].executeFunctionAsync(a,n.tensorArrayMap,n.tensorListMap):n.functionMap[r].executeFunctionAsync(a,n.tensorArrayMap,n.tensorListMap)}case"While":case"StatelessWhile":{const s=S("body",t,e,n),r=S("cond",t,e,n),o=S("args",t,e,n),a=await n.functionMap[r].executeFunctionAsync(o,n.tensorArrayMap,n.tensorListMap),i=o.map(c=>c.id);let l=await a[0].data();a.forEach(c=>{!c.kept&&i.indexOf(c.id)===-1&&c.dispose()});let u=o;for(;l[0];){const c=u;u=await n.functionMap[s].executeFunctionAsync(u,n.tensorArrayMap,n.tensorListMap);const h=u.map(p=>p.id);c.forEach(p=>{!p.kept&&i.indexOf(p.id)===-1&&h.indexOf(p.id)===-1&&p.dispose()});const d=await n.functionMap[r].executeFunctionAsync(u,n.tensorArrayMap,n.tensorListMap);l=await d[0].data(),d.forEach(p=>{!p.kept&&i.indexOf(p.id)===-1&&h.indexOf(p.id)===-1&&p.dispose()})}return u}case"LoopCond":{const s=S("pred",t,e,n);return[Mr(s)]}case"Switch":{const s=S("pred",t,e,n);let r=S("data",t,e,n);return r.kept||(r=Mr(r)),(await s.data())[0]?[void 0,r]:[r,void 0]}case"Merge":{const s=t.inputNames.find(r=>Qt(r,e,n)!==void 0);if(s){const r=Qt(s,e,n);return[Mr(r)]}return}case"Enter":{const s=S("frameName",t,e,n),r=S("tensor",t,e,n);return n.enterFrame(s),[Mr(r)]}case"Exit":{const s=S("tensor",t,e,n);return n.exitFrame(),[Mr(s)]}case"NextIteration":{const s=S("tensor",t,e,n);return n.nextIteration(),[Mr(s)]}case"TensorArrayV3":{const s=S("size",t,e,n),r=S("dtype",t,e,n),o=S("elementShape",t,e,n),a=S("dynamicSize",t,e,n),i=S("clearAfterRead",t,e,n),l=S("identicalElementShapes",t,e,n),u=S("name",t,e,n),c=new l5(u,r,s,o,l,a,i);return n.addTensorArray(c),[c.idTensor,Se(1)]}case"TensorArrayWriteV3":{const s=S("tensorArrayId",t,e,n),r=S("index",t,e,n),o=S("tensor",t,e,n),a=n.getTensorArray(s.id);return a.write(r,o),[a.idTensor]}case"TensorArrayReadV3":{const s=S("tensorArrayId",t,e,n),r=S("index",t,e,n);return[n.getTensorArray(s.id).read(r)]}case"TensorArrayGatherV3":{const s=S("tensorArrayId",t,e,n),r=S("indices",t,e,n),o=S("dtype",t,e,n);return[n.getTensorArray(s.id).gather(r,o)]}case"TensorArrayScatterV3":{const s=S("tensorArrayId",t,e,n),r=S("indices",t,e,n),o=S("tensor",t,e,n),a=n.getTensorArray(s.id);return a.scatter(r,o),[a.idTensor]}case"TensorArrayConcatV3":{const s=S("tensorArrayId",t,e,n),r=n.getTensorArray(s.id),o=S("dtype",t,e,n);return[r.concat(o)]}case"TensorArraySplitV3":{const s=S("tensorArrayId",t,e,n),r=S("tensor",t,e,n),o=S("lengths",t,e,n),a=n.getTensorArray(s.id);return a.split(o,r),[a.idTensor]}case"TensorArraySizeV3":{const s=S("tensorArrayId",t,e,n),r=n.getTensorArray(s.id);return[Se(r.size(),"int32")]}case"TensorArrayCloseV3":{const s=S("tensorArrayId",t,e,n),r=n.getTensorArray(s.id);return r.clearAndClose(),[r.idTensor]}case"TensorListSetItem":{const s=S("tensorListId",t,e,n),r=S("index",t,e,n),o=S("tensor",t,e,n),a=n.getTensorList(s.id);return a.setItem(r,o),[a.idTensor]}case"TensorListGetItem":{const s=S("tensorListId",t,e,n),r=S("index",t,e,n),o=S("elementShape",t,e,n),a=S("elementDType",t,e,n);return[n.getTensorList(s.id).getItem(r,o,a)]}case"TensorListScatterV2":case"TensorListScatter":{const s=S("indices",t,e,n),r=S("tensor",t,e,n),o=S("elementShape",t,e,n),a=S("numElements",t,e,n),i=h5(r,s,o,a);return n.addTensorList(i),[i.idTensor]}case"TensorListReserve":case"EmptyTensorList":{const s=S("elementShape",t,e,n),r=S("elementDType",t,e,n);let o;t.op==="TensorListReserve"?o="numElements":o="maxNumElements";const a=S(o,t,e,n),i=t.op==="TensorListReserve"?-1:a,l=c5(s,r,a,i);return n.addTensorList(l),[l.idTensor]}case"TensorListGather":{const s=S("tensorListId",t,e,n),r=S("indices",t,e,n),o=S("elementShape",t,e,n),a=S("elementDType",t,e,n);return[n.getTensorList(s.id).gather(r,a,o)]}case"TensorListStack":{const s=S("tensorListId",t,e,n),r=S("elementShape",t,e,n),o=S("elementDType",t,e,n),a=S("numElements",t,e,n);return[n.getTensorList(s.id).stack(r,o,a)]}case"TensorListFromTensor":{const s=S("tensor",t,e,n),r=S("elementShape",t,e,n),o=S("elementDType",t,e,n),a=u5(s,r,o);return n.addTensorList(a),[a.idTensor]}case"TensorListConcat":case"TensorListConcatV2":{const s=S("tensorListId",t,e,n),r=n.getTensorList(s.id),o=S("dtype",t,e,n),a=S("elementShape",t,e,n);return[r.concat(o,a)]}case"TensorListPushBack":{const s=S("tensorListId",t,e,n),r=S("tensor",t,e,n),o=n.getTensorList(s.id);return o.pushBack(r),[o.idTensor]}case"TensorListPopBack":{const s=S("tensorListId",t,e,n),r=S("elementShape",t,e,n),o=S("elementDType",t,e,n);return[n.getTensorList(s.id).popBack(r,o)]}case"TensorListSplit":{const s=S("tensor",t,e,n),r=S("elementShape",t,e,n),o=S("lengths",t,e,n),a=d5(s,o,r);return n.addTensorList(a),[a.idTensor]}case"TensorListLength":{const s=S("tensorListId",t,e,n),r=n.getTensorList(s.id);return[Se(r.size(),"int32")]}case"TensorListResize":{const s=S("tensorListId",t,e,n),r=S("size",t,e,n),a=n.getTensorList(s.id).resize(r);return n.addTensorList(a),[a.idTensor]}default:throw TypeError(`Node type ${t.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function XS(t,e,n){const[s,r]=S("fusedOps",t,e,n),o=s==="biasadd",a=!o,i=r==="prelu",l=s==="fusedbatchnorm",u=S("numArgs",t,e,n);if(o){if(i&&u!==2)throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!i&&o&&u!==1)throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd must have one extra argument: bias.")}if(l)throw new Error("FusedConv2d and DepthwiseConv2d with FusedBatchNorm is not supported");const c=S("strides",t,e,n),h=gd(t,e,n),d=S("dataFormat",t,e,n).toUpperCase(),p=S("dilations",t,e,n);let[f,m]=S("args",t,e,n);a&&(m=f,f=void 0);const y=S("leakyreluAlpha",t,e,n);return{stride:c,pad:h,dataFormat:d,dilations:p,biasArg:f,preluArg:m,activationFunc:r,leakyreluAlpha:y}}const f5=(t,e,n,s=sn)=>{switch(t.op){case"Conv1D":{const r=S("stride",t,e,n),o=S("pad",t,e,n),a=S("dataFormat",t,e,n).toUpperCase(),i=S("dilation",t,e,n);return[s.conv1d(S("x",t,e,n),S("filter",t,e,n),r,o,a,i)]}case"Conv2D":{const r=S("strides",t,e,n),o=gd(t,e,n),a=S("dataFormat",t,e,n).toUpperCase(),i=S("dilations",t,e,n);return[s.conv2d(S("x",t,e,n),S("filter",t,e,n),[r[1],r[2]],o,a,[i[1],i[2]])]}case"_FusedConv2D":{const{stride:r,pad:o,dataFormat:a,dilations:i,biasArg:l,preluArg:u,activationFunc:c,leakyreluAlpha:h}=XS(t,e,n);return[s.fused.conv2d({x:S("x",t,e,n),filter:S("filter",t,e,n),strides:[r[1],r[2]],pad:o,dataFormat:a,dilations:[i[1],i[2]],bias:l,activation:c,preluActivationWeights:u,leakyreluAlpha:h})]}case"FusedDepthwiseConv2dNative":{const{stride:r,pad:o,dataFormat:a,dilations:i,biasArg:l,preluArg:u,activationFunc:c,leakyreluAlpha:h}=XS(t,e,n);return[s.fused.depthwiseConv2d({x:S("x",t,e,n),filter:S("filter",t,e,n),strides:[r[1],r[2]],pad:o,dataFormat:a,dilations:[i[1],i[2]],bias:l,activation:c,preluActivationWeights:u,leakyreluAlpha:h})]}case"Conv2DBackpropInput":case"Conv2dTranspose":{const r=S("outputShape",t,e,n),o=S("strides",t,e,n),a=gd(t,e,n);return[s.conv2dTranspose(S("x",t,e,n),S("filter",t,e,n),r,[o[1],o[2]],a)]}case"DepthwiseConv2dNative":case"DepthwiseConv2d":{const r=S("strides",t,e,n),o=gd(t,e,n),a=S("dilations",t,e,n),i=S("dataFormat",t,e,n).toUpperCase();return[s.depthwiseConv2d(S("input",t,e,n),S("filter",t,e,n),[r[1],r[2]],o,i,[a[1],a[2]])]}case"Conv3D":{const r=S("strides",t,e,n),o=S("pad",t,e,n),a=S("dataFormat",t,e,n).toUpperCase(),i=S("dilations",t,e,n);return[s.conv3d(S("x",t,e,n),S("filter",t,e,n),[r[1],r[2],r[3]],o,a,[i[1],i[2],i[3]])]}case"AvgPool":{const r=S("strides",t,e,n),o=S("pad",t,e,n),a=S("kernelSize",t,e,n);return[s.avgPool(S("x",t,e,n),[a[1],a[2]],[r[1],r[2]],o)]}case"MaxPool":{const r=S("strides",t,e,n),o=S("pad",t,e,n),a=S("kernelSize",t,e,n);return[s.maxPool(S("x",t,e,n),[a[1],a[2]],[r[1],r[2]],o)]}case"MaxPoolWithArgmax":{const r=S("strides",t,e,n),o=S("pad",t,e,n),a=S("kernelSize",t,e,n),i=S("includeBatchInIndex",t,e,n),{result:l,indexes:u}=s.maxPoolWithArgmax(S("x",t,e,n),[a[1],a[2]],[r[1],r[2]],o,i);return[l,u]}case"AvgPool3D":{const r=S("strides",t,e,n),o=S("pad",t,e,n),a=S("kernelSize",t,e,n);return[s.avgPool3d(S("x",t,e,n),[a[1],a[2],a[3]],[r[1],r[2],r[3]],o)]}case"MaxPool3D":{const r=S("strides",t,e,n),o=S("pad",t,e,n),a=S("kernelSize",t,e,n);return[s.maxPool3d(S("x",t,e,n),[a[1],a[2],a[3]],[r[1],r[2],r[3]],o)]}case"Dilation2D":{const r=S("strides",t,e,n),o=S("pad",t,e,n),a=S("dilations",t,e,n),i=r[1],l=r[2],u=a[1],c=a[2];return[s.dilation2d(S("x",t,e,n),S("filter",t,e,n),[i,l],o,[u,c],"NHWC")]}default:throw TypeError(`Node type ${t.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const m5=(t,e,n,s=sn)=>{switch(t.op){case"Fill":{const r=S("shape",t,e,n),o=S("dtype",t,e,n),a=S("value",t,e,n);return[s.fill(r,a,o)]}case"LinSpace":{const r=S("start",t,e,n),o=S("stop",t,e,n),a=S("num",t,e,n);return[s.linspace(r,o,a)]}case"Multinomial":{const r=S("logits",t,e,n),o=S("numSamples",t,e,n),a=S("seed",t,e,n);return[s.multinomial(r,o,a)]}case"OneHot":{const r=S("indices",t,e,n),o=S("depth",t,e,n),a=S("onValue",t,e,n),i=S("offValue",t,e,n),l=S("dtype",t,e,n);return[s.oneHot(r,o,a,i,l)]}case"Ones":return[s.ones(S("shape",t,e,n),S("dtype",t,e,n))];case"OnesLike":return[s.onesLike(S("x",t,e,n))];case"RandomStandardNormal":return[s.randomStandardNormal(S("shape",t,e,n),S("dtype",t,e,n),S("seed",t,e,n))];case"RandomUniform":return[s.randomUniform(S("shape",t,e,n),S("minval",t,e,n),S("maxval",t,e,n),S("dtype",t,e,n))];case"RandomUniformInt":return[s.randomUniformInt(S("shape",t,e,n),S("minval",t,e,n),S("maxval",t,e,n),S("seed",t,e,n))];case"Range":{const r=S("start",t,e,n),o=S("stop",t,e,n),a=S("step",t,e,n);return[s.range(r,o,a,S("dtype",t,e,n))]}case"TruncatedNormal":{const r=S("shape",t,e,n),o=S("mean",t,e,n),a=S("stdDev",t,e,n),i=S("seed",t,e,n);return[s.truncatedNormal(r,o,a,S("dtype",t,e,n),i)]}case"Zeros":return[s.zeros(S("shape",t,e,n),S("dtype",t,e,n))];case"ZerosLike":return[s.zerosLike(S("x",t,e,n))];default:throw TypeError(`Node type ${t.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function yg(t,e,n){const s=S("boxes",t,e,n),r=S("scores",t,e,n),o=S("maxOutputSize",t,e,n),a=S("iouThreshold",t,e,n),i=S("scoreThreshold",t,e,n),l=S("softNmsSigma",t,e,n);return{boxes:s,scores:r,maxOutputSize:o,iouThreshold:a,scoreThreshold:i,softNmsSigma:l}}const g5=async(t,e,n,s,r=sn)=>{switch(t.op){case"NonMaxSuppressionV5":{const{boxes:o,scores:a,maxOutputSize:i,iouThreshold:l,scoreThreshold:u,softNmsSigma:c}=yg(t,e,n),h=await r.image.nonMaxSuppressionWithScoreAsync(o,a,i,l,u,c);return[h.selectedIndices,h.selectedScores]}case"NonMaxSuppressionV4":{const{boxes:o,scores:a,maxOutputSize:i,iouThreshold:l,scoreThreshold:u}=yg(t,e,n),c=S("padToMaxOutputSize",t,e,n),h=await r.image.nonMaxSuppressionPaddedAsync(o,a,i,l,u,c);return[h.selectedIndices,h.validOutputs]}case"NonMaxSuppressionV3":case"NonMaxSuppressionV2":{const{boxes:o,scores:a,maxOutputSize:i,iouThreshold:l,scoreThreshold:u}=yg(t,e,n);return[await r.image.nonMaxSuppressionAsync(o,a,i,l,u)]}case"Where":{const o=r.cast(S("condition",t,e,n),"bool"),a=[await r.whereAsync(o)];return o.dispose(),a}case"ListDiff":return r.setdiff1dAsync(S("x",t,e,n),S("y",t,e,n));default:throw TypeError(`Node type ${t.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const y5=(t,e,n,s=sn)=>{switch(t.op){case"LowerBound":{const r=S("sortedSequence",t,e,n),o=S("values",t,e,n);return[s.lowerBound(r,o)]}case"TopKV2":{const r=S("x",t,e,n),o=S("k",t,e,n),a=S("sorted",t,e,n),i=s.topk(r,o,a);return[i.values,i.indices]}case"UpperBound":{const r=S("sortedSequence",t,e,n),o=S("values",t,e,n);return[s.upperBound(r,o)]}case"Unique":{const r=S("x",t,e,n),o=s.unique(r);return[o.values,o.indices]}case"UniqueV2":{const r=S("x",t,e,n),o=S("axis",t,e,n),a=s.unique(r,o);return[a.values,a.indices]}default:throw TypeError(`Node type ${t.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const x5=(t,e,n,s=sn)=>{switch(t.op){case"Const":return e[t.name];case"PlaceholderWithDefault":const r=S("default",t,e,n);return[Qt(t.name,e,n)||r];case"Placeholder":return[Qt(t.name,e,n)];case"Identity":case"StopGradient":case"FakeQuantWithMinMaxVars":{const c=S("x",t,e,n);return[Mr(c)]}case"IdentityN":return S("x",t,e,n).map(c=>Mr(c));case"Snapshot":const o=S("x",t,e,n);return[Mr(o)];case"Shape":return[s.tensor1d(S("x",t,e,n).shape,"int32")];case"ShapeN":return S("x",t,e,n).map(c=>s.tensor1d(c.shape));case"Size":return[s.scalar(S("x",t,e,n).size,"int32")];case"Rank":return[s.scalar(S("x",t,e,n).rank,"int32")];case"NoOp":return[s.scalar(1)];case"Print":const a=S("x",t,e,n),i=S("data",t,e,n),l=S("message",t,e,n),u=S("summarize",t,e,n);console.warn("The graph has a tf.print() operation,usually used for debugging, which slows down performance."),console.log(l);for(let c=0;c<i.length;c++)console.log(Array.prototype.slice.call(i[c].dataSync()).slice(0,u));return[a];default:throw TypeError(`Node type ${t.op} is not implemented`)}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class b5{get id(){return this.handle.id}constructor(e,n){this.keyDType=e,this.valueDType=n,this.handle=Se(0),this.tensorMap=new Map,Ht(this.handle)}clearAndClose(){this.tensorMap.forEach(e=>e.dispose()),this.tensorMap.clear(),this.handle.dispose()}size(){return this.tensorMap.size}tensorSize(){return Se(this.size(),"int32")}async import(e,n){this.checkKeyAndValueTensor(e,n);const s=await e.data();return this.tensorMap.forEach(r=>r.dispose()),this.tensorMap.clear(),V(()=>{const r=Vs(n),o=s.length,a=r.length;C(o===a,()=>`The number of elements doesn't match, keys has ${o} elements, the values has ${a} elements.`);for(let i=0;i<o;i++){const l=s[i],u=r[i];Ht(u),this.tensorMap.set(l,u)}return this.handle})}async find(e,n){this.checkKeyAndValueTensor(e,n);const s=await e.data();return V(()=>{const r=[];for(let o=0;o<s.length;o++){const a=s[o],i=this.findWithDefault(a,n);r.push(i)}return ds(r)})}findWithDefault(e,n){const s=this.tensorMap.get(e);return s??n}checkKeyAndValueTensor(e,n){if(e.dtype!==this.keyDType)throw new Error(`Expect key dtype ${this.keyDType}, but got ${e.dtype}`);if(n.dtype!==this.valueDType)throw new Error(`Expect value dtype ${this.valueDType}, but got ${n.dtype}`)}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const w5=async(t,e,n,s)=>{switch(t.op){case"HashTable":case"HashTableV2":{const r=s.getHashTableHandleByName(t.name);if(r!=null)return[r];{const o=S("keyDType",t,e,n),a=S("valueDType",t,e,n),i=new b5(o,a);return s.addHashTable(t.name,i),[i.handle]}}case"InitializeTable":case"InitializeTableV2":case"LookupTableImport":case"LookupTableImportV2":{const r=S("tableHandle",t,e,n,s),o=S("keys",t,e,n),a=S("values",t,e,n);return[await s.getHashTableById(r.id).import(o,a)]}case"LookupTableFind":case"LookupTableFindV2":{const r=S("tableHandle",t,e,n,s),o=S("keys",t,e,n),a=S("defaultValue",t,e,n);return[await s.getHashTableById(r.id).find(o,a)]}case"LookupTableSize":case"LookupTableSizeV2":{const r=S("tableHandle",t,e,n,s);return[s.getHashTableById(r.id).tensorSize()]}default:throw TypeError(`Node type ${t.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const v5=(t,e,n,s=sn)=>{switch(t.op){case"ResizeBilinear":{const r=S("images",t,e,n),o=S("size",t,e,n),a=S("alignCorners",t,e,n),i=S("halfPixelCenters",t,e,n);return[s.image.resizeBilinear(r,[o[0],o[1]],a,i)]}case"ResizeNearestNeighbor":{const r=S("images",t,e,n),o=S("size",t,e,n),a=S("alignCorners",t,e,n),i=S("halfPixelCenters",t,e,n);return[s.image.resizeNearestNeighbor(r,[o[0],o[1]],a,i)]}case"CropAndResize":{const r=S("image",t,e,n),o=S("boxes",t,e,n),a=S("boxInd",t,e,n),i=S("cropSize",t,e,n),l=S("method",t,e,n),u=S("extrapolationValue",t,e,n);return[s.image.cropAndResize(r,o,a,i,l,u)]}case"ImageProjectiveTransformV3":{const r=S("images",t,e,n),o=S("transforms",t,e,n),a=S("outputShape",t,e,n),i=S("fillValue",t,e,n),l=S("interpolation",t,e,n),u=S("fillMode",t,e,n);return[s.image.transform(r,o,l.toLowerCase(),u.toLowerCase(),i,a)]}default:throw TypeError(`Node type ${t.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const S5=(t,e,n,s=sn)=>{switch(t.op){case"Equal":return[s.equal(S("a",t,e,n),S("b",t,e,n))];case"NotEqual":return[s.notEqual(S("a",t,e,n),S("b",t,e,n))];case"Greater":return[s.greater(S("a",t,e,n),S("b",t,e,n))];case"GreaterEqual":return[s.greaterEqual(S("a",t,e,n),S("b",t,e,n))];case"Less":return[s.less(S("a",t,e,n),S("b",t,e,n))];case"LessEqual":return[s.lessEqual(S("a",t,e,n),S("b",t,e,n))];case"LogicalAnd":return[s.logicalAnd(S("a",t,e,n),S("b",t,e,n))];case"LogicalNot":return[s.logicalNot(S("a",t,e,n))];case"LogicalOr":return[s.logicalOr(S("a",t,e,n),S("b",t,e,n))];case"Select":case"SelectV2":return[s.where(S("condition",t,e,n),S("a",t,e,n),S("b",t,e,n))];case"BitwiseAnd":return[s.bitwiseAnd(S("a",t,e,n),S("b",t,e,n))];default:throw TypeError(`Node type ${t.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const k5=(t,e,n,s=sn)=>{switch(t.op){case"BatchMatMul":case"BatchMatMulV2":case"MatMul":return[s.matMul(S("a",t,e,n),S("b",t,e,n),S("transposeA",t,e,n),S("transposeB",t,e,n))];case"Einsum":return[s.einsum(S("equation",t,e,n),...S("tensors",t,e,n))];case"Transpose":return[s.transpose(S("x",t,e,n),S("perm",t,e,n))];case"_FusedMatMul":const[r,o]=S("fusedOps",t,e,n),a=r==="biasadd",i=o==="prelu",l=S("numArgs",t,e,n),u=S("leakyreluAlpha",t,e,n);if(a){if(i&&l!==2)throw new Error("Fused MatMul with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!i&&l!==1)throw new Error("Fused MatMul with BiasAdd must have one extra argument: bias.")}const[c,h]=S("args",t,e,n);return[s.fused.matMul({a:S("a",t,e,n),b:S("b",t,e,n),transposeA:S("transposeA",t,e,n),transposeB:S("transposeB",t,e,n),bias:c,activation:o,preluActivationWeights:h,leakyreluAlpha:u})];case"MatrixBandPart":return[s.linalg.bandPart(S("a",t,e,n),S("numLower",t,e,n),S("numUpper",t,e,n))];default:throw TypeError(`Node type ${t.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const $5=(t,e,n,s=sn)=>{switch(t.op){case"EuclideanNorm":return[s.euclideanNorm(S("x",t,e,n),S("axis",t,e,n),S("keepDims",t,e,n))];case"FusedBatchNorm":case"FusedBatchNormV2":return[s.batchNorm(S("x",t,e,n),S("mean",t,e,n),S("variance",t,e,n),S("offset",t,e,n),S("scale",t,e,n),S("epsilon",t,e,n))];case"FusedBatchNormV3":return[s.batchNorm(S("x",t,e,n),S("mean",t,e,n),S("variance",t,e,n),S("offset",t,e,n),S("scale",t,e,n),S("epsilon",t,e,n))];case"LRN":return[s.localResponseNormalization(S("x",t,e,n),S("radius",t,e,n),S("bias",t,e,n),S("alpha",t,e,n),S("beta",t,e,n))];case"Softmax":return[s.softmax(S("x",t,e,n))];case"LogSoftmax":return[s.logSoftmax(S("x",t,e,n))];default:throw TypeError(`Node type ${t.op} is not implemented`)}};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const C5=(t,e,n,s=sn)=>{switch(t.op){case"RaggedGather":{const{outputNestedSplits:r,outputDenseValues:o}=s.raggedGather(S("paramsNestedSplits",t,e,n),S("paramsDenseValues",t,e,n),S("indices",t,e,n),S("outputRaggedRank",t,e,n));return r.concat(o)}case"RaggedRange":{const{rtNestedSplits:r,rtDenseValues:o}=s.raggedRange(S("starts",t,e,n),S("limits",t,e,n),S("splits",t,e,n));return[r,o]}case"RaggedTensorToTensor":return[s.raggedTensorToTensor(S("shape",t,e,n),S("values",t,e,n),S("defaultValue",t,e,n),S("rowPartitionTensors",t,e,n),S("rowPartitionTypes",t,e,n))];default:throw TypeError(`Node type ${t.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const N5=(t,e,n,s=sn)=>{switch(t.op){case"Max":{const i=S("axis",t,e,n),l=S("keepDims",t,e,n);return[s.max(S("x",t,e,n),i,l)]}case"Mean":{const i=S("axis",t,e,n),l=S("keepDims",t,e,n);return[s.mean(S("x",t,e,n),i,l)]}case"Min":{const i=S("axis",t,e,n),l=S("keepDims",t,e,n);return[s.min(S("x",t,e,n),i,l)]}case"Sum":{const i=S("axis",t,e,n),l=S("keepDims",t,e,n);return[s.sum(S("x",t,e,n),i,l)]}case"All":{const i=S("axis",t,e,n),l=S("keepDims",t,e,n);return[s.all(S("x",t,e,n),i,l)]}case"Any":{const i=S("axis",t,e,n),l=S("keepDims",t,e,n);return[s.any(S("x",t,e,n),i,l)]}case"ArgMax":{const i=S("axis",t,e,n);return[s.argMax(S("x",t,e,n),i)]}case"ArgMin":{const i=S("axis",t,e,n);return[s.argMin(S("x",t,e,n),i)]}case"Prod":{const i=S("axis",t,e,n),l=S("keepDims",t,e,n);return[s.prod(S("x",t,e,n),i,l)]}case"Cumprod":{const i=S("axis",t,e,n),l=S("exclusive",t,e,n),u=S("reverse",t,e,n);return[s.cumprod(S("x",t,e,n),i,l,u)]}case"Cumsum":{const i=S("axis",t,e,n),l=S("exclusive",t,e,n),u=S("reverse",t,e,n);return[s.cumsum(S("x",t,e,n),i,l,u)]}case"Bincount":const r=S("x",t,e,n),o=S("weights",t,e,n),a=S("size",t,e,n);return[s.bincount(r,o,a)];case"DenseBincount":{const i=S("x",t,e,n),l=S("weights",t,e,n),u=S("size",t,e,n),c=S("binaryOutput",t,e,n);return[s.denseBincount(i,l,u,c)]}default:throw TypeError(`Node type ${t.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const I5=(t,e,n,s=sn)=>{switch(t.op){case"ConcatV2":case"Concat":{const r=S("n",t,e,n),o=S("axis",t,e,n);let a=S("tensors",t,e,n);return a=a.slice(0,r),[s.concat(a,o)]}case"Gather":{const r=S("x",t,e,n),o=S("indices",t,e,n);return[s.gather(r,s.cast(o,"int32"),0)]}case"GatherV2":{const r=S("axis",t,e,n),o=S("batchDims",t,e,n),a=S("x",t,e,n),i=S("indices",t,e,n);return[s.gather(a,s.cast(i,"int32"),r,o)]}case"Reverse":{const r=S("dims",t,e,n),o=[];for(let i=0;i<r.length;i++)r[i]&&o.push(i);const a=S("x",t,e,n);return[s.reverse(a,o)]}case"ReverseV2":{const r=S("axis",t,e,n),o=S("x",t,e,n);return[s.reverse(o,r)]}case"Slice":{const r=S("begin",t,e,n),o=S("size",t,e,n);return[s.slice(S("x",t,e,n),r,o)]}case"StridedSlice":{const r=S("begin",t,e,n),o=S("end",t,e,n),a=S("strides",t,e,n),i=S("beginMask",t,e,n),l=S("endMask",t,e,n),u=S("ellipsisMask",t,e,n),c=S("newAxisMask",t,e,n),h=S("shrinkAxisMask",t,e,n),d=S("x",t,e,n);return[s.stridedSlice(d,r,o,a,i,l,u,c,h)]}case"Pack":return V(()=>{const r=S("axis",t,e,n),o=S("tensors",t,e,n),a=o[0].shape,i=s.squeeze(o[0]).shape,l=o.map(u=>{const c=Me(u.shape,a);if(!c&&!Me(s.squeeze(u).shape,i))throw new Error("the input tensors shape does not match");return c?u:s.reshape(u,a)});return[s.stack(l,r)]});case"Unpack":{const r=S("axis",t,e,n),o=S("tensor",t,e,n);return s.unstack(o,r)}case"Tile":{const r=S("reps",t,e,n);return[s.tile(S("x",t,e,n),r)]}case"Split":case"SplitV":{const r=S("axis",t,e,n),o=S("numOrSizeSplits",t,e,n),a=S("x",t,e,n);return s.split(a,o,r)}case"ScatterNd":{const r=S("indices",t,e,n),o=S("values",t,e,n),a=S("shape",t,e,n);return[s.scatterND(r,o,a)]}case"GatherNd":{const r=S("x",t,e,n),o=S("indices",t,e,n);return[s.gatherND(r,o)]}case"SparseToDense":{const r=S("sparseIndices",t,e,n),o=S("outputShape",t,e,n),a=S("sparseValues",t,e,n),i=S("defaultValue",t,e,n);return[s.sparseToDense(r,a,o,a.dtype===i.dtype?i:s.cast(i,a.dtype))]}case"TensorScatterUpdate":{const r=S("indices",t,e,n),o=S("values",t,e,n),a=S("tensor",t,e,n);return[s.tensorScatterUpdate(a,r,o)]}default:throw TypeError(`Node type ${t.op} is not implemented`)}};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const T5=(t,e,n,s=sn)=>{switch(t.op){case"SparseFillEmptyRows":{const{outputIndices:r,outputValues:o,emptyRowIndicator:a,reverseIndexMap:i}=s.sparse.sparseFillEmptyRows(S("indices",t,e,n),S("values",t,e,n),S("denseShape",t,e,n),S("defaultValue",t,e,n));return[r,o,a,i]}case"SparseReshape":{const{outputIndices:r,outputShape:o}=s.sparse.sparseReshape(S("inputIndices",t,e,n),S("inputShape",t,e,n),S("newShape",t,e,n));return[r,o]}case"SparseSegmentMean":return[s.sparse.sparseSegmentMean(S("data",t,e,n),S("indices",t,e,n),S("segmentIds",t,e,n))];case"SparseSegmentSum":return[s.sparse.sparseSegmentSum(S("data",t,e,n),S("indices",t,e,n),S("segmentIds",t,e,n))];default:throw TypeError(`Node type ${t.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const E5=(t,e,n,s=sn)=>{switch(t.op){case"FFT":return[s.fft(S("x",t,e,n))];case"IFFT":return[s.ifft(S("x",t,e,n))];case"RFFT":return[s.rfft(S("x",t,e,n))];case"IRFFT":return[s.irfft(S("x",t,e,n))];default:throw TypeError(`Node type ${t.op} is not implemented`)}};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const R5=(t,e,n,s=sn)=>{switch(t.op){case"StaticRegexReplace":return[s.string.staticRegexReplace(S("input",t,e,n),S("pattern",t,e,n),S("rewrite",t,e,n),S("replaceGlobal",t,e,n))];case"StringNGrams":{const{nGrams:r,nGramsSplits:o}=s.string.stringNGrams(S("data",t,e,n),S("dataSplits",t,e,n),S("separator",t,e,n),S("nGramWidths",t,e,n),S("leftPad",t,e,n),S("rightPad",t,e,n),S("padWidth",t,e,n),S("preserveShortSequences",t,e,n));return[r,o]}case"StringSplit":{const{indices:r,values:o,shape:a}=s.string.stringSplit(S("input",t,e,n),S("delimiter",t,e,n),S("skipEmpty",t,e,n));return[r,o,a]}case"StringToHashBucketFast":return[s.string.stringToHashBucketFast(S("input",t,e,n),S("numBuckets",t,e,n))];default:throw TypeError(`Node type ${t.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const D5=(t,e,n,s=sn)=>{switch(t.op){case"Cast":return[s.cast(S("x",t,e,n),S("dtype",t,e,n))];case"ExpandDims":{const r=S("axis",t,e,n);return[s.expandDims(S("x",t,e,n),r)]}case"Squeeze":{const r=S("axis",t,e,n);return[s.squeeze(S("x",t,e,n),r)]}case"Reshape":return[s.reshape(S("x",t,e,n),S("shape",t,e,n))];case"EnsureShape":return[s.ensureShape(S("x",t,e,n),S("shape",t,e,n))];case"MirrorPad":return[s.mirrorPad(S("x",t,e,n),S("padding",t,e,n),S("mode",t,e,n))];case"PadV2":case"Pad":return[s.pad(S("x",t,e,n),S("padding",t,e,n),S("constantValue",t,e,n))];case"SpaceToBatchND":{const r=S("blockShape",t,e,n),o=S("paddings",t,e,n);return[s.spaceToBatchND(S("x",t,e,n),r,o)]}case"BatchToSpaceND":{const r=S("blockShape",t,e,n),o=S("crops",t,e,n);return[s.batchToSpaceND(S("x",t,e,n),r,o)]}case"DepthToSpace":{const r=S("blockSize",t,e,n),o=S("dataFormat",t,e,n).toUpperCase();return[s.depthToSpace(S("x",t,e,n),r,o)]}case"BroadcastTo":return[s.broadcastTo(S("x",t,e,n),S("shape",t,e,n))];case"BroadcastArgs":return[s.broadcastArgs(S("s0",t,e,n),S("s1",t,e,n))];default:throw TypeError(`Node type ${t.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function YS(t,e,n,s,r=V){const o=((a,i,l)=>{switch(a.category){case"arithmetic":return r(()=>a5(a,i,l));case"basic_math":return r(()=>i5(a,i,l));case"control":return p5(a,i,l);case"convolution":return r(()=>f5(a,i,l));case"creation":return r(()=>m5(a,i,l));case"dynamic":return g5(a,i,l);case"evaluation":return r(()=>y5(a,i,l));case"image":return r(()=>v5(a,i,l));case"graph":return r(()=>x5(a,i,l));case"logical":return r(()=>S5(a,i,l));case"matrices":return r(()=>k5(a,i,l));case"normalization":return r(()=>$5(a,i,l));case"ragged":return r(()=>C5(a,i,l));case"reduction":return r(()=>N5(a,i,l));case"slice_join":return r(()=>I5(a,i,l));case"sparse":return r(()=>T5(a,i,l));case"spectral":return r(()=>E5(a,i,l));case"string":return r(()=>R5(a,i,l));case"transformation":return r(()=>D5(a,i,l));case"hash_table":return w5(a,i,l,s);case"custom":const u=iR(a.op);if(u&&u.customExecutor)return u.customExecutor(new o5(a,i,l));throw TypeError(`Custom op ${a.op} is not registered.`);default:throw TypeError(`Unknown op '${a.op}'. File an issue at https://github.com/tensorflow/tfjs/issues so we can add it, or register a custom execution with tf.registerOp()`)}})(t,e,n);return Ea(o)?o.then(a=>[].concat(a)):[].concat(o)}class QS{constructor(e={},n={},s={},r={},o){this.weightMap=e,this.tensorArrayMap=n,this.tensorListMap=s,this.functionMap=r,this.parseNodeNameCache=o,this.rootContext={id:0,frameName:"",iterationId:0},this.contexts=[this.rootContext],this.lastId=0,this.generateCurrentContextIds()}newFrame(e,n){return{id:e,frameName:n,iterationId:0}}set currentContext(e){this.contexts!==e&&(this.contexts=e,this.generateCurrentContextIds())}get currentContext(){return this.contexts}get currentContextId(){return this._currentContextIds[0]}get currentContextIds(){return this._currentContextIds}generateCurrentContextIds(){const e=[];for(let n=0;n<this.contexts.length-1;n++){const s=this.contexts.slice(0,this.contexts.length-n);e.push(this.contextIdforContexts(s))}e.push(""),this._currentContextIds=e}contextIdforContexts(e){return e?e.map(n=>n.id===0&&n.iterationId===0?"":`${n.frameName}-${n.iterationId}`).join("/"):""}enterFrame(e){this.contexts&&(this.lastId++,this.contexts=this.contexts.slice(),this.contexts.push(this.newFrame(this.lastId,e)),this._currentContextIds.unshift(this.contextIdforContexts(this.contexts)))}exitFrame(){if(this.contexts&&this.contexts.length>1)this.contexts=this.contexts.slice(),this.contexts.splice(-1),this.currentContextIds.shift();else throw new Error("Cannot exit frame, the context is empty")}nextIteration(){if(this.contexts&&this.contexts.length>0){this.contexts=this.contexts.slice(),this.lastId++;const e=Object.assign({},this.contexts[this.contexts.length-1]);e.iterationId+=1,e.id=this.lastId,this.contexts.splice(-1,1,e),this._currentContextIds.splice(0,1,this.contextIdforContexts(this.contexts))}else throw new Error("Cannot increase frame iteration, the context is empty")}getWeight(e){return this.weightMap[e]}addTensorArray(e){this.tensorArrayMap[e.id]=e}getTensorArray(e){return this.tensorArrayMap[e]}addTensorList(e){this.tensorListMap[e.id]=e}getTensorList(e){return this.tensorListMap[e]}dispose(e){for(const n in this.tensorArrayMap)this.tensorArrayMap[n].clearAndClose(e);for(const n in this.tensorListMap)this.tensorListMap[n].clearAndClose(e)}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ZS(t,e,n,s){const r=new Set,o=[];let a=null,i=null;const l=new Set,u=new Set(Object.keys(t).map(d=>Mn(d)[0]));s=s||[];const c=new Set(s.map(d=>Mn(d.name)[0])),h=[...e];for(;h.length>0;){const d=h.pop();if((ha(d)||M5(d)||B5(d))&&a==null&&(a=d,i=a.children.map(p=>p.name).filter(p=>r.has(p))),r.add(d.name),n[d.name]==null&&!u.has(d.name)&&!c.has(d.name)){if(d.inputs.length===0){o.push(d.name);continue}d.inputs.forEach(p=>{l.has(p.name)||(l.add(p.name),h.push(p))})}}return{inputs:t,outputs:e,usedNodes:r,missingInputs:o,dynamicNode:a,syncInputs:i}}function A5(t,e){const{usedNodes:n,inputs:s}=e,r=Object.keys(s).map(y=>Mn(y)[0]).map(y=>t.nodes[y]),o=t.initNodes||[],a=y=>n.has(typeof y=="string"?y:y.name);function i(y){return[...new Map(y.map(g=>[g.name,g])).values()]}const l=i([...r,...t.weights,...o]).filter(a),u=i([...l,...Object.values(t.nodes)]).filter(a),c=new Map(u.map(y=>[y.name,y])),h={};for(const y of u){h[y.name]=h[y.name]||0;for(const g of y.children)a(g)||(h[g.name]=Number.POSITIVE_INFINITY),h[g.name]=(h[g.name]||0)+1}const d=Object.entries(h).filter(([,y])=>y===0).map(([y])=>y),p=[...d];for(;d.length>0;){const y=d.pop(),g=c.get(y);for(const x of g.children.filter(a))--h[x.name]===0&&(p.push(x.name),d.push(x.name))}const f=p.map(y=>c.get(y)),m=_5(f,l);return O5(m,l),m}function _5(t,e){const n=new Map(t.map(a=>[a.name,a])),s=e.map(a=>a.name),r=new Set(s);for(;s.length>0;){const a=s.pop(),i=n.get(a);for(const l of i.children)!n.has(l.name)||r.has(l.name)||(r.add(l.name),s.push(l.name))}return t.filter(a=>r.has(a.name))}class Wh extends Error{constructor(e){super(`NodesExecutionOrderError: ${e}`)}}function O5(t,e){const n=new Map(t.map((i,l)=>[i.name,l])),s=new Set(e.map(i=>i.name)),r=i=>s.has(typeof i=="string"?i:i.name),o=new Set(t.map(i=>i.name)),a=i=>o.has(typeof i=="string"?i:i.name);for(const i of t){for(const l of i.children.filter(a)){if(!n.has(l.name))throw new Wh(`Child ${l.name} of node ${i.name} is unreachable.`);if(n.get(i.name)>n.get(l.name))throw new Wh(`Node ${i.name} is scheduled to run after its child ${l.name}.`)}if(!r(i))for(const l of i.inputs){if(!n.has(l.name))throw new Wh(`Input ${l.name} of node ${i.name} is unreachable.`);if(n.get(l.name)>n.get(i.name))throw new Wh(`Node ${i.name} is scheduled to run before its input ${l.name}.`)}}}function F5(t){const e=new Map(t.map((i,l)=>[i.name,l])),n=Number.MAX_SAFE_INTEGER,s=t.map((i,l)=>ha(i)?n:l),r=i=>{const l=s[e.get(i.name)];return l??-1},o=t.map((i,l)=>i.children.map(r).reduce((u,c)=>Math.max(u,c),s[l])),a=new Map;for(let i=0;i<t.length;++i){const l=o[i];if(l===n)continue;const u=t[i],c=t[l];a.has(c.name)||a.set(c.name,[]),a.get(c.name).push(u)}return a}const L5=new Set(["Switch","Merge","Enter","Exit","NextIteration","StatelessIf","StatelessWhile","if","While"]),P5=new Set(["NonMaxSuppressionV2","NonMaxSuppressionV3","NonMaxSuppressionV5","Where"]),z5=new Set(["HashTable","HashTableV2","LookupTableImport","LookupTableImportV2","LookupTableFind","LookupTableFindV2","LookupTableSize","LookupTableSizeV2"]);function ha(t){return L5.has(t.op)}function M5(t){return P5.has(t.op)}function B5(t){return z5.has(t.op)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class up{get weightIds(){return this.parent?this.parent.weightIds:this._weightIds}get functionExecutorMap(){return this.parent?this.parent.functionExecutorMap:this._functionExecutorMap}get weightMap(){return this.parent?this.parent.weightMap:this._weightMap}set weightMap(e){const n=Object.keys(e).map(s=>e[s].map(r=>r.id));this._weightIds=[].concat(...n),this._weightMap=e}set resourceManager(e){this._resourceManager=e}get inputs(){return this._inputs.map(e=>({name:e.name,shape:e.attrParams.shape?e.attrParams.shape.value:void 0,dtype:e.attrParams.dtype?e.attrParams.dtype.value:void 0}))}get outputs(){return this._outputs.map(e=>({name:e.name,shape:e.attrParams.shape?e.attrParams.shape.value:void 0,dtype:e.attrParams.dtype?e.attrParams.dtype.value:void 0}))}get inputNodes(){return this._inputs.map(e=>e.signatureKey||e.name)}get outputNodes(){return this._outputs.map(e=>{const n=e.signatureKey||e.name;return e.defaultOutput?`${n}:${e.defaultOutput}`:n})}get functions(){return Object.keys(this._functions).reduce((e,n)=>(e[n]=this._functions[n].signature,e),{})}constructor(e,n){this.graph=e,this.parent=n,this.compiledMap=new Map,this.parseNodeNameCache=new Map,this._weightMap={},this.SEPARATOR=",",this._functions={},this._functionExecutorMap={},this.keepIntermediateTensors=!1,this._outputs=e.outputs,this._inputs=e.inputs,this._initNodes=e.initNodes,this._signature=e.signature,this._functions=e.functions,e.functions!=null&&Object.keys(e.functions).forEach(s=>{this._functionExecutorMap[s]=new up(e.functions[s],this)})}getCompilationKey(e,n){const s=e.map(o=>o.name).sort(),r=n.map(o=>o.name).sort();return s.join(this.SEPARATOR)+"--"+r.join(this.SEPARATOR)}compile(e,n){const s=ZS(e,n,this.weightMap,this._initNodes),{missingInputs:r,dynamicNode:o,syncInputs:a}=s;if(o!=null)throw new Error(`This execution contains the node '${o.name}', which has the dynamic op '${o.op}'. Please use model.executeAsync() instead. Alternatively, to avoid the dynamic ops, specify the inputs [${a}]`);if(r.length>0){const u=n.map(h=>h.name),c=Object.keys(e);throw new Error(`Cannot compute the outputs [${u}] from the provided inputs [${c}]. Missing the following inputs: [${r}]`)}const i=A5(this.graph,s),l=F5(i);return{orderedNodes:i,nodeLiveUntilMap:l}}cloneAndKeepTensor(e){if(e==null)return null;const n=e.clone();return Ht(n),n}cloneTensorList(e){return e?e.map(s=>this.cloneAndKeepTensor(s)):null}cloneTensorMap(e){return Object.fromEntries(Object.entries(e).map(([n,s])=>[n,this.cloneTensorList(s)]))}execute(e,n){this.disposeIntermediateTensors(),e=this.mapInputs(e);const s=Object.keys(e).sort();this.checkInputs(e),this.checkInputShapeAndType(e),n=this.mapOutputs(n),this.checkOutputs(n);const r=s.map(d=>this.graph.nodes[Mn(d)[0]]),o=n.map(d=>Mn(d)[0]),a=new Set(o);let i=o.map(d=>this.graph.nodes[d]);i.length===0&&(i=this._outputs);const l=this.getCompilationKey(r,i);let u=this.compiledMap.get(l);u==null&&(u=this.compile(e,i),this.compiledMap.set(l,u));try{this.keepIntermediateTensors=G().getBool("KEEP_INTERMEDIATE_TENSORS")}catch(d){this.keepIntermediateTensors=!1,console.warn(d.message)}const c={},h={};return V(()=>{const d=new QS(this.weightMap,c,h,this.functionExecutorMap,this.parseNodeNameCache),p=Object.assign({},this.weightMap);this.keepIntermediateTensors&&(this.clonedTensorsMap=this.cloneTensorMap(this.weightMap)),Object.keys(e).forEach(g=>{const[x,w]=Mn(g,d),b=[];b[w]=e[g],p[x]=b,this.keepIntermediateTensors&&(this.clonedTensorsMap[x]=this.cloneTensorList(b))});const f=this.getFrozenTensorIds(p),{orderedNodes:m,nodeLiveUntilMap:y}=u;for(const g of m){if(p[g.name])continue;const x=YS(g,p,d,this._resourceManager);if(Ea(x))throw new Error(`The execution of the op '${g.op}' returned a promise. Please use model.executeAsync() instead.`);p[g.name]=x,this.keepIntermediateTensors&&(this.clonedTensorsMap[g.name]=this.cloneTensorList(x)),this.checkTensorForDisposalWithNodeLiveUntilInfo(g,p,d,f,a,y.get(g.name))}return this.parent==null&&d.dispose(f),n.map(g=>Qt(g,p,d))})}getFrozenTensorIds(e){const n=[].concat.apply([],Object.keys(e).map(s=>e[s]).map(s=>s.map(r=>r.id)));return new Set(n)}checkTensorForDisposal(e,n,s,r,o,a,i){if(!(ha(n)||a.has(e))){for(const l of s[e])l!=null&&(i[l.id]=(i[l.id]||0)+n.children.length);for(const l of n.inputs){if(ha(l))continue;const u=HS(l.name,s,r);if(u!=null)for(const c of u){if(!c||c.kept||o.has(c.id))continue;const h=i[c.id];h===1?(c.dispose(),delete i[c.id]):h!=null&&i[c.id]--}}}}checkTensorForDisposalWithNodeLiveUntilInfo(e,n,s,r,o,a){function i(l){return ha(l)||o.has(l.name)}if(!(ha(e)||a==null))for(const l of a){if(i(l))continue;const u=HS(l.name,n,s);for(const c of u)!c||c.kept||r.has(c.id)||c.dispose()}}async executeAsync(e,n){return this._executeAsync(e,n)}disposeIntermediateTensors(){this.clonedTensorsMap&&(Object.values(this.clonedTensorsMap).forEach(e=>{for(const n of e)n&&!n.isDisposed&&n.dispose()}),this.clonedTensorsMap=null)}getIntermediateTensors(){return this.clonedTensorsMap}async _executeAsync(e,n,s=!1,r={},o={}){this.disposeIntermediateTensors(),s||(e=this.mapInputs(e),this.checkInputs(e),this.checkInputShapeAndType(e),n=this.mapOutputs(n),this.checkOutputs(n));try{this.keepIntermediateTensors=G().getBool("KEEP_INTERMEDIATE_TENSORS")}catch(d){this.keepIntermediateTensors=!1,console.warn(d.message)}const a=new QS(this.weightMap,r,o,this.functionExecutorMap,this.parseNodeNameCache);this.keepIntermediateTensors&&(this.clonedTensorsMap=this.cloneTensorMap(this.weightMap));const i=await this.executeWithControlFlow(e,a,n,s),l=n.map(d=>Qt(d,i,a)),u=l.map(d=>d.id),c=Object.keys(e).map(d=>e[d].id),h=new Set([...u,...c,...this.weightIds]);return Object.values(i).forEach(d=>{d.forEach(p=>{p&&!p.isDisposed&&!h.has(p.id)&&p.dispose()})}),this.parent==null&&a.dispose(h),l}async executeFunctionAsync(e,n,s){const r=e.reduce((o,a,i)=>(o[this.inputs[i].name]=a,o),{});return this._executeAsync(r,this.outputNodes,!0,n,s)}async executeWithControlFlow(e,n,s,r){const o=Object.keys(e),a=o.map(b=>this.graph.nodes[Mn(b)[0]]),i=s.map(b=>Mn(b)[0]),l=new Set(i);let u=i.map(b=>this.graph.nodes[b]);u.length===0&&(u=this._outputs);const{usedNodes:c,missingInputs:h,dynamicNode:d,syncInputs:p}=ZS(e,u,this.weightMap,this._initNodes),f=[...a,...this.graph.weights,...this._initNodes||[]].map(b=>({node:b,contexts:n.currentContext})),m=Object.assign({},this.weightMap);Object.keys(e).forEach(b=>{const[v,k]=Mn(b),$=[];$[k]=e[b],m[v]=$});const y={},g=this.getFrozenTensorIds(m),x={};for(;f.length>0;){const b=this.processStack(a,f,n,m,x,g,l,y,c);await Promise.all(b)}d==null&&!r&&console.warn("This model execution did not contain any nodes with control flow or dynamic output shapes. You can use model.execute() instead.");const w=u.filter(b=>!ha(b)&&!Qt(b.name,m,n)).map(b=>b.name);if(w.length>0){let b="";throw d!=null&&(b=`Alternatively, to avoid the dynamic ops, use model.execute() and specify the inputs [${p}]`),new Error(`Cannot compute the outputs [${w}] from the provided inputs [${o}]. Consider providing the following inputs: [${h}]. ${b}`)}return m}processStack(e,n,s,r,o,a,i,l,u){const c=[];for(;n.length>0;){const h=n.pop();s.currentContext=h.contexts;let d="";if(h.node.op==="Enter"&&S("isConstant",h.node,r,s)&&([d]=zr(h.node.name,s)),r[h.node.name]==null){const p=YS(h.node,r,s,this._resourceManager);d||([d]=zr(h.node.name,s));const f=s.currentContext;Ea(p)?c.push(p.then(m=>(r[d]=m,this.keepIntermediateTensors&&(this.clonedTensorsMap[d]=this.cloneTensorList(m)),s.currentContext=f,this.checkTensorForDisposal(d,h.node,r,s,a,i,l),this.processChildNodes(h.node,n,s,r,o,u),m))):(r[d]=p,this.keepIntermediateTensors&&(this.clonedTensorsMap[d]=this.cloneTensorList(p)),this.checkTensorForDisposal(d,h.node,r,s,a,i,l),this.processChildNodes(h.node,n,s,r,o,u))}else this.processChildNodes(h.node,n,s,r,o,u)}return c}processChildNodes(e,n,s,r,o,a){e.children.forEach(i=>{const[l]=zr(i.name,s);o[l]||!a.has(i.name)||(i.op==="Merge"?i.inputNames.some(u=>!!Qt(u,r,s))&&(o[l]=!0,n.push({contexts:s.currentContext,node:i})):i.inputNames.every(u=>!!Qt(u,r,s))&&(o[l]=!0,n.push({contexts:s.currentContext,node:i})))})}dispose(){Object.keys(this.weightMap).forEach(e=>this.weightMap[e].forEach(n=>n.dispose()))}checkInputShapeAndType(e){Object.keys(e).forEach(n=>{const s=e[n],[r]=Mn(n),o=this.graph.nodes[r];if(o.attrParams.shape&&o.attrParams.shape.value){const a=o.attrParams.shape.value,i=a.length===s.shape.length&&s.shape.every((l,u)=>a[u]===-1||a[u]===l);C(i,()=>`The shape of dict['${o.name}'] provided in model.execute(dict) must be [${a}], but was [${s.shape}]`)}o.attrParams.dtype&&o.attrParams.dtype.value&&C(s.dtype===o.attrParams.dtype.value,()=>`The dtype of dict['${o.name}'] provided in model.execute(dict) must be ${o.attrParams.dtype.value}, but was ${s.dtype}`)})}mapInputs(e){var n,s;const r={};for(const o in e){const a=(s=(n=this._signature)===null||n===void 0?void 0:n.inputs)===null||s===void 0?void 0:s[o];a!=null?r[a.name]=e[o]:r[o]=e[o]}return r}checkInputs(e){const n=Object.keys(e).filter(s=>{const[r]=Mn(s);return this.graph.nodes[r]==null});if(n.length>0)throw new Error(`The dict provided in model.execute(dict) has keys: [${n}] that are not part of graph`)}mapOutputs(e){return e.map(n=>{var s,r;const o=(r=(s=this._signature)===null||s===void 0?void 0:s.outputs)===null||r===void 0?void 0:r[n];return o!=null?o.name:n},{})}checkOutputs(e){e.forEach(n=>{const[s]=Mn(n);if(!this.graph.nodes[s])throw new Error(`The output '${n}' is not found in the graph`)})}}class V5{constructor(e={},n={}){this.hashTableNameToHandle=e,this.hashTableMap=n}addHashTable(e,n){this.hashTableNameToHandle[e]=n.handle,this.hashTableMap[n.id]=n}getHashTableHandleByName(e){return this.hashTableNameToHandle[e]}getHashTableById(e){return this.hashTableMap[e]}dispose(){for(const e in this.hashTableMap)this.hashTableMap[e].clearAndClose(),delete this.hashTableMap[e];for(const e in this.hashTableNameToHandle)this.hashTableNameToHandle[e].dispose(),delete this.hashTableNameToHandle[e]}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const W5="?tfjs-format=file",U5="model.json";class G5{get modelVersion(){return this.version}get inputNodes(){return this.executor.inputNodes}get outputNodes(){return this.executor.outputNodes}get inputs(){return this.executor.inputs}get outputs(){return this.executor.outputs}get weights(){return this.executor.weightMap}get metadata(){return this.artifacts.userDefinedMetadata}get modelSignature(){return this.signature}get modelStructuredOutputKeys(){return this.structuredOutputKeys}constructor(e,n={},s=dT){this.modelUrl=e,this.loadOptions=n,this.version="n/a",this.io=s,n==null&&(this.loadOptions={}),this.resourceManager=new V5}findIOHandler(){const e=this.modelUrl;if(e.load!=null)this.handler=e;else if(this.loadOptions.requestInit!=null)this.handler=this.io.browserHTTPRequest(e,this.loadOptions);else{const n=this.io.getLoadHandlers(e,this.loadOptions);if(n.length===0)n.push(this.io.browserHTTPRequest(e,this.loadOptions));else if(n.length>1)throw new Error(`Found more than one (${n.length}) load handlers for URL '${[e]}'`);this.handler=n[0]}}load(){if(this.findIOHandler(),this.handler.load==null)throw new Error("Cannot proceed with model loading because the IOHandler provided does not have the `load` method implemented.");const e=this.handler.load();return Ea(e)?e.then(n=>this.loadSync(n)):this.loadSync(e)}loadSync(e){this.artifacts=e;const n=this.artifacts.modelTopology;let s=this.artifacts.signature;if(this.artifacts.userDefinedMetadata!=null){const o=this.artifacts.userDefinedMetadata;o.signature!=null&&(s=o.signature),o.structuredOutputKeys!=null&&(this.structuredOutputKeys=o.structuredOutputKeys)}this.signature=s,this.version=`${n.versions.producer}.${n.versions.minConsumer}`;const r=this.io.decodeWeights(this.artifacts.weightData,this.artifacts.weightSpecs);if(this.executor=new up(jS.Instance.transformGraph(n,this.signature)),this.executor.weightMap=this.convertTensorMapToTensorsMap(r),this.executor.resourceManager=this.resourceManager,e.modelInitializer!=null&&e.modelInitializer.node!=null){const o=jS.Instance.transformGraph(e.modelInitializer);this.initializer=new up(o),this.initializer.weightMap=this.executor.weightMap,this.initializer.resourceManager=this.resourceManager,this.initializerSignature=e.initializerSignature}return!0}async save(e,n){if(typeof e=="string"){const s=this.io.getSaveHandlers(e);if(s.length===0)throw new Error(`Cannot find any save handlers for URL '${e}'`);if(s.length>1)throw new Error(`Found more than one (${s.length}) save handlers for URL '${e}'`);e=s[0]}if(e.save==null)throw new Error("GraphModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");return e.save(this.artifacts)}addStructuredOutputNames(e){if(this.structuredOutputKeys){const n=e instanceof ut?[e]:e,s={};return n.forEach((r,o)=>s[this.structuredOutputKeys[o]]=r),s}return e}predict(e,n){const s=this.execute(e,this.outputNodes);return this.addStructuredOutputNames(s)}async predictAsync(e,n){const s=await this.executeAsync(e,this.outputNodes);return this.addStructuredOutputNames(s)}normalizeInputs(e){var n;if(!(e instanceof ut)&&!Array.isArray(e)){const o=(n=this.signature)===null||n===void 0?void 0:n.inputs;if(o!=null)for(const a in o){const i=o[a];i.resourceId!=null&&(e[a]=this.resourceIdToCapturedInput[i.resourceId])}return e}e=Array.isArray(e)?e:[e];const s=Object.keys(this.resourceIdToCapturedInput).length;if(e.length+s!==this.inputNodes.length)throw new Error(`Input tensor count mismatch, the graph model has ${this.inputNodes.length-s} non-resource placeholders, while there are ${e.length} input tensors provided.`);let r=0;return this.inputNodes.reduce((o,a)=>{var i,l,u;const c=(u=(l=(i=this.signature)===null||i===void 0?void 0:i.inputs)===null||l===void 0?void 0:l[a])===null||u===void 0?void 0:u.resourceId;return c!=null?o[a]=this.resourceIdToCapturedInput[c]:o[a]=e[r++],o},{})}normalizeOutputs(e){return e=e||this.outputNodes,Array.isArray(e)?e:[e]}executeInitializerGraph(){return this.initializer==null?[]:this.initializerSignature==null?this.initializer.execute({},[]):this.initializer.execute({},Object.keys(this.initializerSignature.outputs))}async executeInitializerGraphAsync(){return this.initializer==null?[]:this.initializerSignature==null?this.initializer.executeAsync({},[]):this.initializer.executeAsync({},Object.keys(this.initializerSignature.outputs))}setResourceIdToCapturedInput(e){if(this.resourceIdToCapturedInput={},this.initializerSignature){const n=this.initializerSignature.outputs,s=Object.keys(n);for(let r=0;r<s.length;r++){const o=s[r],a=n[o];this.resourceIdToCapturedInput[a.resourceId]=e[r]}}}execute(e,n){this.resourceIdToCapturedInput==null&&this.setResourceIdToCapturedInput(this.executeInitializerGraph()),e=this.normalizeInputs(e),n=this.normalizeOutputs(n);const s=this.executor.execute(e,n);return s.length>1?s:s[0]}async executeAsync(e,n){this.resourceIdToCapturedInput==null&&this.setResourceIdToCapturedInput(await this.executeInitializerGraphAsync()),e=this.normalizeInputs(e),n=this.normalizeOutputs(n);const s=await this.executor.executeAsync(e,n);return s.length>1?s:s[0]}getIntermediateTensors(){return this.executor.getIntermediateTensors()}disposeIntermediateTensors(){this.executor.disposeIntermediateTensors()}convertTensorMapToTensorsMap(e){return Object.keys(e).reduce((n,s)=>(n[s]=[e[s]],n),{})}dispose(){this.executor.dispose(),this.initializer&&(this.initializer.dispose(),this.resourceIdToCapturedInput&&Oe(this.resourceIdToCapturedInput)),this.resourceManager.dispose()}}async function H5(t,e={},n=dT){if(t==null)throw new Error("modelUrl in loadGraphModel() cannot be null. Please provide a url or an IOHandler that loads the model");e==null&&(e={}),e.fromTFHub&&typeof t=="string"&&(t=j5(t));const s=new G5(t,e,n);return await s.load(),s}function j5(t){return t.endsWith("/")||(t=t+"/"),`${t}${U5}${W5}`}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */var JS;(function(t){t[t.FAIL=0]="FAIL",t[t.SHORTEST=1]="SHORTEST",t[t.LONGEST=2]="LONGEST"})(JS||(JS={}));/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function xe(t,e){Array.isArray(t)||(t=[t]),t.forEach(n=>{n!=null&&C(n.dtype!=="complex64",()=>`${e} does not support complex64 tensors in the CPU backend.`)})}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const K5=pb;class km extends b1{nextDataId(){return km.nextDataId++}constructor(){super(),this.blockSize=48,this.firstUse=!0,this.data=new oN(this,mr())}write(e,n,s){this.firstUse&&(this.firstUse=!1,G().get("IS_NODE")&&ss(`
============================
Hi, looks like you are running TensorFlow.js in Node.js. To speed things up dramatically, install our node backend, visit https://github.com/tensorflow/tfjs-node for more details. 
============================`));const r={id:this.nextDataId()};return this.data.set(r,{values:e,dtype:s,refCount:1}),r}makeTensorInfo(e,n,s){let r;if(n==="string"&&s!=null&&s.length>0&&Qu(s[0])){const o=s.map(a=>To(a));r=this.write(o,e,n)}else r=this.write(s,e,n);return{dataId:r,shape:e,dtype:n}}refCount(e){return this.data.has(e)?this.data.get(e).refCount:0}incRef(e){const n=this.data.get(e);n.refCount++}decRef(e){if(this.data.has(e)){const n=this.data.get(e);n.refCount--}}move(e,n,s,r,o){this.data.set(e,{values:n,dtype:r,refCount:o})}numDataIds(){return this.data.numDataIds()}async read(e){return this.readSync(e)}readSync(e){const{dtype:n,complexTensorInfos:s}=this.data.get(e);if(n==="complex64"){const r=this.readSync(s.real.dataId),o=this.readSync(s.imag.dataId);return Jr(r,o)}return oF(this.data.get(e).values,n)}bufferSync(e){const n=this.readSync(e.dataId);if(e.dtype==="string")try{const s=n.map(r=>_o(r));return Ae(e.shape,e.dtype,s)}catch{throw new Error("Failed to decode encoded string bytes into utf-8")}return Ae(e.shape,e.dtype,n)}makeOutput(e,n,s){return mr().makeTensorFromTensorInfo(this.makeTensorInfo(n,s,e),this)}disposeData(e,n=!1){if(this.data.has(e)){if(this.data.get(e).refCount--,!n&&this.data.get(e).refCount>0)return!1;const{complexTensorInfos:s}=this.data.get(e);s!=null&&(this.disposeData(s.real.dataId,!0),this.disposeData(s.imag.dataId,!0)),this.data.delete(e)}return!0}disposeIntermediateTensorInfo(e){this.disposeData(e.dataId)}async time(e){const n=Tn();return e(),{kernelMs:Tn()-n}}memory(){return{unreliable:!0,reasons:["The reported memory is an upper bound. Due to automatic garbage collection, the true allocated memory may be less."]}}where(e){xe([e],"where");const n=this.readSync(e.dataId);return K5(e.shape,n)}dispose(){}floatPrecision(){return 32}epsilon(){return super.epsilon()}}km.nextDataId=0;/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function cR(t){const e=new Float32Array(t.length);for(let n=0;n<t.length;++n)e[n]=Math.abs(t[n]);return e}const q5=t=>{const{x:e}=t.inputs,n=t.backend;xe(e,"abs");let s=new Float32Array(K(e.shape));const r=n.data.get(e.dataId).values;return s=cR(r),n.makeOutput(s,e.shape,e.dtype)},X5={kernelName:Pp,backendName:"cpu",kernelFunc:q5};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function It(t){return(e,n,s,r,o)=>{const a=Re(e,n),i=a.length,l=ve(a),u=K(a),c=en(o,u),h=e.length,d=n.length,p=ve(e),f=ve(n),m=nl(e,a),y=nl(n,a);if(m.length+y.length===0)for(let g=0;g<c.length;++g)c[g]=t(s[g%s.length],r[g%r.length]);else for(let g=0;g<c.length;++g){const x=yl(g,i,l),w=x.slice(-h);m.forEach($=>w[$]=0);const b=Cr(w,h,p),v=x.slice(-d);y.forEach($=>v[$]=0);const k=Cr(v,d,f);c[g]=t(s[b],r[k])}return[c,a]}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Wn(t){const{inputs:e,backend:n}=t,{real:s,imag:r}=e,o=n.data.get(s.dataId).values,a=n.data.get(r.dataId).values,i=n.makeTensorInfo(s.shape,"complex64"),l=n.data.get(i.dataId);return l.complexTensorInfos={real:n.makeTensorInfo(s.shape,"float32",o),imag:n.makeTensorInfo(r.shape,"float32",a)},i}const Y5={kernelName:E1,backendName:"cpu",kernelFunc:Wn};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function cp(t,e,n="float32"){if(n==="complex64"){const r=cp(t,e,"float32"),o=cp(t,e,"float32");return Wn({inputs:{real:r,imag:o},backend:t})}const s=hn(K(e),n);return t.makeTensorInfo(e,n,s)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Dr(t){const{inputs:e,backend:n}=t,{x:s}=e;return n.incRef(s.dataId),{dataId:s.dataId,shape:s.shape,dtype:s.dtype}}const Q5={kernelName:xc,backendName:"cpu",kernelFunc:Dr};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function za(t){const{inputs:e,backend:n}=t,{input:s}=e,r=n.data.get(s.dataId).complexTensorInfos.real,o=n.data.get(r.dataId).values;return n.makeTensorInfo(r.shape,r.dtype,o)}const Z5={kernelName:ix,backendName:"cpu",kernelFunc:za};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function hR(t,e,n,s){if(s==="int32"){const r=Int32Array.from(t);return[e,"int32",r]}if(s==="bool"){const r=ja([0],n),[o,a]=It((i,l)=>i!==l?1:0)(e,[],t,r,"bool");return[a,"bool",o]}throw new Error(`Error in Cast: failed to cast ${n} to ${s}`)}function Wo(t){const{inputs:e,backend:n,attrs:s}=t,{x:r}=e,{dtype:o}=s;if(o==="complex64"){if(r.dtype==="complex64")return Dr({inputs:{x:r},backend:n});const c=cp(n,r.shape,r.dtype),h=Wo({inputs:{x:r},backend:n,attrs:{dtype:"float32"}}),d=Wn({inputs:{real:h,imag:c},backend:n});return n.disposeIntermediateTensorInfo(c),n.disposeIntermediateTensorInfo(h),d}if(r.dtype==="complex64"){const c=za({inputs:{input:r},backend:n}),h=Wo({inputs:{x:c},backend:n,attrs:{dtype:o}});return n.disposeIntermediateTensorInfo(c),h}if(!iN(r.dtype,o)){const c=Dr({inputs:{x:r},backend:n});return{dataId:c.dataId,shape:c.shape,dtype:o}}const a=n.data.get(r.dataId).values,[i,l,u]=hR(a,r.shape,r.dtype,o);return n.makeTensorInfo(i,l,u)}const J5={kernelName:oc,backendName:"cpu",kernelFunc:Wo};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Vt(t,e,n,s){return n==null?({inputs:r,backend:o})=>{const{a,b:i}=r,l=o;xe([a,i],t);const u=l.data.get(a.dataId).values,c=l.data.get(i.dataId).values,h=a.dtype==="string"?eo(u):u,d=a.dtype==="string"?eo(c):c,p=s||a.dtype,[f,m]=e(a.shape,i.shape,h,d,p);return l.makeTensorInfo(m,p,f)}:({inputs:r,backend:o})=>{const{a,b:i}=r,l=o;if(a.dtype==="complex64"||i.dtype==="complex64"){const u=Wo({inputs:{x:a},backend:l,attrs:{dtype:"complex64"}}),c=l.data.get(u.dataId),h=c.complexTensorInfos.real,d=c.complexTensorInfos.imag,p=l.data.get(h.dataId).values,f=l.data.get(d.dataId).values,m=Wo({inputs:{x:i},backend:l,attrs:{dtype:"complex64"}}),y=l.data.get(m.dataId),g=y.complexTensorInfos.real,x=y.complexTensorInfos.imag,w=l.data.get(g.dataId).values,b=l.data.get(x.dataId).values,[v,k,$]=n(a.shape,i.shape,p,f,w,b),N=l.makeTensorInfo($,"float32",v),E=l.makeTensorInfo($,"float32",k),T=Wn({inputs:{real:N,imag:E},backend:l});return l.disposeIntermediateTensorInfo(u),l.disposeIntermediateTensorInfo(m),l.disposeIntermediateTensorInfo(N),l.disposeIntermediateTensorInfo(E),T}else{const u=l.data.get(a.dataId).values,c=l.data.get(i.dataId).values,h=s||a.dtype,[d,p]=e(a.shape,i.shape,u,c,h);return l.makeTensorInfo(p,h,d)}}}function yw(t){return(e,n,s,r,o,a)=>{const i=Re(e,n),l=K(i),u=i.length,c=ve(i),h=en("float32",l),d=en("float32",l),p=nl(e,i),f=nl(n,i),m=Jr(s,r),y=Jr(o,a),g=e.length,x=ve(e),w=n.length,b=ve(n);if(p.length+f.length===0)for(let v=0;v<h.length;v++){const k=v%m.length,$=v%y.length,N=t(m[k*2],m[k*2+1],y[$*2],y[$*2+1]);h[v]=N.real,d[v]=N.imag}else for(let v=0;v<h.length;v++){const k=yl(v,u,c),$=k.slice(-g);p.forEach(z=>$[z]=0);const N=Cr($,g,x),E=k.slice(-w);f.forEach(z=>E[z]=0);const T=Cr(E,w,b),R=t(m[N*2],m[N*2+1],y[T*2],y[T*2+1]);h[v]=R.real,d[v]=R.imag}return[h,d,i]}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const dR=It((t,e)=>t+e),ej=yw((t,e,n,s)=>({real:t+n,imag:e+s})),al=Vt(xl,dR,ej),tj={kernelName:xl,backendName:"cpu",kernelFunc:al};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function xw(t,e,n,s,r){const o=K(s),a=hn(r,n);for(let i=0;i<t.length;i++){const l=t[i];if(l<0)throw new Error("Input x must be non-negative!");l>=r||(o>0?a[l]+=e[i]:a[l]+=1)}return a}function pR(t,e,n,s=!1){const r=t.shape[0],o=t.shape[1],a=Ae([r,n],e.dtype);for(let i=0;i<r;i++)for(let l=0;l<o;l++){const u=t.get(i,l);if(u<0)throw new Error("Input x must be non-negative!");u>=n||(s?a.set(1,i,u):e.size>0?a.set(a.get(i,u)+e.get(i,l),i,u):a.set(a.get(i,u)+1,i,u))}return a}/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const fR=It((t,e)=>t&e),nj=Vt(Hp,fR),sj={kernelName:Hp,backendName:"cpu",kernelFunc:nj};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Or(t){return(e,n,s)=>{const r=kt(n,e.length);for(let o=0;o<e.length;++o)r[o]=t(e[o],s);return r}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function qe(t,e,n){const s=Or(e);return na(t,s,n)}function na(t,e,n){return({inputs:s,attrs:r,backend:o})=>{const{x:a}=s;xe(a,t);const i=o,l=i.data.get(a.dataId).values;let u;if(a.dtype==="string"){if(!Array.isArray(l))throw new Error("String tensor's value was not an instance of Array");u=eo(l)}else u=l;const c=n||a.dtype,h=e(u,c,r);return i.makeTensorInfo(a.shape,c,h)}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const mR=Or(t=>Math.ceil(t)),rj=na(ac,mR),oj={kernelName:ac,backendName:"cpu",kernelFunc:rj};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gR(t,e,n,s){const r=kt(n,K(e));if(s&&n!=="string"){let o=0;t.forEach(a=>{const i=K(a.shape);r.set(a.vals,o),o+=i})}else{let o=0;t.forEach(a=>{const i=n==="string"?eo(a.vals):a.vals;let l=0;for(let u=0;u<a.shape[0];++u){const c=u*e[1]+o;for(let h=0;h<a.shape[1];++h)r[c+h]=i[l++]}o+=a.shape[1]})}return r}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const yR=It((t,e)=>t===e?1:0),xR=Vt(ef,yR,null,"bool"),aj={kernelName:ef,backendName:"cpu",kernelFunc:xR};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const bR=Or(t=>Math.exp(t)),wR=na(pc,bR,"float32"),ij={kernelName:pc,backendName:"cpu",kernelFunc:wR};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const vR=Or(t=>Math.expm1(t)),lj=na(fc,vR),uj={kernelName:fc,backendName:"cpu",kernelFunc:lj};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const SR=Or(t=>Math.floor(t)),cj=na(mc,SR),hj={kernelName:mc,backendName:"cpu",kernelFunc:cj};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const kR=It((t,e)=>Math.floor(t/e)),dj=Vt(gc,kR,null,"int32"),pj={kernelName:gc,backendName:"cpu",kernelFunc:dj};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $R(t,e,n,s,r,o,a,i,l){const u=Ae([s,o],n);for(let c=0;c<s;c++){const h=[];let d=0;for(let p=0;p<r;p++){const f=t[c*r+p];d+=f*a[p],h.push(f)}if(d<0||d>=l/o)throw new Error(`Invalid indices: ${h} does not index into ${i}`);for(let p=0;p<o;p++)u.values[c*o+p]=e.get(...e.indexToLoc(d*o+p))}return u}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function CR(t,e,n){const s=Ae(n,t.dtype);for(let r=0;r<s.size;++r){const a=s.indexToLoc(r).slice(),i=a[0],l=a[2],u=e.locToIndex([i,l]);a[2]=e.values[u];const c=t.locToIndex(a);0<=c&&c<t.values.length&&(s.values[r]=t.values[c])}return s}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const NR=It((t,e)=>t>e?1:0),fj=Vt(rf,NR,null,"bool"),mj={kernelName:rf,backendName:"cpu",kernelFunc:fj};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const IR=It((t,e)=>t>=e?1:0),gj=Vt(yc,IR,null,"bool"),yj={kernelName:yc,backendName:"cpu",kernelFunc:gj};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const TR=It((t,e)=>t<e?1:0),xj=Vt(af,TR,null,"bool"),bj={kernelName:af,backendName:"cpu",kernelFunc:xj};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ER=It((t,e)=>t<=e?1:0),wj=Vt(lf,ER,null,"bool"),vj={kernelName:lf,backendName:"cpu",kernelFunc:wj};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function RR(t,e,n){const s=(e-t)/(n-1),r=hn(n,"float32");r[0]=t;for(let o=1;o<r.length;o++)r[o]=r[o-1]+s;return r}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const DR=Or(t=>Math.log(t)),Sj=na(Sc,DR),kj={kernelName:Sc,backendName:"cpu",kernelFunc:Sj};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function AR(t,e,n,s){const r=en(s,K(n));for(let o=0;o<r.length;++o){const a=o*e;let i=t[a];for(let l=0;l<e;++l){const u=t[a+l];(Number.isNaN(u)||u>i)&&(i=u)}r[o]=i}return r}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const _R=It((t,e)=>Math.max(t,e)),$j=Vt($c,_R),Cj={kernelName:$c,backendName:"cpu",kernelFunc:$j};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const OR=It((t,e)=>Math.min(t,e)),Nj=Vt(Cc,OR),Ij={kernelName:Cc,backendName:"cpu",kernelFunc:Nj};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const bw=It((t,e)=>t*e),Tj=yw((t,e,n,s)=>({real:t*n-e*s,imag:t*s+e*n})),$m=Vt(Ic,bw,Tj),Ej={kernelName:Ic,backendName:"cpu",kernelFunc:$m};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function FR(t,e,n){const s=Ko(-1,n);return bw([],e,s,t,n)}function Rj(t){const{inputs:e,backend:n}=t,{x:s}=e;xe(s,"neg");const r=n.data.get(s.dataId).values,[o,a]=FR(r,s.shape,s.dtype);return n.makeTensorInfo(a,s.dtype,o)}const Dj={kernelName:bf,backendName:"cpu",kernelFunc:Rj};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const LR=It((t,e)=>t!==e?1:0),Aj=Vt(wf,LR,null,"bool"),_j={kernelName:wf,backendName:"cpu",kernelFunc:Aj};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ww(t,e,n,s,r){const o=e.length,a=K(e),i=ve(e),l=ve(r),u=en(n,K(r));for(let c=0;c<a;++c){const h=yl(c,o,i),d=new Array(h.length);for(let f=0;f<d.length;f++)d[f]=h[s[f]];const p=Cr(d,o,l);u[p]=t[c]}return u}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _n(t){const{inputs:e,attrs:n,backend:s}=t,{x:r}=e,{perm:o}=n;xe(r,"transpose");const a=r.shape.length,i=new Array(a);for(let h=0;h<i.length;h++)i[h]=r.shape[o[h]];const l=s.data.get(r.dataId).values,u=ww(l,r.shape,r.dtype,o,i);return{dataId:s.write(u,i,r.dtype),shape:i,dtype:r.dtype}}const Oj={kernelName:Li,backendName:"cpu",kernelFunc:_n};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function PR(t,e,n,s){const[r,o]=qt(t,s),a=Xn(e,"int32"),i=hn(K(r),a),l=K(o);for(let u=0;u<i.length;++u){const c=u*l;let h=1;for(let d=0;d<l;++d)h*=n[c+d];i[u]=h}return{outVals:i,outShape:r,outDtype:a}}function Fj(t){const{inputs:e,backend:n,attrs:s}=t,{x:r}=e,{axis:o,keepDims:a}=s;xe(r,"prod");const i=r.shape.length,l=Fe(o,r.shape),u=gt(l,i);let c=l,h=r;const d=[];u!=null&&(h=_n({inputs:{x:r},backend:n,attrs:{perm:u}}),d.push(h),c=Ct(c.length,i));const p=n.data.get(h.dataId).values,{outVals:f,outShape:m,outDtype:y}=PR(h.shape,h.dtype,p,c);let g=m;return a&&(g=$t(m,l)),d.forEach(x=>n.disposeIntermediateTensorInfo(x)),n.makeTensorInfo(g,y,f)}const Lj={kernelName:Nf,backendName:"cpu",kernelFunc:Fj};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Pj(t,e,n){t.forEach((s,r)=>{if(s<0||s>=n){const o=yl(r,e.length,ve(e)).join(",");throw new Error(`indices[${o}] = ${s} is not in [0, ${n})`)}})}function zj(t,e){for(let n=0;n<t.length;++n){const s=t[n],r=n===t.length-1?e:t[n+1].length;if(s.length===0)throw new Error("Ragged splits may not be empty");if(s[0]<0)throw new Error("Ragged splits must be non-negative");if(s[s.length-1]>r)throw new Error("Ragged splits must not point past values");for(let o=1;o<s.length;++o)if(s[o-1]>s[o])throw new Error("Ragged splits must be sorted in ascending order")}}function Mj(t,e,n,s){const r=[];let o=0;const a=e.length-1+n.length,i=new Array(a).fill(null).map(()=>[0]);zj(n,s);let l=1;for(let u=0;u<e.length-1;++u){l*=e[u];const c=e[u+1];for(let h=1;h<l+1;++h)i[u].push(h*c)}for(let u=0;u<t.length;++u){let c=t[u],h=t[u]+1;for(let d=0;d<n.length;++d){const p=n[d],f=d+e.length-1;if(f>=0){const m=i[f],y=m[m.length-1]-p[c];for(let g=c;g<h;++g)i[f].push(p[g+1]+y)}c=p[c],h=p[h]}h!==c&&(r.push([c,h]),o+=h-c)}return{outSplits:i,valueSlices:r,numValues:o}}function Bj(t){const e=[];for(let n=0;n<t.length;++n){const s=t[n].length,r=kt("int32",s);e.push(r),t[n].forEach((o,a)=>r[a]=o)}return e}function ek(t,e){const n=t.slice(0,e);for(;n.length<e;)n.push(1);for(let s=e;s<t.length;s++)n[e-1]*=t[s];return n}function Vj(t,e,n,s,r,o){const a=ek(e,2)[1],i=ek(o,2)[1];let l=0;for(const u of n)for(let c=u[0];c<u[1];++c){for(let h=0;h<s;++h)r[l*i+h]=t[c*a+h];++l}}function Wj(t,e,n,s,r){const o=e.slice();o[0]=r;const a=kt(n,K(o)),i=t.length,l=i===0?0:i/e[0];return Vj(t,e,s,l,a,o),[a,o]}function zR(t,e,n,s,r,o,a,i){if(t.length===0)throw new Error("paramsNestedSplits must be non empty");if(e[0].length===0)throw new Error("Split tensors must not be scalars");const l=e[0][0]-1;if(Pj(o,a,l),s.length===0)throw new Error("params.rank must be nonzero");const u=s[0],{outSplits:c,valueSlices:h,numValues:d}=Mj(o,a,t,u),p=Bj(c),f=Wj(n,s,r,h,d);return[p,f[0],f[1]]}/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const tk=2147483647;function MR(t,e,n,s,r,o,a){if(e.length>1)throw new Error("starts must be a scalar or vector");if(r.length>1)throw new Error("limits must be a scalar or vector");if(a.length>1)throw new Error("deltas must be a scalar or vector");const i=e.length===0,l=r.length===0,u=a.length===0,c=[];i||c.push(e[0]),l||c.push(r[0]),u||c.push(a[0]);for(let y=1;y<c.length;++y)if(c[y]!==c[y-1])throw new Error("starts, limits, and deltas must have the same shape");const h=c.length===0?1:c[0],d=kt("int32",h+1);d[0]=0;for(let y=0;y<h;++y){const g=i?t[0]:t[y],x=l?s[0]:s[y],w=u?o[0]:o[y];if(w===0)throw new Error("Requires delta != 0");let b;if(w>0&&x<g||w<0&&x>g)b=0;else if(b=Math.ceil(Math.abs((x-g)/w)),b>tk)throw new Error(`Requires ((limit - start) / delta) <= ${tk}`);d[y+1]=d[y]+b}const p=d[h],f=kt(n,p);let m=0;for(let y=0;y<h;++y){const g=d[y+1]-d[y];let x=i?t[0]:t[y];const w=u?o[0]:o[y];for(let b=0;b<g;++b)f[m++]=x,x+=w}return[d,f]}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var bs=er;class hp{constructor(e,n,s,r,o,a,i,l,u,c){this.shape=e,this.shapeShape=n,this.values=s,this.valuesShape=r,this.valuesDType=o,this.defaultValue=a,this.defaultValueShape=i,this.rowPartitionValues=l,this.rowPartitionValuesShapes=u,this.rowPartitionTypes=kT(c),this.raggedRank=$T(this.rowPartitionTypes)}getRowPartitionTypeByDimension(e){return this.rowPartitionTypes[0]===bs.FIRST_DIM_SIZE?this.rowPartitionTypes[e+1]:this.rowPartitionTypes[e]}getRowPartitionTensor(e){return this.rowPartitionTypes[0]===bs.FIRST_DIM_SIZE?this.rowPartitionValues[e+1]:this.rowPartitionValues[e]}getMaxWidth(e){const n=this.getRowPartitionTensor(e-1);switch(this.getRowPartitionTypeByDimension(e-1)){case bs.VALUE_ROWIDS:return hp.getMaxWidthValueRowID(n);case bs.ROW_SPLITS:return hp.getMaxWidthRowSplit(n);default:throw new Error(`Cannot handle partition type ${bs[this.getRowPartitionTypeByDimension(e-1)]}`)}}static getMaxWidthRowSplit(e){const n=e.length;if(n===0||n===1)return 0;let s=0;for(let r=0;r<n-1;++r){const o=e[r+1]-e[r];o>s&&(s=o)}return s}static getMaxWidthValueRowID(e){const n=e.length;if(n===0)return 0;let s=0,r=e[0],o=0;for(let a=1;a<n;++a){const i=e[a];i!==r&&(r=i,o=Math.max(a-s,o),s=a)}return Math.max(n-s,o)}tensorShapeFromTensor(e,n,s=!0){if(n.length===0){if(e[0]===-1)return[];throw new Error("The only valid scalar shape tensor is the fully unknown shape specified as -1.")}return sk(e,s)}calculateOutputSize(e){const n=this.valuesShape,s=this.defaultValueShape;CT(s,n);const r=this.tensorShapeFromTensor(this.shape,this.shapeShape),a=ST(this.raggedRank,r,n);a[0]<0&&(a[0]=e);for(let i=1;i<=this.raggedRank;++i)a[i]<0&&(a[i]=this.getMaxWidth(i));return a}calculateFirstParentOutputIndex(e,n,s){const r=Math.min(e,s),o=[];let a=0;for(let i=0;i<r;++i,a+=n)o.push(a);for(let i=r;i<e;++i)o.push(-1);return C(o.length===e,()=>"Final length of result must be equal to firstDimension."),o}calculateOutputIndexRowSplit(e,n,s,r){const o=e.length,a=[];for(let i=0;i<o-1;++i){const l=e[i+1]-e[i];let u=Math.min(r,l),c=n[i];c===-1&&(u=0);for(let h=0;h<u;++h)a.push(c),c+=s;for(let h=0;h<l-u;++h)a.push(-1)}if(o>0&&a.length!==e[o-1])throw new Error("Invalid row split size.");return a}calculateOutputIndexValueRowID(e,n,s,r){const o=e.length,a=[];if(o===0)return[];let i=0,l=e[0];if(l>=n.length)throw new Error(`Got currentValueRowId=${l}, which is not less than ${n.length}`);let u=n[l];a.push(u);for(let c=1;c<o;++c){const h=e[c];if(h===l)u>=0&&(++i,i<r?u+=s:u=-1);else{if(i=0,l=h,h>=n.length)throw new Error(`Got nextValueRowId=${h} which is not less than ${n.length}`);u=n[h]}a.push(u)}if(a.length!==e.length)throw new Error("Invalid row ids.");return a}calculateOutputIndex(e,n,s,r){const o=this.getRowPartitionTensor(e),a=this.getRowPartitionTypeByDimension(e);switch(a){case bs.VALUE_ROWIDS:return this.calculateOutputIndexValueRowID(o,n,s,r);case bs.ROW_SPLITS:if(o.length-1>n.length)throw new Error(`Row partition size is greater than output size: ${o.length-1} > ${n.length}`);return this.calculateOutputIndexRowSplit(o,n,s,r);default:throw new Error(`Unsupported partition type: ${bs[a]}`)}}getFirstDimensionSize(){const e=this.rowPartitionValues[0];if(this.rowPartitionTypes.length===0)throw new Error("No row_partition_types given.");const n=this.rowPartitionTypes[0];switch(n){case bs.FIRST_DIM_SIZE:return e[0];case bs.VALUE_ROWIDS:throw new Error("Cannot handle VALUE_ROWIDS in first dimension.");case bs.ROW_SPLITS:return this.rowPartitionValuesShapes[0][0]-1;default:throw new Error(`Cannot handle type ${bs[n]}`)}}compute(){if(this.rowPartitionValues[0].length<=0)throw new Error("Invalid first partition input. Tensor requires at least one element.");const n=this.getFirstDimensionSize(),s=this.calculateOutputSize(n),r=new Array(this.raggedRank+1);r[r.length-1]=1;for(let l=r.length-2;l>=0;--l)r[l]=r[l+1]*s[l+1];const o=sk(s,!1),a=kt(this.valuesDType,K(o));if(r[0]*s[0]>0){let l=this.calculateFirstParentOutputIndex(n,r[0],s[0]);for(let u=1;u<=this.raggedRank;++u)l=this.calculateOutputIndex(u-1,l,r[u],s[u]);this.setOutput(this.raggedRank,l,a,o)}return[o,a]}setOutput(e,n,s,r){if(s.length===0)return;const o=this.values,a=s;let i=r.slice();i=i.slice(e+1);const l=K(i),u=n.length;let c=this.defaultValue;if(c.length!==l&&c.length!==1){const f=this.defaultValueShape;V(()=>{const m=F(c,f);c=Mi(m,i).dataSync()})}let h=0,d=0,p=0;for(let f=0;f<=u;++f){let m=f<u?n[f]:-1;if(m===p){++p;continue}if(d<p){const y=o.subarray(h*l),g=a.subarray(d*l),x=(p-d)*l;nk(g,y,x)}if(f>=u){const y=s.length;m=Math.floor(y/l)}if(m>p)if(this.defaultValue.length===1)a.subarray(p*l,m*l).fill(this.defaultValue[0]),p=m;else for(;m>p;){const y=a.slice(p*l);nk(y,c,l),++p}m<0?(h=f+1,d=p):(h=f,d=p,p=d+1)}}}function nk(t,e,n){for(let s=0;s<n;s++)t[s]=e[s]}function sk(t,e){const n=[];for(let s of t){if(s<0){if(!e)throw new Error(`Dimension ${s} must be >= 0`);if(s<-1)throw new Error(`Dimension ${s} must be >= -1`);s=-1}n.push(s)}return n}function BR(t,e,n,s,r,o,a,i,l,u){return new hp(t,e,n,s,r,o,a,i,l,u).compute()}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function VR(t,e,n,s){const r=t===e,o=t<e&&n<0,a=e<t&&n>1;if(r||o||a)return hn(0,s);const i=Math.abs(Math.ceil((e-t)/n)),l=hn(i,s);e<t&&n===1&&(n=-1),l[0]=t;for(let u=1;u<l.length;u++)l[u]=l[u-1]+n;return l}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const WR=Or(t=>1/Math.sqrt(t)),Uj=na(_c,WR),Gj={kernelName:_c,backendName:"cpu",kernelFunc:Uj};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function xa(t,e,n,s,r,o,a,i,l,u){const c=[s/r,r],h=t.values,d=e.values;if(s===0)return Ae(n,e.dtype);const p=l instanceof Pt?l:Ae(c,e.dtype);typeof l=="string"||typeof l=="number"?p.values.fill(l):typeof l=="boolean"&&p.values.fill(+l);for(let f=0;f<o;f++){const m=[];let y=0;for(let g=0;g<a;g++){const x=h[f*a+g];m.push(x),y+=x*i[g]}if(y<0||y>=s/r)throw new Error(`Invalid indices: ${m} does not index into ${n}`);for(let g=0;g<r;g++)u?p.values[y*r+g]+=d[f*r+g]:p.values[y*r+g]=e.rank===0?d[0]:d[f*r+g]}return p}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Hj=Or(t=>1/(1+Math.exp(-t))),UR=qe(zc,t=>1/(1+Math.exp(-t))),jj={kernelName:zc,backendName:"cpu",kernelFunc:UR};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function GR(t,e,n,s,r){const o=Nb(s,e,n),a=K(n),i=ve(s);if(o){const h=Ib(e,i);return r==="string"?t.slice(h,h+a):t.subarray(h,h+a)}const l=r==="string"?eo(t):t,u=Ae(s,r,l),c=Ae(n,r);for(let h=0;h<c.size;++h){const d=c.indexToLoc(h),p=d.map((f,m)=>f+e[m]);c.set(u.get(...p),...d)}return r==="string"?HT(c.values):c.values}function Ma(t){const{inputs:e,backend:n,attrs:s}=t,{x:r}=e,{begin:o,size:a}=s;xe(r,"slice");const[i,l]=um(r,o,a);$b(r,i,l);const u=n.data.get(r.dataId).values,c=GR(u,i,l,r.shape,r.dtype);return n.makeTensorInfo(l,r.dtype,c)}const Kj={kernelName:Af,backendName:"cpu",kernelFunc:Ma};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function HR(t,e,n,s,r,o,a){const i=e[0],l=o[0],u=new Array(l),c=new Array(i),h=e[1];if(l===0){if(i!==0)throw new Error(AT(i));const y=kt(n,0),g=kt(r,0);return[y,[0,h],g,u,c]}let d=!0,p=0;const f=new Array(l).fill(0);for(let y=0;y<i;++y){const g=t[y*h];if(g<0)throw new Error(_T(y,g));if(g>=l)throw new Error(OT(y,g,l));++f[g],d=d&&g>=p,p=g}let m=!0;for(let y=0;y<l;++y){const g=f[y]===0;u[y]=g,m=m&&!g,f[y]=Math.max(f[y],1),y>0&&(f[y]+=f[y-1])}if(m&&d){const y=t,g=s;for(let x=0;x<i;++x)c[x]=x;return[y,[i,h],g,u,c]}else{const y=f[l-1],g=kt(n,y*h),x=kt(r,y),w=new Array(l).fill(0);for(let b=0;b<i;++b){const v=t[b*h],k=w[v],$=(v===0?0:f[v-1])+k;w[v]++;for(let N=0;N<h;++N)g[$*h+N]=t[b*h+N];x[$]=s[b],c[b]=$}for(let b=0;b<l;++b)if(w[b]===0){const k=b===0?0:f[b-1];g[k*h+0]=b;for(let $=1;$<h;++$)g[k*h+$]=0;x[k]=a}return[g,[y,h],x,u,c]}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function jR(t,e,n,s,r){const o=K(s),a=e[0],i=r.length,l=[];let u=1,c=-1;for(let y=0;y<i;++y){const g=r[y];if(g===-1){if(c!==-1)throw new Error(FT(c,y));c=y,l.push(1)}else{if(g<0)throw new Error(LT(y,g));u*=g,l.push(g)}}if(c!==-1){if(u<=0)throw new Error(PT());const y=Math.trunc(o/u);if(u*y!==o)throw new Error(zT(s,l));l[c]=y}if(K(l)!==o)throw new Error(MT(s,l));const d=s.length,p=[];if(d>0){p[d-1]=1;for(let y=d-2;y>=0;--y)p[y]=p[y+1]*s[y+1]}const f=[];if(i>0){f[i-1]=1;for(let y=i-2;y>=0;--y)f[y]=f[y+1]*l[y+1]}const m=kt(n,a*i);for(let y=0;y<a;++y){let g=0;for(let x=0;x<d;++x)g+=t[y*d+x]*p[x];for(let x=0;x<i;++x)m[y*i+x]=Math.trunc(g/f[x]),g%=f[x]}return[m,[a,i],l]}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function vw(t,e,n,s,r,o=!1,a=0){const i=s.length,l=[e[0],t.length/e[0]],u=l[1],h=i>0?r[i-1]+1:0;if(h<0)throw new Error(Yy());const d=e.slice();d[0]=h;const p=d.reduce((w,b)=>w*b,1),f=kt(n,p);if(i===0)return h>0&&f.fill(a),[f,d];if(h<=0)throw new Error(Yy());let m=0,y=1,g=0,x=r[m];for(;;){let w=0;if(y<i){if(w=r[y],x===w){++y;continue}if(x>=w)throw new Error(BT())}if(x<0||x>=h)throw new Error(VT(x,h));x>g&&f.fill(a,g*u,x*u);for(let b=m;b<y;++b){const v=s[b];if(v<0||v>=l[0])throw new Error(WT(b,s[b],l[0]));for(let k=0;k<u;k++)f[x*u+k]+=t[v*u+k]}if(o)for(let b=0;b<u;b++)f[x*u+b]/=y-m;if(m=y,++y,g=x+1,x=w,y>i)break}return g<h&&f.fill(a,g*u,h*u),[f,d]}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const qj=Or(t=>Math.sqrt(t)),Xj=qe(Bc,t=>Math.sqrt(t)),Yj={kernelName:Bc,backendName:"cpu",kernelFunc:Xj};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const KR=It((t,e)=>{const n=t-e;return n*n}),Qj=Vt(Vc,KR),Zj={kernelName:Vc,backendName:"cpu",kernelFunc:Qj};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const qR=Or((t,e)=>{const{pattern:n,replaceGlobal:s,rewrite:r}=e;return t.replace(new RegExp(n,s?"g":""),r)}),Jj=na(Pf,qR),e6={kernelName:Pf,backendName:"cpu",kernelFunc:Jj};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function XR(t,e,n,s){const r=Ae(t,e.dtype);for(let o=0;o<r.size;o++){const a=r.indexToLoc(o),i=new Array(a.length);for(let l=0;l<i.length;l++)i[l]=a[l]*n[l]+s[l];r.set(e.get(...i),...a)}return r}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class t6{constructor(e,n,s,r,o,a){this.separator=To(e),this.nGramWidths=n,this.leftPad=To(s),this.rightPad=To(r),this.padWidth=o,this.preserveShort=a}getPadWidth(e){return Math.min(this.padWidth<0?e-1:this.padWidth,e-1)}getNumNGrams(e,n){const s=this.getPadWidth(n);return Math.max(0,e+2*s-n+1)}createNGrams(e,n,s,r,o,a){for(let i=0;i<o;++i){const l=this.getPadWidth(a),u=Math.max(0,l-i),c=Math.max(0,l-(o-(i+1))),h=a-(u+c),d=n+(u>0?0:i-l);let p=0;p+=u*this.leftPad.length;for(let x=0;x<h;++x)p+=e[d+x].length;p+=c*this.rightPad.length;const f=u+c+h-1;p+=f*this.separator.length,s[r+i]=new Uint8Array(p);const m=s[r+i];let y=0;const g=x=>x.forEach(w=>m[y++]=w);for(let x=0;x<u;++x)g(this.leftPad),g(this.separator);for(let x=0;x<h-1;++x)g(e[d+x]),g(this.separator);if(h>0){g(e[d+h-1]);for(let x=0;x<c;++x)g(this.separator),g(this.rightPad)}else{for(let x=0;x<c-1;++x)g(this.rightPad),g(this.separator);g(this.rightPad)}}}compute(e,n){const s=e.length,r=n.length;if(r>0){let l=n[0];if(l!==0)throw new Error(`First split value must be 0, got ${l}`);for(let u=1;u<r;++u){let c=n[u]>=l;if(c=c&&n[u]<=s,!c)throw new Error(`Invalid split value ${n[u]}, must be in [${l}, ${s}]`);l=n[u]}if(l!==s)throw new Error(`Last split value must be data size. Expected ${s}, got ${l}`)}const o=r-1,a=kt("int32",r);if(s===0||r===0){const l=new Array(s);for(let u=0;u<=o;++u)a[u]=0;return[l,a]}a[0]=0;for(let l=1;l<=o;++l){const u=n[l]-n[l-1];let c=0;this.nGramWidths.forEach(h=>{c+=this.getNumNGrams(u,h)}),this.preserveShort&&u>0&&c===0&&(c=1),a[l]=a[l-1]+c}const i=new Array(a[o]);for(let l=0;l<o;++l){const u=n[l];let c=a[l];if(this.nGramWidths.forEach(h=>{const d=n[l+1]-n[l],p=this.getNumNGrams(d,h);this.createNGrams(e,u,i,c,p,h),c+=p}),this.preserveShort&&c===a[l]){const h=n[l+1]-n[l];if(h===0)continue;const d=h+2*this.padWidth,p=1;this.createNGrams(e,u,i,c,p,d)}}return[i,a]}}function YR(t,e,n,s,r,o,a,i){return new t6(n,s,r,o,a,i).compute(t,e)}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function n6(t,e,n,s){if(!t.length)return;if(e.length===0){for(let o=0;o<t.length;++o)s.push(t.subarray(o,o+1));return}if(e.length===1){const o=e[0];let a=t.indexOf(o);for(;a!==-1;){const i=t.subarray(0,a);(!n||i.length!==0)&&s.push(i),t=t.subarray(a+1),a=t.indexOf(o)}(!n||t.length!==0)&&s.push(t);return}let r=0;for(let o=0;o<t.length+1;o++)if(o===t.length||e.indexOf(t[o])!==-1){const a=t.subarray(r,o);(!n||a.length!==0)&&s.push(a),r=o+1}}function QR(t,e,n){const s=t.length,r=[];let o=0,a=0;const i=new Array(s);for(let d=0;d<s;++d){const p=r.length;n6(t[d],e,n,r);const f=r.length-p;i[d]=f,o+=f,a=Math.max(a,f)}const l=kt("int32",o*2),u=new Array(o),c=[s,a];let h=0;for(let d=0;d<s;++d)for(let p=0;p<i[d];++p)l[h*2]=d,l[h*2+1]=p,u[h]=r[h],++h;return[l,u,c]}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ZR(t,e){const n=kt("int32",t.length);for(let s=0;s<t.length;++s)n[s]=$F(t[s]).modulo(e).getLowBitsUnsigned();return n}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const JR=It((t,e)=>t-e),s6=yw((t,e,n,s)=>({real:t-n,imag:e-s})),Sw=Vt(Wc,JR,s6),r6={kernelName:Wc,backendName:"cpu",kernelFunc:Sw};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function eD(t,e){const n=new Array(t.rank);for(let r=0;r<n.length;r++)n[r]=t.shape[r]*e[r];const s=Ae(n,t.dtype);for(let r=0;r<s.values.length;++r){const o=s.indexToLoc(r),a=new Array(t.rank);for(let l=0;l<a.length;l++)a[l]=o[l]%t.shape[l];const i=t.locToIndex(a);s.values[r]=t.values[i]}return s}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Jl=(t,e)=>{const n=e.value-t.value;return n===0?t.index-e.index:n};function tD(t,e,n=0,s=t.length-1){for(;s>n;){if(s-n>600){const i=s-n+1,l=e-n+1,u=Math.log(i),c=.5*Math.exp(2*u/3),h=.5*Math.sqrt(u*c*(i-c)/i)*Math.sign(l-i/2),d=Math.max(n,Math.floor(e-l*c/i+h)),p=Math.min(s,Math.floor(e+(i-l)*c/i+h));tD(t,e,d,p)}const r=t[e];let o=n,a=s;for(ci(t,n,e),Jl(t[s],r)>0&&ci(t,n,s);o<a;){for(ci(t,o,a),o++,a--;Jl(t[o],r)<0;)o=o+1;for(;Jl(t[a],r)>0;)a=a-1}Jl(t[n],r)===0?ci(t,n,a):(a=a+1,ci(t,a,s)),a<=e&&(n=a+1),e<=a&&(s=a-1)}}function nD(t,e,n,s,r){const o=e[e.length-1],[a,i]=[t.length/o,o],l=en(n,a*s),u=en("int32",a*s);for(let h=0;h<a;h++){const d=h*i,p=t.subarray(d,d+i);let f=new Array(p.length);p.forEach((x,w)=>f[w]={value:x,index:w}),s<f.length&&(tD(f,s),f=f.slice(0,s)),r&&f.sort(Jl);const m=h*s,y=l.subarray(m,m+s),g=u.subarray(m,m+s);for(let x=0;x<s;x++)y[x]=f[x].value,g[x]=f[x].index}const c=e.slice();return c[c.length-1]=s,[Ae(c,n,l),Ae(c,"int32",u)]}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sD(t,e,n,s){const r=Fe(e,n)[0],o=[1,n[0],1];for(let f=0;f<r;f++)o[0]*=n[f];o[1]=n[r];for(let f=r+1;f<n.length;f++)o[2]*=n[f];const a=new Map,i=new Int32Array(n[r]),l=new Pt(o,s,t),u=[],c=o[0]===1&&o[2]===1;for(let f=0;f<n[r];f++){let m;if(c)m=t[f].toString();else{const g=[];for(let x=0;x<o[0];x++)for(let w=0;w<o[2];w++)g.push(l.get(x,f,w));m=g.join(",")}const y=a.get(m);if(y!=null)i[f]=y;else{const g=a.size;a.set(m,g),i[f]=g,u.push(f)}}const h=o.slice();h[1]=a.size;const d=new Pt(h,s);u.forEach((f,m)=>{for(let y=0;y<o[0];y++)for(let g=0;g<o[2];g++)d.set(l.get(y,f,g),y,m,g)});const p=n.slice();return p[r]=h[1],{outputValues:d.values,outputShape:p,indices:i}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const o6=Object.freeze(Object.defineProperty({__proto__:null,addImpl:dR,bincountImpl:xw,bincountReduceImpl:pR,bitwiseAndImpl:fR,castImpl:hR,ceilImpl:mR,concatImpl:gR,equalImpl:yR,expImpl:bR,expm1Impl:vR,floorDivImpl:kR,floorImpl:SR,gatherNdImpl:$R,gatherV2Impl:CR,greaterEqualImpl:IR,greaterImpl:NR,lessEqualImpl:ER,lessImpl:TR,linSpaceImpl:RR,logImpl:DR,maxImpl:AR,maximumImpl:_R,minimumImpl:OR,multiplyImpl:bw,negImpl:FR,notEqualImpl:LR,prodImpl:PR,raggedGatherImpl:zR,raggedRangeImpl:MR,raggedTensorToTensorImpl:BR,rangeImpl:VR,rsqrtImpl:WR,scatterImpl:xa,sigmoidImpl:Hj,simpleAbsImpl:cR,sliceImpl:GR,sparseFillEmptyRowsImpl:HR,sparseReshapeImpl:jR,sparseSegmentReductionImpl:vw,sqrtImpl:qj,squaredDifferenceImpl:KR,staticRegexReplaceImpl:qR,stridedSliceImpl:XR,stringNGramsImpl:YR,stringSplitImpl:QR,stringToHashBucketFastImpl:ZR,subImpl:JR,tileImpl:eD,topKImpl:nD,transposeImpl:ww,uniqueImpl:sD},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */KN("cpu",()=>new km,1);/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const rD=qe(hc,t=>t>=0?t:Math.exp(t)-1),a6={kernelName:hc,backendName:"cpu",kernelFunc:rD};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function oD(t){const{inputs:e,backend:n,attrs:s}=t,{x:r}=e,{alpha:o}=s;xe([r],"leakyRelu");const a=K(r.shape),i=n.data.get(r.dataId).values,l=en("float32",a);for(let u=0;u<i.length;u++)l[u]=i[u]<0?o*i[u]:i[u];return n.makeTensorInfo(r.shape,"float32",l)}const i6={kernelName:of,backendName:"cpu",kernelFunc:oD};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const l6=It((t,e)=>t<0?e*t:t);function aD(t){const{inputs:e,backend:n}=t,{x:s,alpha:r}=e;xe([s,r],"prelu");const o=n.data.get(s.dataId).values,a=n.data.get(r.dataId).values,[i,l]=l6(s.shape,r.shape,o,a,"float32");return n.makeTensorInfo(l,"float32",i)}const u6={kernelName:Cf,backendName:"cpu",kernelFunc:aD};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const iD=qe(Rc,t=>Math.max(0,t)),c6={kernelName:Rc,backendName:"cpu",kernelFunc:iD};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const lD=qe(Dc,t=>Math.min(Math.max(0,t),6)),h6={kernelName:Dc,backendName:"cpu",kernelFunc:lD};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function dp(t,e,n,s,r){if(n==="linear")return Dr({inputs:{x:e},backend:t});if(n==="relu")return iD({inputs:{x:e},backend:t});if(n==="elu")return rD({inputs:{x:e},backend:t});if(n==="relu6")return lD({inputs:{x:e},backend:t});if(n==="prelu")return aD({inputs:{x:e,alpha:s},backend:t});if(n==="leakyrelu")return oD({inputs:{x:e},backend:t,attrs:{alpha:r}});if(n==="sigmoid")return UR({inputs:{x:e},backend:t});throw new Error(`Activation ${n} has not been implemented for the CPU backend.`)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function nt(t){const{inputs:e,backend:n,attrs:s}=t,{x:r}=e,{shape:o}=s,a=K(r.shape),i=aN(o,a),l=K(i);C(a===l,()=>`The new shape (${i}) has ${l} elements and the old shape (${r.shape}) has ${a} elements. The new shape and old shape must have the same number of elements.`),n.incRef(r.dataId);const u=n.data.get(r.dataId);if(u.complexTensorInfos!=null){const c=u.complexTensorInfos.real,h=u.complexTensorInfos.imag;c.shape=i,h.shape=i}return{dataId:r.dataId,shape:i,dtype:r.dtype}}const d6={kernelName:If,backendName:"cpu",kernelFunc:nt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function uD(t){const{inputs:e,backend:n,attrs:s}=t,{a:r,b:o}=e,{transposeA:a,transposeB:i}=s;xe([r,o],"matMul");const l=r.shape.length,u=o.shape.length,c=a?r.shape[l-2]:r.shape[l-1],h=i?o.shape[u-1]:o.shape[u-2],d=a?r.shape[l-1]:r.shape[l-2],p=i?o.shape[u-2]:o.shape[u-1],f=r.shape.slice(0,-2),m=o.shape.slice(0,-2),y=K(f),g=K(m),w=Re(r.shape.slice(0,-2),o.shape.slice(0,-2)).concat([d,p]);C(c===h,()=>`Error in matMul: inner shapes (${c}) and (${h}) of Tensors with shapes ${r.shape} and ${o.shape} and transposeA=${a} and transposeB=${i} must match.`);const b=a?[y,c,d]:[y,d,c],v=i?[g,p,h]:[g,h,p],k=nt({inputs:{x:r},backend:n,attrs:{shape:b}}),$=nt({inputs:{x:o},backend:n,attrs:{shape:v}}),N=a?k.shape[1]:k.shape[2],E=a?k.shape[2]:k.shape[1],T=i?$.shape[1]:$.shape[2],R=Math.max(y,g),z=n.data.get(k.dataId).values,P=n.data.get($.dataId).values,W=ve(k.shape),M=ve($.shape),[U,j,_]=a?[W[0],1,W[1]]:[W[0],W[1],1],[B,H,X]=i?[1,M[1],M[0]]:[M[1],1,M[0]],Q=E*T,Z=Ae([R,E,T],k.dtype),re=Z.values,Y=n.blockSize;for(let J=0;J<R;J++){const oe=J%y,se=J%g;for(let ce=0;ce<E;ce+=Y){const me=Math.min(ce+Y,E);for(let pe=0;pe<T;pe+=Y){const Ie=Math.min(pe+Y,T);for(let _e=0;_e<N;_e+=Y){const ze=Math.min(_e+Y,N);for(let Te=ce;Te<me;Te++)for(let Ee=pe;Ee<Ie;Ee++){let Ke=0;for(let Qe=_e;Qe<ze;Qe++){const ys=z[oe*U+Te*j+Qe*_],Tt=P[Qe*B+Ee*H+se*X];Ke+=ys*Tt}re[J*Q+(Te*T+Ee)]+=Ke}}}}}return n.disposeIntermediateTensorInfo(k),n.disposeIntermediateTensorInfo($),n.makeTensorInfo(w,Z.dtype,Z.values)}const p6={kernelName:Up,backendName:"cpu",kernelFunc:uD};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function f6(t){const{inputs:e,backend:n,attrs:s}=t,{a:r,b:o,bias:a,preluActivationWeights:i}=e,{transposeA:l,transposeB:u,activation:c,leakyreluAlpha:h}=s;let d,p,f;const m=[];d=uD({inputs:{a:r,b:o},attrs:{transposeA:l,transposeB:u},backend:n}),a&&(p=al({inputs:{a:d,b:a},backend:n}),m.push(d),d=p),c&&(f=dp(n,d,c,i,h),m.push(d),d=f);for(const g of m)n.disposeIntermediateTensorInfo(g);return d}const m6={kernelName:Ud,backendName:"cpu",kernelFunc:f6};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const g6=qe(Zu,t=>Math.acos(t)),y6={kernelName:Zu,backendName:"cpu",kernelFunc:g6};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const x6=qe(Ju,t=>Math.acosh(t)),b6={kernelName:Ju,backendName:"cpu",kernelFunc:x6};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function w6(t){const{inputs:e,backend:n}=t,s=e;xe(e,"addN");const r=s.map(i=>n.data.get(i.dataId).values),o=Ae(s[0].shape,s[0].dtype),a=o.values;for(let i=0;i<s.length;i++){const l=r[i];for(let u=0;u<a.length;u++)a[u]+=l[u]}return n.makeTensorInfo(o.shape,o.dtype,o.values)}const v6={kernelName:zp,backendName:"cpu",kernelFunc:w6};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function S6(t){const{inputs:e,backend:n,attrs:s}=t,{x:r}=e,{axis:o,keepDims:a}=s;xe(r,"all");const i=Fe(o,r.shape);let l=i;const u=gt(l,r.shape.length);let c=r;u!=null&&(c=_n({inputs:{x:r},backend:n,attrs:{perm:u}}),l=Ct(l.length,r.shape.length)),nn("all",l,c.shape.length);const[h,d]=qt(c.shape,l),p=K(d),f=hn(K(h),c.dtype),m=n.data.get(c.dataId).values;for(let g=0;g<f.length;++g){const x=g*p;let w=m[x];for(let b=0;b<p;++b){const v=m[x+b];w=w&&v}f[g]=w}u!=null&&n.disposeIntermediateTensorInfo(c);const y=n.makeTensorInfo(h,c.dtype,f);if(a){const g=$t(h,i),x=nt({inputs:{x:y},backend:n,attrs:{shape:g}});return n.disposeIntermediateTensorInfo(y),x}return y}const k6={kernelName:k1,backendName:"cpu",kernelFunc:S6};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $6(t){const{inputs:e,backend:n,attrs:s}=t,{x:r}=e,{axis:o,keepDims:a}=s;xe(r,"any");const i=Fe(o,r.shape);let l=i;const u=gt(l,r.shape.length);let c=r;u!=null&&(c=_n({inputs:{x:r},backend:n,attrs:{perm:u}}),l=Ct(l.length,r.shape.length)),nn("any",l,c.shape.length);const[h,d]=qt(c.shape,l),p=K(d),f=hn(K(h),c.dtype),m=n.data.get(c.dataId).values;for(let g=0;g<f.length;++g){const x=g*p;let w=m[x];for(let b=0;b<p;++b){const v=m[x+b];w=w||v}f[g]=w}u!=null&&n.disposeIntermediateTensorInfo(c);const y=n.makeTensorInfo(h,c.dtype,f);if(a){const g=$t(h,i),x=nt({inputs:{x:y},backend:n,attrs:{shape:g}});return n.disposeIntermediateTensorInfo(y),x}return y}const C6={kernelName:$1,backendName:"cpu",kernelFunc:$6};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function N6(t){const{inputs:e,backend:n,attrs:s}=t,{x:r}=e,{axis:o}=s;xe(r,"argMax");let a=Fe(o,r.shape);const i=gt(a,r.shape.length);let l=r;const u=[];i!=null&&(l=_n({inputs:{x:r},backend:n,attrs:{perm:i}}),u.push(l),a=Ct(a.length,l.shape.length)),a=[a[0]],nn("argMax",a,l.shape.length);const[c,h]=qt(l.shape,a),d=K(c),p=hn(d,"int32"),f=K(h),m=n.data.get(l.dataId).values;for(let y=0;y<p.length;++y){const g=y*f;let x=m[g],w=0;for(let b=0;b<f;++b){const v=m[g+b];v>x&&(x=v,w=b)}p[y]=w}return u.forEach(y=>n.disposeIntermediateTensorInfo(y)),n.makeTensorInfo(c,"int32",p)}const I6={kernelName:Mp,backendName:"cpu",kernelFunc:N6};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function T6(t){const{inputs:e,backend:n,attrs:s}=t,{x:r}=e,{axis:o}=s;xe(r,"argMin");let a=Fe(o,r.shape);const i=gt(a,r.shape.length);let l=r;const u=[];i!=null&&(l=_n({inputs:{x:r},backend:n,attrs:{perm:i}}),u.push(l),a=Ct(a.length,l.shape.length)),a=[a[0]],nn("argMin",a,l.shape.length);const[c,h]=qt(l.shape,a),d=K(c),p=hn(d,"int32"),f=K(h),m=n.data.get(l.dataId).values;for(let y=0;y<p.length;++y){const g=y*f;let x=m[g],w=0;for(let b=0;b<f;++b){const v=m[g+b];v<x&&(x=v,w=b)}p[y]=w}return u.forEach(y=>n.disposeIntermediateTensorInfo(y)),n.makeTensorInfo(c,"int32",p)}const E6={kernelName:Bp,backendName:"cpu",kernelFunc:T6};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const R6=qe(ec,t=>Math.asin(t)),D6={kernelName:ec,backendName:"cpu",kernelFunc:R6};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const A6=qe(tc,t=>Math.asinh(t)),_6={kernelName:tc,backendName:"cpu",kernelFunc:A6};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const O6=qe(nc,t=>Math.atan(t)),F6={kernelName:nc,backendName:"cpu",kernelFunc:O6};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const L6=It((t,e)=>Math.atan2(t,e)),P6=Vt(rc,L6),z6={kernelName:rc,backendName:"cpu",kernelFunc:P6};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const M6=qe(sc,t=>Math.atanh(t)),B6={kernelName:sc,backendName:"cpu",kernelFunc:M6};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function kw(t,e,n,s,r,o){const a=r.strideHeight,i=r.strideWidth,l=r.dilationHeight,u=r.dilationWidth,c=r.effectiveFilterHeight,h=r.effectiveFilterWidth,d=r.padInfo.top,p=r.padInfo.left,f=o==="max"?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,m=Ae(r.outShape,n),y=m.values,g=r.outShape[1]*r.outShape[2]*r.outShape[3],x=r.outShape[2]*r.outShape[3],w=r.outShape[3];for(let b=0;b<r.batchSize;++b){const v=b*g,k=b*s[0];for(let $=0;$<r.inChannels;++$)for(let N=0;N<r.outHeight;++N){const E=N*a-d,T=Math.max(0,E),R=Math.min(r.inHeight,c+E),z=v+N*x;for(let P=0;P<r.outWidth;++P){const W=P*i-p,M=Math.max(0,W),U=Math.min(r.inWidth,h+W);let j=f,_=0,B=0;for(let X=T;X<R;X+=l){const Q=k+X*s[1];for(let Z=M;Z<U;Z+=u){const re=Q+Z*s[2],Y=t[re+$];o==="max"&&Y>j?j=Y:o==="avg"&&(_+=Y,B++)}if(isNaN(j))break}const H=z+P*w+$;y[H]=o==="avg"?_/B:j}}}return m}function cD(t,e,n,s,r=!1,o=!1){const a=Ae(s.outShape,"int32"),i=s.strideHeight,l=s.strideWidth,u=s.dilationHeight,c=s.dilationWidth,h=s.effectiveFilterHeight,d=s.effectiveFilterWidth,p=s.padInfo.top,f=s.padInfo.left,m=Ae(e,n,t);for(let y=0;y<s.batchSize;++y)for(let g=0;g<s.inChannels;++g)for(let x=0;x<s.outHeight;++x){const w=x*i-p;let b=w;for(;b<0;)b+=u;const v=Math.min(s.inHeight,h+w);for(let k=0;k<s.outWidth;++k){const $=k*l-f;let N=$;for(;N<0;)N+=c;const E=Math.min(s.inWidth,d+$);let T=Number.NEGATIVE_INFINITY,R=-1;for(let z=b;z<v;z+=u){const P=z-w;for(let W=N;W<E;W+=c){const M=W-$,U=m.get(y,z,W,g);U>T&&(T=U,r?R=o?((y*s.inHeight+z)*s.inWidth+W)*s.inChannels+g:(z*s.inWidth+W)*s.inChannels+g:R=P*d+M)}}a.set(R,y,x,k,g)}}return a}function hD(t,e,n,s,r,o){const a=r.strideDepth,i=r.strideHeight,l=r.strideWidth,u=r.dilationDepth,c=r.dilationHeight,h=r.dilationWidth,d=r.effectiveFilterDepth,p=r.effectiveFilterHeight,f=r.effectiveFilterWidth,m=r.padInfo.front,y=r.padInfo.top,g=r.padInfo.left,x=o==="max"?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,w=Ae(r.outShape,n),b=w.values,v=r.outShape[1]*r.outShape[2]*r.outShape[3]*r.outShape[4],k=r.outShape[2]*r.outShape[3]*r.outShape[4],$=r.outShape[3]*r.outShape[4],N=r.outShape[4];for(let E=0;E<r.batchSize;++E){const T=E*v,R=E*s[0];for(let z=0;z<r.inChannels;++z)for(let P=0;P<r.outDepth;++P){const W=P*a-m;let M=W;for(;M<0;)M+=u;const U=Math.min(r.inDepth,d+W),j=T+P*k;for(let _=0;_<r.outHeight;++_){const B=_*i-y;let H=B;for(;H<0;)H+=c;const X=Math.min(r.inHeight,p+B),Q=j+_*$;for(let Z=0;Z<r.outWidth;++Z){const re=Z*l-g;let Y=re;for(;Y<0;)Y+=h;const J=Math.min(r.inWidth,f+re),oe=Q+Z*N;let se=x,ce=0,me=0;for(let Ie=M;Ie<U;Ie+=u){const _e=R+Ie*s[1];for(let ze=H;ze<X;ze+=c){const Te=_e+ze*s[2];for(let Ee=Y;Ee<J;Ee+=h){const Ke=Te+Ee*s[3],Qe=t[Ke+z];if(o==="max"&&Qe>se?se=Qe:o==="avg"&&(ce+=Qe,me++),isNaN(se))break}if(isNaN(se))break}if(isNaN(se))break}const pe=oe+z;b[pe]=o==="avg"?ce/Math.max(me,1):se}}}}return w}function V6(t,e){const n=Ae(e.outShape,"int32"),s=e.strideDepth,r=e.strideHeight,o=e.strideWidth,a=e.dilationDepth,i=e.dilationHeight,l=e.dilationWidth,u=e.effectiveFilterDepth,c=e.effectiveFilterHeight,h=e.effectiveFilterWidth,d=e.padInfo.front,p=e.padInfo.top,f=e.padInfo.left;for(let m=0;m<e.batchSize;++m)for(let y=0;y<e.inChannels;++y)for(let g=0;g<e.outDepth;++g){const x=g*s-d;let w=x;for(;w<0;)w+=a;const b=Math.min(e.inDepth,u+x);for(let v=0;v<e.outHeight;++v){const k=v*r-p;let $=k;for(;$<0;)$+=i;const N=Math.min(e.inHeight,c+k);for(let E=0;E<e.outWidth;++E){const T=E*o-f;let R=T;for(;R<0;)R+=l;const z=Math.min(e.inWidth,h+T);let P=Number.NEGATIVE_INFINITY,W=-1;for(let M=w;M<b;M+=a){const U=M-x;for(let j=$;j<N;j+=i){const _=j-k;for(let B=R;B<z;B+=l){const H=B-T,X=t.get(m,M,j,B,y);X>=P&&(P=X,W=U*c*h+_*c+H)}}}n.set(W,m,g,v,E,y)}}}return n}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function W6(t){const{inputs:e,backend:n,attrs:s}=t,{x:r}=e;xe(r,"avgPool");const{filterSize:o,strides:a,pad:i,dimRoundingMode:l}=s,u=1;C(tn(a,u),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${a} and dilations '${u}'`);const c=Ws(r.shape,o,a,u,i,l);let h;if(c.filterWidth===1&&c.filterHeight===1&&Me(c.inShape,c.outShape))h=Dr({inputs:{x:r},backend:n});else{const d=n.data.get(r.dataId).values,p=ve(r.shape),f=kw(d,r.shape,r.dtype,p,c,"avg");h=n.makeTensorInfo(c.outShape,r.dtype,f.values)}return h}const U6={kernelName:Vp,backendName:"cpu",kernelFunc:W6};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function G6(t){const{inputs:e,backend:n,attrs:s}=t,{x:r}=e,{filterSize:o,strides:a,pad:i,dimRoundingMode:l,dataFormat:u}=s;xe(r,"avgPool3d");const c=no(r.shape,o,a,1,i,l,u),h=n.data.get(r.dataId).values,d=hD(h,r.shape,r.dtype,ve(r.shape),c,"avg");return n.makeTensorInfo(d.shape,"float32",d.values)}const H6={kernelName:Wp,backendName:"cpu",kernelFunc:G6};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function j6(t){const{inputs:e,backend:n,attrs:s}=t,{dy:r,input:o}=e,{filterSize:a,strides:i,pad:l,dimRoundingMode:u}=s;xe([r,o],"avgPool3DGrad");const c=no(o.shape,a,i,1,l,u),h=c.strideDepth,d=c.strideHeight,p=c.strideWidth,f=c.filterDepth,m=c.filterHeight,y=c.filterWidth,g=c.dilationDepth,x=c.dilationHeight,w=c.dilationWidth,b=c.effectiveFilterDepth,v=c.effectiveFilterHeight,k=c.effectiveFilterWidth,$=b-1-c.padInfo.front,N=k-1-c.padInfo.left,E=v-1-c.padInfo.top,T=Ae(o.shape,"float32"),R=1/(f*m*y),z=n.bufferSync(r);for(let P=0;P<c.batchSize;++P)for(let W=0;W<c.inChannels;++W)for(let M=0;M<c.inDepth;++M)for(let U=0;U<c.inHeight;++U)for(let j=0;j<c.inWidth;++j){const _=M-$,B=U-E,H=j-N;let X=0;for(let Q=0;Q<b;Q+=g){const Z=(_+Q)/h;if(!(Z<0||Z>=c.outDepth||Math.floor(Z)!==Z))for(let re=0;re<v;re+=x){const Y=(B+re)/d;if(!(Y<0||Y>=c.outHeight||Math.floor(Y)!==Y))for(let J=0;J<k;J+=w){const oe=(H+J)/p;if(oe<0||oe>=c.outWidth||Math.floor(oe)!==oe)continue;const se=z.get(P,Z,Y,oe,W);X+=se}}}T.set(X*R,P,M,U,j,W)}return n.makeTensorInfo(T.shape,T.dtype,T.values)}const K6={kernelName:N1,backendName:"cpu",kernelFunc:j6};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function q6(t){const{inputs:e,backend:n,attrs:s}=t,{dy:r,input:o}=e,a=o;xe([r,o],"avgPoolGrad");const{filterSize:i,strides:l,pad:u}=s,c=Ws(a.shape,i,l,1,u),h=c.strideHeight,d=c.strideWidth,p=c.filterHeight,f=c.filterWidth,m=c.dilationHeight,y=c.dilationWidth,g=c.effectiveFilterHeight,x=c.effectiveFilterWidth,w=x-1-c.padInfo.left,b=g-1-c.padInfo.top,v=Ae(a.shape,"float32"),k=1/(p*f),$=n.data.get(r.dataId).values,N=Ae(r.shape,"float32",$);for(let E=0;E<c.batchSize;++E)for(let T=0;T<c.inChannels;++T)for(let R=0;R<c.inHeight;++R)for(let z=0;z<c.inWidth;++z){const P=R-b,W=z-w;let M=0;for(let U=0;U<g;U+=m){const j=(P+U)/h;if(!(j<0||j>=c.outHeight||Math.floor(j)!==j))for(let _=0;_<x;_+=y){const B=(W+_)/d;if(B<0||B>=c.outWidth||Math.floor(B)!==B)continue;const H=N.get(E,j,B,T);M+=H}}v.set(M*k,E,R,z,T)}return n.makeTensorInfo(v.shape,v.dtype,v.values)}const X6={kernelName:C1,backendName:"cpu",kernelFunc:q6};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Y6(t){const{inputs:e,backend:n,attrs:s}=t,{x:r,scale:o,offset:a,mean:i,variance:l}=e;C(i.shape.length===l.shape.length,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),C(a==null||i.shape.length===a.shape.length,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),C(o==null||i.shape.length===o.shape.length,()=>"Batch normalization gradient requires mean and scale to have equal ranks."),xe([r,i,l,o,a],"batchNorm");let{varianceEpsilon:u}=s;u==null&&(u=.001);const c=n.data.get(r.dataId).values,h=n.data.get(i.dataId).values,d=n.data.get(l.dataId).values,p=o?n.data.get(o.dataId).values:new Float32Array([1]),f=a?n.data.get(a.dataId).values:new Float32Array([0]),m=new Float32Array(c.length),y=f.length,g=p.length,x=d.length,w=h.length;let b=0,v=0,k=0,$=0;for(let N=0;N<c.length;++N)m[N]=f[b++]+(c[N]-h[v++])*p[k++]/Math.sqrt(d[$++]+u),b>=y&&(b=0),v>=w&&(v=0),k>=g&&(k=0),$>=x&&($=0);return n.makeTensorInfo(r.shape,r.dtype,m)}const Q6={kernelName:nf,backendName:"cpu",kernelFunc:Y6};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Z6(t){const{inputs:e,backend:n,attrs:s}=t,{x:r}=e,{blockShape:o,crops:a}=s;xe([r],"batchToSpaceND");const i=o.reduce((g,x)=>g*x),l=th(r.shape,o,i),u=nh(l.length,o.length),c=sh(r.shape,o,i),h=Ab(a,o.length),d=_b(c,a,o.length),p=nt({inputs:{x:r},backend:n,attrs:{shape:l}}),f=_n({inputs:{x:p},backend:n,attrs:{perm:u}}),m=nt({inputs:{x:f},backend:n,attrs:{shape:c}}),y=Ma({inputs:{x:m},backend:n,attrs:{begin:h,size:d}});return n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),y}const J6={kernelName:Gp,backendName:"cpu",kernelFunc:Z6};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function e8(t){const{inputs:e,backend:n,attrs:s}=t,{x:r,weights:o}=e,{size:a}=s,i=n.data.get(r.dataId).values,l=n.data.get(o.dataId).values,u=xw(i,l,o.dtype,o.shape,a);return n.makeTensorInfo([a],o.dtype,u)}const t8={kernelName:I1,backendName:"cpu",kernelFunc:e8};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function n8(t){const{inputs:e,backend:n}=t,{s0:s,s1:r}=e,o=n.data.get(s.dataId).values,a=n.data.get(r.dataId).values,i=Re(Array.from(o),Array.from(a));return n.makeTensorInfo([i.length],"int32",Int32Array.from(i))}const s8={kernelName:T1,backendName:"cpu",kernelFunc:n8};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const r8=qe(ic,(t,e)=>{const n=e;return t>n.clipValueMax?n.clipValueMax:t<n.clipValueMin?n.clipValueMin:t}),o8={kernelName:ic,backendName:"cpu",kernelFunc:r8};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const a8=t=>{const{x:e}=t.inputs,n=t.backend,s=new Float32Array(K(e.shape)),r=n.data.get(e.dataId),o=r.complexTensorInfos.real,a=r.complexTensorInfos.imag,i=n.data.get(o.dataId).values,l=n.data.get(a.dataId).values;for(let u=0;u<i.length;u++){const c=i[u],h=l[u];s[u]=Math.hypot(c,h)}return n.makeOutput(s,e.shape,"float32")},i8={kernelName:jp,backendName:"cpu",kernelFunc:a8};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function il(t){const{inputs:e,backend:n}=t,{input:s}=e,r=n.data.get(s.dataId).complexTensorInfos.imag,o=n.data.get(r.dataId).values;return n.makeTensorInfo(r.shape,r.dtype,o)}const l8={kernelName:K1,backendName:"cpu",kernelFunc:il};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ll(t){const{inputs:e,backend:n,attrs:s}=t,{axis:r}=s,o=Fe(r,e[0].shape)[0],a=e.map(m=>m.shape);Eb(a,o);let i=Ir(e.map(m=>m.shape),o);if(K(i)===0)return n.makeTensorInfo(i,e[0].dtype,[]);const l=e.filter(m=>K(m.shape)>0);if(l.length===1)return Dr({inputs:{x:l[0]},backend:n});if(l[0].dtype==="complex64"){const m=l.map(b=>za({inputs:{input:b},backend:n})),y=l.map(b=>il({inputs:{input:b},backend:n})),g=ll({inputs:m,backend:n,attrs:{axis:o}}),x=ll({inputs:y,backend:n,attrs:{axis:o}}),w=Wn({inputs:{real:g,imag:x},backend:n});return m.forEach(b=>n.disposeIntermediateTensorInfo(b)),y.forEach(b=>n.disposeIntermediateTensorInfo(b)),n.disposeIntermediateTensorInfo(g),n.disposeIntermediateTensorInfo(x),w}const u=l.map(m=>{const g=[-1,K(m.shape.slice(o))];return nt({inputs:{x:m},backend:n,attrs:{shape:g}})}),c=u.map(m=>({vals:n.data.get(m.dataId).values,shape:m.shape}));i=Ir(u.map(m=>m.shape),1);const h=u[0].shape[0]===1,d=gR(c,i,e[0].dtype,h),p=Ir(l.map(m=>m.shape),o),f=n.makeTensorInfo(p,e[0].dtype,d);return u.forEach(m=>n.disposeIntermediateTensorInfo(m)),f}const u8={kernelName:Kp,backendName:"cpu",kernelFunc:ll};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function dD(t){const{inputs:e,backend:n,attrs:s}=t,{x:r,filter:o}=e,{strides:a,pad:i,dataFormat:l,dilations:u,dimRoundingMode:c}=s;xe([r,o],"conv2d");const h=so(l),d=Kt(r.shape,o.shape,a,u,i,c,!1,h),p=d.filterHeight,f=d.filterWidth,m=d.dilationHeight,y=d.dilationWidth,g=d.padInfo.left,x=d.padInfo.top,w=d.dataFormat==="channelsLast",b=new Pt(d.outShape,r.dtype),v=ve(r.shape),k=ve(o.shape),$=v[0],N=w?v[1]:v[2],E=w?v[2]:1,T=w?1:v[1],R=b.strides[0],z=w?b.strides[1]:b.strides[2],P=w?b.strides[2]:1,W=w?1:b.strides[1],M=n.data.get(r.dataId).values,U=n.data.get(o.dataId).values,j=b.values;for(let _=0;_<d.batchSize;++_){const B=_*$,H=_*R;for(let X=0;X<d.outHeight;++X){const Q=H+X*z,Z=X*d.strideHeight-x;for(let re=0;re<p;++re){const Y=Z+re*m;if(Y<0||Y>=d.inHeight)continue;const J=re*k[0],oe=B+Y*N;for(let se=0;se<d.outWidth;++se){const ce=Q+se*P,me=se*d.strideWidth-g;for(let pe=0;pe<f;++pe){const Ie=me+pe*y;if(Ie<0||Ie>=d.inWidth)continue;const _e=J+pe*k[1],ze=oe+Ie*E;let Te=_e;for(let Ee=0;Ee<d.inChannels;++Ee){const Ke=M[ze+Ee*T];for(let Qe=0;Qe<d.outChannels;++Qe)j[ce+Qe*W]+=Ke*U[Te+Qe];Te+=d.outChannels}}}}}}return n.makeTensorInfo(b.shape,b.dtype,j)}const c8={kernelName:qp,backendName:"cpu",kernelFunc:dD};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function h8(t){const{inputs:e,backend:n,attrs:s}=t,{x:r,dy:o}=e,{strides:a,pad:i,dataFormat:l,dimRoundingMode:u,filterShape:c}=s;xe([r,o],"conv2dBackpropFilter");const h=so(l),d=Kt(r.shape,c,a,1,i,u,!1,h),{strideHeight:p,strideWidth:f,filterHeight:m,filterWidth:y}=d,g=d.dataFormat==="channelsLast",x=new Pt(d.filterShape,"float32"),w=d.padInfo.left,b=d.padInfo.top,v=n.data.get(r.dataId).values,k=n.data.get(o.dataId).values,$=new Pt(r.shape,r.dtype,v),N=new Pt(o.shape,o.dtype,k);for(let E=0;E<m;++E){const T=Math.max(0,Math.ceil((b-E)/p)),R=Math.min(d.outHeight,(d.inHeight+b-E)/p);for(let z=0;z<y;++z){const P=Math.max(0,Math.ceil((w-z)/f)),W=Math.min(d.outWidth,(d.inWidth+w-z)/f);for(let M=0;M<d.inChannels;++M)for(let U=0;U<d.outChannels;++U){let j=0;for(let _=0;_<d.batchSize;++_)for(let B=T;B<R;++B){const H=E+B*p-b;for(let X=P;X<W;++X){const Q=z+X*f-w;g?j+=$.get(_,H,Q,M)*N.get(_,B,X,U):j+=$.get(_,M,H,Q)*N.get(_,U,B,X)}}x.set(j,E,z,M,U)}}}return n.makeTensorInfo(x.shape,x.dtype,x.values)}const d8={kernelName:R1,backendName:"cpu",kernelFunc:h8};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function p8(t){const{inputs:e,backend:n,attrs:s}=t,{dy:r,filter:o}=e,{inputShape:a,strides:i,pad:l,dataFormat:u,dimRoundingMode:c}=s;xe([r,o],"conv2dBackpropInput");const h=ve(o.shape),d=ve(r.shape);let p=so(u);const f=Kt(a,o.shape,i,1,l,c,!1,p),m=new Pt(f.inShape,"float32"),y=m.values,g=n.data.get(r.dataId).values,x=n.data.get(o.dataId).values,[w,b,v]=h,{batchSize:k,filterHeight:$,filterWidth:N,inChannels:E,inHeight:T,inWidth:R,outChannels:z,outHeight:P,outWidth:W,strideHeight:M,strideWidth:U}=f;p=f.dataFormat;const j=$-1-f.padInfo.top,_=N-1-f.padInfo.left,B=p==="channelsLast",H=m.strides[0],X=B?m.strides[1]:m.strides[2],Q=B?m.strides[2]:1,Z=B?1:m.strides[1],re=d[0],Y=B?d[1]:d[2],J=B?d[2]:1,oe=B?1:d[1];for(let se=0;se<k;++se)for(let ce=0;ce<E;++ce)for(let me=0;me<T;++me){const pe=me-j,Ie=Math.max(0,Math.ceil(pe/M)),_e=Math.min(P,($+pe)/M);for(let ze=0;ze<R;++ze){const Te=ze-_,Ee=Math.max(0,Math.ceil(Te/U)),Ke=Math.min(W,(N+Te)/U);let Qe=0;for(let Tt=Ie;Tt<_e;++Tt){const Hs=Tt*M-pe;for(let fn=Ee;fn<Ke;++fn){const dr=fn*U-Te,Pn=re*se+Y*Tt+J*fn,Ne=w*($-1-Hs)+b*(N-1-dr)+v*ce;for(let Ze=0;Ze<z;++Ze){const on=g[Pn+oe*Ze],js=x[Ne+Ze];Qe+=on*js}}}const ys=H*se+X*me+Q*ze+Z*ce;y[ys]=Qe}}return n.makeTensorInfo(m.shape,m.dtype,m.values)}const f8={kernelName:Xp,backendName:"cpu",kernelFunc:p8};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function m8(t){const{inputs:e,backend:n,attrs:s}=t,{x:r,filter:o}=e,{strides:a,pad:i,dilations:l}=s;xe([r,o],"conv3d");const u=Yo(r.shape,o.shape,a,l,i),{filterDepth:c,filterHeight:h,filterWidth:d,dilationDepth:p,dilationHeight:f,dilationWidth:m,padInfo:y}=u,g=y.front,x=y.left,w=y.top,b=new Pt(u.outShape,r.dtype),v=n.data.get(r.dataId).values,k=n.data.get(o.dataId).values,$=b.values,N=ve(r.shape),E=ve(o.shape);for(let T=0;T<u.batchSize;++T){const R=T*N[0],z=T*b.strides[0];for(let P=0;P<u.outDepth;++P){const W=z+P*b.strides[1],M=P*u.strideDepth-g;for(let U=0;U<c;++U){const j=M+U*p;if(j<0||j>=u.inDepth)continue;const _=U*E[0],B=R+j*N[1];for(let H=0;H<u.outHeight;++H){const X=W+H*b.strides[2],Q=H*u.strideHeight-w;for(let Z=0;Z<h;++Z){const re=Q+Z*f;if(re<0||re>=u.inHeight)continue;const Y=_+Z*E[1],J=B+re*N[2];for(let oe=0;oe<u.outWidth;++oe){const se=X+oe*u.outChannels,ce=oe*u.strideWidth-x;for(let me=0;me<d;++me){const pe=ce+me*m;if(pe<0||pe>=u.inWidth)continue;const Ie=Y+me*E[2],_e=J+pe*u.inChannels;let ze=Ie;for(let Te=0;Te<u.inChannels;++Te){const Ee=v[_e+Te];for(let Ke=0;Ke<u.outChannels;++Ke)$[se+Ke]+=Ee*k[ze+Ke];ze+=u.outChannels}}}}}}}}return n.makeTensorInfo(b.shape,b.dtype,b.values)}const g8={kernelName:Yp,backendName:"cpu",kernelFunc:m8};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function y8(t){const{inputs:e,backend:n,attrs:s}=t,{x:r,dy:o}=e,{strides:a,pad:i,filterShape:l}=s;xe([r,o],"conv3dBackpropFilterV2");const u=ve(r.shape),c=ve(o.shape),h=Yo(r.shape,l,a,1,i),d=h.strideDepth,p=h.strideHeight,f=h.strideWidth,m=h.filterDepth,y=h.filterHeight,g=h.filterWidth,x=new Pt(h.filterShape,"float32"),w=x.values,[b,v,k,$]=x.strides,N=n.data.get(o.dataId).values,[E,T,R,z]=c,P=n.data.get(r.dataId).values,[W,M,U,j]=u,_=h.padInfo.front,B=h.padInfo.left,H=h.padInfo.top;for(let X=0;X<m;++X){const Q=Math.max(0,Math.ceil((_-X)/d)),Z=Math.min(h.outDepth,(h.inDepth+_-X)/d),re=X*b;for(let Y=0;Y<y;++Y){const J=Math.max(0,Math.ceil((H-Y)/p)),oe=Math.min(h.outHeight,(h.inHeight+H-Y)/p),se=Y*v+re;for(let ce=0;ce<g;++ce){const me=Math.max(0,Math.ceil((B-ce)/f)),pe=Math.min(h.outWidth,(h.inWidth+B-ce)/f),Ie=ce*k+se;for(let _e=0;_e<h.inChannels;++_e){const ze=_e*$+Ie;for(let Te=0;Te<h.outChannels;++Te){let Ee=0;for(let Ke=0;Ke<h.batchSize;++Ke){const Qe=Ke*W,ys=Ke*E;for(let Tt=Q;Tt<Z;++Tt){const fn=(X+Tt*d-_)*M+Qe,dr=Tt*T+ys;for(let Pn=J;Pn<oe;++Pn){const Ze=(Y+Pn*p-H)*U+fn,on=Pn*R+dr;for(let js=me;js<pe;++js){const Dm=(ce+js*f-B)*j+Ze,Am=js*z+on;Ee+=P[Dm+_e]*N[Am+Te]}}}}w[ze+Te]=Ee}}}}}return n.makeTensorInfo(x.shape,x.dtype,x.values)}const x8={kernelName:D1,backendName:"cpu",kernelFunc:y8};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function b8(t){const{inputs:e,backend:n,attrs:s}=t,{dy:r,filter:o}=e,{pad:a,strides:i,inputShape:l}=s;xe([r],"conv3dBackpropInputV2");const u=ve(r.shape),c=ve(o.shape),h=Yo(l,o.shape,i,1,a),d=new Pt(h.inShape,"float32"),p=d.values,[f,m,y,g]=d.strides,x=n.data.get(r.dataId).values,[w,b,v,k]=u,$=n.data.get(o.dataId).values,[N,E,T,R]=c,{batchSize:z,filterDepth:P,filterHeight:W,filterWidth:M,inChannels:U,inDepth:j,inHeight:_,inWidth:B,outChannels:H,outDepth:X,outHeight:Q,outWidth:Z,strideDepth:re,strideHeight:Y,strideWidth:J}=h,oe=P-1-h.padInfo.front,se=W-1-h.padInfo.top,ce=M-1-h.padInfo.left;for(let me=0;me<z;++me)for(let pe=0;pe<U;++pe)for(let Ie=0;Ie<j;++Ie){const _e=Ie-oe,ze=Math.max(0,Math.ceil(_e/re)),Te=Math.min(X,(P+_e)/re);for(let Ee=0;Ee<_;++Ee){const Ke=Ee-se,Qe=Math.max(0,Math.ceil(Ke/Y)),ys=Math.min(Q,(W+Ke)/Y);for(let Tt=0;Tt<B;++Tt){const Hs=Tt-ce,fn=Math.max(0,Math.ceil(Hs/J)),dr=Math.min(Z,(M+Hs)/J);let Pn=0;for(let Ne=ze;Ne<Te;++Ne){const Ze=Ne*re-_e;for(let on=Qe;on<ys;++on){const js=on*Y-Ke;for(let _l=fn;_l<dr;++_l){const Dm=_l*J-Hs,Am=w*me+b*Ne+v*on+k*_l,gA=N*(P-1-Ze)+E*(W-1-js)+T*(M-1-Dm)+R*pe;for(let xh=0;xh<H;++xh){const yA=x[Am+xh],xA=$[gA+xh];Pn+=yA*xA}}}}p[f*me+m*Ie+y*Ee+g*Tt+pe]=Pn}}}return n.makeTensorInfo(d.shape,d.dtype,d.values)}const w8={kernelName:A1,backendName:"cpu",kernelFunc:b8};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const v8=qe(lc,t=>Math.cos(t)),S8={kernelName:lc,backendName:"cpu",kernelFunc:v8};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const k8=qe(uc,t=>Math.cosh(t)),$8={kernelName:uc,backendName:"cpu",kernelFunc:k8};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function C8(t){const{inputs:e,backend:n,attrs:s}=t,{image:r,boxes:o,boxInd:a}=e,{cropSize:i,method:l,extrapolationValue:u}=s,[c,h,d,p]=r.shape,f=o.shape[0],[m,y]=i,g=Ae([f,m,y,p],"float32"),x=n.data.get(o.dataId).values,w=n.data.get(a.dataId).values,b=n.data.get(r.dataId).values,v=ve(r.shape),k=ve(g.shape);for(let $=0;$<f;$++){const N=$*4,E=x[N],T=x[N+1],R=x[N+2],z=x[N+3],P=w[$];if(P>=c)continue;const W=m>1?(R-E)*(h-1)/(m-1):0,M=y>1?(z-T)*(d-1)/(y-1):0;for(let U=0;U<m;U++){const j=m>1?E*(h-1)+U*W:.5*(E+R)*(h-1);if(j<0||j>h-1){for(let _=0;_<y;_++)for(let B=0;B<p;B++){const H=B+_*k[2]+U*k[1]+$*k[0];g.values[H]=u}continue}if(l==="bilinear"){const _=Math.floor(j),B=Math.ceil(j),H=j-_;for(let X=0;X<y;X++){const Q=y>1?T*(d-1)+X*M:.5*(T+z)*(d-1);if(Q<0||Q>d-1){for(let J=0;J<p;J++){const oe=J+X*k[2]+U*k[1]+$*k[0];g.values[oe]=u}continue}const Z=Math.floor(Q),re=Math.ceil(Q),Y=Q-Z;for(let J=0;J<p;J++){let oe=J+Z*v[2]+_*v[1]+P*v[0];const se=b[oe];oe=J+re*v[2]+_*v[1]+P*v[0];const ce=b[oe];oe=J+Z*v[2]+B*v[1]+P*v[0];const me=b[oe];oe=J+re*v[2]+B*v[1]+P*v[0];const pe=b[oe],Ie=se+(ce-se)*Y,_e=me+(pe-me)*Y;oe=J+X*k[2]+U*k[1]+$*k[0],g.values[oe]=Ie+(_e-Ie)*H}}}else for(let _=0;_<y;++_){const B=y>1?T*(d-1)+_*M:.5*(T+z)*(d-1);if(B<0||B>d-1){for(let Q=0;Q<p;Q++){const Z=Q+_*k[2]+U*k[1]+$*k[0];g.values[Z]=u}continue}const H=Math.round(B),X=Math.round(j);for(let Q=0;Q<p;Q++){const Z=Q+H*v[2]+X*v[1]+P*v[0],re=Q+_*k[2]+U*k[1]+$*k[0];g.values[re]=b[Z]}}}}return n.makeTensorInfo(g.shape,g.dtype,g.values)}const N8={kernelName:O1,backendName:"cpu",kernelFunc:C8};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function I8(t){const{inputs:e,backend:n,attrs:s}=t,{x:r}=e,{axis:o,exclusive:a,reverse:i}=s;xe(r,"cumprod");const l=gt([o],r.shape.length);let u=r;l!=null&&(u=_n({inputs:{x:r},backend:n,attrs:{perm:l}}));const c=Ct(1,r.shape.length)[0];if(c!==u.shape.length-1)throw new Error(`backend.cumprod in CPU expects an inner-most axis=${u.shape.length-1} but got axis=${c}`);const h=Xn(u.dtype,"int32"),d=v1(K(u.shape),h),p=n.data.get(u.dataId).values,f=u.shape[u.shape.length-1],m=i?(g,x)=>g+f-x-1:(g,x)=>g+x;for(let g=0;g<p.length;g+=f)for(let x=0;x<f;x++){const w=m(g,x);if(x===0)d[w]=a?1:p[w];else{const b=m(g,x-1);d[w]=a?p[b]*d[b]:p[w]*d[b]}}const y=n.makeTensorInfo(u.shape,h,d);if(l!=null){const g=Qo(l),x=_n({inputs:{x:y},backend:n,attrs:{perm:g}});return n.disposeIntermediateTensorInfo(y),n.disposeIntermediateTensorInfo(u),x}return y}const T8={kernelName:_1,backendName:"cpu",kernelFunc:I8};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function E8(t){const{inputs:e,backend:n,attrs:s}=t,{x:r}=e,{axis:o,exclusive:a,reverse:i}=s;xe(r,"cumsum");const l=gt([o],r.shape.length);let u=r;l!=null&&(u=_n({inputs:{x:r},backend:n,attrs:{perm:l}}));const c=Ct(1,r.shape.length)[0];if(c!==u.shape.length-1)throw new Error(`backend.cumsum in CPU expects an inner-most axis=${u.shape.length-1} but got axis=${c}`);const h=Xn(u.dtype,"int32"),d=hn(K(u.shape),h),p=n.data.get(u.dataId).values,f=u.shape[u.shape.length-1],m=i?(g,x)=>g+f-x-1:(g,x)=>g+x;for(let g=0;g<p.length;g+=f)for(let x=0;x<f;x++){const w=m(g,x);if(x===0)d[w]=a?0:p[w];else{const b=m(g,x-1);d[w]=a?p[b]+d[b]:p[w]+d[b]}}const y=n.makeTensorInfo(u.shape,h,d);if(l!=null){const g=Qo(l),x=_n({inputs:{x:y},backend:n,attrs:{perm:g}});return n.disposeIntermediateTensorInfo(y),n.disposeIntermediateTensorInfo(u),x}return y}const R8={kernelName:Qp,backendName:"cpu",kernelFunc:E8};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function D8(t){const{inputs:e,backend:n,attrs:s}=t,{x:r,weights:o}=e,{size:a,binaryOutput:i}=s;if(r.shape.length===1){const l=n.data.get(r.dataId).values,u=n.data.get(o.dataId).values,c=xw(l,u,o.dtype,o.shape,a);return n.makeTensorInfo([a],o.dtype,c)}else if(r.shape.length===2){const l=n.bufferSync(r),u=n.bufferSync(o),c=pR(l,u,a,i);return n.makeTensorInfo(c.shape,o.dtype,c.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${r.shape.length}.`)}const A8={kernelName:F1,backendName:"cpu",kernelFunc:D8};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _8(t){const{inputs:e,backend:n,attrs:s}=t,{x:r}=e,{blockSize:o,dataFormat:a}=s;C(a==="NHWC",()=>`Only NHWC dataFormat supported on CPU for depthToSpace. Got ${a}`);const i=r.shape[0],l=r.shape[1],u=r.shape[2],c=r.shape[3],h=l*o,d=u*o,p=c/(o*o),f=n.data.get(r.dataId).values,m=new Float32Array(i*h*d*p);let y=0;for(let g=0;g<i;++g)for(let x=0;x<h;++x){const w=Math.floor(x/o),b=x%o;for(let v=0;v<d;++v){const k=Math.floor(v/o),$=v%o,N=(b*o+$)*p;for(let E=0;E<p;++E){const R=E+N+c*(k+u*(w+l*g));m[y++]=f[R]}}}return n.makeTensorInfo([i,h,d,p],r.dtype,m)}const O8={kernelName:L1,backendName:"cpu",kernelFunc:_8};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pD(t){const{inputs:e,backend:n,attrs:s}=t,{x:r,filter:o}=e,{strides:a,pad:i,dilations:l,dimRoundingMode:u}=s;xe([r,o],"depthwiseConv2DNative");const c=ve(r.shape),h=ve(o.shape);let d=l;d==null&&(d=[1,1]),C(tn(a,d),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${a} and dilations '${d}'`);const p=Kt(r.shape,o.shape,a,d,i,u,!0),{filterHeight:f,filterWidth:m,dilationHeight:y,dilationWidth:g,padInfo:x}=p,w=x.left,b=x.top,v=p.outChannels/p.inChannels,k=new Pt(p.outShape,r.dtype),$=n.data.get(r.dataId).values,N=n.data.get(o.dataId).values,E=k.values;for(let T=0;T<p.batchSize;++T){const R=T*c[0],z=T*k.strides[0];for(let P=0;P<p.outHeight;++P){const W=z+P*k.strides[1],M=P*p.strideHeight-b;for(let U=0;U<f;++U){const j=M+U*y;if(j<0||j>=p.inHeight)continue;const _=U*h[0],B=R+j*c[1];for(let H=0;H<p.outWidth;++H){const X=W+H*k.strides[2],Q=H*p.strideWidth-w;for(let Z=0;Z<m;++Z){const re=Q+Z*g;if(re<0||re>=p.inWidth)continue;const Y=_+Z*h[1],J=B+re*p.inChannels;let oe=X,se=Y;for(let ce=0;ce<p.inChannels;++ce){const me=$[J+ce];for(let pe=0;pe<v;++pe)E[oe+pe]+=me*N[se+pe];oe+=v,se+=v}}}}}}return n.makeTensorInfo(k.shape,k.dtype,k.values)}const F8={kernelName:Zp,backendName:"cpu",kernelFunc:pD};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function L8(t){const{inputs:e,backend:n,attrs:s}=t,{x:r,dy:o}=e,{strides:a,dilations:i,pad:l,dimRoundingMode:u,filterShape:c}=s;xe([r,o],"depthwiseConv2dNativeBackpropFilter");const h=Kt(r.shape,c,a,i,l,u,!0),{strideHeight:d,strideWidth:p,filterHeight:f,filterWidth:m}=h,y=new Pt(h.filterShape,"float32"),g=h.padInfo.left,x=h.padInfo.top,w=h.outChannels/h.inChannels,b=n.data.get(r.dataId).values,v=new Pt(r.shape,r.dtype,b),k=n.data.get(o.dataId).values,$=new Pt(o.shape,o.dtype,k);for(let N=0;N<f;++N){const E=Math.max(0,Math.ceil((x-N)/d)),T=Math.min(h.outHeight,(h.inHeight+x-N)/d);for(let R=0;R<m;++R){const z=Math.max(0,Math.ceil((g-R)/p)),P=Math.min(h.outWidth,(h.inWidth+g-R)/p);for(let W=0;W<h.outChannels;++W){const M=Math.trunc(W/w),U=W%w;let j=0;for(let _=0;_<h.batchSize;++_)for(let B=E;B<T;++B){const H=N+B*d-x;for(let X=z;X<P;++X){const Q=R+X*p-g;j+=v.get(_,H,Q,M)*$.get(_,B,X,W)}}y.set(j,N,R,M,U)}}}return n.makeTensorInfo(y.shape,y.dtype,y.values)}const P8={kernelName:P1,backendName:"cpu",kernelFunc:L8};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function z8(t){const{inputs:e,backend:n,attrs:s}=t,{dy:r,filter:o}=e,{strides:a,dilations:i,pad:l,dimRoundingMode:u,inputShape:c}=s;xe([r,o],"depthwiseConv2DNativeBackpropInput");const h=ve(r.shape),d=ve(o.shape),p=Kt(c,o.shape,a,i,l,u,!0),f=new Pt(p.inShape,"float32"),m=f.values,[y,g,x]=f.strides,w=n.data.get(r.dataId).values,[b,v,k]=h,$=n.data.get(o.dataId).values,[N,E,T]=d,{batchSize:R,filterHeight:z,filterWidth:P,inChannels:W,inHeight:M,inWidth:U,outChannels:j,outHeight:_,outWidth:B,strideHeight:H,strideWidth:X}=p,Q=z-1-p.padInfo.top,Z=P-1-p.padInfo.left,re=j/W;for(let Y=0;Y<R;++Y)for(let J=0;J<W;++J)for(let oe=0;oe<M;++oe){const se=oe-Q,ce=Math.max(0,Math.ceil(se/H)),me=Math.min(_,(z+se)/H);for(let pe=0;pe<U;++pe){const Ie=pe-Z,_e=Math.max(0,Math.ceil(Ie/X)),ze=Math.min(B,(P+Ie)/X);let Te=0;for(let Ee=ce;Ee<me;++Ee){const Ke=Ee*H-se;for(let Qe=_e;Qe<ze;++Qe){const ys=Qe*X-Ie,Tt=b*Y+v*Ee+k*Qe,Hs=N*(z-1-Ke)+E*(P-1-ys)+T*J;for(let fn=0;fn<re;++fn){const dr=J*re+fn,Pn=w[Tt+dr],Ne=$[Hs+fn];Te+=Pn*Ne}}}m[y*Y+g*oe+x*pe+J]=Te}}return n.makeTensorInfo(f.shape,f.dtype,f.values)}const M8={kernelName:z1,backendName:"cpu",kernelFunc:z8};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function B8(t){const{inputs:e,backend:n}=t,{x:s}=e,r=K(s.shape),o=n.data.get(s.dataId).values,a=Ae([r,r],s.dtype),i=a.values;for(let u=0;u<o.length;u++)i[u*r+u]=o[u];const l=[...s.shape,...s.shape];return n.makeTensorInfo(l,a.dtype,a.values)}const V8={kernelName:M1,backendName:"cpu",kernelFunc:B8};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const W8={kernelName:Jp,backendName:"cpu",kernelFunc:({inputs:t,backend:e,attrs:n})=>{const{x:s,filter:r}=t,{strides:o,pad:a,dilations:i}=n,l=e,u=l.data.get(s.dataId).values,c=s.shape.length,h=l.data.get(r.dataId).values,d=r.shape.length,{batchSize:p,inHeight:f,inWidth:m,inChannels:y,outHeight:g,outWidth:x,padInfo:w,strideHeight:b,strideWidth:v,filterHeight:k,filterWidth:$,dilationHeight:N,dilationWidth:E,outShape:T}=qc(s.shape,r.shape,o,a,"NHWC",i),R=K(T),z=T.length,P=kt(s.dtype,R);for(let M=0;M<p;++M)for(let U=0;U<g;++U){const j=U*b-w.top;for(let _=0;_<x;++_){const B=_*v-w.left;for(let H=0;H<y;++H){let X=Number.MIN_SAFE_INTEGER;for(let Z=0;Z<k;++Z){const re=j+Z*N;if(re>=0&&re<f)for(let Y=0;Y<$;++Y){const J=B+Y*E;if(J>=0&&J<m){const oe=Cr([M,re,J,H],c,ve(s.shape)),se=Cr([Z,Y,H],d,ve(r.shape)),ce=u[oe]+h[se];ce>X&&(X=ce)}}}const Q=Cr([M,U,_,H],z,ve(T));P[Q]=X}}}return{dataId:l.write(ja(P,s.dtype),T,s.dtype),shape:T,dtype:s.dtype}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const U8={kernelName:Dy,backendName:"cpu",kernelFunc:({inputs:t,backend:e,attrs:n})=>{const{x:s,filter:r,dy:o}=t,{strides:a,pad:i,dilations:l}=n,u=e,c=Os(s.shape,u.data.get(s.dataId).values),h=Os(r.shape,u.data.get(r.dataId).values),{batchSize:d,inHeight:p,inWidth:f,inChannels:m,outHeight:y,outWidth:g,padInfo:x,strideHeight:w,strideWidth:b,filterHeight:v,filterWidth:k,dilationHeight:$,dilationWidth:N,outShape:E}=qc(s.shape,r.shape,a,i,"NHWC",l);C(o.rank===E.length,()=>`Error in ${Dy}, dy must have the same rank as output ${E.length}, but got ${o.rank}`);const T=Os(E,u.data.get(o.dataId).values),R=uN(r.shape,r.dtype);for(let P=0;P<d;++P)for(let W=0;W<y;++W){const M=W*w-x.top;for(let U=0;U<g;++U){const j=U*b-x.left;for(let _=0;_<m;++_){let B=Number.MIN_SAFE_INTEGER,H=0,X=0;for(let Q=0;Q<v;++Q){const Z=M+Q*$;if(Z>=0&&Z<p)for(let re=0;re<k;++re){const Y=j+re*N;if(Y>=0&&Y<f){const J=c[P][Z][Y][_]+h[Q][re][_];J>B&&(B=J,H=Q,X=re)}}}R[H][X][_]+=T[P][W][U][_]}}}return{dataId:u.write(ja(R,s.dtype),r.shape,r.dtype),shape:r.shape,dtype:r.dtype}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const G8={kernelName:Ry,backendName:"cpu",kernelFunc:({inputs:t,backend:e,attrs:n})=>{const{x:s,filter:r,dy:o}=t,{strides:a,pad:i,dilations:l}=n,u=e,c=Os(s.shape,u.data.get(s.dataId).values),h=Os(r.shape,u.data.get(r.dataId).values),{batchSize:d,inHeight:p,inWidth:f,inChannels:m,outHeight:y,outWidth:g,padInfo:x,strideHeight:w,strideWidth:b,filterHeight:v,filterWidth:k,dilationHeight:$,dilationWidth:N,outShape:E}=qc(s.shape,r.shape,a,i,"NHWC",l);C(o.rank===E.length,()=>`Error in ${Ry}, dy must have the same rank as output ${E.length}, but got ${o.rank}`);const T=Os(E,u.data.get(o.dataId).values),R=uN(s.shape,s.dtype);for(let P=0;P<d;++P)for(let W=0;W<y;++W){const M=W*w-x.top;for(let U=0;U<g;++U){const j=U*b-x.left;for(let _=0;_<m;++_){let B=Number.MIN_SAFE_INTEGER,H=M<0?0:M,X=j<0?0:j;for(let Q=0;Q<v;++Q){const Z=M+Q*$;if(Z>=0&&Z<p)for(let re=0;re<k;++re){const Y=j+re*N;if(Y>=0&&Y<f){const J=c[P][Z][Y][_]+h[Q][re][_];J>B&&(B=J,H=Z,X=Y)}}}R[P][H][X][_]+=T[P][W][U][_]}}}return{dataId:u.write(ja(R,s.dtype),s.shape,s.dtype),shape:s.shape,dtype:s.dtype}}};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function H8(t){const{inputs:e,backend:n,attrs:s}=t,{image:r}=e,{canvas:o,options:a}=s,{contextOptions:i,imageOptions:l}=a||{},u=(l==null?void 0:l.alpha)||1,c=(i==null?void 0:i.contextType)||"2d";if(c!=="2d")throw new Error(`Context type ${i.contextType} is not supported by the CPU backend.`);const h=o.getContext(c,(i==null?void 0:i.contextAttributes)||{});if(h==null)throw new Error(`Could not get the context with ${c} type.`);const[d,p]=r.shape.slice(0,2),f=r.shape.length===2?1:r.shape[2],m=n.data.get(r.dataId).values,y=r.dtype==="float32"?255:1,g=new Uint8ClampedArray(p*d*4);for(let w=0;w<d*p;++w){const b=[0,0,0,255*u];for(let k=0;k<f;k++){const $=m[w*f+k];if(r.dtype==="float32"){if($<0||$>1)throw new Error(`Tensor values for a float32 Tensor must be in the range [0 - 1] but encountered ${$}.`)}else if(r.dtype==="int32"&&($<0||$>255))throw new Error(`Tensor values for a int32 Tensor must be in the range [0 - 255] but encountered ${$}.`);f===1?(b[0]=$*y,b[1]=$*y,b[2]=$*y):b[k]=$*y}const v=w*4;g[v+0]=Math.round(b[0]),g[v+1]=Math.round(b[1]),g[v+2]=Math.round(b[2]),g[v+3]=Math.round(b[3])}o.width=p,o.height=d;const x=new ImageData(g,p,d);return h.putImageData(x,0,0),r}const j8={kernelName:pF,backendName:"cpu",kernelFunc:H8};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function dh(t){const{inputs:e,backend:n,attrs:s}=t,{x:r}=e,{axis:o,keepDims:a}=s;xe(r,"sum");let i;r.dtype==="bool"?i=Wo({inputs:{x:r},backend:n,attrs:{dtype:"int32"}}):i=Dr({inputs:{x:r},backend:n});const l=i.shape.length,u=Fe(o,i.shape),c=gt(u,l);let h=u,d=i;c!=null&&(d=_n({inputs:{x:i},backend:n,attrs:{perm:c}}),h=Ct(h.length,l)),nn("sum",h,d.shape.length);const[p,f]=qt(d.shape,h),m=Xn(d.dtype,"int32");let y=cp(n,p,m);const g=K(f),x=n.data.get(y.dataId).values,w=n.data.get(d.dataId).values;for(let b=0;b<x.length;++b){const v=b*g;let k=0;for(let $=0;$<g;++$)k+=w[v+$];x[b]=k}if(a){const b=$t(y.shape,u),v=y;y=nt({inputs:{x:y},backend:n,attrs:{shape:b}}),n.disposeIntermediateTensorInfo(v)}return n.disposeIntermediateTensorInfo(i),c!=null&&n.disposeIntermediateTensorInfo(d),y}const K8={kernelName:_f,backendName:"cpu",kernelFunc:dh};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function q8(t){const{inputs:e,backend:n,attrs:s}=t,{equation:r}=s,o=e,{allDims:a,summedDims:i,idDims:l}=Vb(r,o.length);Ub(a.length,l,o);const{path:u,steps:c}=Gb(i,l),h=c.length;let d=null,p=a.length;const f=[];for(let m=0;m<h;++m){for(const y of c[m]){const{permutationIndices:g,expandDims:x}=Wb(p,l[y]);let w;Hb(g)?w=o[y]:(w=_n({inputs:{x:o[y]},backend:n,attrs:{perm:g}}),f.push(w));const b=w.shape.slice();for(let v=0;v<x.length;++v)b.splice(x[v],0,1);Me(w.shape,b)||(w=nt({inputs:{x:w},backend:n,attrs:{shape:b}}),f.push(w)),d===null?d=w:(d=$m({inputs:{a:w,b:d},backend:n}),f.push(d))}m<h-1&&(u[m]>=0&&(d=dh({inputs:{x:d},backend:n,attrs:{axis:u[m]-(a.length-p),keepDims:!1}}),f.push(d)),p--)}for(const m of f)m!==d&&n.disposeIntermediateTensorInfo(m);return d}const X8={kernelName:B1,backendName:"cpu",kernelFunc:q8};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Y8(t){const{inputs:e,backend:n}=t,{dy:s,y:r}=e;xe([s,r],"eluGrad");const o=new Float32Array(K(r.shape)),a=n.data.get(r.dataId).values,i=n.data.get(s.dataId).values;for(let l=0;l<a.length;++l){const u=a[l];u>=0?o[l]=i[l]:o[l]=i[l]*(u+1)}return n.makeTensorInfo(r.shape,"float32",o)}const Q8={kernelName:V1,backendName:"cpu",kernelFunc:Y8};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Z8=Ob,J8=Fb,eK=Lb,tK=Pb,nK=zb,sK=Mb,rK=qe(dc,t=>{const e=Math.sign(t),n=Math.abs(t),s=1/(1+Z8*n);return e*(1-((((sK*s+nK)*s+tK)*s+eK)*s+J8)*s*Math.exp(-n*n))}),oK={kernelName:dc,backendName:"cpu",kernelFunc:rK};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pp(t){const{inputs:e,backend:n,attrs:s}=t,{input:r}=e,{dim:o}=s,a=r.shape.length,i=r.shape.slice();let l=o;return o<0&&(C(-(a+1)<=o,()=>`Axis must be in the interval [${-(a+1)}, ${a}]`),l=a+o+1),i.splice(l,0,1),nt({inputs:{x:r},backend:n,attrs:{shape:i}})}const aK={kernelName:tf,backendName:"cpu",kernelFunc:pp};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const iK=It((t,e)=>t/e),$w=Vt(cc,iK),x0={kernelName:cc,backendName:"cpu",kernelFunc:$w};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fD(t,e,n){const s=t.shape,r=s[0],o=s[1],a=n.data.get(t.dataId),i=a.complexTensorInfos.real,l=a.complexTensorInfos.imag,u=[r,o],c=K(u),h=en("float32",c),d=en("float32",c);for(let y=0;y<r;y++){const g=Ma({inputs:{x:i},backend:n,attrs:{begin:[y,0],size:[1,o]}}),x=Ma({inputs:{x:l},backend:n,attrs:{begin:[y,0],size:[1,o]}}),w=Wn({inputs:{real:g,imag:x},backend:n}),{real:b,imag:v}=lK(w,e,n),k=Jr(b,v);for(let $=0;$<o;$++){const N=Bb(k,$);h[y*o+$]=N.real,d[y*o+$]=N.imag}n.disposeIntermediateTensorInfo(g),n.disposeIntermediateTensorInfo(x),n.disposeIntermediateTensorInfo(w)}const p=n.makeTensorInfo(u,"float32",h),f=n.makeTensorInfo(u,"float32",d),m=Wn({inputs:{real:p,imag:f},backend:n});return n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(f),m}function lK(t,e,n){const s=K(t.shape),r=n.data.get(t.dataId),o=n.data.get(r.complexTensorInfos.real.dataId).values,a=n.data.get(r.complexTensorInfos.imag.dataId).values;if(uK(s)){const i=b0(o,a,s,e,n),l=[t.shape[0],t.shape[1]];if(e){const u=n.makeTensorInfo(l,"float32",i.real),c=n.makeTensorInfo(l,"float32",i.imag),h=n.makeTensorInfo([],"float32",Ko(s,"float32")),d=Dr({inputs:{x:h},backend:n}),p=x0.kernelFunc({inputs:{a:u,b:h},backend:n}),f=x0.kernelFunc({inputs:{a:c,b:d},backend:n}),m=n.data.get(p.dataId).values,y=n.data.get(f.dataId).values;return n.disposeIntermediateTensorInfo(u),n.disposeIntermediateTensorInfo(c),n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(f),{real:m,imag:y}}return i}else{const i=Jr(o,a),l=cK(i,s,e);return NT(l)}}function uK(t){return(t&t-1)===0}function b0(t,e,n,s,r){if(n===1)return{real:t,imag:e};const o=Jr(t,e),a=n/2,i=IT(o),l=i.real,u=i.imag,c=[l.length],h=r.makeTensorInfo(c,"float32",l),d=r.makeTensorInfo(c,"float32",u),p=Wn({inputs:{real:h,imag:d},backend:r}),f=TT(o),m=f.real,y=f.imag,g=[m.length],x=r.makeTensorInfo(g,"float32",m),w=r.makeTensorInfo(g,"float32",y),b=Wn({inputs:{real:x,imag:w},backend:r}),v=b0(l,u,a,s,r),k=v.real,$=v.imag,N=[k.length],E=r.makeTensorInfo(N,"float32",k),T=r.makeTensorInfo(N,"float32",$),R=Wn({inputs:{real:E,imag:T},backend:r}),z=b0(m,y,a,s,r),P=z.real,W=z.imag,M=[P.length],U=r.makeTensorInfo(M,"float32",P),j=r.makeTensorInfo(M,"float32",W),_=Wn({inputs:{real:U,imag:j},backend:r}),B=RT(n,s),H=[B.real.length],X=r.makeTensorInfo(H,"float32",B.real),Q=r.makeTensorInfo(H,"float32",B.imag),Z=Wn({inputs:{real:X,imag:Q},backend:r}),re=$m({inputs:{a:Z,b:_},backend:r}),Y=al({inputs:{a:R,b:re},backend:r}),J=Sw({inputs:{a:R,b:re},backend:r}),oe=za({inputs:{input:Y},backend:r}),se=za({inputs:{input:J},backend:r}),ce=il({inputs:{input:Y},backend:r}),me=il({inputs:{input:J},backend:r}),pe=ll({inputs:[oe,se],backend:r,attrs:{axis:0}}),Ie=ll({inputs:[ce,me],backend:r,attrs:{axis:0}}),_e=r.data.get(pe.dataId).values,ze=r.data.get(Ie.dataId).values;return r.disposeIntermediateTensorInfo(h),r.disposeIntermediateTensorInfo(d),r.disposeIntermediateTensorInfo(p),r.disposeIntermediateTensorInfo(x),r.disposeIntermediateTensorInfo(w),r.disposeIntermediateTensorInfo(b),r.disposeIntermediateTensorInfo(E),r.disposeIntermediateTensorInfo(T),r.disposeIntermediateTensorInfo(R),r.disposeIntermediateTensorInfo(U),r.disposeIntermediateTensorInfo(j),r.disposeIntermediateTensorInfo(_),r.disposeIntermediateTensorInfo(X),r.disposeIntermediateTensorInfo(Q),r.disposeIntermediateTensorInfo(Z),r.disposeIntermediateTensorInfo(re),r.disposeIntermediateTensorInfo(Y),r.disposeIntermediateTensorInfo(J),r.disposeIntermediateTensorInfo(oe),r.disposeIntermediateTensorInfo(ce),r.disposeIntermediateTensorInfo(se),r.disposeIntermediateTensorInfo(me),r.disposeIntermediateTensorInfo(pe),r.disposeIntermediateTensorInfo(Ie),{real:_e,imag:ze}}function cK(t,e,n){const s=new Float32Array(e*2);for(let r=0;r<e;r++){let o=0,a=0;for(let i=0;i<e;i++){const l=DT(r*i,e,n),u=Bb(t,i);o+=u.real*l.real-u.imag*l.imag,a+=u.real*l.imag+u.imag*l.real}n&&(o/=e,a/=e),ET(s,o,a,r)}return s}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function hK(t){const{inputs:e,backend:n}=t,{input:s}=e,r=K(s.shape),o=s.shape[s.shape.length-1],a=r/o,i=nt({inputs:{x:s},backend:n,attrs:{shape:[a,o]}}),l=fD(i,!1,n),u=nt({inputs:{x:l},backend:n,attrs:{shape:s.shape}});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(l),u}const dK={kernelName:W1,backendName:"cpu",kernelFunc:hK};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Cw(t){const{backend:e,attrs:n}=t,{shape:s,value:r,dtype:o}=n,a=o||gl(r),i=kt(a,K(s));return fK(i,r,a),e.makeTensorInfo(s,a,i)}const pK={kernelName:U1,backendName:"cpu",kernelFunc:Cw};function fK(t,e,n){t.fill(e)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const mK={kernelName:G1,backendName:"cpu",kernelFunc:({inputs:t,attrs:e,backend:n})=>{const{image:s}=t,r=n,o=en(s.dtype,K(s.shape)),[a,i,l,u]=s.shape,c=r.data.get(s.dataId).values;for(let d=0;d<a;d++){const p=d*l*i*u;for(let f=0;f<i;f++){const m=f*(l*u);for(let y=0;y<l;y++){const g=y*u;for(let x=0;x<u;x++){const w=Math.round(l-y-1),b=p+m+g+x;let v=c[b];if(w>=0&&w<l){const k=w*u,$=p+m+k+x;v=c[$]}o[b]=v}}}}return{dataId:r.write(o,s.shape,s.dtype),shape:s.shape,dtype:s.dtype}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gK(t){const{inputs:e,backend:n,attrs:s}=t,{x:r,filter:o,bias:a,preluActivationWeights:i}=e,{strides:l,pad:u,dataFormat:c,dilations:h,dimRoundingMode:d,activation:p,leakyreluAlpha:f}=s;let m=dD({inputs:{x:r,filter:o},backend:n,attrs:{strides:l,pad:u,dataFormat:c,dilations:h,dimRoundingMode:d}});if(a){const y=m;if(c==="NCHW"&&a.shape.length===1&&a.shape[0]!==1){const g=nt({inputs:{x:a},backend:n,attrs:{shape:[a.shape[0],1,1]}});m=al({inputs:{a:m,b:g},backend:n}),n.disposeIntermediateTensorInfo(g)}else m=al({inputs:{a:m,b:a},backend:n});n.disposeIntermediateTensorInfo(y)}if(p){const y=m;if(c==="NCHW"&&p==="prelu"&&i.shape.length===1&&i.shape[0]!==1){const g=nt({inputs:{x:i},backend:n,attrs:{shape:[i.shape[0],1,1]}});m=dp(n,m,p,g,f),n.disposeIntermediateTensorInfo(g)}else m=dp(n,m,p,i,f);n.disposeIntermediateTensorInfo(y)}return m}const yK={kernelName:Gd,backendName:"cpu",kernelFunc:gK};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function xK(t){const{inputs:e,backend:n,attrs:s}=t,{x:r,filter:o,bias:a,preluActivationWeights:i}=e,{strides:l,pad:u,dataFormat:c,dilations:h,dimRoundingMode:d,activation:p,leakyreluAlpha:f}=s;let m=pD({inputs:{x:r,filter:o},backend:n,attrs:{strides:l,pad:u,dataFormat:c,dilations:h,dimRoundingMode:d}});if(a){const y=m;m=al({inputs:{a:m,b:a},backend:n}),n.disposeIntermediateTensorInfo(y)}if(p){const y=m;m=dp(n,m,p,i,f),n.disposeIntermediateTensorInfo(y)}return m}const bK={kernelName:Hd,backendName:"cpu",kernelFunc:xK};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function wK(t){const{inputs:e,backend:n}=t,{params:s,indices:r}=e,o=K(s.shape),a=r.shape,i=a[a.length-1],[l,u,c,h]=kb(s,r);if(u===0)return n.makeTensorInfo(l,s.dtype,[]);const d=n.data.get(r.dataId).values,p=n.bufferSync(s),f=$R(d,p,s.dtype,u,i,c,h,s.shape,o);return n.makeTensorInfo(l,s.dtype,f.values)}const vK={kernelName:H1,backendName:"cpu",kernelFunc:wK};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function SK(t){const{inputs:e,backend:n,attrs:s}=t,{x:r,indices:o}=e,{axis:a,batchDims:i}=s;xe([r,o],"gatherV2");const l=Fe(a,r.shape)[0],u=n.data.get(o.dataId).values,c=r.shape[l];for(let b=0;b<u.length;++b){const v=u[b];C(v<=c-1&&v>=0,()=>`GatherV2: the index value ${v} is not in [0, ${c-1}]`)}let h=i;i==null&&(h=0);const d=K(o.shape),p=Kb(r,o,l,h),f=nt({inputs:{x:r},backend:n,attrs:{shape:[p.batchSize,p.outerSize,p.dimSize,p.sliceSize]}}),m=nt({inputs:{x:o},backend:n,attrs:{shape:[p.batchSize,d/p.batchSize]}}),y=[p.batchSize,p.outerSize,d/p.batchSize,p.sliceSize],g=n.bufferSync(m),x=n.bufferSync(f),w=CR(x,g,y);return n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),n.makeTensorInfo(p.outputShape,w.dtype,w.values)}const kK={kernelName:sf,backendName:"cpu",kernelFunc:SK};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $K(t){const{inputs:e,backend:n}=t,{input:s}=e,r=K(s.shape),o=s.shape[s.shape.length-1],a=r/o,i=nt({inputs:{x:s},backend:n,attrs:{shape:[a,o]}}),l=fD(i,!0,n),u=nt({inputs:{x:l},backend:n,attrs:{shape:s.shape}});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(l),u}const CK={kernelName:j1,backendName:"cpu",kernelFunc:$K};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const NK=qe(bc,t=>Number.isFinite(t)?1:0,"bool"),IK={kernelName:bc,backendName:"cpu",kernelFunc:NK};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const TK=qe(wc,t=>Math.abs(t)===1/0?1:0,"bool"),EK={kernelName:wc,backendName:"cpu",kernelFunc:TK};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const RK=qe(vc,t=>Number.isNaN(t)?1:0,"bool"),DK={kernelName:vc,backendName:"cpu",kernelFunc:RK};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function AK(t){const{backend:e,attrs:n}=t,{start:s,stop:r,num:o}=n,a=RR(s,r,o);return e.makeTensorInfo([a.length],"float32",a)}const _K={kernelName:q1,backendName:"cpu",kernelFunc:AK};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const OK=qe(kc,t=>Math.log1p(t)),FK={kernelName:kc,backendName:"cpu",kernelFunc:OK};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const LK=It((t,e)=>t&&e),PK=Vt(uf,LK,null,"bool"),zK={kernelName:uf,backendName:"cpu",kernelFunc:PK};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const MK=qe(cf,t=>t?0:1,"bool"),BK={kernelName:cf,backendName:"cpu",kernelFunc:MK};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const VK=It((t,e)=>t||e),WK=Vt(hf,VK,null,"bool"),UK={kernelName:hf,backendName:"cpu",kernelFunc:WK};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function GK(t){const{inputs:e,backend:n,attrs:s}=t,{x:r}=e,{depthRadius:o,bias:a,alpha:i,beta:l}=s;xe(r,"LRN");const u=r.shape[3],c=u-1,h=n.data.get(r.dataId).values,d=K(r.shape),p=new Float32Array(d);function f(m){const y=m%u;let g=m-y+Math.max(0,y-o);const x=m-y+Math.min(y+o,c);let w=0;for(;g<=x;g++){const b=h[g];w+=b*b}return w}for(let m=0;m<d;m++){const y=f(m),g=h[m]*Math.pow(a+i*y,-l);p[m]=g}return n.makeTensorInfo(r.shape,r.dtype,p)}const HK={kernelName:df,backendName:"cpu",kernelFunc:GK};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function jK(t){const{inputs:e,backend:n,attrs:s}=t,{x:r,y:o,dy:a}=e,{depthRadius:i,bias:l,alpha:u,beta:c}=s;xe(a,"LRNGrad");const h=K(a.shape),d=a.shape[3],p=n.data.get(a.dataId).values,f=n.data.get(r.dataId).values,m=n.data.get(o.dataId).values,y=new Float32Array(h),g=h;for(let x=0;x<g;x++){const w=x%d,b=x-w+Math.max(0,w-i),v=x-w+Math.min(d,w+i+1);let k=0;for(let $=b;$<v;$++)k+=Math.pow(f[$],2);k=u*k+l;for(let $=b;$<v;$++){let N=-2*u*c*f[$]*m[x]/k;x===$&&(N+=Math.pow(k,-c)),N*=p[x],y[$]+=N}}return n.makeTensorInfo(a.shape,r.dtype,y)}const KK={kernelName:X1,backendName:"cpu",kernelFunc:jK};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function mD(t){const{inputs:e,backend:n,attrs:s}=t,{x:r}=e,{reductionIndices:o,keepDims:a}=s,i=n;let l=r.shape;const u=l.length,c=Fe(o,l);let h=c;const d=gt(h,u);let p=i.data.get(r.dataId).values;if(d!=null){const b=new Array(u);for(let v=0;v<b.length;v++)b[v]=l[d[v]];p=ww(p,l,r.dtype,d,b),h=Ct(h.length,u),l=b}xe(r,"max"),nn("max",h,u);const[f,m]=qt(l,h),y=K(m),g=AR(p,y,f,r.dtype),x=i.write(g,f,r.dtype);let w=f;return a&&(w=$t(f,c)),{dataId:x,shape:w,dtype:r.dtype}}const qK={kernelName:pf,backendName:"cpu",kernelFunc:mD};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function XK(t){const{inputs:e,backend:n,attrs:s}=t,{x:r}=e;xe(r,"maxPool");const{filterSize:o,strides:a,pad:i,dimRoundingMode:l}=s,u=1;C(tn(a,u),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${a} and dilations '${u}'`);const c=Ws(r.shape,o,a,u,i,l);let h;if(c.filterWidth===1&&c.filterHeight===1&&Me(c.inShape,c.outShape))h=Dr({inputs:{x:r},backend:n});else{const d=n.data.get(r.dataId).values,p=ve(r.shape),f=kw(d,r.shape,r.dtype,p,c,"max");h=n.makeTensorInfo(c.outShape,r.dtype,f.values)}return h}const YK={kernelName:ff,backendName:"cpu",kernelFunc:XK};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function QK(t){const{inputs:e,backend:n,attrs:s}=t,{x:r}=e,{filterSize:o,strides:a,pad:i,dimRoundingMode:l,dataFormat:u}=s;xe(r,"maxPool3d");const c=no(r.shape,o,a,1,i,l,u),h=n.data.get(r.dataId).values,d=hD(h,r.shape,r.dtype,ve(r.shape),c,"max");return n.makeTensorInfo(d.shape,"float32",d.values)}const ZK={kernelName:mf,backendName:"cpu",kernelFunc:QK};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function JK(t){const{inputs:e,backend:n,attrs:s}=t,{dy:r,input:o}=e,{filterSize:a,strides:i,pad:l,dimRoundingMode:u}=s;xe([r,o],"maxPool3DGrad");const c=no(o.shape,a,i,1,l,u),h=n.bufferSync(o),d=V6(h,c),p=c.strideDepth,f=c.strideHeight,m=c.strideWidth,y=c.dilationDepth,g=c.dilationHeight,x=c.dilationWidth,w=c.effectiveFilterDepth,b=c.effectiveFilterHeight,v=c.effectiveFilterWidth,k=w-1-c.padInfo.front,$=v-1-c.padInfo.left,N=b-1-c.padInfo.top,E=Ae(o.shape,"float32"),T=n.bufferSync(r);for(let R=0;R<c.batchSize;++R)for(let z=0;z<c.inChannels;++z)for(let P=0;P<c.inDepth;++P)for(let W=0;W<c.inHeight;++W)for(let M=0;M<c.inWidth;++M){const U=P-k,j=W-N,_=M-$;let B=0;for(let H=0;H<w;H+=y){const X=(U+H)/p;if(!(X<0||X>=c.outDepth||Math.floor(X)!==X))for(let Q=0;Q<b;Q+=g){const Z=(j+Q)/f;if(!(Z<0||Z>=c.outHeight||Math.floor(Z)!==Z))for(let re=0;re<v;re+=x){const Y=(_+re)/m;if(Y<0||Y>=c.outWidth||Math.floor(Y)!==Y)continue;const J=w*b*v-1-d.get(R,X,Z,Y,z),oe=H*b*v+Q*v+re,se=J===oe?1:0;if(se===0)continue;const ce=T.get(R,X,Z,Y,z);B+=ce*se}}}E.set(B,R,P,W,M,z)}return n.makeTensorInfo(E.shape,E.dtype,E.values)}const eq={kernelName:Q1,backendName:"cpu",kernelFunc:JK};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tq(t){const{inputs:e,backend:n,attrs:s}=t,{dy:r,input:o,output:a}=e,i=o;xe([o,a],"maxPoolGrad");const{filterSize:l,strides:u,pad:c,dimRoundingMode:h}=s,d=Ws(i.shape,l,u,1,c,h),p=n.data.get(i.dataId).values,f=Ae(d.outShape,i.dtype,cD(p,i.shape,i.dtype,d).values),m=d.strideHeight,y=d.strideWidth,g=d.dilationHeight,x=d.dilationWidth,w=d.effectiveFilterHeight,b=d.effectiveFilterWidth,v=b-1-d.padInfo.left,k=w-1-d.padInfo.top,$=Ae(i.shape,"float32"),N=n.data.get(r.dataId).values,E=Ae(r.shape,"float32",N);for(let T=0;T<d.batchSize;++T)for(let R=0;R<d.inChannels;++R)for(let z=0;z<d.inHeight;++z)for(let P=0;P<d.inWidth;++P){const W=z-k,M=P-v;let U=0;for(let j=0;j<w;j+=g){const _=(W+j)/m;if(!(_<0||_>=d.outHeight||Math.floor(_)!==_))for(let B=0;B<b;B+=x){const H=(M+B)/y;if(H<0||H>=d.outWidth||Math.floor(H)!==H)continue;const X=w*b-1-f.get(T,_,H,R),Q=j*b+B,Z=X===Q?1:0;if(Z===0)continue;const re=E.get(T,_,H,R);U+=re*Z}}$.set(U,T,z,P,R)}return n.makeTensorInfo($.shape,$.dtype,$.values)}const nq={kernelName:Y1,backendName:"cpu",kernelFunc:tq};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sq(t,e,n,s,r){const o=ve(e),a=kw(t,e,n,o,r,"max"),i=cD(t,e,n,r,!0,s);return[a.values,i.values]}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const rq={kernelName:Z1,backendName:"cpu",kernelFunc:({inputs:t,attrs:e,backend:n})=>{const{x:s}=t,{filterSize:r,strides:o,pad:a,includeBatchInIndex:i}=e,l=n;xe(s,"MaxPoolWithArgmax");const u=l.data.get(s.dataId).values,c=Ws(s.shape,r,o,[1,1],a),[h,d]=sq(u,s.shape,s.dtype,i,c),p=l.write(h,c.outShape,s.dtype),f=l.write(d,c.outShape,s.dtype);return[{dataId:p,shape:c.outShape,dtype:s.dtype},{dataId:f,shape:c.outShape,dtype:"int32"}]}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function oq(t){const{inputs:e,backend:n,attrs:s}=t,{x:r}=e,{axis:o,keepDims:a}=s,i=Fe(o,r.shape),u=qt(r.shape,i)[1],c=K(u),h=[],d=n.makeTensorInfo([],"float32",new Float32Array([c]));h.push(d);const p=Wo({inputs:{x:r},backend:n,attrs:{dtype:"float32"}});h.push(p);const f=$w({inputs:{a:p,b:d},backend:n});h.push(f);const m=dh({inputs:{x:f},backend:n,attrs:{axis:o,keepDims:a}});return h.forEach(y=>n.disposeIntermediateTensorInfo(y)),m}const aq={kernelName:gf,backendName:"cpu",kernelFunc:oq};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function iq(t){const{inputs:e,backend:n,attrs:s}=t,{x:r}=e,{axis:o,keepDims:a}=s;xe(r,"min");const i=Fe(o,r.shape);let l=i;const u=gt(l,r.shape.length);let c=r;u!=null&&(c=_n({inputs:{x:r},backend:n,attrs:{perm:u}}),l=Ct(l.length,r.shape.length)),nn("min",l,c.shape.length);const[h,d]=qt(c.shape,l),p=K(d),f=hn(K(h),c.dtype),m=n.data.get(c.dataId).values;for(let g=0;g<f.length;++g){const x=g*p;let w=m[x];for(let b=0;b<p;++b){const v=m[x+b];(Number.isNaN(v)||v<w)&&(w=v)}f[g]=w}u!=null&&n.disposeIntermediateTensorInfo(c);const y=n.makeTensorInfo(h,c.dtype,f);if(a){const g=$t(h,i),x=nt({inputs:{x:y},backend:n,attrs:{shape:g}});return n.disposeIntermediateTensorInfo(y),x}return y}const lq={kernelName:yf,backendName:"cpu",kernelFunc:iq};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function uq(t){const{inputs:e,backend:n,attrs:s}=t,{x:r}=e,{paddings:o,mode:a}=s;xe(r,"mirrorPad");const i=o.map((w,b)=>w[0]+r.shape[b]+w[1]),l=o.map(w=>w[0]),u=o.map((w,b)=>w[0]+r.shape[b]),c=a==="reflect"?0:1,h=n.data.get(r.dataId).values,d=r.shape.length,p=ve(r.shape),f=K(i),m=i.length,y=ve(i),g=en(r.dtype,f);for(let w=0;w<f;w++){let b=yl(w,m,y);for(let k=0;k<m;k++)b[k]<l[k]?b[k]=l[k]*2-b[k]-c:b[k]>=u[k]&&(b[k]=(u[k]-1)*2-b[k]+c);b=b.map((k,$)=>k-l[$]);const v=Cr(b,d,p);g[w]=h[v]}return{dataId:n.write(g,i,r.dtype),shape:i,dtype:r.dtype}}const cq={kernelName:xf,backendName:"cpu",kernelFunc:uq};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const hq=It((t,e)=>{const n=t%e;return t<0&&e<0||t>=0&&e>=0?n:(n+e)%e}),dq=Vt(Nc,hq),pq={kernelName:Nc,backendName:"cpu",kernelFunc:dq};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gD(t){const{inputs:e,backend:n,attrs:s}=t,{logits:r}=e,{dim:o}=s,a=r.shape.length;let i=o;if(i===-1&&(i=a-1),i!==a-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${a} and dim was ${i}`);const l=Fe([i],r.shape),u=mD({inputs:{x:r},backend:n,attrs:{reductionIndices:l,keepDims:!1}}),c=$t(u.shape,l),h=nt({inputs:{x:u},backend:n,attrs:{shape:c}}),d=Sw({inputs:{a:r,b:h},backend:n}),p=wR({inputs:{x:d},backend:n}),f=dh({inputs:{x:p},backend:n,attrs:{axis:l,keepDims:!1}}),m=nt({inputs:{x:f},backend:n,attrs:{shape:c}}),y=$w({inputs:{a:p,b:m},backend:n});return n.disposeIntermediateTensorInfo(u),n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),y}const fq={kernelName:Lf,backendName:"cpu",kernelFunc:gD};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function mq(t){const{inputs:e,backend:n,attrs:s}=t,{logits:r}=e,{numSamples:o,seed:a,normalized:i}=s;xe(r,"multinomial");const l=i?r:gD({inputs:{logits:r},backend:n,attrs:{dim:-1}}),u=l.shape[0],c=l.shape[1],h=n.data.get(l.dataId).values,d=[u,o],p=hn(K(d),"int32");for(let f=0;f<u;++f){const m=f*c,y=new Float32Array(c-1);y[0]=h[m];for(let w=1;w<y.length;++w)y[w]=y[w-1]+h[m+w];const g=Jf.alea(a.toString()),x=f*o;for(let w=0;w<o;++w){const b=g();p[x+w]=y.length;for(let v=0;v<y.length;v++)if(b<y[v]){p[x+w]=v;break}}}return i||n.disposeIntermediateTensorInfo(l),n.makeTensorInfo(d,"int32",p)}const gq={kernelName:J1,backendName:"cpu",kernelFunc:mq};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const yq=gb;function xq(t){const{inputs:e,backend:n,attrs:s}=t,{boxes:r,scores:o}=e,{maxOutputSize:a,iouThreshold:i,scoreThreshold:l}=s;xe(r,"NonMaxSuppression");const u=n.data.get(r.dataId).values,c=n.data.get(o.dataId).values,{selectedIndices:h}=yq(u,c,a,i,l);return n.makeTensorInfo([h.length],"int32",new Int32Array(h))}const bq={kernelName:ex,backendName:"cpu",kernelFunc:xq};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const wq=yb;function vq(t){const{inputs:e,backend:n,attrs:s}=t,{boxes:r,scores:o}=e,{maxOutputSize:a,iouThreshold:i,scoreThreshold:l,padToMaxOutputSize:u}=s;xe(r,"NonMaxSuppressionPadded");const c=n.data.get(r.dataId).values,h=n.data.get(o.dataId).values,{selectedIndices:d,validOutputs:p}=wq(c,h,a,i,l,u);return[n.makeTensorInfo([d.length],"int32",new Int32Array(d)),n.makeTensorInfo([],"int32",new Int32Array([p]))]}const Sq={kernelName:tx,backendName:"cpu",kernelFunc:vq};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const kq=xb;function $q(t){const{inputs:e,backend:n,attrs:s}=t,{boxes:r,scores:o}=e,{maxOutputSize:a,iouThreshold:i,scoreThreshold:l,softNmsSigma:u}=s;xe(r,"NonMaxSuppressionWithScore");const c=n.data.get(r.dataId).values,h=n.data.get(o.dataId).values,d=a,p=i,f=l,m=u,{selectedIndices:y,selectedScores:g}=kq(c,h,d,p,f,m);return[n.makeTensorInfo([y.length],"int32",new Int32Array(y)),n.makeTensorInfo([g.length],"float32",new Float32Array(g))]}const Cq={kernelName:nx,backendName:"cpu",kernelFunc:$q};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Nq(t){const{inputs:e,backend:n,attrs:s}=t,{indices:r}=e,{dtype:o,depth:a,onValue:i,offValue:l}=s;xe(r,"oneHot");const u=K(r.shape),c=new Float32Array(u*a);c.fill(l);const h=n.data.get(r.dataId).values;for(let d=0;d<u;++d)h[d]>=0&&h[d]<a&&(c[d*a+h[d]]=i);return n.makeTensorInfo([...r.shape,a],o,c)}const Iq={kernelName:Sf,backendName:"cpu",kernelFunc:Nq};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fp(t){const{inputs:e,backend:n}=t,{x:s}=e;if(s.dtype==="string")throw new Error("zerosLike is not supported for string tensors");if(s.dtype==="complex64"){const r=za({inputs:{input:s},backend:n}),o=fp({inputs:{x:r},backend:n}),a=il({inputs:{input:s},backend:n}),i=fp({inputs:{x:a},backend:n}),l=Wn({inputs:{real:o,imag:i},backend:n});return n.disposeIntermediateTensorInfo(r),n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(i),l}else return Cw({backend:n,attrs:{shape:s.shape,value:0,dtype:s.dtype}})}const Tq={kernelName:Bf,backendName:"cpu",kernelFunc:fp};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function yD(t){const{inputs:e,backend:n}=t,{x:s}=e;if(s.dtype==="string")throw new Error("onesLike is not supported for string tensors");if(s.dtype==="complex64"){const r=za({inputs:{input:s},backend:n}),o=yD({inputs:{x:r},backend:n}),a=il({inputs:{input:s},backend:n}),i=fp({inputs:{x:a},backend:n}),l=Wn({inputs:{real:o,imag:i},backend:n});return n.disposeIntermediateTensorInfo(r),n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(i),l}else return Cw({backend:n,attrs:{shape:s.shape,value:1,dtype:s.dtype}})}const Eq={kernelName:vf,backendName:"cpu",kernelFunc:yD};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function xD(t){const{inputs:e,backend:n,attrs:s}=t,{axis:r}=s;if(e.length===1)return pp({inputs:{input:e[0]},backend:n,attrs:{dim:r}});const o=e[0].shape,a=e[0].dtype;e.forEach(c=>{Jn(o,c.shape,"All tensors passed to stack must have matching shapes"),C(a===c.dtype,()=>"All tensors passed to stack must have matching dtypes")});const i=[],l=e.map(c=>{const h=pp({inputs:{input:c},backend:n,attrs:{dim:r}});return i.push(h),h}),u=ll({inputs:l,backend:n,attrs:{axis:r}});return i.forEach(c=>n.disposeIntermediateTensorInfo(c)),u}const Rq={kernelName:kf,backendName:"cpu",kernelFunc:xD};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Dq(t){const{inputs:e,backend:n,attrs:s}=t,{x:r}=e,{paddings:o,constantValue:a}=s;xe(r,"pad");const i=o.map((x,w)=>x[0]+r.shape[w]+x[1]),l=o.map(x=>x[0]),u=n.data.get(r.dataId).values,c=K(r.shape),h=r.shape.length,d=ve(r.shape),p=K(i),f=i.length,m=ve(i),y=en(r.dtype,p);a!==0&&y.fill(a);for(let x=0;x<c;x++){const b=yl(x,h,d).map((k,$)=>k+l[$]),v=Cr(b,f,m);y[v]=u[x]}return{dataId:n.write(y,i,r.dtype),shape:i,dtype:r.dtype}}const bD={kernelName:$f,backendName:"cpu",kernelFunc:Dq};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Aq=It((t,e)=>Math.pow(t,e)),_q=Vt(Tc,Aq),Oq={kernelName:Tc,backendName:"cpu",kernelFunc:_q};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Fq(t){const{inputs:e,backend:n,attrs:s}=t,{paramsNestedSplits:r,paramsDenseValues:o,indices:a}=e,i=r.map(y=>n.data.get(y.dataId).values),l=r.map(y=>y.shape),u=n.data.get(o.dataId).values,c=n.data.get(a.dataId).values,[h,d,p]=zR(i,l,u,o.shape,o.dtype,c,a.shape),f=h.map(y=>n.makeTensorInfo([y.length],"int32",y)),m=n.makeTensorInfo(p,o.dtype,d);return f.concat([m])}const Lq={kernelName:sx,backendName:"cpu",kernelFunc:Fq};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Pq(t){const{inputs:e,backend:n}=t,{starts:s,limits:r,deltas:o}=e,a=n.data.get(s.dataId).values,i=n.data.get(r.dataId).values,l=n.data.get(o.dataId).values,[u,c]=MR(a,s.shape,s.dtype,i,r.shape,l,o.shape),h=n.makeTensorInfo([u.length],"int32",u),d=n.makeTensorInfo([c.length],s.dtype,c);return[h,d]}const zq={kernelName:rx,backendName:"cpu",kernelFunc:Pq};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Mq(t){const{inputs:e,backend:n,attrs:s}=t,{shape:r,values:o,defaultValue:a,rowPartitionTensors:i}=e,{rowPartitionTypes:l}=s,u=n.data.get(r.dataId).values,c=n.data.get(o.dataId).values,h=n.data.get(a.dataId).values,d=i.map(y=>n.data.get(y.dataId).values),p=i.map(y=>y.shape),[f,m]=BR(u,r.shape,c,o.shape,o.dtype,h,a.shape,d,p,l);return n.makeTensorInfo(f,o.dtype,m)}const Bq={kernelName:ox,backendName:"cpu",kernelFunc:Mq};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Vq(t){const{backend:e,attrs:n}=t,{start:s,stop:r,dtype:o,step:a}=n,i=VR(s,r,a,o);return e.makeTensorInfo([i.length],o,i)}const Wq={kernelName:ax,backendName:"cpu",kernelFunc:Vq};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Uq=qe(Ec,t=>1/t),Gq={kernelName:Ec,backendName:"cpu",kernelFunc:Uq};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Hq(t){const{inputs:e,backend:n,attrs:s}=t,{images:r}=e,{alignCorners:o,halfPixelCenters:a,size:i}=s;xe(r,"resizeBilinear");const l=ve(r.shape),[u,c]=i,[h,d,p,f]=r.shape,m=n.data.get(r.dataId).values,y=new Float32Array(K([h,u,c,f])),g=[o&&u>1?d-1:d,o&&c>1?p-1:p],x=[o&&u>1?u-1:u,o&&c>1?c-1:c];let w=0;const b=g[0]/x[0],v=g[1]/x[1];for(let k=0;k<h;k++)for(let $=0;$<u;$++){let N;a?N=b*($+.5)-.5:N=b*$;const E=Math.max(0,Math.floor(N)),T=N-E,R=Math.min(d-1,Math.ceil(N)),z=k*l[0]+E*l[1],P=k*l[0]+R*l[1];for(let W=0;W<c;W++){let M;a?M=v*(W+.5)-.5:M=v*W;const U=Math.max(0,Math.floor(M)),j=M-U,_=Math.min(p-1,Math.ceil(M)),B=z+U*l[2],H=P+U*l[2],X=z+_*l[2],Q=P+_*l[2];for(let Z=0;Z<f;Z++){const re=m[B+Z],Y=m[H+Z],J=m[X+Z],oe=m[Q+Z],se=re+(J-re)*j,ce=Y+(oe-Y)*j,me=se+(ce-se)*T;y[w++]=me}}}return n.makeTensorInfo([h,u,c,f],"float32",y)}const jq={kernelName:Ef,backendName:"cpu",kernelFunc:Hq};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Kq(t){const{inputs:e,backend:n,attrs:s}=t,{images:r,dy:o}=e,{alignCorners:a}=s;xe([o,r],"resizeBilinearGrad");const i=ve(r.shape),[l,u,c,h]=r.shape,[,d,p]=o.shape,f=new Float32Array(l*u*c*h),m=[a&&d>1?u-1:u,a&&p>1?c-1:c],y=[a&&d>1?d-1:d,a&&p>1?p-1:p],g=m[0]/y[0],x=m[1]/y[1],w=n.data.get(o.dataId).values;let b=0;for(let v=0;v<l;v++){const k=v*i[0];for(let $=0;$<d;$++){const N=$*g,E=Math.floor(N),T=Math.min(Math.ceil(N),u-1),R=k+E*i[1],z=k+T*i[1],P=N-E,W=1-P;for(let M=0;M<p;M++){const U=M*x,j=Math.floor(U),_=Math.min(Math.ceil(U),c-1),B=U-j,H=1-B,X=R+j*i[2],Q=R+_*i[2],Z=z+j*i[2],re=z+_*i[2],Y=W*H,J=W*B,oe=P*H,se=P*B;for(let ce=0;ce<h;ce++){const me=w[b++];f[X+ce]+=me*Y,f[Q+ce]+=me*J,f[Z+ce]+=me*oe,f[re+ce]+=me*se}}}}return n.makeTensorInfo([l,c,u,h],"float32",f)}const qq={kernelName:ux,backendName:"cpu",kernelFunc:Kq};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Xq(t){const{inputs:e,backend:n,attrs:s}=t,{images:r}=e,{alignCorners:o,halfPixelCenters:a,size:i}=s;xe(r,"resizeNearestNeighbor");const l=ve(r.shape),[u,c]=i,[h,d,p,f]=r.shape,m=n.data.get(r.dataId).values,y=new Float32Array(h*u*c*f),g=[o&&u>1?d-1:d,o&&c>1?p-1:p],x=[o&&u>1?u-1:u,o&&c>1?c-1:c],w=g[0]/x[0],b=g[1]/x[1];let v=0;for(let k=0;k<h;k++){const $=k*l[0];for(let N=0;N<u;N++){const E=a?w*(N+.5):w*N;let T=Math.min(d-1,o?Math.round(E):Math.floor(E));a&&(T=Math.max(0,T));const R=$+T*l[1];for(let z=0;z<c;z++){const P=a?b*(z+.5):b*z;let W=Math.min(p-1,o?Math.round(P):Math.floor(P));a&&(W=Math.max(0,W));const M=R+W*l[2];for(let U=0;U<f;U++){const j=m[M+U];y[v++]=j}}}}return n.makeTensorInfo([h,u,c,f],r.dtype,y)}const Yq={kernelName:Tf,backendName:"cpu",kernelFunc:Xq};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Qq(t){const{inputs:e,backend:n,attrs:s}=t,{images:r,dy:o}=e,{alignCorners:a}=s;xe([o,r],"resizeNearestNeighborGrad");const i=ve(r.shape),l=ve(o.shape),[u,c,h,d]=r.shape,[,p,f]=o.shape,m=new Float32Array(u*c*h*d),y=n.data.get(o.dataId).values,g=[a&&p>1?c-1:c,a&&f>1?h-1:h],x=[a&&p>1?p-1:p,a&&f>1?f-1:f],w=g[0]/x[0],b=g[1]/x[1],v=1/w,k=1/b,$=Math.ceil(v)*2+2,N=Math.ceil(k)*2+2;for(let E=0;E<u;E++){const T=E*i[0];for(let R=0;R<c;R++){const z=T+R*i[1],P=Math.floor(R*v),W=Math.floor(P-$/2);for(let M=0;M<h;M++){const U=z+M*i[2],j=Math.floor(M*k),_=Math.floor(j-N/2);for(let B=0;B<d;B++){let H=0;for(let X=0;X<$;X++){const Q=X+W;if(Q<0||Q>=p)continue;const Z=T+Q*l[1],re=Q*w,Y=Math.min(c-1,a?Math.round(re):Math.floor(re));if(R===Y)for(let J=0;J<N;J++){const oe=J+_;if(oe<0||oe>=f)continue;const se=Z+oe*l[2],ce=oe*b,me=Math.min(h-1,a?Math.round(ce):Math.floor(ce));M===me&&(H+=y[se+B])}}m[U+B]=H}}}}return n.makeTensorInfo(r.shape,r.dtype,m)}const Zq={kernelName:lx,backendName:"cpu",kernelFunc:Qq};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Jq(t){const{inputs:e,backend:n,attrs:s}=t,{x:r}=e,{dims:o}=s;xe(r,"reverse");const a=r.shape.length,i=Fe(o,r.shape);if(a===0)return Dr({inputs:{x:r},backend:n});const l=new Pt(r.shape,r.dtype),u=n.bufferSync(r);for(let c=0;c<l.size;c++){const h=l.indexToLoc(c),d=h.slice();i.forEach(p=>d[p]=r.shape[p]-1-d[p]),l.set(u.get(...d),...h)}return n.makeTensorInfo(l.shape,l.dtype,l.values)}const eX={kernelName:Rf,backendName:"cpu",kernelFunc:Jq};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const tX={kernelName:Nx,backendName:"cpu",kernelFunc:({inputs:t,attrs:e,backend:n})=>{const{image:s}=t,{radians:r,fillValue:o,center:a}=e,i=n,l=en(s.dtype,K(s.shape)),[u,c,h,d]=s.shape,[p,f]=Db(a,c,h),m=255,y=Math.sin(r),g=Math.cos(r),x=i.data.get(s.dataId).values;for(let b=0;b<u;b++){const v=b*h*c*d;for(let k=0;k<c;k++){const $=k*(h*d);for(let N=0;N<h;N++){const E=N*d;for(let T=0;T<d;T++){const R=[u,k,N,T],z=R[2],P=R[1];let W=(z-p)*g-(P-f)*y,M=(z-p)*y+(P-f)*g;W=Math.round(W+p),M=Math.round(M+f);let U=o;if(typeof o!="number"&&(T===3?U=m:U=o[T]),W>=0&&W<h&&M>=0&&M<c){const _=M*(h*d),B=W*d,H=v+_+B+T;U=x[H]}const j=v+$+E+T;l[j]=U}}}}return{dataId:i.write(l,s.shape,s.dtype),shape:s.shape,dtype:s.dtype}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const nX=qe(Ac,t=>{const e=Math.floor(t);return t-e<.5?Math.floor(t):t-e>.5?Math.ceil(t):e%2===0?e:e+1}),sX={kernelName:Ac,backendName:"cpu",kernelFunc:nX};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function rX(t){const{inputs:e,backend:n,attrs:s}=t,{indices:r,updates:o}=e,{shape:a}=s,{sliceRank:i,numUpdates:l,sliceSize:u,strides:c,outputSize:h}=Qa(o,r,a),d=!0,p=n.bufferSync(r),f=n.bufferSync(o),m=xa(p,f,a,h,u,l,i,c,0,d);return n.makeTensorInfo(a,m.dtype,m.values)}const oX={kernelName:cx,backendName:"cpu",kernelFunc:rX};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function aX(t,e){let n=0,s=t.length,r=0;for(;n<s;)r=Math.floor((n+s)/2),t[r]<e?n=r+1:s=r;return s}function iX(t,e){let n=0,s=t.length,r=0;for(;n<s;)r=Math.floor((n+s)/2),t[r]<=e?n=r+1:s=r;return s}function lX(t,e,n,s,r,o){const a=kt("int32",n*r);for(let i=0;i<n;++i){const l=t.slice(i*s,(i+1)*s),u=i*r;for(let c=0;c<r;++c)a[u+c]=o==="left"?aX(l,e[c+u]):iX(l,e[c+u])}return a}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function uX(t){const{inputs:e,backend:n,attrs:s}=t,{sortedSequence:r,values:o}=e,{side:a}=s,i=n.data.get(r.dataId).values,l=n.data.get(o.dataId).values,u=lX(i,l,r.shape[0],r.shape[1],o.shape[1],a);return n.makeTensorInfo(o.shape,"int32",u)}const cX={kernelName:dx,backendName:"cpu",kernelFunc:uX};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function hX(t){const{inputs:e,backend:n}=t,{condition:s,t:r,e:o}=e;xe([s,r,o],"select");const a=s.shape.length,i=n.data.get(s.dataId).values,l=n.data.get(r.dataId).values,u=n.data.get(o.dataId).values,c=Xn(r.dtype,o.dtype),h=hn(K(r.shape),c);let d=0;const p=a===0||a>1||r.shape.length===1?1:K(r.shape.slice(1));for(let f=0;f<i.length;f++)for(let m=0;m<p;m++)i[f]===1?h[d++]=l[f]:h[d++]=u[f];return n.makeTensorInfo(r.shape,c,h)}const dX={kernelName:Df,backendName:"cpu",kernelFunc:hX};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const pX=hm,fX=dm,mX=qe(Oc,t=>t>=0?fX*t:pX*(Math.exp(t)-1)),gX={kernelName:Oc,backendName:"cpu",kernelFunc:mX};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const yX=qe(Pc,t=>t<0?-1:t>0?1:0),xX={kernelName:Pc,backendName:"cpu",kernelFunc:yX};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const bX=qe(Fc,t=>Math.sin(t)),wX={kernelName:Fc,backendName:"cpu",kernelFunc:bX};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const vX=qe(Lc,t=>Math.sinh(t)),SX={kernelName:Lc,backendName:"cpu",kernelFunc:vX};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const kX=11920928955078125e-23,rk=Math.log(kX)+2,$X=qe(Mc,t=>{const e=t>-rk,n=t<rk,s=Math.exp(t);let r;return n?r=s:e?r=t:r=Math.log(1+s),r}),CX={kernelName:Mc,backendName:"cpu",kernelFunc:$X};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function NX(t){const{inputs:e,backend:n,attrs:s}=t,{x:r}=e,{blockShape:o,paddings:a}=s;xe([r],"spaceToBatchND");const i=K(o),l=[[0,0]];l.push(...a);for(let k=1+o.length;k<r.shape.length;++k)l.push([0,0]);const u=bD.kernelFunc({inputs:{x:r},backend:n,attrs:{paddings:l,constantValue:0}}),c=th(u.shape,o,i,!1),h=nh(c.length,o.length,!1),d=sh(u.shape,o,i,!1),m=nt({inputs:{x:u},backend:n,attrs:{shape:c}}),x=_n({inputs:{x:m},backend:n,attrs:{perm:h}}),v=nt({inputs:{x},backend:n,attrs:{shape:d}});return n.disposeIntermediateTensorInfo(u),n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(x),v}const IX={kernelName:Of,backendName:"cpu",kernelFunc:NX};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function TX(t){const{inputs:e,backend:n}=t,{indices:s,values:r,denseShape:o,defaultValue:a}=e;if(o.shape.length!==1)throw new Error(`Dense shape must be a vector, saw:
        ${o.shape}`);if(s.shape.length!==2)throw new Error(`Indices must be a matrix, saw:
        ${s.shape}`);if(r.shape.length!==1)throw new Error(`Values must be a vector, saw:
        ${r.shape}`);if(a.shape.length!==0)throw new Error(`Default value must be a scalar, saw:
        ${a.shape}`);const i=n.data.get(s.dataId).values,l=n.data.get(r.dataId).values,u=n.data.get(o.dataId).values,c=n.data.get(a.dataId).values[0],[h,d,p,f,m]=HR(i,s.shape,s.dtype,l,r.dtype,u,c);return[n.makeTensorInfo(d,s.dtype,h),n.makeTensorInfo([d[0]],r.dtype,p),n.makeTensorInfo([f.length],"bool",new Uint8Array(f.map(y=>Number(y)))),n.makeTensorInfo([m.length],s.dtype,new Int32Array(m))]}const EX={kernelName:px,backendName:"cpu",kernelFunc:TX};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function RX(t){const{inputs:e,backend:n}=t,{inputIndices:s,inputShape:r,newShape:o}=e;if(s.shape.length!==2)throw new Error(`Input indices should be a matrix but received shape
        ${s.shape}`);if(r.shape.length!==1)throw new Error(`Input shape should be a vector but received shape
        ${r.shape}`);if(o.shape.length!==1)throw new Error(`Target shape should be a vector but received shape ${o.shape}`);const a=Array.from(n.data.get(r.dataId).values),i=n.data.get(s.dataId).values,l=Array.from(n.data.get(o.dataId).values),[u,c,h]=jR(i,s.shape,s.dtype,a,l);return[n.makeTensorInfo(c,s.dtype,u),n.makeTensorInfo([h.length],o.dtype,new Int32Array(h))]}const DX={kernelName:fx,backendName:"cpu",kernelFunc:RX};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function AX(t){const{inputs:e,backend:n}=t,{data:s,indices:r,segmentIds:o}=e;if(s.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(r.shape.length!==1)throw new Error(`Indices should be a vector but received shape
          ${r.shape}`);if(o.shape.length!==1)throw new Error(`Segment ids should be a vector but received shape
          ${o.shape}`);if(r.shape[0]!==o.shape[0])throw new Error("segmentIds and indices should have same size.");const a=n.data.get(s.dataId).values,i=n.data.get(r.dataId).values,l=n.data.get(o.dataId).values,[u,c]=vw(a,s.shape,s.dtype,i,l,!0);return n.makeTensorInfo(c,s.dtype,u)}const _X={kernelName:mx,backendName:"cpu",kernelFunc:AX};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function OX(t){const{inputs:e,backend:n}=t,{data:s,indices:r,segmentIds:o}=e;if(s.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(r.shape.length!==1)throw new Error(`Indices should be a vector but received shape
         ${r.shape}`);if(o.shape.length!==1)throw new Error(`Segment ids should be a vector but received shape
         ${o.shape}`);if(r.shape[0]!==o.shape[0])throw new Error("segmentIds and indices should have same size.");const a=n.data.get(s.dataId).values,i=n.data.get(r.dataId).values,l=n.data.get(o.dataId).values,[u,c]=vw(a,s.shape,s.dtype,i,l);return n.makeTensorInfo(c,s.dtype,u)}const FX={kernelName:gx,backendName:"cpu",kernelFunc:OX};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function LX(t){const{inputs:e,backend:n,attrs:s}=t,{sparseIndices:r,sparseValues:o,defaultValue:a}=e,{outputShape:i}=s,{sliceRank:l,numUpdates:u,sliceSize:c,strides:h,outputSize:d}=Qa(o,r,i),p=!1,f=n.bufferSync(r);let m;switch(o.dtype){case"bool":{const y=n.bufferSync(o),g=!!n.data.get(a.dataId).values[0];m=xa(f,y,i,d,c,u,l,h,g,p);break}case"float32":{const y=n.bufferSync(o),g=n.data.get(a.dataId).values[0];m=xa(f,y,i,d,c,u,l,h,g,p);break}case"int32":{const y=n.bufferSync(o),g=n.data.get(a.dataId).values[0];m=xa(f,y,i,d,c,u,l,h,g,p);break}case"string":{const y=n.bufferSync(o),g=_o(n.data.get(a.dataId).values[0]);m=xa(f,y,i,d,c,u,l,h,g,p);break}default:throw new Error(`Unsupported type ${o.dtype}`)}return n.makeTensorInfo(i,m.dtype,m.values)}const PX={kernelName:yx,backendName:"cpu",kernelFunc:LX};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function zX(t){const{inputs:e,backend:n,attrs:s}=t,{x:r}=e,{numOrSizeSplits:o,axis:a}=s,i=Fe(a,r.shape)[0],l=jb(r,o,i),u=new Array(r.shape.length).fill(0),c=r.shape.slice();return l.map(h=>{const d=[...c];d[i]=h;const p=Ma({inputs:{x:r},backend:n,attrs:{begin:u,size:d}});return u[i]+=h,p})}const MX={kernelName:Ff,backendName:"cpu",kernelFunc:zX};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const BX={kernelName:xx,backendName:"cpu",kernelFunc:({inputs:t,backend:e})=>{const{x:n}=t,s=e;xe(n,"square");const r=s.data.get(n.dataId).values,o=new Float32Array(r.length);for(let i=0;i<r.length;++i){const l=r[i];o[i]=l*l}return{dataId:s.write(o,n.shape,n.dtype),shape:n.shape,dtype:n.dtype}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const VX=qe(jc,(t,e)=>{const n=e;return isNaN(t)?NaN:t>0?1:n.alpha}),WX={kernelName:jc,backendName:"cpu",kernelFunc:VX};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function UX(t){const{inputs:e,backend:n,attrs:s}=t,{x:r}=e,{begin:o,end:a,strides:i,beginMask:l,endMask:u,ellipsisMask:c,newAxisMask:h,shrinkAxisMask:d}=s;xe(r,"stridedSlice");const{finalShapeSparse:p,finalShape:f,isIdentity:m,sliceDim0:y,isSimpleSlice:g,begin:x,end:w,strides:b}=Tb(r.shape,o,a,i,l,u,c,h,d);let v;if(m)v=nt({inputs:{x:r},backend:n,attrs:{shape:f}});else if(y||g){C(r.shape.length>=1,()=>`Input must have rank at least 1, got: ${r.shape.length}`);const k=Cb(x,w,b),$=Ma({inputs:{x:r},backend:n,attrs:{begin:x,size:k}});v=nt({inputs:{x:$},backend:n,attrs:{shape:f}}),n.disposeIntermediateTensorInfo($)}else{const k=n.bufferSync(r),$=XR(p,k,b,x);v=n.makeTensorInfo(f,$.dtype,$.values)}return v}const GX={kernelName:bx,backendName:"cpu",kernelFunc:UX};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function HX(t){const{inputs:e,backend:n,attrs:s}=t,{separator:r,nGramWidths:o,leftPad:a,rightPad:i,padWidth:l,preserveShortSequences:u}=s,{data:c,dataSplits:h}=e,d=n.data.get(c.dataId).values,p=n.data.get(h.dataId).values,[f,m]=YR(d,p,r,o,a,i,l,u);return[n.makeTensorInfo([f.length],"string",f),n.makeTensorInfo(h.shape,"int32",m)]}const jX={kernelName:wx,backendName:"cpu",kernelFunc:HX};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function KX(t){const{inputs:e,backend:n,attrs:s}=t,{skipEmpty:r}=s,{input:o,delimiter:a}=e;if(o.dtype!=="string")throw new Error("Input must be of datatype string");if(o.shape.length!==1)throw new Error(`Input must be a vector, got shape: ${o.shape}`);if(a.shape.length!==0)throw new Error(`Delimiter must be a scalar, got shape: ${a.shape}`);const i=n.data.get(o.dataId).values,l=n.data.get(a.dataId).values[0],[u,c,h]=QR(i,l,r),d=c.length;return[n.makeTensorInfo([d,2],"int32",u),n.makeTensorInfo([d],"string",c),n.makeTensorInfo([2],"int32",new Int32Array(h))]}const qX={kernelName:vx,backendName:"cpu",kernelFunc:KX};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function XX(t){const{inputs:e,backend:n,attrs:s}=t,{numBuckets:r}=s,{input:o}=e;if(o.dtype!=="string")throw new Error("Input must be of datatype string");if(r<=0)throw new Error("Number of buckets must be at least 1");const a=n.data.get(o.dataId).values,i=ZR(a,r);return n.makeTensorInfo(o.shape,"int32",i)}const YX={kernelName:Sx,backendName:"cpu",kernelFunc:XX};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const QX=qe(Uc,t=>Math.tan(t)),ZX={kernelName:Uc,backendName:"cpu",kernelFunc:QX};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const JX=qe(Gc,t=>Math.tanh(t)),e7={kernelName:Gc,backendName:"cpu",kernelFunc:JX};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function t7(t){const{inputs:e,backend:n}=t,{tensor:s,indices:r,updates:o}=e,{sliceRank:a,numUpdates:i,sliceSize:l,strides:u,outputSize:c}=Qa(o,r,s.shape),h=!1,d=n.bufferSync(r),p=n.bufferSync(o),f=n.bufferSync(s),m=xa(d,p,s.shape,c,l,i,a,u,f,h);return n.makeTensorInfo(s.shape,m.dtype,m.values)}const n7={kernelName:hx,backendName:"cpu",kernelFunc:t7};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function s7(t){const{inputs:e,backend:n,attrs:s}=t,{x:r}=e,{reps:o}=s;xe(r,"tile");const a=eD(n.bufferSync(r),o);return n.makeTensorInfo(a.shape,a.dtype,a.values)}const r7={kernelName:Hc,backendName:"cpu",kernelFunc:s7};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function o7(t){const{inputs:e,backend:n,attrs:s}=t,{x:r}=e,{k:o,sorted:a}=s;xe(r,"topk");const i=n.data.get(r.dataId).values,[l,u]=nD(i,r.shape,r.dtype,o,a);return[n.makeTensorInfo(l.shape,l.dtype,l.values),n.makeTensorInfo(u.shape,u.dtype,u.values)]}const a7={kernelName:kx,backendName:"cpu",kernelFunc:o7};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function i7(t){const{inputs:e,attrs:n,backend:s}=t,{image:r,transforms:o}=e,{interpolation:a,fillMode:i,fillValue:l,outputShape:u}=n,[c,h,d,p]=r.shape,[f,m]=u??[h,d],y=[c,f,m,p],g=ve(r.shape),x=g[0],w=g[1],b=g[2],v=ve(y),k=v[0],$=v[1],N=v[2],E=en(r.dtype,K(y));E.fill(l);const T=s.data.get(r.dataId).values,R=s.data.get(o.dataId).values;for(let P=0;P<c;++P){const W=o.shape[0]===1?R:R.subarray(P*8,P*8+8);for(let M=0;M<f;++M)for(let U=0;U<m;++U)for(let j=0;j<p;++j){let _;const B=W[6]*U+W[7]*M+1;if(B===0)continue;const H=(W[0]*U+W[1]*M+W[2])/B,X=(W[3]*U+W[4]*M+W[5])/B,Q=ok(H,d,i),Z=ok(X,h,i);switch(a){case"nearest":_=p7(T,h,d,x,w,b,P,Z,Q,j,l);break;case"bilinear":_=f7(T,h,d,x,w,b,P,Z,Q,j,l);break;default:throw new Error(`Error in Transform: Expect 'nearest' or 'bilinear', but got ${a}`)}const re=P*k+M*$+U*N+j;E[re]=_}return s.makeTensorInfo(y,r.dtype,E)}return{dataId:s.write(E,y,r.dtype),shape:r.shape,dtype:r.dtype}}const l7={kernelName:$x,backendName:"cpu",kernelFunc:i7};function ok(t,e,n){switch(n){case"reflect":return u7(t,e);case"wrap":return c7(t,e);case"nearest":return d7(t,e);case"constant":default:return h7(t)}}function u7(t,e){let n=t;if(n<0)if(e<=1)n=0;else{const s=2*e;n<s&&(n=s*Math.trunc(-n/s)+n),n=n<-e?n+s:-n-1}else if(n>e-1)if(e<=1)n=0;else{const s=2*e;n-=s*Math.trunc(n/s),n>=e&&(n=s-n-1)}return Ta(0,n,e-1)}function c7(t,e){let n=t;if(n<0)if(e<=1)n=0;else{const s=e-1;n+=e*(Math.trunc(-n/s)+1)}else if(n>e-1)if(e<=1)n=0;else{const s=e-1;n-=e*Math.trunc(n/s)}return Ta(0,n,e-1)}function h7(t,e){return t}function d7(t,e){return Ta(0,t,e-1)}function eu(t,e,n,s,r,o,a,i,l,u,c){const h=a*s+i*r+l*o+u;return 0<=i&&i<e&&0<=l&&l<n?t[h]:c}function p7(t,e,n,s,r,o,a,i,l,u,c){const h=Math.round(i),d=Math.round(l);return eu(t,e,n,s,r,o,a,h,d,u,c)}function f7(t,e,n,s,r,o,a,i,l,u,c){const h=Math.floor(i),d=Math.floor(l),p=h+1,f=d+1,m=(f-l)*eu(t,e,n,s,r,o,a,h,d,u,c)+(l-d)*eu(t,e,n,s,r,o,a,h,f,u,c),y=(f-l)*eu(t,e,n,s,r,o,a,p,d,u,c)+(l-d)*eu(t,e,n,s,r,o,a,p,f,u,c);return(p-i)*m+(i-h)*y}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function m7(t){const{inputs:e,attrs:n,backend:s}=t,{axis:r}=n,{x:o}=e;xe(o,"unique");const a=s.data.get(o.dataId).values,{outputValues:i,outputShape:l,indices:u}=sD(a,r,o.shape,o.dtype);return[s.makeTensorInfo(l,o.dtype,i),s.makeTensorInfo([u.length],"int32",u)]}const g7={kernelName:Cx,backendName:"cpu",kernelFunc:m7};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function y7(t){const{inputs:e,backend:n,attrs:s}=t,{value:r}=e;let{axis:o}=s;o<0&&(o+=r.shape.length);const a=r.shape.length,i=r.shape[o],l=new Array(a-1);let u=0;for(let p=0;p<a;p++)p!==o&&(l[u++]=r.shape[p]);const c=new Array(a).fill(0),h=r.shape.slice();h[o]=1;const d=new Array(i);for(let p=0;p<d.length;p++){c[o]=p;const f=Ma({inputs:{x:r},backend:n,attrs:{begin:c,size:h}});d[p]=nt({inputs:{x:f},backend:n,attrs:{shape:l}}),n.disposeIntermediateTensorInfo(f)}return d}const x7={kernelName:zf,backendName:"cpu",kernelFunc:y7};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function b7(t){const{inputs:e,backend:n,attrs:s}=t,{x:r,segmentIds:o}=e,{numSegments:a}=s;xe(r,"unsortedSegmentSum");const i=r.shape.length,l=o.shape.length,u=[],c=[],h=i-l;let d=o;for(let f=0;f<h;++f){const m=pp({inputs:{input:d},backend:n,attrs:{dim:f+1}});d=m,c.push(m)}for(let f=0;f<a;++f){const m=Ko(f,"int32"),y=n.makeTensorInfo([],"int32",m),g=xR({inputs:{a:y,b:d},backend:n}),x=Wo({inputs:{x:g},backend:n,attrs:{dtype:"float32"}}),w=$m({inputs:{a:x,b:r},backend:n}),b=dh({inputs:{x:w},backend:n,attrs:{axis:0,keepDims:!1}});u.push(b),c.push(y),c.push(g),c.push(x),c.push(w),c.push(b)}const p=xD({inputs:u,backend:n,attrs:{axis:0}});return c.forEach(f=>n.disposeIntermediateTensorInfo(f)),p}const w7={kernelName:Mf,backendName:"cpu",kernelFunc:b7};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const v7=[m6,X5,y6,b6,tj,v6,k6,C6,I6,E6,D6,_6,F6,z6,B6,U6,H6,K6,X6,p6,Q6,J6,t8,sj,s8,J5,oj,o8,Y5,i8,u8,c8,d8,f8,g8,x8,w8,S8,$8,N8,T8,R8,A8,O8,F8,P8,M8,V8,W8,U8,G8,j8,X8,a6,Q8,aj,oK,ij,aK,uj,dK,pK,mK,hj,pj,yK,bK,vK,kK,mj,yj,Q5,CK,l8,IK,EK,DK,i6,bj,vj,_K,kj,FK,zK,BK,UK,HK,KK,qK,Cj,YK,ZK,eq,nq,rq,aq,lq,Ij,cq,pq,gq,Ej,Dj,bq,Sq,Cq,_j,Iq,Eq,Rq,bD,Oq,u6,Lj,Lq,zq,Bq,Wq,Z5,x0,Gq,c6,h6,d6,jq,qq,Yq,Zq,eX,tX,sX,Gj,oX,cX,dX,gX,jj,xX,wX,SX,Kj,fq,CX,IX,EX,DX,_X,FX,PX,MX,Yj,BX,Zj,e6,WX,GX,jX,qX,YX,r6,K8,ZX,e7,n7,r7,a7,l7,Oj,g7,x7,w7,Tq];for(const t of v7)dN(t);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const da={},Uh={alpha:!1,antialias:!1,premultipliedAlpha:!1,preserveDrawingBuffer:!1,depth:!1,stencil:!1,failIfMajorPerformanceCaveat:!0};function S7(t,e){da[t]=e}function lr(t,e){if(!(t in da)||e!=null){const s=$7(t,e);if(s!==null)da[t]=s;else return console.log("Could not get context for WebGL version",t),null}const n=da[t];return n==null||n.isContextLost()?(delete da[t],lr(t)):(n.disable(n.DEPTH_TEST),n.disable(n.STENCIL_TEST),n.disable(n.BLEND),n.disable(n.DITHER),n.disable(n.POLYGON_OFFSET_FILL),n.disable(n.SAMPLE_COVERAGE),n.enable(n.SCISSOR_TEST),n.enable(n.CULL_FACE),n.cullFace(n.BACK),da[t])}function k7(t){if(!G().getBool("IS_SAFARI")&&typeof OffscreenCanvas<"u"&&t===2)return new OffscreenCanvas(300,150);if(typeof document<"u")return document.createElement("canvas");throw new Error("Cannot create a canvas in this context")}function $7(t,e){if(t!==1&&t!==2)throw new Error("Cannot get WebGL rendering context, WebGL is disabled.");const n=e??k7(t);return n.addEventListener("webglcontextlost",s=>{s.preventDefault(),delete da[t]},!1),G().getBool("SOFTWARE_WEBGL_ENABLED")&&(Uh.failIfMajorPerformanceCaveat=!1),t===1?n.getContext("webgl",Uh)||n.getContext("experimental-webgl",Uh):n.getContext("webgl2",Uh)}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var Wu;(function(t){t[t.DENSE=0]="DENSE",t[t.SHARED_BATCH=1]="SHARED_BATCH"})(Wu||(Wu={}));var as;(function(t){t[t.RENDER=0]="RENDER",t[t.UPLOAD=1]="UPLOAD",t[t.PIXELS=2]="PIXELS",t[t.DOWNLOAD=3]="DOWNLOAD"})(as||(as={}));var Zt;(function(t){t[t.UNPACKED_FLOAT16=0]="UNPACKED_FLOAT16",t[t.UNPACKED_FLOAT32=1]="UNPACKED_FLOAT32",t[t.PACKED_4X1_UNSIGNED_BYTE=2]="PACKED_4X1_UNSIGNED_BYTE",t[t.PACKED_2X2_FLOAT32=3]="PACKED_2X2_FLOAT32",t[t.PACKED_2X2_FLOAT16=4]="PACKED_2X2_FLOAT16"})(Zt||(Zt={}));function ph(t,e){return[e,t]}function C7(t,e){return t*e}function Gh(t){const e=K(t),n=Math.ceil(e/4);return Ny(n)}function Cl(t,e){return[Math.max(1,Math.ceil(e/2)),Math.max(1,Math.ceil(t/2))]}function N7(t,e){const[n,s]=Cl(t,e);return n*s*4}function Nw(t,e){const n=t;let s,r,o,a,i,l,u,c,h,d;return G().getNumber("WEBGL_VERSION")===2?(s=n.R32F,r=n.R16F,o=n.RGBA16F,a=n.RGBA32F,i=n.RED,u=4,c=1,h=n.HALF_FLOAT,d=n.FLOAT,l=n.RGBA8):(s=t.RGBA,r=t.RGBA,o=t.RGBA,a=n.RGBA,i=t.RGBA,u=4,c=4,h=e!=null?e.HALF_FLOAT_OES:null,d=t.FLOAT,l=t.RGBA),{internalFormatFloat:s,internalFormatHalfFloat:r,internalFormatPackedHalfFloat:o,internalFormatPackedFloat:a,textureFormatFloat:i,downloadTextureFormat:l,downloadUnpackNumChannels:u,defaultNumChannels:c,textureTypeHalfFloat:h,textureTypeFloat:d}}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function de(t,e){const n=e();return G().getBool("DEBUG")&&I7(t),n}function I7(t){const e=t.getError();if(e!==t.NO_ERROR)throw new Error("WebGL Error: "+D7(t,e))}const T7=596e-10,E7=65504;function R7(t){return!!(G().getBool("WEBGL_RENDER_FLOAT32_ENABLED")||t===0||T7<Math.abs(t)&&Math.abs(t)<E7)}function D7(t,e){switch(e){case t.NO_ERROR:return"NO_ERROR";case t.INVALID_ENUM:return"INVALID_ENUM";case t.INVALID_VALUE:return"INVALID_VALUE";case t.INVALID_OPERATION:return"INVALID_OPERATION";case t.INVALID_FRAMEBUFFER_OPERATION:return"INVALID_FRAMEBUFFER_OPERATION";case t.OUT_OF_MEMORY:return"OUT_OF_MEMORY";case t.CONTEXT_LOST_WEBGL:return"CONTEXT_LOST_WEBGL";default:return`Unknown error code ${e}`}}function Hh(t,e){return ao(t,()=>t.getExtension(e),'Extension "'+e+'" not supported on this browser.')}function A7(t,e){const n=ao(t,()=>t.createShader(t.VERTEX_SHADER),"Unable to create vertex WebGLShader.");if(de(t,()=>t.shaderSource(n,e)),de(t,()=>t.compileShader(n)),t.getShaderParameter(n,t.COMPILE_STATUS)===!1)throw console.log(t.getShaderInfoLog(n)),new Error("Failed to compile vertex shader.");return n}function _7(t,e){const n=ao(t,()=>t.createShader(t.FRAGMENT_SHADER),"Unable to create fragment WebGLShader.");if(de(t,()=>t.shaderSource(n,e)),de(t,()=>t.compileShader(n)),G().get("ENGINE_COMPILE_ONLY"))return n;if(t.getShaderParameter(n,t.COMPILE_STATUS)===!1)throw wD(e,t.getShaderInfoLog(n)),new Error("Failed to compile fragment shader.");return n}const O7=/ERROR: [0-9]+:([0-9]+):/g;function wD(t,e){const n=O7.exec(e);if(n==null){console.log(`Couldn't parse line number in error: ${e}`),console.log(t);return}const s=+n[1],r=t.split(`
`),o=r.length.toString().length+2,a=r.map((h,d)=>Fi((d+1).toString(),o)+h);let i=0;for(let h=0;h<a.length;h++)i=Math.max(a[h].length,i);const l=a.slice(0,s-1),u=a.slice(s-1,s),c=a.slice(s);console.log(l.join(`
`)),console.log(e.split(`
`)[0]),console.log(`%c ${Fi(u[0],i)}`,"border:1px solid red; background-color:#e3d2d2; color:#a61717"),console.log(c.join(`
`))}function F7(t){return ao(t,()=>t.createProgram(),"Unable to create WebGLProgram.")}function L7(t,e){if(de(t,()=>t.linkProgram(e)),!G().get("ENGINE_COMPILE_ONLY")&&t.getProgramParameter(e,t.LINK_STATUS)===!1)throw console.log(t.getProgramInfoLog(e)),new Error("Failed to link vertex and fragment shaders.")}function xg(t,e){if(de(t,()=>t.validateProgram(e)),t.getProgramParameter(e,t.VALIDATE_STATUS)===!1)throw console.log(t.getProgramInfoLog(e)),new Error("Shader program validation failed.")}function P7(t,e){const n=ao(t,()=>t.createBuffer(),"Unable to create WebGLBuffer");return de(t,()=>t.bindBuffer(t.ARRAY_BUFFER,n)),de(t,()=>t.bufferData(t.ARRAY_BUFFER,e,t.STATIC_DRAW)),n}function z7(t,e){const n=ao(t,()=>t.createBuffer(),"Unable to create WebGLBuffer");return de(t,()=>t.bindBuffer(t.ELEMENT_ARRAY_BUFFER,n)),de(t,()=>t.bufferData(t.ELEMENT_ARRAY_BUFFER,e,t.STATIC_DRAW)),n}function M7(t){return ao(t,()=>t.createTexture(),"Unable to create WebGLTexture.")}function B7(t,e){const n=G().getNumber("WEBGL_MAX_TEXTURE_SIZE");if(t<=0||e<=0){const s=`[${t}x${e}]`;throw new Error("Requested texture size "+s+" is invalid.")}if(t>n||e>n){const s=`[${t}x${e}]`,r=`[${n}x${n}]`;throw new Error("Requested texture size "+s+" greater than WebGL maximum on this browser / GPU "+r+".")}}function V7(t){return ao(t,()=>t.createFramebuffer(),"Unable to create WebGLFramebuffer.")}function ak(t,e,n,s,r,o,a){const i=t.getAttribLocation(e,n);return i===-1?!1:(de(t,()=>t.bindBuffer(t.ARRAY_BUFFER,s)),de(t,()=>t.vertexAttribPointer(i,r,t.FLOAT,!1,o,a)),de(t,()=>t.enableVertexAttribArray(i)),!0)}function W7(t,e,n){K7(t,n),de(t,()=>t.activeTexture(t.TEXTURE0+n)),de(t,()=>t.bindTexture(t.TEXTURE_2D,e))}function U7(t,e,n){return ao(t,()=>t.getUniformLocation(e,n),'uniform "'+n+'" not present in program.')}function G7(t,e,n){return t.getUniformLocation(e,n)}function H7(t,e,n,s){de(t,()=>W7(t,e,s)),de(t,()=>t.uniform1i(n,s))}function bg(t,e,n){de(t,()=>t.bindFramebuffer(t.FRAMEBUFFER,n)),de(t,()=>t.framebufferTexture2D(t.FRAMEBUFFER,t.COLOR_ATTACHMENT0,t.TEXTURE_2D,e,0))}function ik(t,e){de(t,()=>t.bindFramebuffer(t.FRAMEBUFFER,e)),de(t,()=>t.framebufferTexture2D(t.FRAMEBUFFER,t.COLOR_ATTACHMENT0,t.TEXTURE_2D,null,0))}function jh(t){const e=t.checkFramebufferStatus(t.FRAMEBUFFER);if(e!==t.FRAMEBUFFER_COMPLETE)throw new Error("Error binding framebuffer: "+j7(t,e))}function j7(t,e){switch(e){case t.FRAMEBUFFER_INCOMPLETE_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_ATTACHMENT";case t.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT";case t.FRAMEBUFFER_INCOMPLETE_DIMENSIONS:return"FRAMEBUFFER_INCOMPLETE_DIMENSIONS";case t.FRAMEBUFFER_UNSUPPORTED:return"FRAMEBUFFER_UNSUPPORTED";default:return`unknown error ${e}`}}function ao(t,e,n){const s=de(t,()=>e());if(s==null)throw new Error(n);return s}function K7(t,e){const n=t.MAX_COMBINED_TEXTURE_IMAGE_UNITS-1,s=e+t.TEXTURE0;if(s<t.TEXTURE0||s>n){const r=`[gl.TEXTURE0, gl.TEXTURE${n}]`;throw new Error(`textureUnit must be in ${r}.`)}}function ul(t,e=2){return K(t.slice(0,t.length-e))}function cl(t){if(t.length===0)throw Error("Cannot get rows and columns of an empty shape array.");return[t.length>1?t[t.length-2]:1,t[t.length-1]]}function Kh(t){let e=[1,1,1];return t.length===0||t.length===1&&t[0]===1||(e=[ul(t),...cl(t)]),e}function q7(t,e=!1){let n=G().getNumber("WEBGL_MAX_TEXTURE_SIZE"),s=G().getNumber("WEBGL_MAX_SIZE_FOR_NARROW_TEXTURE");s===1/0&&G().getBool("WEBGL_AUTO_SQUARIFY_NARROW_TEXTURE_SHAPE")&&(s=n/2),e&&(n=n*2,s=s*2,t=t.map((i,l)=>l>=t.length-2?w1(t[l]):t[l]),t.length===1&&(t=[2,t[0]])),t.length!==2&&(t=jo(t).newShape);let r=K(t),o=null;t.length<=1&&r<=n?o=[1,r]:t.length===2&&t[0]<=n&&t[1]<=n?o=t:t.length===3&&t[0]*t[1]<=n&&t[2]<=n?o=[t[0]*t[1],t[2]]:t.length===3&&t[0]<=n&&t[1]*t[2]<=n?o=[t[0],t[1]*t[2]]:t.length===4&&t[0]*t[1]*t[2]<=n&&t[3]<=n?o=[t[0]*t[1]*t[2],t[3]]:t.length===4&&t[0]<=n&&t[1]*t[2]*t[3]<=n&&(o=[t[0],t[1]*t[2]*t[3]]);const a=o!=null&&Math.max(...o)>s&&Math.min(...o)<=(e?2:1)&&Math.min(...o)>0;if(o==null||a)if(e){const i=ul(t);let l=2,u=2;t.length&&([l,u]=cl(t)),r=i*(l/2)*(u/2),o=Ny(r).map(c=>c*2)}else o=Ny(r);return o}function qh(t){return t%2===0}function mp(t,e){if(t=t.slice(-2),e=e.slice(-2),Me(t,e)||!t.length||!e.length||t[0]===0||t[1]===0||e[0]===0||e[1]===0)return!0;if(t.length!==e.length){const n=t[t.length-1],s=e[e.length-1];if(n===s||qh(n)&&qh(s)&&(t[0]===1||e[0]===1))return!0}return t[1]===e[1]&&qh(t[0])&&qh(e[0])}let wg,vg;function X7(t){if(wg==null){const e=lr(t);wg=e.getParameter(e.MAX_TEXTURE_SIZE)}return wg}function Y7(t){if(vg==null){const e=lr(t);vg=e.getParameter(e.MAX_TEXTURE_IMAGE_UNITS)}return Math.min(16,vg)}function Q7(t){if(t===0)return 0;let e;const n=lr(t);return As(n,"EXT_disjoint_timer_query_webgl2")&&t===2?e=2:As(n,"EXT_disjoint_timer_query")?e=1:e=0,e}function As(t,e){return t.getExtension(e)!=null}function lk(t){try{if(lr(t)!=null)return!0}catch(e){return console.log("Error when getting WebGL context: ",e),!1}return!1}function Z7(t){if(t===0)return!1;const e=lr(t);if(t===1){if(!As(e,"OES_texture_float"))return!1}else if(!As(e,"EXT_color_buffer_float"))return!1;return w0(e)}function J7(t){if(t===0)return!1;const e=lr(t);if(t===1){if(!As(e,"OES_texture_float")||!As(e,"WEBGL_color_buffer_float"))return!1}else{if(As(e,"EXT_color_buffer_float"))return w0(e);const s="EXT_color_buffer_half_float";if(As(e,s)){const r=e.getExtension(s);return e9(e,r)}return!1}return w0(e)}function w0(t){const e=Nw(t),n=t.createTexture();t.bindTexture(t.TEXTURE_2D,n);const s=1,r=1;t.texImage2D(t.TEXTURE_2D,0,e.internalFormatFloat,s,r,0,e.textureFormatFloat,e.textureTypeFloat,null);const o=t.createFramebuffer();t.bindFramebuffer(t.FRAMEBUFFER,o),t.framebufferTexture2D(t.FRAMEBUFFER,t.COLOR_ATTACHMENT0,t.TEXTURE_2D,n,0);const a=t.checkFramebufferStatus(t.FRAMEBUFFER)===t.FRAMEBUFFER_COMPLETE;return t.bindTexture(t.TEXTURE_2D,null),t.bindFramebuffer(t.FRAMEBUFFER,null),t.deleteTexture(n),t.deleteFramebuffer(o),a}function e9(t,e){const n=Nw(t,e),s=t.createTexture();t.bindTexture(t.TEXTURE_2D,s);const r=1,o=1;t.texImage2D(t.TEXTURE_2D,0,n.internalFormatHalfFloat,r,o,0,n.textureFormatFloat,n.textureTypeHalfFloat,null);const a=t.createFramebuffer();t.bindFramebuffer(t.FRAMEBUFFER,a),t.framebufferTexture2D(t.FRAMEBUFFER,t.COLOR_ATTACHMENT0,t.TEXTURE_2D,s,0);const i=t.checkFramebufferStatus(t.FRAMEBUFFER)===t.FRAMEBUFFER_COMPLETE;return t.bindTexture(t.TEXTURE_2D,null),t.bindFramebuffer(t.FRAMEBUFFER,null),t.deleteTexture(s),t.deleteFramebuffer(a),i}function t9(t){return t!==2?!1:lr(t).fenceSync!=null}function fh(t,e){Array.isArray(t)||(t=[t]),t.forEach(n=>{n!=null&&C(n.dtype!=="complex64",()=>`${e} does not support complex64 tensors in the WebGL backend.`)})}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const be=G();be.registerFlag("HAS_WEBGL",()=>be.getNumber("WEBGL_VERSION")>0);be.registerFlag("WEBGL_VERSION",()=>lk(2)?2:lk(1)?1:0);be.registerFlag("WEBGL_CHECK_NUMERICAL_PROBLEMS",()=>!1);be.registerFlag("WEBGL_BUFFER_SUPPORTED",()=>be.get("WEBGL_VERSION")===2);be.registerFlag("WEBGL_CPU_FORWARD",()=>!0);be.registerFlag("WEBGL_FORCE_F16_TEXTURES",()=>!1);be.registerFlag("WEBGL_PACK",()=>be.getBool("HAS_WEBGL"));be.registerFlag("WEBGL_PACK_NORMALIZATION",()=>be.getBool("WEBGL_PACK"));be.registerFlag("WEBGL_PACK_CLIP",()=>be.getBool("WEBGL_PACK"));be.registerFlag("WEBGL_PACK_DEPTHWISECONV",()=>be.getBool("WEBGL_PACK"));be.registerFlag("WEBGL_PACK_BINARY_OPERATIONS",()=>be.getBool("WEBGL_PACK"));be.registerFlag("WEBGL_PACK_UNARY_OPERATIONS",()=>be.getBool("WEBGL_PACK"));be.registerFlag("WEBGL_PACK_ARRAY_OPERATIONS",()=>be.getBool("WEBGL_PACK"));be.registerFlag("WEBGL_PACK_IMAGE_OPERATIONS",()=>be.getBool("WEBGL_PACK"));be.registerFlag("WEBGL_PACK_REDUCE",()=>be.getBool("WEBGL_PACK"));be.registerFlag("WEBGL_LAZILY_UNPACK",()=>be.getBool("WEBGL_PACK"));be.registerFlag("WEBGL_CONV_IM2COL",()=>be.getBool("WEBGL_PACK"));be.registerFlag("WEBGL_MAX_TEXTURE_SIZE",()=>X7(be.getNumber("WEBGL_VERSION")));be.registerFlag("WEBGL_MAX_TEXTURES_IN_SHADER",()=>Y7(be.getNumber("WEBGL_VERSION")));be.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION",()=>{const t=be.getNumber("WEBGL_VERSION");return t===0?0:Q7(t)});be.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE",()=>be.getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0&&!EN());be.registerFlag("WEBGL_RENDER_FLOAT32_CAPABLE",()=>Z7(be.getNumber("WEBGL_VERSION")));be.registerFlag("WEBGL_RENDER_FLOAT32_ENABLED",()=>be.getBool("WEBGL_FORCE_F16_TEXTURES")?!1:be.getBool("WEBGL_RENDER_FLOAT32_CAPABLE"));be.registerFlag("WEBGL_DOWNLOAD_FLOAT_ENABLED",()=>J7(be.getNumber("WEBGL_VERSION")));be.registerFlag("WEBGL_FENCE_API_ENABLED",()=>t9(be.getNumber("WEBGL_VERSION")));be.registerFlag("WEBGL_SIZE_UPLOAD_UNIFORM",()=>be.getBool("WEBGL_RENDER_FLOAT32_ENABLED")?4:0);be.registerFlag("WEBGL_DELETE_TEXTURE_THRESHOLD",()=>-1,t=>{if(t<0&&t!==-1)throw new Error(`WEBGL_DELETE_TEXTURE_THRESHOLD must be -1 (indicating never delete) or at least 0, but got ${t}.`)});be.registerFlag("WEBGL_FLUSH_THRESHOLD",()=>EN()?1:-1,t=>{if(t<0&&t!==-1)throw new Error(`WEBGL_FLUSH_THRESHOLD must be -1 (indicating never manual flush) or at least 0, but got ${t}.`)});be.registerFlag("CPU_HANDOFF_SIZE_THRESHOLD",()=>128);be.registerFlag("WEBGL_USE_SHAPES_UNIFORMS",()=>!1);be.registerFlag("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD",()=>1e5);be.registerFlag("TOPK_K_CPU_HANDOFF_THRESHOLD",()=>128);be.registerFlag("WEBGL_EXP_CONV",()=>!1);be.registerFlag("SOFTWARE_WEBGL_ENABLED",()=>be.getBool("IS_TEST"));be.registerFlag("WEBGL_MAX_SIZE_FOR_NARROW_TEXTURE",()=>1/0);be.registerFlag("WEBGL_AUTO_SQUARIFY_NARROW_TEXTURE_SHAPE",()=>!1);be.registerFlag("WEBGL2_ISNAN_CUSTOM",()=>!1);be.registerFlag("ENGINE_COMPILE_ONLY",()=>!1);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Nn(){let t,e,n,s,r,o,a,i,l,u;return G().getNumber("WEBGL_VERSION")===2?(t="#version 300 es",e="in",n="out",s="in",r="texture",o="outputColor",a="out vec4 outputColor;",i=G().getBool("WEBGL2_ISNAN_CUSTOM")?`
      bool isnan_custom(float val) {
        uint floatToUint = floatBitsToUint(val);
        return (floatToUint & 0x7fffffffu) > 0x7f800000u;
      }

      bvec4 isnan_custom(vec4 val) {
        return bvec4(isnan_custom(val.x),
          isnan_custom(val.y), isnan_custom(val.z), isnan_custom(val.w));
      }

      #define isnan(value) isnan_custom(value)
    `:"",l="",u=`
      #define round(value) newRound(value)
      int newRound(float value) {
        return int(floor(value + 0.5));
      }

      ivec4 newRound(vec4 value) {
        return ivec4(floor(value + vec4(0.5)));
      }
    `):(t="",e="attribute",n="varying",s="varying",r="texture2D",o="gl_FragColor",a="",i=`
      #define isnan(value) isnan_custom(value)
      bool isnan_custom(float val) {
        return (val > 0. || val < 1. || val == 0.) ? false : true;
      }
      bvec4 isnan_custom(vec4 val) {
        return bvec4(isnan(val.x), isnan(val.y), isnan(val.z), isnan(val.w));
      }
    `,l=`
      uniform float INFINITY;

      bool isinf(float val) {
        return abs(val) == INFINITY;
      }
      bvec4 isinf(vec4 val) {
        return equal(abs(val), vec4(INFINITY));
      }
    `,u=`
      int round(float value) {
        return int(floor(value + 0.5));
      }

      ivec4 round(vec4 value) {
        return ivec4(floor(value + vec4(0.5)));
      }
    `),{version:t,attribute:e,varyingVs:n,varyingFs:s,texture2D:r,output:o,defineOutput:a,defineSpecialNaN:i,defineSpecialInf:l,defineRound:u}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ei(t,e,n="index"){const s=ve(e);return s.map((r,o)=>{const a=`int ${t[o]} = ${n} / ${r}`,i=o===s.length-1?`int ${t[o+1]} = ${n} - ${t[o]} * ${r}`:`index -= ${t[o]} * ${r}`;return`${a}; ${i};`}).join("")}function Cm(t,e,n="index"){const s=ve(e);return s.map((r,o)=>{const a=`int ${t[o]} = ${n} / outShapeStrides[${o}]`,i=o===s.length-1?`int ${t[o+1]} = ${n} - ${t[o]} * outShapeStrides[${o}]`:`index -= ${t[o]} * outShapeStrides[${o}]`;return`${a}; ${i};`}).join("")}function n9(t,e){const n=t.length,s=t.map(o=>`${e}[${o}]`),r=new Array(n-1);r[n-2]=s[n-1];for(let o=n-3;o>=0;--o)r[o]=`(${r[o+1]} * ${s[o+1]})`;return r}function s9(t,e,n="index"){const s=t.map((o,a)=>a),r=n9(s,e);return r.map((o,a)=>{const i=`int ${t[a]} = ${n} / ${r[a]}`,l=a===r.length-1?`int ${t[a+1]} = ${n} - ${t[a]} * ${r[a]}`:`index -= ${t[a]} * ${r[a]}`;return`${i}; ${l};`}).join("")}function Iw(t){const e=ve(t).map(n=>n.toString());return`
  int getFlatIndex(ivec3 coords) {
    return coords.x * ${e[0]} + coords.y * ${e[1]} + coords.z;
  }
`}function Tw(){return`
  int getFlatIndex(ivec3 coords) {
    return coords.x * outShapeStrides[0] + coords.y * outShapeStrides[1] + coords.z;
  }
`}const vD=`
  const float FLOAT_MAX = 1.70141184e38;
  const float FLOAT_MIN = 1.17549435e-38;

  lowp vec4 encode_float(highp float v) {
    if (isnan(v)) {
      return vec4(255, 255, 255, 255);
    }

    highp float av = abs(v);

    if(av < FLOAT_MIN) {
      return vec4(0.0, 0.0, 0.0, 0.0);
    } else if(v > FLOAT_MAX) {
      return vec4(0.0, 0.0, 128.0, 127.0) / 255.0;
    } else if(v < -FLOAT_MAX) {
      return vec4(0.0, 0.0,  128.0, 255.0) / 255.0;
    }

    highp vec4 c = vec4(0,0,0,0);

    highp float e = floor(log2(av));
    highp float m = exp2(fract(log2(av))) - 1.0;

    c[2] = floor(128.0 * m);
    m -= c[2] / 128.0;
    c[1] = floor(32768.0 * m);
    m -= c[1] / 32768.0;
    c[0] = floor(8388608.0 * m);

    highp float ebias = e + 127.0;
    c[3] = floor(ebias / 2.0);
    ebias -= c[3] * 2.0;
    c[2] += floor(ebias) * 128.0;

    c[3] += 128.0 * step(0.0, -v);

    return c / 255.0;
  }
`;/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const{getBroadcastDims:SD}=S4;function r9(t,e,n){const s=[];if(t.forEach(p=>{const f=K(p.shapeInfo.logicalShape);if(p.shapeInfo.isUniform?s.push(`uniform float ${p.name}${f>1?`[${f}]`:""};`):(s.push(`uniform sampler2D ${p.name};`),s.push(`uniform int offset${p.name};`)),n.enableShapeUniforms){const{uniformShape:m}=Ew(n.packedInputs,p.shapeInfo.logicalShape,p.shapeInfo.texShape);switch(m.length){case 1:s.push(`uniform int ${p.name}Shape;`);break;case 2:s.push(`uniform ivec2 ${p.name}Shape;`);break;case 3:s.push(`uniform ivec3 ${p.name}Shape;`);break;case 4:s.push(`uniform ivec4 ${p.name}Shape;`);break}s.push(`uniform ivec2 ${p.name}TexShape;`)}}),n.enableShapeUniforms){switch(e.logicalShape.length){case 1:s.push("uniform int outShape;");break;case 2:s.push("uniform ivec2 outShape;"),s.push("uniform int outShapeStrides;");break;case 3:s.push("uniform ivec3 outShape;"),s.push("uniform ivec2 outShapeStrides;");break;case 4:s.push("uniform ivec4 outShape;"),s.push("uniform ivec3 outShapeStrides;");break}s.push("uniform ivec2 outTexShape;")}n.customUniforms&&n.customUniforms.forEach(p=>{s.push(`uniform ${p.type} ${p.name}${p.arrayIndex?`[${p.arrayIndex}]`:""};`)});const r=s.join(`
`),o=t.map(p=>o9(p,e,n.packedInputs,n.enableShapeUniforms)).join(`
`),a=e.texShape,i=Nn(),l=l9(i);let u,c,h=h9(i);return e.isPacked?(u=a9(e.logicalShape,a,n.enableShapeUniforms),c=c9(i)):(u=i9(e.logicalShape,a,n.enableShapeUniforms),c=u9(i)),n.packedInputs&&(h+=m9),[h,l,c,r,u,o,n.userCode].join(`
`)}function Nl(t,e=!1){const n=t.shapeInfo.logicalShape;switch(n.length){case 0:return I9(t,e);case 1:return E9(t,e);case 2:return D9(t,e);case 3:return _9(t,e);case 4:return F9(t,e);case 5:return L9(t);case 6:return P9(t);default:throw new Error(`${n.length}-D input sampling is not yet supported`)}}function kD(t,e){switch(t.shapeInfo.logicalShape.length){case 0:return N9(t);case 1:return T9(t,e);case 2:return R9(t,e);case 3:return A9(t,e);default:return O9(t,e)}}function o9(t,e,n=!1,s){let r="";n?r+=kD(t,s):r+=Nl(t,s);const o=t.shapeInfo.logicalShape,a=e.logicalShape;return o.length<=a.length&&(n?r+=z9(t,e):r+=M9(t,e)),r}function a9(t,e,n){switch(t.length){case 0:return $D();case 1:return g9(t,e,n);case 2:return $9(t,e,n);case 3:return x9(t,e,n);default:return w9(t,e,n)}}function i9(t,e,n){switch(t.length){case 0:return $D();case 1:return y9(t,e,n);case 2:return C9(t,e,n);case 3:return b9(t,e,n);case 4:return v9(t,e,n);case 5:return S9(t,e);case 6:return k9(t,e);default:throw new Error(`${t.length}-D output sampling is not yet supported`)}}function l9(t){return`
    float sampleTexture(sampler2D textureSampler, vec2 uv) {
      return ${t.texture2D}(textureSampler, uv).r;
    }
  `}function u9(t){return`
    void setOutput(float val) {
      ${t.output} = vec4(val, 0, 0, 0);
    }
  `}function c9(t){return`
    void setOutput(vec4 val) {
      ${t.output} = val;
    }
  `}function h9(t){return`${t.version}
    precision highp float;
    precision highp int;
    precision highp sampler2D;
    ${t.varyingFs} vec2 resultUV;
    ${t.defineOutput}
    const vec2 halfCR = vec2(0.5, 0.5);

    struct ivec5
    {
      int x;
      int y;
      int z;
      int w;
      int u;
    };

    struct ivec6
    {
      int x;
      int y;
      int z;
      int w;
      int u;
      int v;
    };

    uniform float NAN;
    ${t.defineSpecialNaN}
    ${t.defineSpecialInf}
    ${t.defineRound}

    int imod(int x, int y) {
      return x - y * (x / y);
    }

    int idiv(int a, int b, float sign) {
      int res = a / b;
      int mod = imod(a, b);
      if (sign < 0. && mod != 0) {
        res -= 1;
      }
      return res;
    }

    //Based on the work of Dave Hoskins
    //https://www.shadertoy.com/view/4djSRW
    #define HASHSCALE1 443.8975
    float random(float seed){
      vec2 p = resultUV * seed;
      vec3 p3  = fract(vec3(p.xyx) * HASHSCALE1);
      p3 += dot(p3, p3.yzx + 19.19);
      return fract((p3.x + p3.y) * p3.z);
    }

    ${d9}
    ${p9}
    ${f9}
  `}const d9=`
vec2 uvFromFlat(int texNumR, int texNumC, int index) {
  int texR = index / texNumC;
  int texC = index - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
vec2 packedUVfrom1D(int texNumR, int texNumC, int index) {
  int texelIndex = index / 2;
  int texR = texelIndex / texNumC;
  int texC = texelIndex - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
`,p9=`
vec2 packedUVfrom2D(int texelsInLogicalRow, int texNumR,
  int texNumC, int row, int col) {
  int texelIndex = (row / 2) * texelsInLogicalRow + (col / 2);
  int texR = texelIndex / texNumC;
  int texC = texelIndex - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
`,f9=`
vec2 packedUVfrom3D(int texNumR, int texNumC,
    int texelsInBatch, int texelsInLogicalRow, int b,
    int row, int col) {
  int index = b * texelsInBatch + (row / 2) * texelsInLogicalRow + (col / 2);
  int texR = index / texNumC;
  int texC = index - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
`,m9=`
  float getChannel(vec4 frag, vec2 innerDims) {
    vec2 modCoord = mod(innerDims, 2.);
    return modCoord.x == 0. ?
      (modCoord.y == 0. ? frag.r : frag.g) :
      (modCoord.y == 0. ? frag.b : frag.a);
  }
  float getChannel(vec4 frag, int dim) {
    float modCoord = mod(float(dim), 2.);
    return modCoord == 0. ? frag.r : frag.g;
  }
`;function $D(){return`
    int getOutputCoords() {
      return 0;
    }
  `}function g9(t,e,n){const s=[Math.ceil(e[0]/2),Math.ceil(e[1]/2)];return s[0]===1?n?`
      int getOutputCoords() {
        return 2 * int(resultUV.x * ceil(float(outTexShape[1]) / 2.0));
      }
    `:`
      int getOutputCoords() {
        return 2 * int(resultUV.x * ${s[1]}.0);
      }
    `:s[1]===1?n?`
      int getOutputCoords() {
        return 2 * int(resultUV.y * ceil(float(outTexShape[0]) / 2.0));
      }
    `:`
      int getOutputCoords() {
        return 2 * int(resultUV.y * ${s[0]}.0);
      }
    `:n?`
    int getOutputCoords() {
      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(packedTexShape[0], packedTexShape[1]));
      return 2 * (resTexRC.x * packedTexShape[1] + resTexRC.y);
    }
  `:`
    int getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${s[0]}, ${s[1]}));
      return 2 * (resTexRC.x * ${s[1]} + resTexRC.y);
    }
  `}function y9(t,e,n){return e[0]===1?n?`
      int getOutputCoords() {
        return int(resultUV.x * float(outTexShape[1]));
      }
    `:`
      int getOutputCoords() {
        return int(resultUV.x * ${e[1]}.0);
      }
    `:e[1]===1?n?`
      int getOutputCoords() {
        return int(resultUV.y * float(outTexShape[0]));
      }
    `:`
      int getOutputCoords() {
        return int(resultUV.y * ${e[0]}.0);
      }
    `:n?`
    int getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(outTexShape[0], outTexShape[1]));
      return resTexRC.x * outTexShape[1] + resTexRC.y;
    }
  `:`
    int getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${e[0]}, ${e[1]}));
      return resTexRC.x * ${e[1]} + resTexRC.y;
    }
  `}function x9(t,e,n){if(n)return`
    ivec3 getOutputCoords() {
      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
      int texelsInLogicalRow = int(ceil(float(outShape[2]) / 2.0));
      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[1]) / 2.0));
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(packedTexShape[0], packedTexShape[1]));
      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;

      int b = index / texelsInBatch;
      index -= b * texelsInBatch;

      int r = 2 * (index / texelsInLogicalRow);
      int c = imod(index, texelsInLogicalRow) * 2;

      return ivec3(b, r, c);
    }
  `;const s=[Math.ceil(e[0]/2),Math.ceil(e[1]/2)],r=Math.ceil(t[2]/2),o=r*Math.ceil(t[1]/2);return`
    ivec3 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${s[0]}, ${s[1]}));
      int index = resTexRC.x * ${s[1]} + resTexRC.y;

      int b = index / ${o};
      index -= b * ${o};

      int r = 2 * (index / ${r});
      int c = imod(index, ${r}) * 2;

      return ivec3(b, r, c);
    }
  `}function b9(t,e,n){if(n)return`
  ivec3 getOutputCoords() {
    ivec2 resTexRC = ivec2(resultUV.yx *
                           vec2(outTexShape[0], outTexShape[1]));
    int index = resTexRC.x * outTexShape[1] + resTexRC.y;
    ${Cm(["r","c","d"],t)}
    return ivec3(r, c, d);
  }
`;const s=ei(["r","c","d"],t);return`
    ivec3 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${e[0]}, ${e[1]}));
      int index = resTexRC.x * ${e[1]} + resTexRC.y;
      ${s}
      return ivec3(r, c, d);
    }
  `}function w9(t,e,n){if(n)return`
    ivec4 getOutputCoords() {
      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(packedTexShape[0], packedTexShape[1]));
      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;

      int texelsInLogicalRow = int(ceil(float(outShape[3]) / 2.0));
      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[2]) / 2.0));
      int texelsInBatchN = texelsInBatch * outShape[1];

      int b2 = index / texelsInBatchN;
      index -= b2 * texelsInBatchN;

      int b = index / texelsInBatch;
      index -= b * texelsInBatch;

      int r = 2 * (index / texelsInLogicalRow);
      int c = imod(index, texelsInLogicalRow) * 2;

      return ivec4(b2, b, r, c);
    }
  `;const s=[Math.ceil(e[0]/2),Math.ceil(e[1]/2)],r=Math.ceil(t[t.length-1]/2),o=r*Math.ceil(t[t.length-2]/2);let a=o,i="",l="b, r, c";for(let u=2;u<t.length-1;u++)a*=t[t.length-u-1],i=`
      int b${u} = index / ${a};
      index -= b${u} * ${a};
    `+i,l=`b${u}, `+l;return`
    ivec${t.length} getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${s[0]}, ${s[1]}));
      int index = resTexRC.x * ${s[1]} + resTexRC.y;

      ${i}

      int b = index / ${o};
      index -= b * ${o};

      int r = 2 * (index / ${r});
      int c = imod(index, ${r}) * 2;

      return ivec${t.length}(${l});
    }
  `}function v9(t,e,n){if(n)return`
    ivec4 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
        vec2(outTexShape[0], outTexShape[1]));
      int index = resTexRC.x * outTexShape[1] + resTexRC.y;
      ${Cm(["r","c","d","d2"],t)}
      return ivec4(r, c, d, d2);
    }
  `;const s=ei(["r","c","d","d2"],t);return`
    ivec4 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
        vec2(${e[0]}, ${e[1]}));
      int index = resTexRC.x * ${e[1]} + resTexRC.y;
      ${s}
      return ivec4(r, c, d, d2);
    }
  `}function S9(t,e){const n=ei(["r","c","d","d2","d3"],t);return`
    ivec5 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx * vec2(${e[0]},
                             ${e[1]}));

      int index = resTexRC.x * ${e[1]} + resTexRC.y;

      ${n}

      ivec5 outShape = ivec5(r, c, d, d2, d3);
      return outShape;
    }
  `}function k9(t,e){const n=ei(["r","c","d","d2","d3","d4"],t);return`
    ivec6 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
        vec2(${e[0]}, ${e[1]}));
      int index = resTexRC.x * ${e[1]} + resTexRC.y;

      ${n}

      ivec6 result = ivec6(r, c, d, d2, d3, d4);
      return result;
    }
  `}function $9(t,e,n){const s=[Math.ceil(e[0]/2),Math.ceil(e[1]/2)];if(Me(t,e))return n?`
      ivec2 getOutputCoords() {
        ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
        return 2 * ivec2(resultUV.yx * vec2(packedTexShape[0], packedTexShape[1]));
      }
    `:`
      ivec2 getOutputCoords() {
        return 2 * ivec2(resultUV.yx * vec2(${s[0]}, ${s[1]}));
      }
    `;const r=Math.ceil(t[1]/2);return n?`
    ivec2 getOutputCoords() {
      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
      int texelsInLogicalRow = int(ceil(float(outShape[1]) / 2.0));
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(packedTexShape[0], packedTexShape[1]));

      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;
      int r = 2 * (index / texelsInLogicalRow);
      int c = imod(index, texelsInLogicalRow) * 2;

      return ivec2(r, c);
    }
  `:`
    ivec2 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${s[0]}, ${s[1]}));

      int index = resTexRC.x * ${s[1]} + resTexRC.y;
      int r = 2 * (index / ${r});
      int c = imod(index, ${r}) * 2;

      return ivec2(r, c);
    }
  `}function C9(t,e,n){return Me(t,e)?n?`
      ivec2 getOutputCoords() {
        return ivec2(resultUV.yx * vec2(outTexShape[0], outTexShape[1]));
      }
    `:`
      ivec2 getOutputCoords() {
        return ivec2(resultUV.yx * vec2(${e[0]}, ${e[1]}));
      }
    `:t[1]===1?n?`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(outTexShape[0], outTexShape[1]));
        int index = resTexRC.x * outTexShape[1] + resTexRC.y;
        return ivec2(index, 0);
      }
    `:`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(${e[0]}, ${e[1]}));
        int index = resTexRC.x * ${e[1]} + resTexRC.y;
        return ivec2(index, 0);
      }
    `:t[0]===1?n?`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(outTexShape[0], outTexShape[1]));
        int index = resTexRC.x * outTexShape[1] + resTexRC.y;
        return ivec2(0, index);
      }
    `:`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(${e[0]}, ${e[1]}));
        int index = resTexRC.x * ${e[1]} + resTexRC.y;
        return ivec2(0, index);
      }
    `:n?`
    ivec2 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(outTexShape[0], outTexShape[1]));
      int index = resTexRC.x * outTexShape[1] + resTexRC.y;
      int r = index / outShape[1];
      int c = index - r * outShape[1];
      return ivec2(r, c);
    }
  `:`
    ivec2 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${e[0]}, ${e[1]}));
      int index = resTexRC.x * ${e[1]} + resTexRC.y;
      int r = index / ${t[1]};
      int c = index - r * ${t[1]};
      return ivec2(r, c);
    }
  `}function ti(t){return`offset${t}`}function N9(t){const e=t.name,n="get"+e.charAt(0).toUpperCase()+e.slice(1),s=Nn();return`
    vec4 ${n}() {
      return ${s.texture2D}(${e}, halfCR);
    }
  `}function I9(t,e){const n=t.name,s="get"+n.charAt(0).toUpperCase()+n.slice(1);if(t.shapeInfo.isUniform)return`float ${s}() {return ${n};}`;const[r,o]=t.shapeInfo.texShape;if(r===1&&o===1)return`
      float ${s}() {
        return sampleTexture(${n}, halfCR);
      }
    `;const a=ti(n);if(e)return`
    float ${s}() {
      vec2 uv = uvFromFlat(${n}TexShape[0], ${n}TexShape[1], ${a});
      return sampleTexture(${n}, uv);
    }
  `;const[i,l]=t.shapeInfo.texShape;return`
    float ${s}() {
      vec2 uv = uvFromFlat(${i}, ${l}, ${a});
      return sampleTexture(${n}, uv);
    }
  `}function T9(t,e){const n=t.name,s="get"+n.charAt(0).toUpperCase()+n.slice(1),r=t.shapeInfo.texShape,o=Nn();if(e)return`
    vec4 ${s}(int index) {
      ivec2 packedTexShape = ivec2(ceil(float(${n}TexShape[0]) / 2.0), ceil(float(${n}TexShape[1]) / 2.0));
      vec2 uv = packedUVfrom1D(
        packedTexShape[0], packedTexShape[1], index);
      return ${o.texture2D}(${n}, uv);
    }
  `;const a=[Math.ceil(r[0]/2),Math.ceil(r[1]/2)];return`
    vec4 ${s}(int index) {
      vec2 uv = packedUVfrom1D(
        ${a[0]}, ${a[1]}, index);
      return ${o.texture2D}(${n}, uv);
    }
  `}function E9(t,e){const n=t.name,s="get"+n.charAt(0).toUpperCase()+n.slice(1);if(t.shapeInfo.isUniform)return`
      float ${s}(int index) {
        ${Il(t)}
      }
    `;const r=t.shapeInfo.texShape,o=r[0],a=r[1];if(a===1&&o===1)return`
      float ${s}(int index) {
        return sampleTexture(${n}, halfCR);
      }
    `;const i=ti(n);return a===1?e?`
      float ${s}(int index) {
        vec2 uv = vec2(0.5, (float(index + ${i}) + 0.5) / float(${n}TexShape[0]));
        return sampleTexture(${n}, uv);
      }
    `:`
      float ${s}(int index) {
        vec2 uv = vec2(0.5, (float(index + ${i}) + 0.5) / ${o}.0);
        return sampleTexture(${n}, uv);
      }
    `:o===1?e?`
      float ${s}(int index) {
        vec2 uv = vec2((float(index + ${i}) + 0.5) / float(${n}TexShape[1]), 0.5);
        return sampleTexture(${n}, uv);
      }
    `:`
      float ${s}(int index) {
        vec2 uv = vec2((float(index + ${i}) + 0.5) / ${a}.0, 0.5);
        return sampleTexture(${n}, uv);
      }
    `:e?`
    float ${s}(int index) {
      vec2 uv = uvFromFlat(${n}TexShape[0], ${n}TexShape[1], index + ${i});
      return sampleTexture(${n}, uv);
    }
  `:`
    float ${s}(int index) {
      vec2 uv = uvFromFlat(${o}, ${a}, index + ${i});
      return sampleTexture(${n}, uv);
    }
  `}function R9(t,e){const n=t.shapeInfo.logicalShape,s=t.name,r="get"+s.charAt(0).toUpperCase()+s.slice(1),o=t.shapeInfo.texShape,a=o[0],i=o[1],l=Nn();if(o!=null&&Me(n,o))return e?`
      vec4 ${r}(int row, int col) {
        vec2 uv = (vec2(col, row) + halfCR) / vec2(${s}TexShape[1], ${s}TexShape[0]);

        return ${l.texture2D}(${s}, uv);
      }
    `:`
      vec4 ${r}(int row, int col) {
        vec2 uv = (vec2(col, row) + halfCR) / vec2(${i}.0, ${a}.0);

        return ${l.texture2D}(${s}, uv);
      }
    `;if(e)return`
    vec4 ${r}(int row, int col) {
      ivec2 packedTexShape = ivec2(ceil(float(${s}TexShape[0]) / 2.0), ceil(float(${s}TexShape[1]) / 2.0));
      int valuesPerRow = int(ceil(float(${s}Shape[1]) / 2.0));
      vec2 uv = packedUVfrom2D(valuesPerRow, packedTexShape[0], packedTexShape[1], row, col);
      return ${l.texture2D}(${s}, uv);
    }
  `;const u=[Math.ceil(o[0]/2),Math.ceil(o[1]/2)],c=Math.ceil(n[1]/2);return`
    vec4 ${r}(int row, int col) {
      vec2 uv = packedUVfrom2D(${c}, ${u[0]}, ${u[1]}, row, col);
      return ${l.texture2D}(${s}, uv);
    }
  `}function D9(t,e){const n=t.shapeInfo.logicalShape,s=t.name,r="get"+s.charAt(0).toUpperCase()+s.slice(1),o=t.shapeInfo.texShape;if(o!=null&&Me(n,o)){if(e)return`
      float ${r}(int row, int col) {
        vec2 uv = (vec2(col, row) + halfCR) / vec2(${s}TexShape[1], ${s}TexShape[0]);
        return sampleTexture(${s}, uv);
      }
    `;const d=o[0],p=o[1];return`
    float ${r}(int row, int col) {
      vec2 uv = (vec2(col, row) + halfCR) / vec2(${p}.0, ${d}.0);
      return sampleTexture(${s}, uv);
    }
  `}const{newShape:a,keptDims:i}=jo(n),l=a;if(l.length<n.length){const d=Tl(t,l),p=["row","col"];return`
      ${Nl(d,e)}
      float ${r}(int row, int col) {
        return ${r}(${El(p,i)});
      }
    `}if(t.shapeInfo.isUniform)return`
      float ${r}(int row, int col) {
        int index = round(dot(vec2(row, col), vec2(${n[1]}, 1)));
        ${Il(t)}
      }
    `;const u=o[0],c=o[1],h=ti(s);return c===1?e?`
      float ${r}(int row, int col) {
        float index = dot(vec3(row, col, ${h}), vec3(${s}Shape[1], 1, 1));
        vec2 uv = vec2(0.5, (index + 0.5) / float(${s}TexShape[0]));
        return sampleTexture(${s}, uv);
      }
    `:`
    float ${r}(int row, int col) {
      float index = dot(vec3(row, col, ${h}), vec3(${n[1]}, 1, 1));
      vec2 uv = vec2(0.5, (index + 0.5) / ${u}.0);
      return sampleTexture(${s}, uv);
    }
  `:u===1?e?`
      float ${r}(int row, int col) {
        float index = dot(vec3(row, col, ${h}), vec3(${s}Shape[1], 1, 1));
        vec2 uv = vec2((index + 0.5) / float(${s}TexShape[1]), 0.5);
        return sampleTexture(${s}, uv);
      }
    `:`
    float ${r}(int row, int col) {
      float index = dot(vec3(row, col, ${h}), vec3(${n[1]}, 1, 1));
      vec2 uv = vec2((index + 0.5) / ${c}.0, 0.5);
      return sampleTexture(${s}, uv);
    }
  `:e?`
      float ${r}(int row, int col) {
        // Explicitly use integer operations as dot() only works on floats.
        int index = row * ${s}Shape[1] + col + ${h};
        vec2 uv = uvFromFlat(${s}TexShape[0], ${s}TexShape[1], index);
        return sampleTexture(${s}, uv);
      }
    `:`
  float ${r}(int row, int col) {
    // Explicitly use integer operations as dot() only works on floats.
    int index = row * ${n[1]} + col + ${h};
    vec2 uv = uvFromFlat(${u}, ${c}, index);
    return sampleTexture(${s}, uv);
  }
`}function A9(t,e){const n=t.shapeInfo.logicalShape,s=t.name,r="get"+s.charAt(0).toUpperCase()+s.slice(1),o=t.shapeInfo.texShape,a=[Math.ceil(o[0]/2),Math.ceil(o[1]/2)];if(n[0]===1){const d=n.slice(1),p=[1,2],f=Tl(t,d),m=["b","row","col"];return`
        ${kD(f,e)}
        vec4 ${r}(int b, int row, int col) {
          return ${r}(${El(m,p)});
        }
      `}const i=Nn();if(e)return`
    vec4 ${r}(int b, int row, int col) {
      ivec2 packedTexShape = ivec2(ceil(float(${s}TexShape[0]) / 2.0), ceil(float(${s}TexShape[1]) / 2.0));
      int valuesPerRow = int(ceil(float(${s}Shape[2]) / 2.0));
      int texelsInBatch = valuesPerRow * int(ceil(float(${s}Shape[1]) / 2.0));
      vec2 uv = packedUVfrom3D(
        packedTexShape[0], packedTexShape[1], texelsInBatch, valuesPerRow, b, row, col);
      return ${i.texture2D}(${s}, uv);
    }
  `;const l=a[0],u=a[1],c=Math.ceil(n[2]/2),h=c*Math.ceil(n[1]/2);return`
    vec4 ${r}(int b, int row, int col) {
      vec2 uv = packedUVfrom3D(
        ${l}, ${u}, ${h}, ${c}, b, row, col);
      return ${i.texture2D}(${s}, uv);
    }
  `}function _9(t,e){const n=t.shapeInfo.logicalShape,s=t.name,r="get"+s.charAt(0).toUpperCase()+s.slice(1),o=n[1]*n[2],a=n[2],{newShape:i,keptDims:l}=jo(n),u=i;if(u.length<n.length){const m=Tl(t,u),y=["row","col","depth"];return`
        ${Nl(m,e)}
        float ${r}(int row, int col, int depth) {
          return ${r}(${El(y,l)});
        }
      `}if(t.shapeInfo.isUniform)return`
      float ${r}(int row, int col, int depth) {
        int index = round(dot(vec3(row, col, depth),
                          vec3(${o}, ${a}, 1)));
        ${Il(t)}
      }
    `;const c=t.shapeInfo.texShape,h=c[0],d=c[1],p=t.shapeInfo.flatOffset;if(d===o&&p==null)return e?`
      float ${r}(int row, int col, int depth) {
        int stride1 = ${s}Shape[2];
        float texR = float(row);
        float texC = dot(vec2(col, depth), vec2(stride1, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${s}TexShape[1], ${s}TexShape[0]);
        return sampleTexture(${s}, uv);
      }
    `:`
        float ${r}(int row, int col, int depth) {
          float texR = float(row);
          float texC = dot(vec2(col, depth), vec2(${a}, 1));
          vec2 uv = (vec2(texC, texR) + halfCR) /
                     vec2(${d}.0, ${h}.0);
          return sampleTexture(${s}, uv);
        }
      `;if(d===a&&p==null)return e?`
      float ${r}(int row, int col, int depth) {
        float texR = dot(vec2(row, col), vec2(${s}Shape[1], 1));
        float texC = float(depth);
        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${s}TexShape[1], ${s}TexShape[0]);
        return sampleTexture(${s}, uv);
      }
    `:`
    float ${r}(int row, int col, int depth) {
      float texR = dot(vec2(row, col), vec2(${n[1]}, 1));
      float texC = float(depth);
      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${d}.0, ${h}.0);
      return sampleTexture(${s}, uv);
    }
  `;const f=ti(s);return e?`
    float ${r}(int row, int col, int depth) {
      // Explicitly use integer operations as dot() only works on floats.
      int stride0 = ${s}Shape[1] * ${s}Shape[2];
      int stride1 = ${s}Shape[2];
      int index = row * stride0 + col * stride1 + depth + ${f};
      vec2 uv = uvFromFlat(${s}TexShape[0], ${s}TexShape[1], index);
      return sampleTexture(${s}, uv);
    }
    `:`
      float ${r}(int row, int col, int depth) {
        // Explicitly use integer operations as dot() only works on floats.
        int index = row * ${o} + col * ${a} + depth + ${f};
        vec2 uv = uvFromFlat(${h}, ${d}, index);
        return sampleTexture(${s}, uv);
      }
  `}function O9(t,e){const n=t.name,s="get"+n.charAt(0).toUpperCase()+n.slice(1),r=Nn();if(e)return`
    vec4 ${s}(int b2, int b, int row, int col) {
      int valuesPerRow = int(ceil(float(${n}Shape[3]) / 2.0));
      int texelsInBatch = valuesPerRow * int(ceil(float(${n}Shape[2]) / 2.0));
      int index = b * texelsInBatch + (row / 2) * valuesPerRow + (col / 2);
      texelsInBatch *= ${n}Shape[1];
      index = b2 * texelsInBatch + index;
      ivec2 packedTexShape = ivec2(ceil(float(${n}TexShape[0]) / 2.0), ceil(float(${n}TexShape[1]) / 2.0));
      int texR = index / packedTexShape[1];
      int texC = index - texR * packedTexShape[1];
      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(packedTexShape[1], packedTexShape[0]); return ${r.texture2D}(${n}, uv);
    }
  `;const o=t.shapeInfo.logicalShape,a=o.length,i=t.shapeInfo.texShape,l=[Math.ceil(i[0]/2),Math.ceil(i[1]/2)],u=l[0],c=l[1],h=Math.ceil(o[a-1]/2);let d=h*Math.ceil(o[a-2]/2),p="int b, int row, int col",f=`b * ${d} + (row / 2) * ${h} + (col / 2)`;for(let m=2;m<a-1;m++)p=`int b${m}, `+p,d*=o[a-m-1],f=`b${m} * ${d} + `+f;return`
    vec4 ${s}(${p}) {
      int index = ${f};
      int texR = index / ${c};
      int texC = index - texR * ${c};
      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${c}, ${u});
      return ${r.texture2D}(${n}, uv);
    }
  `}function F9(t,e){const n=t.shapeInfo.logicalShape,s=t.name,r="get"+s.charAt(0).toUpperCase()+s.slice(1),o=n[3],a=n[2]*o,i=n[1]*a,{newShape:l,keptDims:u}=jo(n);if(l.length<n.length){const x=Tl(t,l),w=["row","col","depth","depth2"];return`
      ${Nl(x,e)}
      float ${r}(int row, int col, int depth, int depth2) {
        return ${r}(${El(w,u)});
      }
    `}if(t.shapeInfo.isUniform)return`
      float ${r}(int row, int col, int depth, int depth2) {
        int index = round(dot(vec4(row, col, depth, depth2),
                          vec4(${i}, ${a}, ${o}, 1)));
        ${Il(t)}
      }
    `;const c=t.shapeInfo.flatOffset,h=t.shapeInfo.texShape,d=h[0],p=h[1],f=`int stride2 = ${s}Shape[3];`,m=`int stride1 = ${s}Shape[2] * stride2;`,y=`int stride0 = ${s}Shape[1] * stride1;`;if(p===i&&c==null)return e?`
      float ${r}(int row, int col, int depth, int depth2) {
        ${f}
        ${m}
        float texR = float(row);
        float texC =
            dot(vec3(col, depth, depth2),
                vec3(stride1, stride2, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${s}TexShape[1], ${s}TexShape[0]);
        return sampleTexture(${s}, uv);
      }
    `:`
      float ${r}(int row, int col, int depth, int depth2) {
        float texR = float(row);
        float texC =
            dot(vec3(col, depth, depth2),
                vec3(${a}, ${o}, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${p}.0, ${d}.0);
        return sampleTexture(${s}, uv);
      }
    `;if(p===o&&c==null)return e?`
      float ${r}(int row, int col, int depth, int depth2) {
        float texR = dot(vec3(row, col, depth),
                         vec3(${s}Shape[1] * ${s}Shape[2], ${s}Shape[2], 1));
        float texC = float(depth2);
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${s}TexShape[1], ${s}TexShape[0]);
        return sampleTexture(${s}, uv);
      }
    `:`
      float ${r}(int row, int col, int depth, int depth2) {
        float texR = dot(vec3(row, col, depth),
                         vec3(${n[1]*n[2]}, ${n[2]}, 1));
        float texC = float(depth2);
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${p}.0, ${d}.0);
        return sampleTexture(${s}, uv);
      }
    `;const g=ti(s);return e?`
    float ${r}(int row, int col, int depth, int depth2) {
      // Explicitly use integer operations as dot() only works on floats.
      ${f}
      ${m}
      ${y}
      int index = row * stride0 + col * stride1 +
          depth * stride2 + depth2;
      vec2 uv = uvFromFlat(${s}TexShape[0], ${s}TexShape[1], index + ${g});
      return sampleTexture(${s}, uv);
    }
  `:`
    float ${r}(int row, int col, int depth, int depth2) {
      // Explicitly use integer operations as dot() only works on floats.
      int index = row * ${i} + col * ${a} +
          depth * ${o} + depth2;
      vec2 uv = uvFromFlat(${d}, ${p}, index + ${g});
      return sampleTexture(${s}, uv);
    }
  `}function L9(t){const e=t.shapeInfo.logicalShape,n=t.name,s="get"+n.charAt(0).toUpperCase()+n.slice(1),r=e[4],o=e[3]*r,a=e[2]*o,i=e[1]*a,{newShape:l,keptDims:u}=jo(e);if(l.length<e.length){const m=Tl(t,l),y=["row","col","depth","depth2","depth3"];return`
      ${Nl(m)}
      float ${s}(int row, int col, int depth, int depth2, int depth3) {
        return ${s}(${El(y,u)});
      }
    `}if(t.shapeInfo.isUniform)return`
      float ${s}(int row, int col, int depth, int depth2, int depth3) {
        float index = dot(
          vec4(row, col, depth, depth2),
          vec4(${i}, ${a}, ${o}, ${r})) +
          depth3;
        ${Il(t)}
      }
    `;const c=t.shapeInfo.flatOffset,h=t.shapeInfo.texShape,d=h[0],p=h[1];if(p===i&&c==null)return`
      float ${s}(int row, int col, int depth, int depth2, int depth3) {
        int texR = row;
        float texC = dot(vec4(col, depth, depth2, depth3),
                         vec4(${a}, ${o}, ${r}, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${p}.0, ${d}.0);
        return sampleTexture(${n}, uv);
      }
    `;if(p===r&&c==null)return`
      float ${s}(int row, int col, int depth, int depth2, int depth3) {
        float texR = dot(
          vec4(row, col, depth, depth2),
          vec4(${e[1]*e[2]*e[3]},
               ${e[2]*e[3]}, ${e[3]}, 1));
        int texC = depth3;
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${p}.0, ${d}.0);
        return sampleTexture(${n}, uv);
      }
    `;const f=ti(n);return`
    float ${s}(int row, int col, int depth, int depth2, int depth3) {
      // Explicitly use integer operations as dot() only works on floats.
      int index = row * ${i} + col * ${a} + depth * ${o} +
          depth2 * ${r} + depth3 + ${f};
      vec2 uv = uvFromFlat(${d}, ${p}, index);
      return sampleTexture(${n}, uv);
    }
  `}function P9(t){const e=t.shapeInfo.logicalShape,n=t.name,s="get"+n.charAt(0).toUpperCase()+n.slice(1),{newShape:r,keptDims:o}=jo(e);if(r.length<e.length){const y=Tl(t,r),g=["row","col","depth","depth2","depth3","depth4"];return`
      ${Nl(y)}
      float ${s}(int row, int col, int depth,
                    int depth2, int depth3, int depth4) {
        return ${s}(${El(g,o)});
      }
    `}const a=e[5],i=e[4]*a,l=e[3]*i,u=e[2]*l,c=e[1]*u;if(t.shapeInfo.isUniform)return`
      float ${s}(int row, int col, int depth,
                  int depth2, int depth3, int depth4) {
        int index = round(dot(
          vec4(row, col, depth, depth2),
          vec4(${c}, ${u}, ${l}, ${i})) +
          dot(
            vec2(depth3, depth4),
            vec2(${a}, 1)));
        ${Il(t)}
      }
    `;const h=t.shapeInfo.flatOffset,d=t.shapeInfo.texShape,p=d[0],f=d[1];if(f===c&&h==null)return`
      float ${s}(int row, int col, int depth,
                    int depth2, int depth3, int depth4) {
        int texR = row;
        float texC = dot(vec4(col, depth, depth2, depth3),
          vec4(${u}, ${l}, ${i}, ${a})) +
               float(depth4);
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${f}.0, ${p}.0);
        return sampleTexture(${n}, uv);
      }
    `;if(f===a&&h==null)return`
      float ${s}(int row, int col, int depth,
                    int depth2, int depth3, int depth4) {
        float texR = dot(vec4(row, col, depth, depth2),
          vec4(${e[1]*e[2]*e[3]*e[4]},
               ${e[2]*e[3]*e[4]},
               ${e[3]*e[4]},
               ${e[4]})) + float(depth3);
        int texC = depth4;
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${f}.0, ${p}.0);
        return sampleTexture(${n}, uv);
      }
    `;const m=ti(n);return`
    float ${s}(int row, int col, int depth,
                  int depth2, int depth3, int depth4) {
      // Explicitly use integer operations as dot() only works on floats.
      int index = row * ${c} + col * ${u} + depth * ${l} +
          depth2 * ${i} + depth3 * ${a} + depth4 + ${m};
      vec2 uv = uvFromFlat(${p}, ${f}, index);
      return sampleTexture(${n}, uv);
    }
  `}function Il(t){const e=t.name,n=K(t.shapeInfo.logicalShape);return n<2?`return ${e};`:`
    for (int i = 0; i < ${n}; i++) {
      if (i == index) {
        return ${e}[i];
      }
    }
  `}function z9(t,e){const n=t.name,s=n.charAt(0).toUpperCase()+n.slice(1),r="get"+s+"AtOutCoords",o=t.shapeInfo.logicalShape.length,a=e.logicalShape.length,i=SD(t.shapeInfo.logicalShape,e.logicalShape),l=Ye(a),u=a-o;let c;const h=["x","y","z","w","u","v"];o===0?c="":a<2&&i.length>=1?c="coords = 0;":c=i.map(x=>`coords.${h[x+u]} = 0;`).join(`
`);let d="";a<2&&o>0?d="coords":d=t.shapeInfo.logicalShape.map((x,w)=>`coords.${h[w+u]}`).join(", ");let p="return outputValue;";const m=K(t.shapeInfo.logicalShape)===1,g=K(e.logicalShape)===1;if(o===1&&!m&&!g)p=`
      return vec4(outputValue.xy, outputValue.xy);
    `;else if(m&&!g)a===1?p=`
        return vec4(outputValue.x, outputValue.x, 0., 0.);
      `:p=`
        return vec4(outputValue.x);
      `;else if(i.length){const x=o-2,w=o-1;i.indexOf(x)>-1&&i.indexOf(w)>-1?p="return vec4(outputValue.x);":i.indexOf(x)>-1?p="return vec4(outputValue.x, outputValue.y, outputValue.x, outputValue.y);":i.indexOf(w)>-1&&(p="return vec4(outputValue.xx, outputValue.zz);")}return`
    vec4 ${r}() {
      ${l} coords = getOutputCoords();
      ${c}
      vec4 outputValue = get${s}(${d});
      ${p}
    }
  `}function M9(t,e){const n=t.name,s=n.charAt(0).toUpperCase()+n.slice(1),r="get"+s+"AtOutCoords",o=e.texShape,a=t.shapeInfo.texShape,i=t.shapeInfo.logicalShape.length,l=e.logicalShape.length;if(!t.shapeInfo.isUniform&&i===l&&t.shapeInfo.flatOffset==null&&Me(a,o))return`
      float ${r}() {
        return sampleTexture(${n}, resultUV);
      }
    `;const u=Ye(l),c=SD(t.shapeInfo.logicalShape,e.logicalShape),h=l-i;let d;const p=["x","y","z","w","u","v"];i===0?d="":l<2&&c.length>=1?d="coords = 0;":d=c.map(m=>`coords.${p[m+h]} = 0;`).join(`
`);let f="";return l<2&&i>0?f="coords":f=t.shapeInfo.logicalShape.map((m,y)=>`coords.${p[y+h]}`).join(", "),`
    float ${r}() {
      ${u} coords = getOutputCoords();
      ${d}
      return get${s}(${f});
    }
  `}function Ye(t){if(t<=1)return"int";if(t===2)return"ivec2";if(t===3)return"ivec3";if(t===4)return"ivec4";if(t===5)return"ivec5";if(t===6)return"ivec6";throw Error(`GPU for rank ${t} is not yet supported`)}function Ew(t,e,n){const{newShape:s,keptDims:r}=jo(e),o=e.length,a=t&&o===3&&e[0]===1,i=a?e.slice(1):s,l=!t&&o>1&&!Me(e,n)&&s.length<o||a;return{useSqueezeShape:l,uniformShape:l?i:e,keptDims:r}}function Tl(t,e){const n=JSON.parse(JSON.stringify(t));return n.shapeInfo.logicalShape=e,n}function El(t,e){return e.map(n=>t[n]).join(", ")}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function B9(t,e,n,s){const r=n.map((c,h)=>{const d={logicalShape:c.shape,texShape:c.isUniform?null:c.texData.texShape,isUniform:c.isUniform,isPacked:c.isUniform?!1:c.texData.isPacked,flatOffset:null};return c.texData!=null&&c.texData.slice!=null&&c.texData.slice.flatOffset>0&&(d.flatOffset=c.texData.slice.flatOffset),{name:e.variableNames[h],shapeInfo:d}}),o=r.map(c=>c.shapeInfo),a={logicalShape:s.shape,texShape:s.texData.texShape,isUniform:!1,isPacked:s.texData.isPacked,flatOffset:null},i=r9(r,a,e),l=_7(t.gl,i),u=t.createProgram(l);return G().get("ENGINE_COMPILE_ONLY")?{program:e,fragmentShader:l,source:i,webGLProgram:u,inShapeInfos:o,outShapeInfo:a,variablesLocations:null,customUniformLocations:null,infLoc:null,nanLoc:null,outShapeLocation:null,outShapeStridesLocation:null,outTexShapeLocation:null}:(t.buildVao(u),Object.assign({program:e,fragmentShader:l,source:i,webGLProgram:u,inShapeInfos:o,outShapeInfo:a},CD(t,e,u)))}function CD(t,e,n){const s=[],r=[];let o,a,i,l=null,u=null;u=t.getUniformLocation(n,"NAN",!1),G().getNumber("WEBGL_VERSION")===1&&(l=t.getUniformLocation(n,"INFINITY",!1));const c=!1;for(const h of e.variableNames){const d={name:h,uniform:t.getUniformLocation(n,h,c),offset:t.getUniformLocation(n,`offset${h}`,c)};e.enableShapeUniforms&&(d.shape=t.getUniformLocation(n,`${h}Shape`,c),d.texShape=t.getUniformLocation(n,`${h}TexShape`,c)),s.push(d)}if(e.enableShapeUniforms&&(o=t.getUniformLocation(n,"outShape",c),i=t.getUniformLocation(n,"outShapeStrides",c),a=t.getUniformLocation(n,"outTexShape",c)),e.customUniforms)for(const h of e.customUniforms)r.push(t.getUniformLocation(n,h.name,c));return{variablesLocations:s,customUniformLocations:r,infLoc:l,nanLoc:u,outShapeLocation:o,outShapeStridesLocation:i,outTexShapeLocation:a}}function uk(t,e){if(t.length!==e.length)throw Error(`Binary was compiled with ${t.length} inputs, but was executed with ${e.length} inputs`);t.forEach((n,s)=>{const r=n.logicalShape,o=e[s],a=o.shape;if(!Me(r,a))throw Error(`Binary was compiled with different shapes than the current args. Shapes ${r} and ${a} must match`);if(n.isUniform&&o.isUniform)return;const i=n.texShape,l=o.isUniform?null:o.texData.texShape;if(!Me(i,l))throw Error(`Binary was compiled with different texture shapes than the current args. Shape ${i} and ${l} must match`)})}function V9(t,e,n,s,r){e.program.enableShapeUniforms||(uk(e.inShapeInfos,n),uk([e.outShapeInfo],[s]));const o=s.texData.texture,a=s.texData.texShape;s.texData.isPacked?t.setOutputPackedMatrixTexture(o.texture,a[0],a[1]):t.setOutputMatrixTexture(o.texture,a[0],a[1]),t.setProgram(e.webGLProgram),t.bindVertexArray(e.webGLProgram.vao),G().getNumber("WEBGL_VERSION")===1&&e.infLoc!==null&&t.gl.uniform1f(e.infLoc,1/0),e.nanLoc!==null&&t.gl.uniform1f(e.nanLoc,NaN);for(let l=0;l<n.length;++l){const u=n[l],{uniform:c,offset:h,shape:d,texShape:p}=e.variablesLocations[l];if(d){const{uniformShape:f}=Ew(e.program.packedInputs,u.shape,u.texData.texShape);switch(f.length){case 1:t.gl.uniform1iv(d,new Int32Array(f));break;case 2:t.gl.uniform2iv(d,new Int32Array(f));break;case 3:t.gl.uniform3iv(d,new Int32Array(f));break;case 4:t.gl.uniform4iv(d,new Int32Array(f));break}}if(p&&t.gl.uniform2i(p,u.texData.texShape[0],u.texData.texShape[1]),c!=null){if(u.isUniform){if(K(u.shape)<2)t.gl.uniform1f(c,u.uniformValues[0]);else{let f=u.uniformValues;f instanceof Float32Array||(f=new Float32Array(f)),t.gl.uniform1fv(c,f)}continue}u.texData.slice!=null&&h!=null&&t.gl.uniform1i(h,u.texData.slice.flatOffset),t.setInputMatrixTexture(u.texData.texture.texture,c,l)}}const i=e.outShapeLocation;if(i)switch(s.shape.length){case 1:t.gl.uniform1iv(i,new Int32Array(s.shape));break;case 2:t.gl.uniform2iv(i,new Int32Array(s.shape));break;case 3:t.gl.uniform3iv(i,new Int32Array(s.shape));break;case 4:t.gl.uniform4iv(i,new Int32Array(s.shape));break}if(e.outShapeStridesLocation){const l=ve(s.shape);switch(s.shape.length){case 2:t.gl.uniform1iv(e.outShapeStridesLocation,new Int32Array(l));break;case 3:t.gl.uniform2iv(e.outShapeStridesLocation,new Int32Array(l));break;case 4:t.gl.uniform3iv(e.outShapeStridesLocation,new Int32Array(l));break}}if(e.outTexShapeLocation&&t.gl.uniform2i(e.outTexShapeLocation,s.texData.texShape[0],s.texData.texShape[1]),e.program.customUniforms&&r)for(let l=0;l<e.program.customUniforms.length;++l){const u=e.program.customUniforms[l],c=e.customUniformLocations[l],h=r[l];if(u.type==="float")t.gl.uniform1fv(c,h);else if(u.type==="vec2")t.gl.uniform2fv(c,h);else if(u.type==="vec3")t.gl.uniform3fv(c,h);else if(u.type==="vec4")t.gl.uniform4fv(c,h);else if(u.type==="int")t.gl.uniform1iv(c,h);else if(u.type==="ivec2")t.gl.uniform2iv(c,h);else if(u.type==="ivec3")t.gl.uniform3iv(c,h);else if(u.type==="ivec4")t.gl.uniform4iv(c,h);else throw Error(`uniform type ${u.type} is not supported yet.`)}t.executeProgram()}function W9(t,e,n){let s="";e.concat(n).forEach(a=>{const i=a.texData!=null&&a.texData.slice!=null&&a.texData.slice.flatOffset>0;if(t.enableShapeUniforms&&!a.isUniform){const l=a.texData.texShape,{useSqueezeShape:u,uniformShape:c,keptDims:h}=Ew(t.packedInputs,a.shape,l);let d="",p="",f="";if(c.length===1&&t.packedInputs){const v=[Math.ceil(l[0]/2),Math.ceil(l[1]/2)];d=`${v[0]>1}_${v[1]>1}`}else if(c.length===2&&!t.packedInputs)p=`${c[0]>1}_${c[1]>1}`;else if(c.length>2&&!t.packedInputs){const v=ve(c);f=`${v[0]===l[1]}_${v[v.length-1]===l[1]}`}const m=a.shape.length,y=c.length===2&&Me(a.shape,l),g=K(a.shape)===1,x=nl(a.shape,n.shape),w=!t.packedInputs&&m===n.shape.length&&Me(l,n.texData.texShape),b=t.packedInputs||c.length>2?"":`${l[0]>1}_${l[1]>1}`;s+=`${m}_${w}_${u?h:""}_${c.length}_${g}_${x}_${y}_${d}_${p}_${f}_${b}_${i}`}else{const l=a.isUniform?"uniform":a.texData.texShape;s+=`${a.shape}_${l}_${i}`}});const r=t.userCode;let o=t.constructor.name;return o+="_"+s+"_"+r+`${G().getNumber("WEBGL_VERSION")}`,o}function pn(t){return G().getBool("WEBGL_USE_SHAPES_UNIFORMS")&&t<=4}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class U9{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outPackingScheme=Wu.DENSE,this.customUniforms=[{name:"texShape",type:"ivec2"}];const n=Nn();this.outputShape=e,this.enableShapeUniforms=pn(this.outputShape.length),this.userCode=`
      ivec3 outCoordsFromFlatIndex(int index) {
        ${this.enableShapeUniforms?Cm(["r","c","d"],e):ei(["r","c","d"],e)}
        return ivec3(r, c, d);
      }

      void main() {
        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));
        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);

        vec4 result = vec4(0.);

        for (int i=0; i<4; i++) {
          int flatIndex = index + i;
          ivec3 rc = outCoordsFromFlatIndex(flatIndex);
          result[i] = getA(rc.x, rc.y, rc.z);
        }

        ${n.output} = result;
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class G9{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outPackingScheme=Wu.DENSE,this.customUniforms=[{name:"texShape",type:"ivec2"}];const n=Nn();this.outputShape=e,this.enableShapeUniforms=pn(this.outputShape.length),this.userCode=`
      ivec3 outCoordsFromFlatIndex(int index) {
        ${this.enableShapeUniforms?Cm(["r","c","d"],e):ei(["r","c","d"],e)}
        return ivec3(r, c, d);
      }

      void main() {
        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));
        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);

        vec4 result = vec4(0.);

        for (int i=0; i<4; i++) {
          int flatIndex = index + i;
          ivec3 rc = outCoordsFromFlatIndex(flatIndex);
          result[i] = getChannel(getA(rc.x, rc.y, rc.z), vec2(rc.y, rc.z));
        }

        ${n.output} = result;
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class H9{constructor(e){this.variableNames=["A"],this.outTexUsage=as.DOWNLOAD;const n=Nn();this.outputShape=e,this.userCode=`
      ${vD}

      void main() {
        float x = getAAtOutCoords();
        ${n.output} = encode_float(x);
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class j9{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outTexUsage=as.DOWNLOAD;const n=Nn();this.outputShape=e,this.userCode=`
      ${vD}

      void main() {
        ivec3 coords = getOutputCoords();
        float x = getChannel(getAAtOutCoords(), vec2(coords.y, coords.z));
        ${n.output} = encode_float(x);
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const K9={R:0,G:1,B:2,A:3};class ck{constructor(e,n=!1,s="RGBA"){this.variableNames=["A"],this.customUniforms=[{name:"texShape",type:"ivec2"}];const r=Nn();this.outputShape=e,this.enableShapeUniforms=pn(this.outputShape.length);let o="result";n&&(o="floor(result * 255. + 0.5)");let a="";for(let i=0;i<s.length;i++){const l=s[i];a+=`
          if(offset == ${i}) {
            result = values[${K9[l]}];
          }`}this.userCode=`
      ${this.enableShapeUniforms?Tw():Iw(e)}

      void main() {
        ivec3 coords = getOutputCoords();
        int flatIndex = getFlatIndex(coords);
        float result = 0.;
        int offset = imod(flatIndex, ${s.length});

        flatIndex = idiv(flatIndex, ${s.length}, 1.);

        int r = flatIndex / texShape[1];
        if (r < texShape[0]) {
          int c = imod(flatIndex, texShape[1]);
          vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);
          vec4 values = ${r.texture2D}(A, uv);
          ${a}
        }
        ${r.output} = vec4(${o}, 0., 0., 0.);
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class q9{constructor(e,n=!1){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.customUniforms=[{name:"texShape",type:"ivec2"}];const s=Nn();this.outputShape=e,this.enableShapeUniforms=pn(this.outputShape.length);let r="",o="result";n&&(o="floor(result * 255. + 0.5)");for(let a=0;a<=1;a++)for(let i=0;i<=1;i++){const l=a*2+i;r+=`
          localCoords = coords;
          if(localCoords[2] + ${i} < ${this.enableShapeUniforms?"outShape[2]":`${e[2]}`}) {
          localCoords[2] += ${i};
          if (localCoords[1] + ${a} < ${this.enableShapeUniforms?"outShape[1]":`${e[1]}`}) {
            localCoords[1] += ${a};

            flatIndex = getFlatIndex(localCoords);
            offset = imod(flatIndex, 4);

            flatIndex = idiv(flatIndex, 4, 1.);

            int r = flatIndex / texShape[1];
            int c = imod(flatIndex, texShape[1]);
            vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);
            values = ${s.texture2D}(A, uv);

            if (offset == 0) {
              result[${l}] = values[0];
            } else if (offset == 1) {
              result[${l}] = values[1];
            } else if (offset == 2) {
              result[${l}] = values[2];
            } else {
              result[${l}] = values[3];
            }
          }
        }
        `}this.userCode=`
        ${this.enableShapeUniforms?Tw():Iw(e)}

        void main() {
          ivec3 coords = getOutputCoords();

          vec4 result = vec4(0.);
          int flatIndex, r, c, offset;
          ivec3 localCoords;
          vec2 uv;
          vec4 values;

          ${r}

          ${s.output} = ${o};
        }
    `}}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function X9(t){const e=Nn(),n=`${e.version}
    precision highp float;
    ${e.attribute} vec3 clipSpacePos;
    ${e.attribute} vec2 uv;
    ${e.varyingVs} vec2 resultUV;

    void main() {
      gl_Position = vec4(clipSpacePos, 1);
      resultUV = uv;
    }`;return A7(t,n)}function Y9(t){const e=new Float32Array([-1,1,0,0,1,-1,-1,0,0,0,1,1,0,1,1,1,-1,0,1,0]);return P7(t,e)}function Q9(t){const e=new Uint16Array([0,1,2,2,1,3]);return z7(t,e)}function mh(t,e,n,s,r,o){B7(e,n);const a=M7(t),i=t.TEXTURE_2D;return de(t,()=>t.bindTexture(i,a)),de(t,()=>t.texParameteri(i,t.TEXTURE_WRAP_S,t.CLAMP_TO_EDGE)),de(t,()=>t.texParameteri(i,t.TEXTURE_WRAP_T,t.CLAMP_TO_EDGE)),de(t,()=>t.texParameteri(i,t.TEXTURE_MIN_FILTER,t.NEAREST)),de(t,()=>t.texParameteri(i,t.TEXTURE_MAG_FILTER,t.NEAREST)),G().getNumber("WEBGL_VERSION")===1?de(t,()=>t.texImage2D(i,0,s,e,n,0,r,o,null)):de(t,()=>t.texStorage2D(i,1,s,e,n)),de(t,()=>t.bindTexture(t.TEXTURE_2D,null)),{texture:a,texShape:[n,e]}}function ND(t){return t.internalFormatFloat}function Z9(t,e,n,s){const[r,o]=ph(e,n);return mh(t,r,o,ND(s),s.textureFormatFloat,t.FLOAT)}function ID(t){return t.internalFormatHalfFloat}function J9(t,e,n,s){const[r,o]=ph(e,n);return mh(t,r,o,ID(s),s.textureFormatFloat,s.textureTypeHalfFloat)}function TD(t){return t.downloadTextureFormat}function eY(t,e,n,s){const[r,o]=ph(e,n);return mh(t,r,o,TD(s),t.RGBA,t.UNSIGNED_BYTE)}function ED(t){return t.internalFormatPackedFloat}function tY(t,e,n,s){const[r,o]=Cl(e,n);return mh(t,r,o,ED(s),t.RGBA,t.FLOAT)}function RD(t){return t.internalFormatPackedHalfFloat}function nY(t,e,n,s){const[r,o]=Cl(e,n);return mh(t,r,o,RD(s),t.RGBA,s.textureTypeHalfFloat)}function sY(t,e,n){return de(t,()=>t.bindBuffer(t.ARRAY_BUFFER,n)),ak(t,e,"clipSpacePos",n,3,20,0)&&ak(t,e,"uv",n,2,20,12)}function rY(t,e,n,s,r,o){de(t,()=>t.bindTexture(t.TEXTURE_2D,e));let a,i,l;r instanceof Uint8Array?(a=new Uint8Array(n*s*4),i=t.UNSIGNED_BYTE,l=t.RGBA):(a=new Float32Array(n*s*4),i=t.FLOAT,l=o.internalFormatPackedFloat),a.set(r),G().getNumber("WEBGL_VERSION")===2?de(t,()=>t.texSubImage2D(t.TEXTURE_2D,0,0,0,n,s,t.RGBA,i,a)):de(t,()=>t.texImage2D(t.TEXTURE_2D,0,l,n,s,0,t.RGBA,i,a)),de(t,()=>t.bindTexture(t.TEXTURE_2D,null))}function oY(t,e,n){de(t,()=>t.bindTexture(t.TEXTURE_2D,e)),n.data instanceof Uint8Array?G().getNumber("WEBGL_VERSION")===2?de(t,()=>t.texSubImage2D(t.TEXTURE_2D,0,0,0,n.width,n.height,t.RGBA,t.UNSIGNED_BYTE,n.data)):de(t,()=>t.texImage2D(t.TEXTURE_2D,0,t.RGBA,n.width,n.height,0,t.RGBA,t.UNSIGNED_BYTE,n.data)):G().getNumber("WEBGL_VERSION")===2?de(t,()=>t.texSubImage2D(t.TEXTURE_2D,0,0,0,t.RGBA,t.UNSIGNED_BYTE,n)):de(t,()=>t.texImage2D(t.TEXTURE_2D,0,t.RGBA,t.RGBA,t.UNSIGNED_BYTE,n)),de(t,()=>t.bindTexture(t.TEXTURE_2D,null))}function aY(t,e,n,s){const r=t.createBuffer();de(t,()=>t.bindBuffer(t.PIXEL_PACK_BUFFER,r));const i=4*4*e*n;return de(t,()=>t.bufferData(t.PIXEL_PACK_BUFFER,i,t.STREAM_READ)),de(t,()=>t.readPixels(0,0,n,e,t.RGBA,t.FLOAT,0)),de(t,()=>t.bindBuffer(t.PIXEL_PACK_BUFFER,null)),r}function iY(t,e,n){const s=t,r=new Float32Array(n);return s.bindBuffer(s.PIXEL_PACK_BUFFER,e),s.getBufferSubData(s.PIXEL_PACK_BUFFER,0,r),s.bindBuffer(s.PIXEL_PACK_BUFFER,null),r}function lY(t,e,n,s){const[r,o]=ph(e,n),a=4,i=new Uint8Array(C7(e*n,a));return de(t,()=>t.readPixels(0,0,r,o,s.downloadTextureFormat,t.UNSIGNED_BYTE,i)),new Float32Array(i.buffer)}function uY(t,e,n,s,r,o,a,i){const l=t,u=new Float32Array(N7(o,a));return l.bindBuffer(l.PIXEL_PACK_BUFFER,e),l.getBufferSubData(l.PIXEL_PACK_BUFFER,0,u),l.bindBuffer(l.PIXEL_PACK_BUFFER,null),u}function cY(t,e,n){const s=new Float32Array(e*n*4);return de(t,()=>t.readPixels(0,0,n,e,t.RGBA,t.FLOAT,s)),s}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Sg{constructor(e){this.outputTexture=null,this.program=null,this.disposed=!1,this.itemsToPoll=[];const n=G().getNumber("WEBGL_VERSION");if(e!=null?(this.gl=e,S7(n,e)):this.gl=lr(n),e=this.gl,G().getNumber("WEBGL_VERSION")===2){const o=e;this.createVertexArray=()=>de(o,()=>o.createVertexArray()),this.bindVertexArray=a=>de(o,()=>o.bindVertexArray(a)),this.deleteVertexArray=a=>de(o,()=>o.deleteVertexArray(a)),this.getVertexArray=()=>de(o,()=>o.getParameter(o.VERTEX_ARRAY_BINDING))}else if(e!=null){const o=e.getExtension("OES_vertex_array_object");if(o==null)throw new Error("All WebGL1 implementations are expected to offer OES_vertex_array_object.");this.createVertexArray=()=>de(e,()=>o.createVertexArrayOES()),this.bindVertexArray=a=>de(e,()=>o.bindVertexArrayOES(a)),this.deleteVertexArray=a=>de(e,()=>o.deleteVertexArrayOES(a)),this.getVertexArray=()=>de(e,()=>e.getParameter(o.VERTEX_ARRAY_BINDING_OES))}let s="WEBGL_color_buffer_float";const r="EXT_color_buffer_half_float";if(this.parallelCompilationExtension=this.gl.getExtension("KHR_parallel_shader_compile"),G().getNumber("WEBGL_VERSION")===1){const o="OES_texture_float",a="OES_texture_half_float";if(this.textureFloatExtension=Hh(this.gl,o),As(this.gl,a))this.textureHalfFloatExtension=Hh(this.gl,a);else if(G().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support half float textures, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.");if(this.colorBufferFloatExtension=this.gl.getExtension(s),As(this.gl,r))this.colorBufferHalfFloatExtension=Hh(this.gl,r);else if(G().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support color renderable half floats, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.")}else if(s="EXT_color_buffer_float",As(this.gl,s))this.colorBufferFloatExtension=this.gl.getExtension(s);else if(As(this.gl,r))this.colorBufferHalfFloatExtension=this.gl.getExtension(r);else throw new Error("GL context does not support color renderable floats");this.vertexBuffer=Y9(this.gl),this.indexBuffer=Q9(this.gl),this.framebuffer=V7(this.gl),this.textureConfig=Nw(this.gl,this.textureHalfFloatExtension)}get debug(){return G().getBool("DEBUG")}dispose(){if(this.disposed)return;this.program!=null&&console.warn("Disposing a GPGPUContext that still has a bound WebGLProgram. This is probably a resource leak, delete the program with GPGPUContext.deleteProgram before disposing."),this.outputTexture!=null&&console.warn("Disposing a GPGPUContext that still has a bound output matrix texture.  This is probably a resource leak, delete the output matrix texture with GPGPUContext.deleteMatrixTexture before disposing.");const e=this.gl;de(e,()=>e.finish()),de(e,()=>e.bindFramebuffer(e.FRAMEBUFFER,null)),de(e,()=>e.deleteFramebuffer(this.framebuffer)),de(e,()=>e.bindBuffer(e.ARRAY_BUFFER,null)),de(e,()=>e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,null)),de(e,()=>e.deleteBuffer(this.indexBuffer)),this.disposed=!0}createFloat32MatrixTexture(e,n){return this.throwIfDisposed(),Z9(this.gl,e,n,this.textureConfig)}createFloat16MatrixTexture(e,n){return this.throwIfDisposed(),J9(this.gl,e,n,this.textureConfig)}createUnsignedBytesMatrixTexture(e,n){return this.throwIfDisposed(),eY(this.gl,e,n,this.textureConfig)}uploadPixelDataToTexture(e,n){this.throwIfDisposed(),oY(this.gl,e,n)}uploadDenseMatrixToTexture(e,n,s,r){this.throwIfDisposed(),rY(this.gl,e,n,s,r,this.textureConfig)}createFloat16PackedMatrixTexture(e,n){return this.throwIfDisposed(),nY(this.gl,e,n,this.textureConfig)}createPackedMatrixTexture(e,n){return this.throwIfDisposed(),tY(this.gl,e,n,this.textureConfig)}deleteMatrixTexture(e){this.throwIfDisposed(),this.outputTexture===e&&(ik(this.gl,this.framebuffer),this.outputTexture=null),de(this.gl,()=>this.gl.deleteTexture(e))}downloadByteEncodedFloatMatrixFromOutputTexture(e,n,s){return this.downloadMatrixDriver(e,()=>lY(this.gl,n,s,this.textureConfig))}downloadPackedMatrixFromBuffer(e,n,s,r,o,a){return uY(this.gl,e,n,s,r,o,a,this.textureConfig)}downloadFloat32MatrixFromBuffer(e,n){return iY(this.gl,e,n)}createBufferFromTexture(e,n,s){this.bindTextureToFrameBuffer(e);const r=aY(this.gl,n,s,this.textureConfig);return this.unbindTextureToFrameBuffer(),r}createAndWaitForFence(){const e=this.createFence(this.gl);return this.pollFence(e)}createFence(e){let n,s;if(G().getBool("WEBGL_FENCE_API_ENABLED")){const r=e,o=r.fenceSync(r.SYNC_GPU_COMMANDS_COMPLETE,0);e.flush(),s=()=>{const a=r.clientWaitSync(o,0,0);return a===r.ALREADY_SIGNALED||a===r.CONDITION_SATISFIED},n=o}else G().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0?(n=this.beginQuery(),this.endQuery(),s=()=>this.isQueryAvailable(n,G().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))):s=()=>!0;return{query:n,isFencePassed:s}}downloadMatrixFromPackedTexture(e,n,s){return this.downloadMatrixDriver(e,()=>cY(this.gl,n,s))}createProgram(e){this.throwIfDisposed();const n=this.gl;this.vertexShader==null&&(this.vertexShader=X9(n));const s=F7(n);de(n,()=>n.attachShader(s,this.vertexShader)),de(n,()=>n.attachShader(s,e)),L7(n,s);const r=Object.assign(s,{vao:this.createVertexArray()});return this.debug&&xg(n,r),r}buildVao(e){this.setProgram(e),this.bindVertexArray(e.vao);const n=this.gl;de(n,()=>n.bindBuffer(n.ELEMENT_ARRAY_BUFFER,this.indexBuffer)),sY(n,e,this.vertexBuffer)}deleteProgram(e){this.throwIfDisposed(),e===this.program&&(this.program=null),e!=null&&(de(this.gl,()=>this.gl.deleteProgram(e)),this.deleteVertexArray(e.vao))}setProgram(e){this.throwIfDisposed(),this.program=e,this.program!=null&&this.debug&&xg(this.gl,this.program),de(this.gl,()=>this.gl.useProgram(e))}getUniformLocation(e,n,s=!0){return this.throwIfDisposed(),s?U7(this.gl,e,n):G7(this.gl,e,n)}getAttributeLocation(e,n){return this.throwIfDisposed(),de(this.gl,()=>this.gl.getAttribLocation(e,n))}getUniformLocationNoThrow(e,n){return this.throwIfDisposed(),this.gl.getUniformLocation(e,n)}setInputMatrixTexture(e,n,s){this.throwIfDisposed(),this.throwIfNoProgram(),H7(this.gl,e,n,s)}setOutputMatrixTexture(e,n,s){this.setOutputMatrixTextureDriver(e,s,n)}setOutputPackedMatrixTexture(e,n,s){this.throwIfDisposed();const[r,o]=Cl(n,s);this.setOutputMatrixTextureDriver(e,r,o)}setOutputMatrixWriteRegion(e,n,s,r){this.setOutputMatrixWriteRegionDriver(s,e,r,n)}setOutputPackedMatrixWriteRegion(e,n,s,r){throw new Error("setOutputPackedMatrixWriteRegion not implemented.")}debugValidate(){this.program!=null&&xg(this.gl,this.program),jh(this.gl)}executeProgram(){this.throwIfDisposed(),this.throwIfNoProgram();const e=this.gl;if(this.debug){const n=this.getVertexArray();console.assert(n===this.program.vao,"VAO changed between setProgram and executeProgram!"),this.debugValidate()}de(e,()=>e.drawElements(e.TRIANGLES,6,e.UNSIGNED_SHORT,0))}blockUntilAllProgramsCompleted(){this.throwIfDisposed(),de(this.gl,()=>this.gl.finish())}getQueryTimerExtension(){return this.disjointQueryTimerExtension==null&&(this.disjointQueryTimerExtension=Hh(this.gl,G().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")===2?"EXT_disjoint_timer_query_webgl2":"EXT_disjoint_timer_query")),this.disjointQueryTimerExtension}getQueryTimerExtensionWebGL2(){return this.getQueryTimerExtension()}getQueryTimerExtensionWebGL1(){return this.getQueryTimerExtension()}beginQuery(){if(G().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")===2){const s=this.gl,r=this.getQueryTimerExtensionWebGL2(),o=s.createQuery();return s.beginQuery(r.TIME_ELAPSED_EXT,o),o}const e=this.getQueryTimerExtensionWebGL1(),n=e.createQueryEXT();return e.beginQueryEXT(e.TIME_ELAPSED_EXT,n),n}endQuery(){if(G().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")===2){const n=this.gl,s=this.getQueryTimerExtensionWebGL2();n.endQuery(s.TIME_ELAPSED_EXT);return}const e=this.getQueryTimerExtensionWebGL1();e.endQueryEXT(e.TIME_ELAPSED_EXT)}async waitForQueryAndGetTime(e){return await jv(()=>this.disposed||this.isQueryAvailable(e,G().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))),this.getQueryTime(e,G().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))}getQueryTime(e,n){if(n===0)return null;if(n===2){const s=this.gl;return s.getQueryParameter(e,s.QUERY_RESULT)/1e6}else{const s=this.getQueryTimerExtensionWebGL1();return s.getQueryObjectEXT(e,s.QUERY_RESULT_EXT)/1e6}}isQueryAvailable(e,n){if(n===0)return!0;if(n===2){const s=this.gl,r=this.getQueryTimerExtensionWebGL2(),o=s.getQueryParameter(e,s.QUERY_RESULT_AVAILABLE);return this.disjoint==null&&(this.disjoint=this.gl.getParameter(r.GPU_DISJOINT_EXT)),o&&!this.disjoint}else{const s=this.getQueryTimerExtensionWebGL1(),r=s.getQueryObjectEXT(e,s.QUERY_RESULT_AVAILABLE_EXT);return this.disjoint==null&&(this.disjoint=this.gl.getParameter(s.GPU_DISJOINT_EXT)),r&&!this.disjoint}}pollFence(e){return new Promise(n=>{this.addItemToPoll(()=>e.isFencePassed(),()=>n())})}pollItems(){const e=hY(this.itemsToPoll.map(n=>n.isDoneFn));for(let n=0;n<=e;++n){const{resolveFn:s}=this.itemsToPoll[n];s()}this.itemsToPoll=this.itemsToPoll.slice(e+1)}addItemToPoll(e,n){if(this.itemsToPoll.push({isDoneFn:e,resolveFn:n}),this.itemsToPoll.length>1)return;let s;"setTimeoutCustom"in G().platform&&(s=G().platform.setTimeoutCustom.bind(G().platform)),jv(()=>(this.pollItems(),this.itemsToPoll.length===0),()=>0,null,s)}bindTextureToFrameBuffer(e){this.throwIfDisposed(),bg(this.gl,e,this.framebuffer),this.debug&&jh(this.gl)}unbindTextureToFrameBuffer(){this.outputTexture!=null?(bg(this.gl,this.outputTexture,this.framebuffer),this.debug&&jh(this.gl)):ik(this.gl,this.framebuffer)}downloadMatrixDriver(e,n){this.bindTextureToFrameBuffer(e);const s=n();return this.unbindTextureToFrameBuffer(),s}setOutputMatrixTextureDriver(e,n,s){this.throwIfDisposed();const r=this.gl;bg(r,e,this.framebuffer),this.debug&&jh(r),this.outputTexture=e,de(r,()=>r.viewport(0,0,n,s)),de(r,()=>r.scissor(0,0,n,s))}setOutputMatrixWriteRegionDriver(e,n,s,r){this.throwIfDisposed(),de(this.gl,()=>this.gl.scissor(e,n,s,r))}throwIfDisposed(){if(this.disposed)throw new Error("Attempted to use disposed GPGPUContext.")}throwIfNoProgram(){if(this.program==null)throw new Error("No GPU program is currently set.")}}function hY(t){let e=0;for(;e<t.length&&t[e]();++e);return e-1}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const{addImpl:dY,bincountImpl:DD,bincountReduceImpl:pY,bitwiseAndImpl:fY,castImpl:mY,ceilImpl:gY,concatImpl:yY,equalImpl:xY,expImpl:bY,expm1Impl:wY,floorImpl:vY,gatherNdImpl:SY,gatherV2Impl:kY,greaterImpl:$Y,greaterEqualImpl:CY,lessImpl:NY,lessEqualImpl:IY,linSpaceImpl:TY,logImpl:EY,maxImpl:RY,maximumImpl:DY,minimumImpl:AY,multiplyImpl:_Y,negImpl:OY,notEqualImpl:FY,prodImpl:LY,raggedGatherImpl:PY,raggedRangeImpl:zY,raggedTensorToTensorImpl:MY,rangeImpl:BY,rsqrtImpl:VY,scatterImpl:WY,sigmoidImpl:UY,simpleAbsImpl:AD,sliceImpl:GY,sparseFillEmptyRowsImpl:HY,sparseReshapeImpl:jY,sparseSegmentReductionImpl:_D,sqrtImpl:KY,staticRegexReplaceImpl:qY,stridedSliceImpl:XY,stringNGramsImpl:YY,stringSplitImpl:QY,stringToHashBucketFastImpl:ZY,subImpl:JY,tileImpl:eQ,topKImpl:tQ,transposeImpl:Rw,uniqueImpl:nQ}=o6;/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function OD(t,e){return["x","y","z","w","u","v"].slice(0,e).map(n=>`${t}.${n}`)}function vn(t,e){return e===1?[t]:OD(t,e)}function sQ(t,e){if(t===1)return"rc";let n="";for(let s=0;s<t;s++)n+=e[s],s<t-1&&(n+=",");return n}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class rQ{constructor(e){if(this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outputShape=e,this.rank=e.length,this.enableShapeUniforms=pn(this.outputShape.length),this.rank===0)this.userCode=`
        void main() {
          setOutput(vec4(getA(), 0., 0., 0.));
        }
      `;else{const n=vn("rc",this.rank),s=Ye(this.rank),r=this.getOutOfBoundsCondition(n),o=this.getSetup(n),a=this.getOutput(n);this.userCode=`
        void main() {
          ${s} rc = getOutputCoords();

          if(${r}) {
            setOutput(vec4(0));
          } else {
            ${o}

            setOutput(vec4(${a}));
          }
        }
      `}}getSourceCoordsArr(e){const n=[];for(let s=0;s<=1;s++)for(let r=0;r<=1;r++){let o=`${s===0?"r":"rp1"}, ${r===0?"c":"cp1"}`;for(let a=2;a<this.rank;a++)o=`${e[e.length-1-a]},`+o;n.push(o)}return n}getOutOfBoundsCondition(e){if(this.rank===1)return`rc > ${this.enableShapeUniforms?"outShape":this.outputShape[0]}`;let n="";for(let s=this.rank-2;s<this.rank;s++)n+=`${e[s]} >= ${this.enableShapeUniforms?`outShape[${s}]`:this.outputShape[s]}`,s<this.rank-1&&(n+="||");return n}getSetup(e){if(this.rank===1)return"";const n=e.slice(-2),s=this.enableShapeUniforms?`outShape[${this.rank} - 1]`:this.outputShape[this.rank-1],r=this.enableShapeUniforms?`outShape[${this.rank} - 2]`:this.outputShape[this.rank-2];return`
      int r = ${n[0]};
      int c = ${n[1]};
      int rp1 = r + 1;
      int cp1 = c + 1;

      bool cEdge = cp1 >= ${s};
      bool rEdge = rp1 >= ${r};
    `}getOutput(e){const n=this.getSourceCoordsArr(e);return this.rank===1?`getA(rc), (rc + 1 >= ${this.enableShapeUniforms?"outShape":this.outputShape[0]} ? 0. : getA(rc + 1)), 0, 0`:`getA(${n[0]}),
            cEdge ? 0. : getA(${n[1]}),
            rEdge ? 0. : getA(${n[2]}),
            rEdge || cEdge ? 0. : getA(${n[3]})`}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class FD{constructor(e,n){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"inputShape",type:"ivec3"}],this.outputShape=e,this.enableShapeUniforms=pn(this.outputShape.length);let s="";for(let r=0;r<4;r++){let o="thisRC = rc;";r%2===1&&(o+="thisRC.z += 1;"),r>1&&(o+="thisRC.y += 1;"),s+=`
        ${o}
        ${r>0?"if(thisRC.y < rows && thisRC.z < cols){":""}
          int flatIndex = getFlatIndex(thisRC);

          ivec3 inputRC = inputCoordsFromReshapedOutCoords(flatIndex);
          vec2 inputRCInnerDims = vec2(float(inputRC.y),float(inputRC.z));

          result[${r}] =
            getChannel(getA(inputRC.x, inputRC.y, inputRC.z), inputRCInnerDims);
        ${r>0?"}":""}
      `}this.userCode=`
      ${oQ(n,this.enableShapeUniforms)}
      ${this.enableShapeUniforms?Tw():Iw(e)}

      void main() {
        ivec3 rc = getOutputCoords();

        vec4 result = vec4(0.);

        ivec3 thisRC;
        int rows = ${this.enableShapeUniforms?"outShape[1]":e[1]};
        int cols = ${this.enableShapeUniforms?"outShape[2]":e[2]};

        ${s}

        setOutput(result);
      }
    `}}function oQ(t,e){return`
    ivec3 inputCoordsFromReshapedOutCoords(int index) {
      ${e?s9(["r","c","d"],"inputShape"):ei(["r","c","d"],t)}
      return ivec3(r, c, d);
    }
  `}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class aQ{constructor(e){this.gpgpu=e,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0,this.freeTextures={},this.usedTextures={},this.logEnabled=!1}acquireTexture(e,n,s){const r=dk(n,s),o=pk(e,r,s);o in this.freeTextures||(this.freeTextures[o]=[]),o in this.usedTextures||(this.usedTextures[o]=[]);const a=hk(e,r,this.gpgpu.gl,this.gpgpu.textureConfig,s);if(this.freeTextures[o].length>0){this.numFreeTextures--,this.numUsedTextures++,this._numBytesFree-=a,this.log();const l=this.freeTextures[o].pop();return this.usedTextures[o].push(l),l}let i;return r===Zt.PACKED_2X2_FLOAT32?i=this.gpgpu.createPackedMatrixTexture(e[0],e[1]):r===Zt.PACKED_2X2_FLOAT16?i=this.gpgpu.createFloat16PackedMatrixTexture(e[0],e[1]):r===Zt.UNPACKED_FLOAT32?i=this.gpgpu.createFloat32MatrixTexture(e[0],e[1]):r===Zt.UNPACKED_FLOAT16?i=this.gpgpu.createFloat16MatrixTexture(e[0],e[1]):r===Zt.PACKED_4X1_UNSIGNED_BYTE&&(i=this.gpgpu.createUnsignedBytesMatrixTexture(e[0],e[1])),this.usedTextures[o].push(i),this.numUsedTextures++,this._numBytesAllocated+=a,this.log(),i}releaseTexture(e,n,s,r){if(this.freeTextures==null)return;const o=dk(s,r),a=pk(n,o,r);a in this.freeTextures||(this.freeTextures[a]=[]);const i=hk(n,o,this.gpgpu.gl,this.gpgpu.textureConfig,r),l=G().get("WEBGL_DELETE_TEXTURE_THRESHOLD");l!==-1&&this._numBytesAllocated>l?(this.gpgpu.deleteMatrixTexture(e.texture),this._numBytesAllocated-=i):(this.freeTextures[a].push(e),this.numFreeTextures++,this._numBytesFree+=i),this.numUsedTextures--;const u=this.usedTextures[a],c=u&&u.indexOf(e);if(c==null||c<0)throw new Error("Cannot release a texture that was never provided by this texture manager");u[c]=u[u.length-1],u.pop(),this.log()}log(){if(!this.logEnabled)return;const e=this.numFreeTextures+this.numUsedTextures;console.log("Free/Used",`${this.numFreeTextures} / ${this.numUsedTextures}`,`(${e})`);const n=this._numBytesFree/this._numBytesAllocated;console.log(`Bytes allocated: ${this._numBytesAllocated}`),console.log(`Bytes unused: ${this._numBytesFree} (${Math.round(100*n)}%)`)}get numBytesAllocated(){return this._numBytesAllocated}get numBytesFree(){return this._numBytesFree}getNumUsedTextures(){return this.numUsedTextures}getNumFreeTextures(){return this.numFreeTextures}dispose(){if(this.freeTextures!=null){for(const e in this.freeTextures)this.freeTextures[e].forEach(n=>{this.gpgpu.deleteMatrixTexture(n.texture)});for(const e in this.usedTextures)this.usedTextures[e].forEach(n=>{this.gpgpu.deleteMatrixTexture(n.texture)});this.freeTextures=null,this.usedTextures=null,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0}}}function iQ(t,e){const n=t;if(e===n.R32F)return 4;if(e===n.R16F)return 2;if(e===n.RGBA32F)return 16;if(e===t.RGBA)return 16;if(e===n.RGBA16F)return 8;if(e===n.RGBA8)return 4;throw new Error(`Unknown internal format ${e}`)}function hk(t,e,n,s,r){const o=lQ(e,s);let a;if(r){const[l,u]=Cl(t[0],t[1]);a=l*u}else{const[l,u]=ph(t[0],t[1]);a=l*u}const i=iQ(n,o);return a*i}function lQ(t,e){switch(t){case Zt.PACKED_2X2_FLOAT32:return ED(e);case Zt.PACKED_2X2_FLOAT16:return RD(e);case Zt.UNPACKED_FLOAT32:return ND(e);case Zt.UNPACKED_FLOAT16:return ID(e);case Zt.PACKED_4X1_UNSIGNED_BYTE:return TD(e);default:throw new Error(`Unknown physical texture type ${t}`)}}function uQ(t){return G().getBool("WEBGL_RENDER_FLOAT32_ENABLED")?t?Zt.PACKED_2X2_FLOAT32:Zt.UNPACKED_FLOAT32:t?Zt.PACKED_2X2_FLOAT16:Zt.UNPACKED_FLOAT16}function dk(t,e){if(t===as.UPLOAD)return Zt.PACKED_2X2_FLOAT32;if(t===as.RENDER||t==null)return uQ(e);if(t===as.DOWNLOAD||t===as.PIXELS)return Zt.PACKED_4X1_UNSIGNED_BYTE;throw new Error(`Unknown logical texture type ${t}`)}function pk(t,e,n){return`${t[0]}_${t[1]}_${e}_${n}`}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Sr{constructor(e,n){this.variableNames=["A"],this.outputShape=e,this.enableShapeUniforms=pn(this.outputShape.length),this.userCode=`
      float unaryOperation(float x) {
        ${n}
      }

      void main() {
        float x = getAAtOutCoords();
        float y = unaryOperation(x);

        setOutput(y);
      }
    `}}const Gs="if (isnan(x)) return x;",cQ="return x;",fk="return abs(x);",hQ="return (x >= 0.0) ? x : (exp(x) - 1.0);",dQ=Gs+`
  return (x < 0.0) ? 0.0 : x;
`,pQ=Gs+`
  return (x < 0.0) ? 0.0 : min(6.0, x);
`,co="return x;",fQ="return 1.0 / (1.0 + exp(-1.0 * x));";/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const mQ="return x;",gQ=`
  vec4 result;

  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);
  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);
  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);
  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);

  return result;
`,yQ=`
  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,xQ=`
  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,bQ="return 1.0 / (1.0 + exp(-1.0 * x));";class xo{constructor(e,n){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.enableShapeUniforms=pn(this.outputShape.length),this.userCode=`
      vec4 unaryOperation(vec4 x) {
        ${n}
      }

      void main() {
        vec4 x = getAAtOutCoords();
        vec4 y = unaryOperation(x);

        setOutput(y);
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class wQ{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outputShape=e,this.enableShapeUniforms=pn(this.outputShape.length);const n=e.length,s=vn("rc",n),r=Ye(n),o=sQ(n,s),a=s.slice(-2),i=n<=1?"rc":`vec2(${a.join(",")})`;this.userCode=`
      void main() {
        ${r} rc = getOutputCoords();
        vec4 packedInput = getA(${o});

        setOutput(getChannel(packedInput, ${i}));
      }
    `}}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const vQ=pb,SQ=1e-7,kQ=1e-4,Xh={};function $Q(t){return t in Xh||(Xh[t]={}),Xh[t]}const CQ=G().getNumber("CPU_HANDOFF_SIZE_THRESHOLD"),NQ=600;function IQ(){return G().global.screen==null?1024:G().global.screen.height*G().global.screen.width*window.devicePixelRatio*NQ/1024/1024}class Nm extends b1{nextDataId(){return Nm.nextDataId++}constructor(e){if(super(),this.pendingRead=new WeakMap,this.pendingDisposal=new WeakSet,this.dataRefCount=new WeakMap,this.numBytesInGPU=0,this.uploadWaitMs=0,this.downloadWaitMs=0,this.lastGlFlushTime=0,this.warnedAboutMemory=!1,this.pendingDeletes=0,this.disposed=!1,!G().getBool("HAS_WEBGL"))throw new Error("WebGL is not supported on this device");let n;if(e!=null){if(e instanceof Sg)n=e;else{const s=lr(G().getNumber("WEBGL_VERSION"),e);n=new Sg(s)}this.binaryCache={},this.gpgpuCreatedLocally=!1}else{const s=lr(G().getNumber("WEBGL_VERSION"));n=new Sg(s),this.binaryCache=$Q(G().getNumber("WEBGL_VERSION")),this.gpgpuCreatedLocally=!0}this.gpgpu=n,this.canvas=this.gpgpu.gl.canvas,this.textureManager=new aQ(this.gpgpu),this.numMBBeforeWarning=IQ(),this.texData=new oN(this,mr())}numDataIds(){return this.texData.numDataIds()-this.pendingDeletes}writeTexture(e,n,s,r,o,a){const i=this.makeTensorInfo(n,s),l=this.texData.get(i.dataId);l.isPacked=!1,l.texture={texture:e,texShape:[r,o]},l.texShape=[r,o];const u=Kh(n),c=new ck(u,!1,a),h=this.runWebGLProgram(c,[i],s,[[r,o]]);return h.shape=n,l.texture=null,this.disposeIntermediateTensorInfo(i),h.dataId}write(e,n,s){if((G().getBool("WEBGL_CHECK_NUMERICAL_PROBLEMS")||G().getBool("DEBUG"))&&this.checkNumericalProblems(e),s==="complex64"&&e!=null)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");const r={id:this.nextDataId()};return this.texData.set(r,{shape:n,dtype:s,values:e,usage:as.UPLOAD,refCount:1}),r}refCount(e){return this.texData.has(e)?this.texData.get(e).refCount:0}incRef(e){const n=this.texData.get(e);n.refCount++}decRef(e){if(this.texData.has(e)){const n=this.texData.get(e);n.refCount--}}move(e,n,s,r,o){if(G().getBool("DEBUG")&&this.checkNumericalProblems(n),r==="complex64")throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");this.texData.set(e,{shape:s,dtype:r,values:n,usage:as.UPLOAD,refCount:o})}disposeIntermediateTensorInfo(e){this.disposeData(e.dataId)}readSync(e){const n=this.texData.get(e),{values:s,dtype:r,complexTensorInfos:o,slice:a,shape:i,isPacked:l}=n;if(a!=null){let d;l?d=new xo(i,co):d=new Sr(i,co);const p=this.runWebGLProgram(d,[{dataId:e,shape:i,dtype:r}],r),f=this.readSync(p.dataId);return this.disposeIntermediateTensorInfo(p),f}if(s!=null)return this.convertAndCacheOnCPU(e);if(r==="string")return s;const u=this.activeTimers!=null;let c;u&&(c=Tn());let h;if(r==="complex64"){const d=this.readSync(o.real.dataId),p=this.readSync(o.imag.dataId);h=Jr(d,p)}else h=this.getValuesFromTexture(e);return u&&(this.downloadWaitMs+=Tn()-c),this.convertAndCacheOnCPU(e,h)}async read(e){if(this.pendingRead.has(e)){const f=this.pendingRead.get(e);return new Promise(m=>f.push(m))}const n=this.texData.get(e),{values:s,shape:r,slice:o,dtype:a,complexTensorInfos:i,isPacked:l}=n;if(o!=null){let f;l?f=new xo(r,co):f=new Sr(r,co);const m=this.runWebGLProgram(f,[{dataId:e,shape:r,dtype:a}],a),y=this.read(m.dataId);return this.disposeIntermediateTensorInfo(m),y}if(s!=null)return this.convertAndCacheOnCPU(e);if(G().getBool("DEBUG")&&!G().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")&&G().getNumber("WEBGL_VERSION")===2)throw new Error("tensor.data() with WEBGL_DOWNLOAD_FLOAT_ENABLED=false and WEBGL_VERSION=2 not yet supported.");let u=null,c;if(a!=="complex64"&&G().get("WEBGL_BUFFER_SUPPORTED")){c=this.decode(e);const f=this.texData.get(c.dataId);u=this.gpgpu.createBufferFromTexture(f.texture.texture,...Gh(r))}this.pendingRead.set(e,[]),a!=="complex64"&&await this.gpgpu.createAndWaitForFence();let h;if(a==="complex64"){const f=await Promise.all([this.read(i.real.dataId),this.read(i.imag.dataId)]),m=f[0],y=f[1];h=Jr(m,y)}else if(u==null)h=this.getValuesFromTexture(e);else{const f=K(r);h=this.gpgpu.downloadFloat32MatrixFromBuffer(u,f)}if(c!=null&&this.disposeIntermediateTensorInfo(c),u!=null){const f=this.gpgpu.gl;de(f,()=>f.deleteBuffer(u))}const d=this.convertAndCacheOnCPU(e,h),p=this.pendingRead.get(e);return this.pendingRead.delete(e),p.forEach(f=>f(d)),this.pendingDisposal.has(e)&&(this.pendingDisposal.delete(e),this.disposeData(e)&&mr().removeDataId(e,this),this.pendingDeletes--),d}readToGPU(e,n={}){const s=this.texData.get(e),{values:r,shape:o,slice:a,dtype:i,isPacked:l,texture:u}=s;if(i==="complex64")throw new Error("Does not support reading texture for complex64 dtype.");if(a!=null){let p;l?p=new xo(o,co):p=new Sr(o,co);const f=this.runWebGLProgram(p,[{dataId:e,shape:o,dtype:i}],i),m=this.readToGPU(f,n);return this.disposeIntermediateTensorInfo(f),m}if(u==null)throw r!=null?new Error("Data is not on GPU but on CPU."):new Error("There is no data on GPU or CPU.");const c=this.decode(e,n.customTexShape),h=mr().makeTensorFromTensorInfo(c),d=this.texData.get(c.dataId);return Object.assign({tensorRef:h},d.texture)}bufferSync(e){const n=this.readSync(e.dataId);if(e.dtype==="string")try{const s=n.map(r=>_o(r));return Ae(e.shape,e.dtype,s)}catch{throw new Error("Failed to decode encoded string bytes into utf-8")}return Ae(e.shape,e.dtype,n)}checkNumericalProblems(e){if(e!=null)for(let n=0;n<e.length;n++){const s=e[n];if(!R7(s))throw G().getBool("WEBGL_RENDER_FLOAT32_CAPABLE")?Error(`The value ${s} cannot be represented with your current settings. Consider enabling float32 rendering: 'tf.env().set('WEBGL_RENDER_FLOAT32_ENABLED', true);'`):Error(`The value ${s} cannot be represented on this device.`)}}getValuesFromTexture(e){const{shape:n,dtype:s,isPacked:r}=this.texData.get(e),o=K(n);if(G().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")){const d=this.decode(e),p=this.texData.get(d.dataId),f=this.gpgpu.downloadMatrixFromPackedTexture(p.texture.texture,...Gh(n)).subarray(0,o);return this.disposeIntermediateTensorInfo(d),f}const a=G().getBool("WEBGL_PACK")&&r===!0,i=a?Kh(n):n,l=a?new j9(i):new H9(i),u=this.runWebGLProgram(l,[{shape:i,dtype:s,dataId:e}],"float32"),c=this.texData.get(u.dataId),h=this.gpgpu.downloadByteEncodedFloatMatrixFromOutputTexture(c.texture.texture,c.texShape[0],c.texShape[1]).subarray(0,o);return this.disposeIntermediateTensorInfo(u),h}timerAvailable(){return G().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0}time(e){const n=this.activeTimers,s=[];let r=!1;this.programTimersStack==null?(this.programTimersStack=s,r=!0):this.activeTimers.push(s),this.activeTimers=s,e();const o=Ra(this.activeTimers.map(l=>l.query)).filter(l=>l!=null),a=Ra(this.activeTimers.map(l=>l.name)).filter(l=>l!=null);this.activeTimers=n,r&&(this.programTimersStack=null);const i={uploadWaitMs:this.uploadWaitMs,downloadWaitMs:this.downloadWaitMs,kernelMs:null,wallMs:null};return(async()=>{if(G().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0){const l=await Promise.all(o);i.kernelMs=JO(l),i.getExtraProfileInfo=()=>l.map((u,c)=>({name:a[c],ms:u})).map(u=>`${u.name}: ${u.ms}`).join(", ")}else i.kernelMs={error:"WebGL query timers are not supported in this environment."};return this.uploadWaitMs=0,this.downloadWaitMs=0,i})()}memory(){return{unreliable:!1,numBytesInGPU:this.numBytesInGPU,numBytesInGPUAllocated:this.textureManager.numBytesAllocated,numBytesInGPUFree:this.textureManager.numBytesFree}}startTimer(){return G().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?this.gpgpu.beginQuery():{startMs:Tn(),endMs:null}}endTimer(e){return G().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?(this.gpgpu.endQuery(),e):(e.endMs=Tn(),e)}async getQueryTime(e){if(G().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0)return this.gpgpu.waitForQueryAndGetTime(e);const n=e;return n.endMs-n.startMs}disposeData(e,n=!1){if(this.pendingDisposal.has(e))return!1;if(!this.texData.has(e))return!0;if(n?this.texData.get(e).refCount=0:this.texData.get(e).refCount--,!n&&this.texData.get(e).refCount>0)return!1;if(this.pendingRead.has(e))return this.pendingDisposal.add(e),this.pendingDeletes++,!1;this.releaseGPUData(e);const{complexTensorInfos:s}=this.texData.get(e);return s!=null&&(this.disposeData(s.real.dataId,n),this.disposeData(s.imag.dataId,n)),this.texData.delete(e),!0}releaseGPUData(e){const{texture:n,dtype:s,texShape:r,usage:o,isPacked:a,slice:i}=this.texData.get(e),l=i&&i.origDataId||e,u=this.dataRefCount.get(l);u>1?this.dataRefCount.set(l,u-1):(this.dataRefCount.delete(l),n!=null&&(this.numBytesInGPU-=this.computeBytes(r,s),this.textureManager.releaseTexture(n,r,o,a)));const c=this.texData.get(e);c.texture=null,c.texShape=null,c.isPacked=!1,c.slice=null}getTexture(e){return this.uploadToGPU(e),this.texData.get(e).texture.texture}getDataInfo(e){return this.texData.get(e)}shouldExecuteOnCPU(e,n=CQ){return G().getBool("WEBGL_CPU_FORWARD")&&e.every(s=>this.texData.get(s.dataId).texture==null&&K(s.shape)<n)}getGPGPUContext(){return this.gpgpu}where(e){ss("tf.where() in webgl locks the UI thread. Call tf.whereAsync() instead");const n=e.dataSync();return vQ(e.shape,n)}packedUnaryOp(e,n,s){const r=new xo(e.shape,n),o=this.compileAndRun(r,[e],s);return mr().makeTensorFromTensorInfo(o)}abs(e){if(this.shouldExecuteOnCPU([e])&&e.dtype!=="complex64"){const r=AD(this.texData.get(e.dataId).values);return this.makeOutput(e.shape,e.dtype,r)}if(G().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(e,fk,e.dtype);const n=new Sr(e.shape,fk),s=this.compileAndRun(n,[e]);return mr().makeTensorFromTensorInfo(s)}makeTensorInfo(e,n,s){let r;if(n==="string"&&s!=null&&s.length>0&&Qu(s[0])){const o=s.map(a=>To(a));r=this.write(o,e,n)}else r=this.write(s,e,n);return this.texData.get(r).usage=null,{dataId:r,shape:e,dtype:n}}makeOutput(e,n,s){return mr().makeTensorFromTensorInfo(this.makeTensorInfo(e,n,s),this)}unpackTensor(e){const n=new wQ(e.shape);return this.runWebGLProgram(n,[e],e.dtype)}packTensor(e){const n=new rQ(e.shape),s=!0;return this.runWebGLProgram(n,[e],e.dtype,null,s)}packedReshape(e,n){const s=[ul(e.shape),...cl(e.shape)],r={dtype:e.dtype,shape:s,dataId:e.dataId},o=[ul(n),...cl(n)],a=new FD(o,s),i=!0,l=[s],u=this.runWebGLProgram(a,[r],e.dtype,l,i);return{dataId:u.dataId,shape:n,dtype:u.dtype}}decode(e,n){const s=this.texData.get(e),{isPacked:r,shape:o,dtype:a}=s;if(n!=null){const d=K(o),p=n[0]*n[1]*4;C(d<=p,()=>"customTexShape is too small. Row * Column * 4 should be equal or larger than the size of the tensor data.")}const i=Kh(o);let l;r?l=new G9(i):l=new U9(i);const u=!0,c=[n??Gh(i)],h=this.runWebGLProgram(l,[{shape:i,dtype:a,dataId:e}],a,c,u,n);return{dtype:a,shape:o,dataId:h.dataId}}runWebGLProgram(e,n,s,r,o=!1,a){const i=this.makeTensorInfo(e.outputShape,s),l=this.texData.get(i.dataId);if(e.packedOutput&&(l.isPacked=!0),e.outPackingScheme===Wu.DENSE){const g=a??Gh(e.outputShape);l.texShape=g.map(x=>x*2)}if(e.outTexUsage!=null&&(l.usage=e.outTexUsage),K(i.shape)===0)return l.values=en(i.dtype,0),i;const u=[],c=n.map(g=>{if(g.dtype==="complex64")throw new Error("GPGPUProgram does not support complex64 input. For complex64 dtypes, please separate the program into real and imaginary parts.");let x=this.texData.get(g.dataId);if(x.texture==null){if(!e.packedInputs&&K(g.shape)<=G().getNumber("WEBGL_SIZE_UPLOAD_UNIFORM"))return{shape:g.shape,texData:null,isUniform:!0,uniformValues:x.values};e.packedInputs&&(x.isPacked=!0,x.shape=g.shape)}if(this.uploadToGPU(g.dataId),!!x.isPacked!=!!e.packedInputs)g=x.isPacked?this.unpackTensor(g):this.packTensor(g),u.push(g),x=this.texData.get(g.dataId);else if(x.isPacked&&!mp(x.shape,g.shape)){const w=g,b=g.shape;g.shape=x.shape,g=this.packedReshape(g,b),u.push(g),x=this.texData.get(g.dataId),w.shape=b}return{shape:g.shape,texData:x,isUniform:!1}});this.uploadToGPU(i.dataId);const h={shape:i.shape,texData:l,isUniform:!1},d=W9(e,c,h),p=this.getAndSaveBinary(d,()=>B9(this.gpgpu,e,c,h)),f=this.activeTimers!=null;let m;f&&(m=this.startTimer()),G().get("ENGINE_COMPILE_ONLY")||V9(this.gpgpu,p,c,h,r),u.forEach(g=>this.disposeIntermediateTensorInfo(g)),f&&(m=this.endTimer(m),this.activeTimers.push({name:e.constructor.name,query:this.getQueryTime(m)}));const y=G().get("WEBGL_FLUSH_THRESHOLD");if(y>0){const g=Tn();g-this.lastGlFlushTime>y&&(this.gpgpu.gl.flush(),this.lastGlFlushTime=g)}if(!G().getBool("WEBGL_LAZILY_UNPACK")&&l.isPacked&&o===!1){const g=this.unpackTensor(i);return this.disposeIntermediateTensorInfo(i),g}return i}compileAndRun(e,n,s,r,o=!1){return s=s||n[0].dtype,this.runWebGLProgram(e,n,s,r,o)}getAndSaveBinary(e,n){return e in this.binaryCache||(this.binaryCache[e]=n()),this.binaryCache[e]}getTextureManager(){return this.textureManager}dispose(){this.disposed||(G().getBool("IS_TEST")||Object.keys(this.binaryCache).forEach(n=>{this.gpgpu.deleteProgram(this.binaryCache[n].webGLProgram),delete this.binaryCache[n]}),this.textureManager.dispose(),this.canvas!=null&&typeof HTMLCanvasElement<"u"&&this.canvas instanceof HTMLCanvasElement?this.canvas.remove():this.canvas=null,this.gpgpuCreatedLocally&&(this.gpgpu.program=null,this.gpgpu.dispose()),this.disposed=!0)}floatPrecision(){return this.floatPrecisionValue==null&&(this.floatPrecisionValue=V(()=>{if(!G().get("WEBGL_RENDER_FLOAT32_ENABLED")){const e=G().getBool("DEBUG");G().set("DEBUG",!1);const n=this.abs(Se(1e-8)).dataSync()[0];if(G().set("DEBUG",e),n>0)return 32}return 16})),this.floatPrecisionValue}epsilon(){return this.floatPrecision()===32?SQ:kQ}uploadToGPU(e){const n=this.texData.get(e),{shape:s,dtype:r,values:o,texture:a,usage:i,isPacked:l}=n;if(a!=null)return;const u=this.activeTimers!=null;let c;u&&(c=Tn());let h=n.texShape;if(h==null&&(h=q7(s,l),n.texShape=h),o!=null){const d=Kh(s);let p,f=h[1],m=h[0];const y=o instanceof Uint8Array||o instanceof Uint8ClampedArray;(l||!y)&&([f,m]=Cl(h[0],h[1])),l?p=new q9(d,y):p=new ck(d,y);const g=y?[m,f]:h,x=this.makeTensorInfo(g,r),w=this.texData.get(x.dataId);y?w.usage=as.PIXELS:w.usage=as.UPLOAD,w.texShape=g,this.gpgpu.uploadDenseMatrixToTexture(this.getTexture(x.dataId),f,m,o);const b=[[m,f]],v=!0,k=this.runWebGLProgram(p,[x],r,b,v),$=this.texData.get(k.dataId);n.texShape=$.texShape,n.isPacked=$.isPacked,n.usage=$.usage,G().get("ENGINE_COMPILE_ONLY")?this.disposeData(k.dataId):(n.texture=$.texture,n.values=null,this.texData.delete(k.dataId)),this.disposeIntermediateTensorInfo(x),u&&(this.uploadWaitMs+=Tn()-c)}else{const d=this.acquireTexture(h,i,r,l);n.texture=d}}convertAndCacheOnCPU(e,n){const s=this.texData.get(e),{dtype:r}=s;return n!=null&&(s.values=TQ(n,r)),s.values}acquireTexture(e,n,s,r){if(this.numBytesInGPU+=this.computeBytes(e,s),!this.warnedAboutMemory&&this.numBytesInGPU>this.numMBBeforeWarning*1024*1024){const o=(this.numBytesInGPU/1024/1024).toFixed(2);this.warnedAboutMemory=!0,console.warn(`High memory usage in GPU: ${o} MB, most likely due to a memory leak`)}return this.textureManager.acquireTexture(e,n,r)}computeBytes(e,n){return e[0]*e[1]*Wd(n)}checkCompileCompletion(){for(const[,e]of Object.entries(this.binaryCache))this.checkCompletion_(e)}async checkCompileCompletionAsync(){const e=[];if(this.gpgpu.parallelCompilationExtension){for(const[,n]of Object.entries(this.binaryCache))e.push(this.checkCompletionAsync_(n));return Promise.all(e)}else{for(const[,n]of Object.entries(this.binaryCache)){const s=new Promise(r=>{try{this.checkCompletion_(n),r(!0)}catch(o){throw o}});e.push(s)}return Promise.all(e)}}async checkCompletionAsync_(e){return this.gpgpu.gl.getProgramParameter(e.webGLProgram,this.gpgpu.parallelCompilationExtension.COMPLETION_STATUS_KHR)?this.checkCompletion_(e):(await vT(),this.checkCompletionAsync_(e))}checkCompletion_(e){if(this.gpgpu.gl.getProgramParameter(e.webGLProgram,this.gpgpu.gl.LINK_STATUS)===!1)throw console.log(this.gpgpu.gl.getProgramInfoLog(e.webGLProgram)),this.gpgpu.gl.getShaderParameter(e.fragmentShader,this.gpgpu.gl.COMPILE_STATUS)===!1?(wD(e.source,this.gpgpu.gl.getShaderInfoLog(e.fragmentShader)),new Error("Failed to compile fragment shader.")):new Error("Failed to link vertex and fragment shaders.");return!0}getUniformLocations(){for(const e of Object.values(this.binaryCache)){this.gpgpu.buildVao(e.webGLProgram);const{variablesLocations:n,customUniformLocations:s,infLoc:r,nanLoc:o,outShapeLocation:a,outShapeStridesLocation:i,outTexShapeLocation:l}=CD(this.gpgpu,e.program,e.webGLProgram);e.variablesLocations=n,e.customUniformLocations=s,e.infLoc=r,e.nanLoc=o,e.outShapeLocation=a,e.outShapeStridesLocation=i,e.outTexShapeLocation=l}}createTensorFromGPUData(e,n,s){e.channels=e.channels||"RGBA";const{texture:r,height:o,width:a,channels:i}=e,l=mr().backend;if(!l.gpgpu.gl.isTexture(r))throw new Error("The texture is invalid. Also, please make sure the texture and the TFJS WebGL backend are using the same canvas. If you want to use your own custom canvas, you have to create and use the custom TFJS WebGL backend created from the canvas through 'new tf.MathBackendWebGL(customCanvas)'.");const u=l.writeTexture(r,n,s,o,a,i);return mr().makeTensorFromDataId(u,n,s,l)}}Nm.nextDataId=0;function TQ(t,e){if(e==="float32"||e==="complex64")return t;if(e==="int32"||e==="bool"){const n=e==="int32"?new Int32Array(t.length):new Uint8Array(t.length);for(let s=0;s<n.length;++s)n[s]=Math.round(t[s]);return n}else throw new Error(`Unknown dtype ${e}`)}/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */RN()&&KN("webgl",()=>new Nm,2);/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Dw=`
  if (isnan(a)) return a;
  if (isnan(b)) return b;
`;class Ba{constructor(e,n,s){this.variableNames=["A","B"],this.outputShape=Re(n,s),this.enableShapeUniforms=pn(this.outputShape.length),this.userCode=`
      float binaryOperation(float a, float b) {
        ${e}
      }

      void main() {
        float a = getAAtOutCoords();
        float b = getBAtOutCoords();
        setOutput(binaryOperation(a, b));
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ni=`
  result.r = isNaN.r ? NAN : result.r;
  result.g = isNaN.g ? NAN : result.g;
  result.b = isNaN.b ? NAN : result.b;
  result.a = isNaN.a ? NAN : result.a;
`;class Rl{constructor(e,n,s,r=!1){this.variableNames=["A","B"],this.supportsBroadcasting=!0,this.packedInputs=!0,this.packedOutput=!0,this.outputShape=Re(n,s);const o=this.outputShape.length;this.enableShapeUniforms=pn(o);let a="";if(r)if(o===0||K(this.outputShape)===1)a=`
          result.y = 0.;
          result.z = 0.;
          result.w = 0.;
        `;else if(a=`
          ${Ye(o)} coords = getOutputCoords();
        `,o===1)this.enableShapeUniforms?a+=`
            result.y = (coords + 1) >= outShape ? 0. : result.y;
            result.z = 0.;
            result.w = 0.;
          `:a+=`
            result.y = (coords + 1) >= ${this.outputShape[0]} ? 0. : result.y;
            result.z = 0.;
            result.w = 0.;
          `;else{const l=vn("coords",o);this.enableShapeUniforms?a+=`
            bool nextRowOutOfBounds =
              (${l[o-2]} + 1) >= outShape[${o} - 2];
            bool nextColOutOfBounds =
              (${l[o-1]} + 1) >= outShape[${o} - 1];
            result.y = nextColOutOfBounds ? 0. : result.y;
            result.z = nextRowOutOfBounds ? 0. : result.z;
            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;
          `:a+=`
            bool nextRowOutOfBounds =
              (${l[o-2]} + 1) >= ${this.outputShape[o-2]};
            bool nextColOutOfBounds =
              (${l[o-1]} + 1) >= ${this.outputShape[o-1]};
            result.y = nextColOutOfBounds ? 0. : result.y;
            result.z = nextRowOutOfBounds ? 0. : result.z;
            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;
          `}this.userCode=`
      vec4 binaryOperation(vec4 a, vec4 b) {
        ${e}
      }

      void main() {
        vec4 a = getAAtOutCoords();
        vec4 b = getBAtOutCoords();

        vec4 result = binaryOperation(a, b);
        ${a}

        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Zn(t){const{inputs:e,backend:n}=t,{x:s}=e;return n.incRef(s.dataId),{dataId:s.dataId,shape:s.shape,dtype:s.dtype}}const EQ={kernelName:xc,backendName:"webgl",kernelFunc:Zn};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sa(t){const{inputs:e,backend:n}=t,{real:s,imag:r}=e,o=n.makeTensorInfo(s.shape,"complex64"),a=n.texData.get(o.dataId),i=Zn({inputs:{x:s},backend:n}),l=Zn({inputs:{x:r},backend:n});return a.complexTensorInfos={real:i,imag:l},o}const RQ={kernelName:E1,backendName:"webgl",kernelFunc:sa};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const LD="return (a < 0.) ? b * a : a;",PD=`
  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));
  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);
`;function DQ(t){const{inputs:e,backend:n,attrs:s}=t,{x:r}=e,{alpha:o}=s,a=n.makeTensorInfo([],"float32",Ko(o,"float32")),i=G().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new Rl(PD,r.shape,a.shape):new Ba(LD,r.shape,a.shape),l=n.runWebGLProgram(i,[r,a],"float32");return n.disposeIntermediateTensorInfo(a),l}const AQ={kernelName:of,backendName:"webgl",kernelFunc:DQ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const zD="return (a < 0.) ? b * a : a;",MD=`
  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));
  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);
`;function _Q(t){const{inputs:e,backend:n}=t,{x:s,alpha:r}=e,o=G().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new Rl(MD,s.shape,r.shape):new Ba(zD,s.shape,r.shape);return n.runWebGLProgram(o,[s,r],"float32")}const OQ={kernelName:Cf,backendName:"webgl",kernelFunc:_Q};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Dl="if (isnan(x)) return x;";function Ge({opSnippet:t,packedOpSnippet:e,cpuKernelImpl:n,dtype:s}){return({inputs:r,backend:o})=>{const{x:a}=r,i=o,l=s||a.dtype;if(i.shouldExecuteOnCPU([a])&&n!=null){const h=i.texData.get(a.dataId),d=n(h.values,l);return i.makeTensorInfo(a.shape,l,d)}const u=G().getBool("WEBGL_PACK_UNARY_OPERATIONS")&&e!=null;let c;return u?c=new xo(a.shape,e):c=new Sr(a.shape,t),i.runWebGLProgram(c,[a],l)}}function rn({opSnippet:t,packedOpSnippet:e,checkOutOfBounds:n=!1,supportsComplex:s=!1,cpuKernelImpl:r,dtype:o}){return({inputs:a,backend:i})=>{const{a:l,b:u}=a,c=i;if(s&&l.dtype==="complex64"){const f=c.texData.get(l.dataId),m=c.texData.get(u.dataId),[y,g]=[[f.complexTensorInfos.real,m.complexTensorInfos.real],[f.complexTensorInfos.imag,m.complexTensorInfos.imag]].map(w=>{const[b,v]=w,k={dataId:b.dataId,dtype:b.dtype,shape:l.shape},$={dataId:v.dataId,dtype:v.dtype,shape:u.shape},N=new Ba(t,l.shape,u.shape);return c.runWebGLProgram(N,[k,$],Xn(b.dtype,v.dtype))}),x=sa({inputs:{real:y,imag:g},backend:c});return c.disposeIntermediateTensorInfo(y),c.disposeIntermediateTensorInfo(g),x}const h=o||Xn(l.dtype,u.dtype);if((l.dtype==="string"||u.dtype==="string"||c.shouldExecuteOnCPU([l,u]))&&r!=null){const f=c.texData.get(l.dataId).values,m=c.texData.get(u.dataId).values,y=l.dtype==="string"?eo(f):f,g=l.dtype==="string"?eo(m):m,[x,w]=r(l.shape,u.shape,y,g,h),b=c.makeTensorInfo(w,h),v=c.texData.get(b.dataId);return v.values=x,b}const d=G().getBool("WEBGL_PACK_BINARY_OPERATIONS")&&e!=null;let p;return d?p=new Rl(e,l.shape,u.shape,n):p=new Ba(t,l.shape,u.shape),c.runWebGLProgram(p,[l,u],h)}}function Uu(t,e=!1){if(t==="linear")return e?mQ:cQ;if(t==="relu")return e?yQ:dQ;if(t==="elu")return e?gQ:hQ;if(t==="relu6")return e?xQ:pQ;if(t==="prelu")return e?MD:zD;if(t==="leakyrelu")return e?PD:LD;if(t==="sigmoid")return e?bQ:fQ;throw new Error(`Activation ${t} has not been implemented for the WebGL backend.`)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class BD{constructor(e,n,s,r=!1,o=!1,a=!1,i=null,l=!1,u=!1){this.variableNames=["matrixA","matrixB"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=s,this.enableShapeUniforms=pn(this.outputShape.length);const c=r?e[1]:e[2],h=Math.ceil(c/2),d=r?"i * 2, rc.y":"rc.y, i * 2",p=o?"rc.z, i * 2":"i * 2, rc.z",f=r?["a.xxyy","a.zzww"]:["a.xxzz","a.yyww"],m=o?["b.xzxz","b.ywyw"]:["b.xyxy","b.zwzw"];let y="",g="";i&&(l?y=`vec4 activation(vec4 a) {
          vec4 b = getPreluActivationWeightsAtOutCoords();
          ${i}
        }`:u?y=`vec4 activation(vec4 a) {
          vec4 b = getLeakyreluAlphaAtOutCoords();
          ${i}
        }`:y=`vec4 activation(vec4 x) {
          ${i}
        }`,g="result = activation(result);");const x=a?"result += getBiasAtOutCoords();":"";a&&this.variableNames.push("bias"),l&&this.variableNames.push("preluActivationWeights"),u&&this.variableNames.push("leakyreluAlpha");let w="rc.x",b="rc.x";e[0]<n[0]?w=`imod(rc.x, ${e[0]})`:n[0]<e[0]&&(b=`imod(rc.x, ${n[0]})`),this.userCode=`
      ${y}
      // Don't use uniform for sharedDimensionPacked for performance.
      const float sharedDimension = ${h}.0;

      vec4 dot2x2ARowBCol(ivec3 rc) {
        vec4 result = vec4(0);
        int batchA = ${w};
        int batchB = ${b};
        for (int i = 0; i < ${h}; i++) {
          vec4 a = getMatrixA(batchA, ${d});
          vec4 b = getMatrixB(batchB, ${p});

          // These swizzled products need to be separately added.
          // See: https://github.com/tensorflow/tfjs/issues/1735
          result += (${f[0]} * ${m[0]});
          result += (${f[1]} * ${m[1]});
        }
        return result;
      }

      void main() {
        ivec3 rc = getOutputCoords();
        vec4 result = dot2x2ARowBCol(rc);

        ${x}

        ${g}

        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const mk={REAL:"return areal * breal - aimag * bimag;",IMAG:"return areal * bimag + aimag * breal;"};class gk{constructor(e,n,s){this.variableNames=["AReal","AImag","BReal","BImag"],this.outputShape=Re(n,s),this.userCode=`
      float binaryOpComplex(
          float areal, float aimag, float breal, float bimag) {
        ${e}
      }

      void main() {
        float areal = getARealAtOutCoords();
        float aimag = getAImagAtOutCoords();
        float breal = getBRealAtOutCoords();
        float bimag = getBImagAtOutCoords();
        setOutput(binaryOpComplex(areal, aimag, breal, bimag));
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const yk="return a * b;";function Aw(t){const{inputs:e,backend:n}=t,{a:s,b:r}=e,o=Xn(s.dtype,r.dtype);if(s.dtype==="complex64"){const i=n.texData.get(s.dataId),l=n.texData.get(r.dataId),u=new gk(mk.REAL,s.shape,r.shape),c=new gk(mk.IMAG,s.shape,r.shape),h=[{dataId:i.complexTensorInfos.real.dataId,dtype:i.complexTensorInfos.real.dtype,shape:s.shape},{dataId:i.complexTensorInfos.imag.dataId,dtype:i.complexTensorInfos.imag.dtype,shape:s.shape},{dataId:l.complexTensorInfos.real.dataId,dtype:l.complexTensorInfos.real.dtype,shape:r.shape},{dataId:l.complexTensorInfos.imag.dataId,dtype:l.complexTensorInfos.imag.dtype,shape:r.shape}],d=n.runWebGLProgram(u,h,"float32"),p=n.runWebGLProgram(c,h,"float32"),f=sa({inputs:{real:d,imag:p},backend:n});return n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(p),f}if(n.shouldExecuteOnCPU([s,r])){const i=n.texData.get(s.dataId),l=n.texData.get(r.dataId),[u,c]=_Y(s.shape,r.shape,i.values,l.values,o),h=n.makeTensorInfo(c,o),d=n.texData.get(h.dataId);return d.values=u,h}let a;return G().getBool("WEBGL_PACK_BINARY_OPERATIONS")?a=new Rl(yk,s.shape,r.shape):a=new Ba(yk,s.shape,r.shape),n.runWebGLProgram(a,[s,r],o)}const FQ={kernelName:Ic,backendName:"webgl",kernelFunc:Aw};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function LQ(t,e,n){const s=[ul(t.shape),...cl(t.shape)],r={dtype:t.dtype,shape:s,dataId:t.dataId},o=[ul(e),...cl(e)],a=new FD(o,s),i=!0,l=[s],u=n.runWebGLProgram(a,[r],t.dtype,l,i);return{dataId:u.dataId,shape:e,dtype:u.dtype}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function le(t){const{inputs:e,backend:n,attrs:s}=t,{x:r}=e,{shape:o}=s,a=n,i=K(r.shape),l=aN(o,i),u=K(l);C(i===u,()=>`The new shape (${l}) has ${u} elements and the old shape (${r.shape}) has ${i} elements. The new shape and old shape must have the same number of elements.`);const c=a.texData.get(r.dataId);return c.isPacked&&!mp(r.shape,l)&&!(c.texture!==null&&mp(c.shape,l))?LQ(r,l,a):(a.incRef(r.dataId),{dataId:r.dataId,shape:l,dtype:r.dtype})}const PQ={kernelName:If,backendName:"webgl",kernelFunc:le};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class xk{constructor(e,n){this.variableNames=["x"];const{windowSize:s,batchSize:r,inSize:o,outSize:a}=e;this.outputShape=[r,a];const i=Math.floor(s/4)*4,l=s%4;let u="sumValue += dot(values, ones);";if(n!=null){const h=1/n;u=`sumValue += dot(values * ${Qi(h)?h.toPrecision(2):h}, ones);`}let c="";o%s>0&&(c=`
        if (inIdx < 0 || inIdx >= ${o}) {
          return 0.0;
        }
      `),this.userCode=`
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float getValue(int batch, int inIdx) {
        ${c}
        return getX(batch, inIdx);
      }

      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = outIdx * ${s};

        float sumValue = 0.0;

        for (int i = 0; i < ${i}; i += 4) {
          int inIdx = inOffset + i;
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            getValue(batch, inIdx + 3)
          );

          ${u}
        }

        int inIdx = inOffset + ${i};
        if (${l===1}) {
          vec4 values = vec4(getValue(batch, inIdx), 0.0, 0.0, 0.0);

          ${u}
        } else if (${l===2}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1), 0.0, 0.0);

          ${u}
        } else if (${l===3}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2), 0.0);

          ${u}
        }
        setOutput(sumValue);
      }
    `}}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class zQ{constructor(e,n){this.variableNames=["x"];const{windowSize:s,batchSize:r,inSize:o,outSize:a}=e;this.outputShape=[r,a];let i="0.0",l="";n==="prod"?i="1.0":n==="min"?(i="1.0 / 1e-20",l="min"):n==="max"&&(i="-1.0 / 1e-20",l="max");let u=`${n}(${n}(${n}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;n==="sum"?u="sumValue":n==="prod"?u="prodValue":n==="all"?u="allValue":n==="any"&&(u="anyValue");const c=Math.floor(s/4)*4,h=s%4;let d=`
      if (${n==="sum"}) {
        sumValue += dot(values, ones);
      } else if (${n==="prod"}) {
        vec2 tmp = vec2(values[0], values[1]) * vec2(values[2], values[3]);
        prodValue *= tmp[0] * tmp[1];
      } else {
        minMaxValue = ${l}(values, minMaxValue);
        if (${n==="min"} || ${n==="max"}) {
          minMaxValue = ${l}(values, minMaxValue);
          bvec4 isNaN = isnan(values);
          if (isNaN.r || isNaN.g || isNaN.b || isNaN.a) {
            minMaxValue = vec4(NAN);
          }
        }
      }
    `,p="vec4";n==="all"?(i="1.0",d=`
        bool reducedAllValue = all(values);
        float floatedReducedAllValue = float(reducedAllValue);
        allValue = float(allValue >= 1.0 && floatedReducedAllValue >= 1.0);
      `,p="bvec4"):n==="any"&&(i="0.0",d=`
        bool reducedAnyValue = any(values);
        float floatedReducedAnyValue = float(reducedAnyValue);
        anyValue = float(anyValue >= 1.0 || floatedReducedAnyValue >= 1.0);
      `,p="bvec4");let f="";o%s>0&&(f=`
        if (inIdx < 0 || inIdx >= ${o}) {
          return initializationValue;
        }
      `),this.userCode=`
      const float initializationValue = ${i};
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float getValue(int batch, int inIdx) {
        ${f}
        return getX(batch, inIdx);
      }

      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = outIdx * ${s};

        vec4 minMaxValue = vec4(${i});
        float prodValue = 1.0;
        float sumValue = 0.0;
        float allValue = 1.0;
        float anyValue = 0.0;

        for (int i = 0; i < ${c}; i += 4) {
          int inIdx = inOffset + i;
          ${p} values = ${p}(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            getValue(batch, inIdx + 3)
          );

          ${d}
        }

        int inIdx = inOffset + ${c};
        if (${h===1}) {
          ${p} values = ${p}(
            getValue(batch, inIdx),
            initializationValue,
            initializationValue,
            initializationValue
          );

          ${d}
        } else if (${h===2}) {
          ${p} values = ${p}(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            initializationValue,
            initializationValue
          );

          ${d}
        } else if (${h===3}) {
          ${p} values = ${p}(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            initializationValue
          );

          ${d}
        }
        setOutput(${u});
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function MQ(t){const e=[];for(;e.length===0||e[e.length-1].outSize!==1;){const n=e.length?e[e.length-1].outSize:t[1],s=cm(n);e.push({inSize:n,windowSize:s,outSize:Math.ceil(n/s)})}return e}function si(t,e,n,s){const r=MQ(t.shape);let o=t;for(let a=0;a<r.length;a++){const{inSize:i,windowSize:l,outSize:u}=r[a];let c,h;n==="mean"?c=a===0?new xk({windowSize:l,inSize:i,batchSize:t.shape[0],outSize:u},i):new xk({windowSize:l,inSize:i,batchSize:t.shape[0],outSize:u}):c=new zQ({windowSize:l,inSize:i,batchSize:t.shape[0],outSize:u},n),h=o,o=s.runWebGLProgram(c,[o],e),h.dataId!==t.dataId&&s.disposeIntermediateTensorInfo(h)}return o}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class BQ{constructor(e,n){this.variableNames=["A"];const s=new Array(e.length);for(let a=0;a<s.length;a++)s[a]=e[n[a]];this.outputShape=s,this.rank=s.length;const r=Ye(this.rank),o=VQ(n);this.userCode=`
    void main() {
      ${r} resRC = getOutputCoords();
      setOutput(getA(${o}));
    }
    `}}function VQ(t){const e=t.length;if(e>6)throw Error(`Transpose for rank ${e} is not yet supported`);const n=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u","resRC.v"],s=new Array(e);for(let r=0;r<t.length;r++)s[t[r]]=n[r];return s.join()}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class WQ{constructor(e,n){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0;const s=new Array(e.length);for(let c=0;c<s.length;c++)s[c]=e[n[c]];if(this.outputShape=s,this.rank=s.length,this.rank>6)throw Error(`Packed transpose for rank ${this.rank} is not yet supported.`);const r=Ye(this.rank),o=OD("rc",this.rank),a=new Array(this.rank);for(let c=0;c<n.length;c++)a[n[c]]=o[c];const i=`vec2(${a.slice(-2).join()})`,l=`++${o[this.rank-1]} < ${s[this.rank-1]}`,u=`getChannel(getA(${a.join()}), ${i})`;this.userCode=`
    void main() {
      ${r} rc = getOutputCoords();
      vec4 result = vec4(0.);
      result[0] = ${u};
      if(${l}) {
        result[1] = ${u};
      }
      --${o[this.rank-1]};
      if(++${o[this.rank-2]} < ${s[this.rank-2]}) {
        result[2] = ${u};
        if(${l}) {
          result[3] = ${u};
        }
      }
      setOutput(result);
    }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Im(t,e,n){const s=G().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new WQ(t.shape,e):new BQ(t.shape,e);return n.runWebGLProgram(s,[t],t.dtype)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function UQ(t,e,n,s){const r=e,o=t.shape.length,a=Fe(r,t.shape);let i=a;const l=gt(i,o),u=l!=null;let c=t;u&&(c=Im(t,l,s),i=Ct(i.length,o)),nn("sum",i,o);const[h,d]=qt(c.shape,i);let p=h;n&&(p=$t(h,a));const f=K(d),y=K(t.shape)/f,g=le({inputs:{x:c},attrs:{shape:[y,f]},backend:s}),x=Tx(t.dtype),w=si(g,x,"sum",s),b=le({inputs:{x:w},attrs:{shape:p},backend:s});return s.disposeIntermediateTensorInfo(g),s.disposeIntermediateTensorInfo(w),u&&s.disposeIntermediateTensorInfo(c),b}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Tm(t){const{inputs:e,backend:n,attrs:s}=t,{x:r}=e,{axis:o,keepDims:a}=s;return UQ(r,o,a,n)}const GQ={kernelName:_f,backendName:"webgl",kernelFunc:Tm};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $n(t){const{inputs:e,backend:n,attrs:s}=t,{x:r}=e,{perm:o}=s,a=n,i=r.shape.length,l=new Array(i);for(let c=0;c<l.length;c++)l[c]=r.shape[o[c]];let u;if(a.shouldExecuteOnCPU([r])){const h=a.texData.get(r.dataId).values,d=Rw(h,r.shape,r.dtype,o,l);u=a.makeTensorInfo(l,r.dtype);const p=a.texData.get(u.dataId);p.values=d}else u=Im(r,o,a);return u}const HQ={kernelName:Li,backendName:"webgl",kernelFunc:$n};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const VD=1e3;function gp({a:t,b:e,transposeA:n,transposeB:s,backend:r,bias:o=null,preluActivationWeights:a=null,leakyreluAlpha:i=0,activation:l=null}){const u=t.shape.length,c=e.shape.length,h=n?t.shape[u-2]:t.shape[u-1],d=s?e.shape[c-1]:e.shape[c-2],p=n?t.shape[u-1]:t.shape[u-2],f=s?e.shape[c-2]:e.shape[c-1],m=t.shape.slice(0,-2),y=e.shape.slice(0,-2),g=K(m),x=K(y),b=Re(t.shape.slice(0,-2),e.shape.slice(0,-2)).concat([p,f]);C(h===d,()=>`Error in matMul: inner shapes (${h}) and (${d}) of Tensors with shapes ${t.shape} and ${e.shape} and transposeA=${n} and transposeB=${s} must match.`);const v=n?[g,h,p]:[g,p,h],k=s?[x,f,d]:[x,d,f],$=le({inputs:{x:t},backend:r,attrs:{shape:v}}),N=le({inputs:{x:e},backend:r,attrs:{shape:k}}),E=[$,N],T=Math.max(g,x),R=n?$.shape[1]:$.shape[2],z=o!=null,P=a!=null,W=l==="leakyrelu",M=l!=null?Uu(l,!0):null,U=z||P||W||M!=null;let j;if((p===1||f===1)&&R>VD&&U===!1){let B=$,H=N;n&&(B=$n({inputs:{x:$},backend:r,attrs:{perm:[0,2,1]}}),E.push(B)),s&&(H=$n({inputs:{x:N},backend:r,attrs:{perm:[0,2,1]}}),E.push(H));const X=f!==1,Q=f===1;let Z=B;X&&(Z=le({inputs:{x:B},backend:r,attrs:{shape:[T,R,1]}}),E.push(Z));const re=f===1?2:1;let Y=H;Q&&(Y=le({inputs:{x:H},backend:r,attrs:{shape:[T,1,R]}}),E.push(Y));const J=Aw({inputs:{a:Z,b:Y},backend:r});j=Tm({inputs:{x:J},backend:r,attrs:{axis:re,keepDims:!0}}),E.push(J)}else{const B=Xn(t.dtype,e.dtype),H=new BD(v,k,[T,p,f],n,s,z,M,P,W),X=[$,N];if(o!=null&&X.push(o),P&&X.push(a),W){const Q=r.makeTensorInfo([],"float32",Ko(i,"float32"));X.push(Q),E.push(Q)}j=r.runWebGLProgram(H,X,B)}const _=le({inputs:{x:j},backend:r,attrs:{shape:b}});E.push(j);for(const B of E)r.disposeIntermediateTensorInfo(B);return _}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function jQ(t){const{inputs:e,backend:n,attrs:s}=t,{a:r,b:o,bias:a,preluActivationWeights:i}=e,{transposeA:l,transposeB:u,activation:c,leakyreluAlpha:h}=s;return gp({a:r,b:o,transposeA:l,transposeB:u,backend:n,bias:a,preluActivationWeights:i,leakyreluAlpha:h,activation:c})}const KQ={kernelName:Ud,backendName:"webgl",kernelFunc:jQ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const bk="return abs(x);";function qQ(t){const{inputs:e,backend:n}=t,{x:s}=e;if(n.shouldExecuteOnCPU([s])&&s.dtype!=="complex64"){const o=n.texData.get(s.dataId),a=AD(o.values);return n.makeTensorInfo(s.shape,s.dtype,a)}let r;return G().getBool("WEBGL_PACK_UNARY_OPERATIONS")?r=new xo(s.shape,bk):r=new Sr(s.shape,bk),n.runWebGLProgram(r,[s],s.dtype)}const XQ={kernelName:Pp,backendName:"webgl",kernelFunc:qQ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const YQ=Gs+`
  if (abs(x) > 1.) {
    return NAN;
  }
  return acos(x);
`,QQ=Ge({opSnippet:YQ}),ZQ={kernelName:Zu,backendName:"webgl",kernelFunc:QQ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const JQ=Gs+`
  if (x < 1.0) return NAN;
return log(x + sqrt(x * x - 1.0));`,eZ=Ge({opSnippet:JQ}),tZ={kernelName:Ju,backendName:"webgl",kernelFunc:eZ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const wk="return a + b;",nZ=rn({opSnippet:wk,packedOpSnippet:wk,supportsComplex:!0,cpuKernelImpl:dY}),sZ={kernelName:xl,backendName:"webgl",kernelFunc:nZ};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class rZ{constructor(e,n){this.outputShape=[],this.outputShape=e,this.variableNames=n.map((o,a)=>`T${a}`);const s=[];this.variableNames.forEach(o=>{s.push(`float v${o} = get${o}AtOutCoords();`)});const r=this.variableNames.map(o=>`v${o}`).join(" + ");this.userCode=`
      void main() {
        ${s.join(`
        `)}

        float result = ${r};
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class oZ{constructor(e,n){this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.variableNames=n.map((o,a)=>`T${a}`);const s=[];this.variableNames.forEach(o=>{s.push(`vec4 v${o} = get${o}AtOutCoords();`)});const r=this.variableNames.map(o=>`v${o}`).join(" + ");this.userCode=`
      void main() {
        ${s.join(`
        `)}

        vec4 result = ${r};
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function yd(t){const{inputs:e,backend:n}=t,s=e;if(s.length===1)return Zn({inputs:{x:s[0]},backend:n});if(s.length>G().get("WEBGL_MAX_TEXTURES_IN_SHADER")){const l=Math.floor(s.length/2),u=yd({inputs:s.slice(0,l),backend:n}),c=yd({inputs:s.slice(l),backend:n});return yd({inputs:[u,c],backend:n})}const r=s.map(l=>l.dtype).reduce((l,u)=>Xn(l,u)),o=s.map(l=>l.shape),i=G().getBool("WEBGL_PACK")?new oZ(s[0].shape,o):new rZ(s[0].shape,o);return n.runWebGLProgram(i,s,r)}const aZ={kernelName:zp,backendName:"webgl",kernelFunc:yd};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function iZ(t){const{inputs:e,backend:n,attrs:s}=t,{x:r}=e,{axis:o,keepDims:a}=s,i=r.shape.length,l=Fe(o,r.shape);let u=l;const c=gt(u,i);let h=r;c!=null&&(h=$n({inputs:{x:r},backend:n,attrs:{perm:c}}),u=Ct(u.length,i)),nn("all",u,i);const[d,p]=qt(h.shape,u),f=K(p),m=le({inputs:{x:h},backend:n,attrs:{shape:[-1,f]}}),y=si(m,m.dtype,"all",n);let g;if(a){const x=$t(d,l);g=le({inputs:{x:y},backend:n,attrs:{shape:x}})}else g=le({inputs:{x:y},backend:n,attrs:{shape:d}});return n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(y),c!=null&&n.disposeIntermediateTensorInfo(h),g}const lZ={kernelName:k1,backendName:"webgl",kernelFunc:iZ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function uZ(t){const{inputs:e,backend:n,attrs:s}=t,{x:r}=e,{axis:o,keepDims:a}=s,i=r.shape.length,l=Fe(o,r.shape);let u=l;const c=gt(u,i);let h=r;c!=null&&(h=$n({inputs:{x:r},backend:n,attrs:{perm:c}}),u=Ct(u.length,i)),nn("any",u,i);const[d,p]=qt(h.shape,u),f=K(p),m=le({inputs:{x:h},backend:n,attrs:{shape:[-1,f]}}),y=si(m,m.dtype,"any",n);let g;if(a){const x=$t(d,l);g=le({inputs:{x:y},backend:n,attrs:{shape:x}})}else g=le({inputs:{x:y},backend:n,attrs:{shape:d}});return n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(y),c!=null&&n.disposeIntermediateTensorInfo(h),g}const cZ={kernelName:$1,backendName:"webgl",kernelFunc:uZ};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class hZ{constructor(e,n,s){this.variableNames=["A"];const{windowSize:r,batchSize:o,outSize:a}=e;s||this.variableNames.push("bestIndicesA"),this.outputShape=[o,a];const i=n==="max"?">":"<",l=s?"inOffset + i;":"round(getBestIndicesA(batch, inOffset + i));";this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = outIdx * ${r};

        int bestIndex = inOffset;
        float bestValue = getA(batch, bestIndex);

        for (int i = 0; i < ${r}; i++) {
          int inIdx = ${l};
          float candidate = getA(batch, inIdx);
          if (candidate ${i} bestValue) {
            bestValue = candidate;
            bestIndex = inIdx;
          }
        }
        setOutput(float(bestIndex));
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class dZ{constructor(e,n,s,r){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,C(e.length>2,()=>`Packed arg${s.charAt(0).toUpperCase()+s.slice(1)} supports only inputs with rank above 2.`);const o=e[e.length-1],a=Math.ceil(o/n);this.outputShape=e.slice(0,-1),a>1&&this.outputShape.push(a),r||this.variableNames.push("bestIndicesA");const i=this.outputShape,l=i.length,u=Ye(l),c=vn("coords",l);let h,d;if(a===1){d=l+1;const N=Ye(d);h=`
        ${N} sourceLocR = ${N}(${c.join()}, 0);
        ++${c[l-1]};
        ${N} sourceLocG = ${N}(${c.join()}, 0);
        ++${c[l-2]};
        ${N} sourceLocA = ${N}(${c.join()}, 0);
        --${c[l-1]};
        ${N} sourceLocB = ${N}(${c.join()}, 0);
        --${c[l-2]};`}else d=l,h=`
        ${u} sourceLocR = coords;
        ++${c[l-1]};
        ${u} sourceLocG = coords;
        ++${c[l-2]};
        ${u} sourceLocA = coords;
        --${c[l-1]};
        ${u} sourceLocB = coords;
        --${c[l-2]};`;const p=["x","y","z","w","u","v"].slice(0,d),f="."+p[d-1],m=p.map(N=>"int "+N),y=vn("sourceLocR",d-1).concat("inIdx.r"),g=vn("sourceLocG",d-1).concat("inIdx.g"),x=vn("sourceLocB",d-1).concat("inIdx.b"),w=vn("sourceLocA",d-1).concat("inIdx.a"),b=s==="max"?"greaterThan":"lessThan",v=r?"":`
          inIdx = round(vec4(getBestIndicesAChannel(${y.join()}),
                             getBestIndicesAChannel(${g.join()}),
                             getBestIndicesAChannel(${x.join()}),
                             getBestIndicesAChannel(${w.join()})));`,k=`vec4(
            getAChannel(${y.join()}),
            hasNextCol ? getAChannel(${g.join()}) : 0.,
            hasNextRow ? getAChannel(${x.join()}) : 0.,
            hasNextRow && hasNextCol ? getAChannel(${w.join()}) : 0.)`,$=r?"":`
      float getBestIndicesAChannel(${m.join()}) {
        return getChannel(getBestIndicesA(${p.join()}),
                                          vec2(${p.slice(-2).join()}));
      }`;this.userCode=`
      float getAChannel(${m.join()}) {
        return getChannel(getA(${p.join()}),
                               vec2(${p.slice(-2).join()}));
      }
      ${$}
      void main() {
        ${u} coords = getOutputCoords();
        bool hasNextCol = ${c[l-1]} < ${i[l-1]-1};
        bool hasNextRow = ${c[l-2]} < ${i[l-2]-1};
        ${h}
        ivec4 srcIdx = ivec4(sourceLocR${f}, sourceLocG${f},
          sourceLocB${f}, sourceLocA${f}) * ${n};
        ivec4 inIdx = srcIdx;
        vec4 bestIndex = vec4(inIdx);
        vec4 bestValue = ${k};

        for (int i = 0; i < ${n}; i++) {
          inIdx = srcIdx;
          ${v}
          vec4 candidate = ${k};
          bvec4 nan = isnan(candidate);
          bvec4 replace = bvec4(
            vec4(${b}(candidate, bestValue)) * (vec4(1.0) - vec4(nan)));

          bestValue = vec4(replace.x  ? candidate.x : bestValue.x,
                           replace.y  ? candidate.y : bestValue.y,
                           replace.z  ? candidate.z : bestValue.z,
                           replace.w  ? candidate.w : bestValue.w);
          bestIndex = mix(bestIndex, vec4(inIdx), vec4(replace));
          srcIdx++;
        }
        setOutput(bestIndex);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function WD(t,e,n,s=null){let r=e.shape[0],o=e.shape[1];s!=null&&(r=s.shape[0],o=s.shape[1]);const a=cm(o),i={windowSize:a,inSize:o,batchSize:r,outSize:Math.ceil(o/a)},l=new hZ(i,n,s==null),u=[e];s!=null&&u.push(s);const c=t.runWebGLProgram(l,u,"int32");if(c.shape[1]===1)return c;const h=WD(t,e,n,c);return t.disposeIntermediateTensorInfo(c),h}function UD(t,e,n,s=null){const r=s!=null?s.shape:e.shape,o=r[r.length-1],a=cm(o),i=new dZ(r,a,n,s==null),l=s==null?[e]:[e,s],u=t.runWebGLProgram(i,l,"int32");if(u.shape.length===e.shape.length){const c=UD(t,e,n,u);return t.disposeIntermediateTensorInfo(u),c}return u}function GD(t,e,n,s){const r=[n];if(nn("arg"+s.charAt(0).toUpperCase()+s.slice(1),r,e.shape.length),!G().getBool("WEBGL_PACK_REDUCE")||e.shape.length<=2){const o=[],a=t.texData.get(e.dataId),i=a!==null&&a.isPacked;let l=e;i&&(l=t.unpackTensor(e),o.push(l));const[u,c]=qt(l.shape,r),h=K(c),d=le({inputs:{x:l},backend:t,attrs:{shape:[-1,h]}});o.push(d);const p=WD(t,d,s);o.push(p);const f=le({inputs:{x:p},backend:t,attrs:{shape:u}});return o.forEach(m=>t.disposeIntermediateTensorInfo(m)),f}return UD(t,e,s)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pZ(t){const{inputs:e,backend:n,attrs:s}=t,{x:r}=e,{axis:o}=s;let a=Fe(o,r.shape);const i=gt(a,r.shape.length);let l=r;const u=[];i!=null&&(l=$n({inputs:{x:r},backend:n,attrs:{perm:i}}),u.push(l),a=Ct(a.length,l.shape.length)),nn("argMax",[a[0]],l.shape.length);const c=GD(n,l,a[0],"max");return u.forEach(h=>n.disposeIntermediateTensorInfo(h)),c}const fZ={kernelName:Mp,backendName:"webgl",kernelFunc:pZ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function mZ(t){const{inputs:e,backend:n,attrs:s}=t,{x:r}=e,{axis:o}=s;let a=Fe(o,r.shape);const i=gt(a,r.shape.length);let l=r;const u=[];i!=null&&(l=$n({inputs:{x:r},backend:n,attrs:{perm:i}}),u.push(l),a=Ct(a.length,l.shape.length)),nn("argMin",[a[0]],l.shape.length);const c=GD(n,l,a[0],"min");return u.forEach(h=>n.disposeIntermediateTensorInfo(h)),c}const gZ={kernelName:Bp,backendName:"webgl",kernelFunc:mZ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const yZ=Gs+`
  if (abs(x) > 1.) {
    return NAN;
  }
  return asin(x);
`,xZ=Ge({opSnippet:yZ}),bZ={kernelName:ec,backendName:"webgl",kernelFunc:xZ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const wZ=Gs+"return log(x + sqrt(x * x + 1.0));",vZ=Ge({opSnippet:wZ}),SZ={kernelName:tc,backendName:"webgl",kernelFunc:vZ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const kZ=Gs+`
  return atan(x);
`,$Z=Ge({opSnippet:kZ}),CZ={kernelName:nc,backendName:"webgl",kernelFunc:$Z};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const NZ=Dw+`
  return atan(a, b);
`,IZ=`
  vec4 result = atan(a, b);
  bvec4 isNaNA = isnan(a);
  bvec4 isNaNB = isnan(b);
  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);
  `+ni+`
  return result;
`,TZ=rn({opSnippet:NZ,packedOpSnippet:IZ}),EZ={kernelName:rc,backendName:"webgl",kernelFunc:TZ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const RZ=Gs+`
  if ((x < -1.0) || (x > 1.0)) return NAN;
return (log(1.0 + x) - log(1.0 - x)) / 2.0;`,DZ=Ge({opSnippet:RZ}),AZ={kernelName:sc,backendName:"webgl",kernelFunc:DZ};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Gu{constructor(e,n,s,r=!1,o=!1){if(this.variableNames=["x"],n==="avg"&&s)throw new Error("Cannot compute positions for average pool.");const a=e.filterWidth,i=e.strideHeight,l=e.strideWidth,u=e.dilationHeight,c=e.dilationWidth,h=e.effectiveFilterHeight,d=e.effectiveFilterWidth,p=e.padInfo.top,f=e.padInfo.left;this.outputShape=e.outShape;const m=n==="avg",y=`((batch  * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + d`,g=`(xR * ${e.inWidth} + xC) * ${e.inChannels} + d`;let x="0.0";if(m||(x="-1.0 / 1e-20"),s){const N=">=";this.userCode=`
        const ivec2 strides = ivec2(${i}, ${l});
        const ivec2 pads = ivec2(${p}, ${f});

        void main() {
          ivec4 coords = getOutputCoords();
          int batch = coords[0];
          int d = coords[3];

          ivec2 xRCCorner = coords.yz * strides - pads;
          int xRCorner = xRCCorner.x;
          int xCCorner = xRCCorner.y;

          // max/min x(?, ?, d) to get y(yR, yC, d).
          // ? = to be determined
          float minMaxValue = 0.0;
          float minMaxValueFound = 0.0;
          int minMaxPosition = 0;
          float avgValue = 0.0;

          for (int wR = 0; wR < ${h};
              wR += ${u}) {
            int xR = xRCorner + wR;

            if (xR < 0 || xR >= ${e.inHeight}) {
              continue;
            }

            for (int wC = 0; wC < ${d};
                wC += ${c}) {
              int xC = xCCorner + wC;

              if (xC < 0 || xC >= ${e.inWidth}) {
                continue;
              }

              float value = getX(batch, xR, xC, d);

              // If a min / max value has already been found, use it. If not,
              // use the current value.
              float currMinMaxValue = mix(
                  value, minMaxValue, minMaxValueFound);
              if (value ${N} currMinMaxValue) {
                minMaxValue = value;
                minMaxValueFound = 1.0;
                minMaxPosition = ${r?o?y:g:`wR * ${d} + wC`};
              }
            }
          }
          setOutput(float(minMaxPosition));
        }
      `;return}const w="max";let b=`${n}(${n}(${n}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;n==="avg"&&(b="avgValue / max(count, 1.0)");const v=Math.floor(a/4)*4,k=a%4,$=`
      if (${m}) {
        avgValue += dot(values, ones);
      } else {
        minMaxValue = ${w}(values, minMaxValue);
      }
    `;this.userCode=`
      const ivec2 strides = ivec2(${i}, ${l});
      const ivec2 pads = ivec2(${p}, ${f});
      const float initializationValue = ${x};
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float count = 0.0;

      float getValue(int batch, int xR, int xC, int d) {
        if (xC < 0 || xC >= ${e.inWidth}) {
          return initializationValue;
        }
        count += 1.0;
        return getX(batch, xR, xC, d);
      }

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d = coords[3];

        ivec2 xRCCorner = coords.yz * strides - pads;
        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        // max/min x(?, ?, d) to get y(yR, yC, d).
        // ? = to be determined
        vec4 minMaxValue = vec4(${x});
        float avgValue = 0.0;
        count = 0.0;

        for (int wR = 0; wR < ${h};
            wR += ${u}) {
          int xR = xRCorner + wR;

          if (xR < 0 || xR >= ${e.inHeight}) {
            continue;
          }

          for (int wC = 0; wC < ${v}; wC += 4) {
            int xC = xCCorner + wC * ${c};

            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              getValue(batch, xR, xC + ${c}, d),
              getValue(batch, xR, xC + 2 * ${c}, d),
              getValue(batch, xR, xC + 3 * ${c}, d)
            );

            ${$}
          }

          int xC = xCCorner + ${v};
          if (${k===1}) {
            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              initializationValue,
              initializationValue,
              initializationValue
            );

            ${$}
          } else if (${k===2}) {
            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              getValue(batch, xR, xC + ${c}, d),
              initializationValue,
              initializationValue
            );

            ${$}
          } else if (${k===3}) {
            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              getValue(batch, xR, xC + ${c}, d),
              getValue(batch, xR, xC + 2 * ${c}, d),
              initializationValue
            );

            ${$}
          }
        }
        setOutput(${b});
      }
    `}}class _w{constructor(e,n,s,r=!1,o=!1){if(this.variableNames=["x"],n==="avg"&&s)throw new Error("Cannot compute positions for average pool.");const a=e.filterWidth,i=e.strideDepth,l=e.strideHeight,u=e.strideWidth,c=e.dilationDepth,h=e.dilationHeight,d=e.dilationWidth,p=e.effectiveFilterDepth,f=e.effectiveFilterHeight,m=e.effectiveFilterWidth,y=e.padInfo.front,g=e.padInfo.top,x=e.padInfo.left;this.outputShape=e.outShape;const w=n==="avg";let b="0.0";if(w||(b="-1.0 / 1e-20"),s){const T=">=";this.userCode=`
        const ivec3 strides =
            ivec3(${i}, ${l}, ${u});
        const ivec3 pads = ivec3(${y}, ${g}, ${x});

        void main() {
          ivec5 coords = getOutputCoords();
          int batch = coords.x;
          int ch = coords.u;

          ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;
          int xDCorner = xCorner.x;
          int xRCorner = xCorner.y;
          int xCCorner = xCorner.z;

          // max/min x(?, ?, ?, ch) to get y(yD, yR, yC, ch).
          // ? = to be determined
          float minMaxValue = 0.0;
          float minMaxValueFound = 0.0;
          int minMaxPosition = 0;

          for (int wD = 0; wD < ${p};
              wD += ${c}) {
            int xD = xDCorner + wD;

            if (xD < 0 || xD >= ${e.inDepth}) {
              continue;
            }

            for (int wR = 0; wR < ${f};
                wR += ${h}) {
              int xR = xRCorner + wR;

              if (xR < 0 || xR >= ${e.inHeight}) {
                continue;
              }

              for (int wC = 0; wC < ${m};
                  wC += ${d}) {
                int xC = xCCorner + wC;

                if (xC < 0 || xC >= ${e.inWidth}) {
                  continue;
                }

                float value = getX(batch, xD, xR, xC, ch);

                // If a min / max value has already been found, use it. If not,
                // use the current value.
                float currMinMaxValue = mix(
                    value, minMaxValue, minMaxValueFound);
                if (value ${T} currMinMaxValue) {
                  minMaxValue = value;
                  minMaxValueFound = 1.0;
                  minMaxPosition = ${r?o?`(((batch * ${e.inDepth} + xD) * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + ch`:`((xD * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + ch`:`wD * ${f} * ${m} +
                      wR * ${m} + wC`};
                }
              }
            }
          }
          setOutput(float(minMaxPosition));
        }
      `;return}const v="max";let k=`${n}(${n}(${n}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;n==="avg"&&(k="avgValue / max(count, 1.0)");const $=Math.floor(a/4)*4,N=a%4,E=`
      if (${w}) {
        avgValue += dot(values, ones);
      } else {
        minMaxValue = ${v}(values, minMaxValue);
      }
    `;this.userCode=`
      const ivec3 strides =
        ivec3(${i}, ${l}, ${u});
      const ivec3 pads = ivec3(${y}, ${g}, ${x});
      const float initializationValue = ${b};
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float count = 0.0;

      float getValue(int batch, int xD, int xR, int xC, int ch) {
        if (xC < 0 || xC >= ${e.inWidth}) {
          return initializationValue;
        }
        count += 1.0;
        return getX(batch, xD, xR, xC, ch);
      }

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int ch = coords.u;

        ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;
        int xDCorner = xCorner.x;
        int xRCorner = xCorner.y;
        int xCCorner = xCorner.z;

        // max/min x(?, ?, ?, d) to get y(yD, yR, yC, ch).
        // ? = to be determined
        vec4 minMaxValue = vec4(${b});
        float avgValue = 0.0;
        count = 0.0;

        for (int wD = 0; wD < ${p};
            wD += ${c}) {
          int xD = xDCorner + wD;

          if (xD < 0 || xD >= ${e.inDepth}) {
            continue;
          }

          for (int wR = 0; wR < ${f};
            wR += ${h}) {
            int xR = xRCorner + wR;

            if (xR < 0 || xR >= ${e.inHeight}) {
              continue;
            }

            for (int wC = 0; wC < ${$}; wC += 4) {
              int xC = xCCorner + wC * ${d};

              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                getValue(batch, xD, xR, xC + ${d}, ch),
                getValue(batch, xD, xR, xC + 2 * ${d}, ch),
                getValue(batch, xD, xR, xC + 3 * ${d}, ch)
              );

              ${E}
            }

            int xC = xCCorner + ${$};
            if (${N===1}) {
              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                initializationValue,
                initializationValue,
                initializationValue
              );

              ${E}
            } else if (${N===2}) {
              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                getValue(batch, xD, xR, xC + ${d}, ch),
                initializationValue,
                initializationValue
              );

              ${E}
            } else if (${N===3}) {
              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                getValue(batch, xD, xR, xC + ${d}, ch),
                getValue(batch, xD, xR, xC + 2 * ${d}, ch),
                initializationValue
              );

              ${E}
            }
          }
        }
        setOutput(${k});
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _Z(t){const{inputs:e,backend:n,attrs:s}=t,{x:r}=e;fh(r,"avgPool");const{filterSize:o,strides:a,pad:i,dimRoundingMode:l}=s,u=1;C(tn(a,u),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${a} and dilations '${u}'`);const c=Ws(r.shape,o,a,u,i,l);if(c.filterWidth===1&&c.filterHeight===1&&Me(c.inShape,c.outShape))return Zn({inputs:{x:r},backend:n});const h=new Gu(c,"avg",!1);return n.runWebGLProgram(h,[r],"float32")}const OZ={kernelName:Vp,backendName:"webgl",kernelFunc:_Z};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function FZ(t){const{inputs:e,backend:n,attrs:s}=t,{x:r}=e,{filterSize:o,strides:a,pad:i,dimRoundingMode:l,dataFormat:u}=s,c=[1,1,1],h=no(r.shape,o,a,c,i,l,u),d=new _w(h,"avg",!1);return n.runWebGLProgram(d,[r],"float32")}const LZ={kernelName:Wp,backendName:"webgl",kernelFunc:FZ};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class PZ{constructor(e){this.variableNames=["dy"],this.outputShape=e.inShape;const n=e.filterHeight,s=e.filterWidth,r=e.strideHeight,o=e.strideWidth,a=e.dilationHeight,i=e.dilationWidth,l=e.effectiveFilterHeight,u=e.effectiveFilterWidth,c=l-1-e.padInfo.top,h=u-1-e.padInfo.left,d=1/(n*s);this.userCode=`
      const ivec2 pads = ivec2(${c}, ${h});
      const float avgMultiplier = float(${d});

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];

        ivec2 dyRCCorner = coords.yz - pads;
        int dyRCorner = dyRCCorner.x;
        int dyCCorner = dyRCCorner.y;

        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${l};
            wR += ${a}) {
          float dyR = float(dyRCorner + wR) / ${r}.0;

          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          for (int wC = 0; wC < ${u};
            wC+= ${i}) {
            float dyC = float(dyCCorner + wC) / ${o}.0;

            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            float dyValue = getDy(b, idyR, idyC, d);

            dotProd += dyValue * avgMultiplier;
          }
        }
        setOutput(dotProd);
      }
    `}}class zZ{constructor(e){this.variableNames=["dy"],this.outputShape=e.inShape;const n=e.filterDepth,s=e.filterHeight,r=e.filterWidth,o=e.strideDepth,a=e.strideHeight,i=e.strideWidth,l=e.dilationDepth,u=e.dilationHeight,c=e.dilationWidth,h=e.effectiveFilterDepth,d=e.effectiveFilterHeight,p=e.effectiveFilterWidth,f=h-1-e.padInfo.front,m=d-1-e.padInfo.top,y=p-1-e.padInfo.left,g=1/(n*s*r);this.userCode=`
      const ivec3 pads = ivec3(${f}, ${m}, ${y});
      const float avgMultiplier = float(${g});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int ch = coords.u;

        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;
        int dyDCorner = dyCorner.x;
        int dyRCorner = dyCorner.y;
        int dyCCorner = dyCorner.z;

        // Convolve dy(?, ?, ?, d) with pos mask(:, :, :, ch) to get
        // dx(xD, xR, xC, ch).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;

        for (int wD = 0; wD < ${h};
            wD += ${l}) {
          float dyD = float(dyDCorner + wD) / ${o}.0;

          if (dyD < 0.0 || dyD >= ${e.outDepth}.0 || fract(dyD) > 0.0) {
            continue;
          }
          int idyD = int(dyD);

          for (int wR = 0; wR < ${d};
              wR += ${u}) {
            float dyR = float(dyRCorner + wR) / ${a}.0;

            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||
                fract(dyR) > 0.0) {
              continue;
            }
            int idyR = int(dyR);

            for (int wC = 0; wC < ${p};
                wC += ${c}) {
              float dyC = float(dyCCorner + wC) / ${i}.0;

              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                  fract(dyC) > 0.0) {
                continue;
              }
              int idyC = int(dyC);

              float dyValue = getDy(batch, idyD, idyR, idyC, ch);

              dotProd += dyValue * avgMultiplier;
            }
          }
        }
        setOutput(dotProd);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function MZ(t){const{inputs:e,backend:n,attrs:s}=t,{dy:r,input:o}=e,a=o,{filterSize:i,strides:l,pad:u,dimRoundingMode:c}=s,h=[1,1,1],d=no(a.shape,i,l,h,u,c),p=new zZ(d);return n.runWebGLProgram(p,[r],a.dtype)}const BZ={kernelName:N1,backendName:"webgl",kernelFunc:MZ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function VZ(t){const{inputs:e,backend:n,attrs:s}=t,{dy:r,input:o}=e,a=o;fh([r,o],"avgPoolGrad");const{filterSize:i,strides:l,pad:u}=s,c=Ws(a.shape,i,l,1,u),h=new PZ(c);return n.runWebGLProgram(h,[r],a.dtype)}const WZ={kernelName:C1,backendName:"webgl",kernelFunc:VZ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function UZ(t){const{inputs:e,backend:n,attrs:s}=t,{a:r,b:o}=e,{transposeA:a,transposeB:i}=s;return gp({a:r,b:o,transposeA:a,transposeB:i,backend:n})}const GZ={kernelName:Up,backendName:"webgl",kernelFunc:UZ};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class HZ{constructor(e,n,s,r,o,a){this.outputShape=[],this.variableNames=["x","mean","variance"],Re(e,n),Re(e,s);let i="0.0";r!=null&&(Re(e,r),this.variableNames.push("offset"),i="getOffsetAtOutCoords()");let l="1.0";o!=null&&(Re(e,o),this.variableNames.push("scale"),l="getScaleAtOutCoords()"),this.outputShape=e,this.userCode=`
      void main() {
        float x = getXAtOutCoords();
        float mean = getMeanAtOutCoords();
        float variance = getVarianceAtOutCoords();
        float offset = ${i};
        float scale = ${l};
        float inv = scale * inversesqrt(variance + float(${a}));
        setOutput(dot(vec3(x, -mean, offset), vec3(inv, inv, 1)));
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class jZ{constructor(e,n,s,r,o,a){this.packedInputs=!0,this.packedOutput=!0,this.variableNames=["x","mean","variance"],Re(e,n),Re(e,s);let i="vec4(0.0)";r!=null&&(Re(e,r),this.variableNames.push("offset"),i="getOffsetAtOutCoords()");let l="vec4(1.0)";o!=null&&(Re(e,o),this.variableNames.push("scale"),l="getScaleAtOutCoords()"),this.outputShape=e,this.userCode=`
      void main() {
        vec4 offset = ${i};
        vec4 scale = ${l};

        vec4 x = getXAtOutCoords();
        vec4 mean = getMeanAtOutCoords();
        vec4 variance = getVarianceAtOutCoords();

        vec4 inv = scale * inversesqrt(variance + vec4(${a}));

        setOutput((x - mean) * inv + offset);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const KZ=({inputs:t,backend:e,attrs:n})=>{const{x:s,mean:r,variance:o,offset:a,scale:i}=t;C(r.shape.length===o.shape.length,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),C(a==null||r.shape.length===a.shape.length,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),C(i==null||r.shape.length===i.shape.length,()=>"Batch normalization gradient requires mean and scale to have equal ranks.");let{varianceEpsilon:l}=n;l==null&&(l=.001);const u=[s,r,o];let c=null;a!=null&&(c=a.shape,u.push(a));let h=null;i!=null&&(h=i.shape,u.push(i));const d=G().getBool("WEBGL_PACK_NORMALIZATION")?new jZ(s.shape,r.shape,o.shape,c,h,l):new HZ(s.shape,r.shape,o.shape,c,h,l);return e.runWebGLProgram(d,u,u[0].dtype)},qZ={kernelName:nf,backendName:"webgl",kernelFunc:KZ};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class XZ{constructor(e){this.variableNames=["source"],this.outputShape=e,this.rank=e.length;const n=Ye(this.rank);this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];const s=YZ(this.rank);let r;const o=e.map((a,i)=>`sourceLoc.${v0[i]} = start[${i}] + coords.${v0[i]};`);r=`
        ${n} sourceLoc;
        ${n} coords = getOutputCoords();
        ${o.join(`
`)}
      `,this.userCode=`
      void main() {
        ${r}
        setOutput(getSource(${s}));
      }
    `}}const v0=["x","y","z","w","u","v"];function YZ(t){if(t===1)return"sourceLoc";if(t<=6)return v0.slice(0,t).map(e=>"sourceLoc."+e).join(",");throw Error(`Slicing for rank ${t} is not yet supported`)}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class QZ{constructor(e){this.variableNames=["source"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.rank=e.length,this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];const n=Ye(this.rank),s=vn("coords",this.rank),r=vn("sourceLoc",this.rank),o=this.rank===1?"sourceLoc":`vec2(${r.slice(-2).join()})`,a=`getChannel(getSource(${r.join()}), ${o})`,i=`
      result.x = ${a};
      if (++${s[this.rank-1]} < ${e[this.rank-1]}) {
        ++${r[this.rank-1]};
        result.y = ${a};
        --${r[this.rank-1]};
      }
    `,l=this.rank===1?"":`
      --${s[this.rank-1]};
      if (++${s[this.rank-2]} < ${e[this.rank-2]}) {
        ++${r[this.rank-2]};
        result.z = ${a};
        if (++${s[this.rank-1]} < ${e[this.rank-1]}) {
          ++${r[this.rank-1]};
          result.w = ${a};
        }
      }
    `,u=this.rank<=4?`sourceLoc = coords +
            ${n}(${e.map((c,h)=>`start[${h}]`).join()});`:e.map((c,h)=>`${r[h]} = ${s[h]} + start[${h}];`).join(`
`);this.userCode=`
      void main() {
        ${n} coords = getOutputCoords();
        ${n} sourceLoc;
        ${u}
        vec4 result = vec4(0.);
        ${i}
        ${l}
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ZZ(t,e,n,s){const r=s.texData.get(t.dataId),o=s.makeTensorInfo(n,t.dtype),a=s.texData.get(o.dataId);Object.assign(a,r),a.refCount=1,a.shape=n,a.dtype=t.dtype;let i=Ib(e,ve(t.shape));r.slice&&(i+=r.slice.flatOffset),a.slice={flatOffset:i,origDataId:r.slice&&r.slice.origDataId||t.dataId};const l=s.dataRefCount.get(a.slice.origDataId)||1;return s.dataRefCount.set(a.slice.origDataId,l+1),o}function Al(t){const{inputs:e,backend:n,attrs:s}=t,{x:r}=e,{begin:o,size:a}=s,[i,l]=um(r,o,a);if($b(r,i,l),K(l)===0)return n.makeTensorInfo(l,r.dtype,[]);if(n.shouldExecuteOnCPU([r])||r.dtype==="string"){const h=n.texData.get(r.dataId),d=GY(h.values,i,l,r.shape,r.dtype);return n.makeTensorInfo(l,r.dtype,d)}const{isPacked:u}=n.texData.get(r.dataId),c=Nb(r.shape,i,l);if(u||!c){const h=G().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new QZ(l):new XZ(l),d=[i];return n.runWebGLProgram(h,[r],r.dtype,d)}return n.uploadToGPU(r.dataId),ZZ(r,i,l,n)}const JZ={kernelName:Af,backendName:"webgl",kernelFunc:Al};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const eJ=t=>{const{inputs:e,backend:n,attrs:s}=t,{x:r}=e,{blockShape:o,crops:a}=s;C(r.shape.length<=4,()=>"batchToSpaceND for rank > 4 with a WebGL backend not implemented yet");const i=o.reduce((x,w)=>x*w),l=th(r.shape,o,i),u=nh(l.length,o.length),c=sh(r.shape,o,i),h=Ab(a,o.length),d=_b(c,a,o.length),p=[],f=le({inputs:{x:r},backend:n,attrs:{shape:l}}),m=$n({inputs:{x:f},backend:n,attrs:{perm:u}}),y=le({inputs:{x:m},backend:n,attrs:{shape:c}}),g=Al({inputs:{x:y},backend:n,attrs:{begin:h,size:d}});return p.push(f),p.push(m),p.push(y),p.forEach(x=>n.disposeIntermediateTensorInfo(x)),g},tJ={kernelName:Gp,backendName:"webgl",kernelFunc:eJ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function nJ(t){const{inputs:e,backend:n,attrs:s}=t,{x:r,weights:o}=e,{size:a}=s,i=n.readSync(r.dataId),l=n.readSync(o.dataId),u=DD(i,l,o.dtype,o.shape,a);return n.makeTensorInfo([a],o.dtype,u)}const sJ={kernelName:I1,backendName:"webgl",kernelFunc:nJ};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const rJ=`
  int r = int(a.r) & int(b.r);
  int g = int(a.g) & int(b.g);
  int rb = int(a.b) & int(b.b);
  int ra = int(a.a) & int(b.a);
  return vec4(r, g, rb, ra);
`,oJ=`
  return float(int(a.r) & int(b.r));
`;function aJ(t){const{inputs:e,backend:n}=t,{a:s,b:r}=e,o=G().getBool("WEBGL_PACK_BINARY_OPERATIONS"),a=G().getNumber("WEBGL_VERSION");if(n.shouldExecuteOnCPU([s,r])||a===1){const l=n.texData.get(s.dataId).values,u=n.texData.get(r.dataId).values,[c,h]=fY(s.shape,r.shape,l,u,s.dtype),d=n.makeTensorInfo(h,s.dtype),p=n.texData.get(d.dataId);return p.values=c,d}let i;return o?i=new Rl(rJ,s.shape,r.shape,!1):i=new Ba(oJ,s.shape,r.shape),n.runWebGLProgram(i,[s,r],s.dtype)}const iJ={kernelName:Hp,backendName:"webgl",kernelFunc:aJ};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function lJ(t){const{inputs:e,backend:n}=t,{s0:s,s1:r}=e,o=n.readSync(s.dataId),a=n.readSync(r.dataId),i=Re(Array.from(o),Array.from(a));return n.makeTensorInfo([i.length],"int32",Int32Array.from(i))}const uJ={kernelName:T1,backendName:"webgl",kernelFunc:lJ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const cJ="return float(a != b);",HD=rn({opSnippet:cJ,cpuKernelImpl:FY,dtype:"bool"}),hJ={kernelName:wf,backendName:"webgl",kernelFunc:HD};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gh(t){const{inputs:e,backend:n}=t,{input:s}=e,r=n.texData.get(s.dataId);return Zn({inputs:{x:r.complexTensorInfos.real},backend:n})}const dJ={kernelName:ix,backendName:"webgl",kernelFunc:gh};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const pJ="return float(int(x));";function fJ(t,e){const n=new Sr(t.shape,pJ),s=e.runWebGLProgram(n,[t],"int32");return{dataId:s.dataId,shape:s.shape,dtype:s.dtype}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function S0(t){const{inputs:e,backend:n,attrs:s}=t,{x:r}=e,{dtype:o}=s;if(o==="complex64"){if(r.dtype==="complex64")return Zn({inputs:{x:r},backend:n});const a=Ot(r.shape),i=S0({inputs:{x:r},backend:n,attrs:{dtype:"float32"}}),l=sa({inputs:{real:i,imag:a},backend:n});return a.dispose(),n.disposeIntermediateTensorInfo(i),l}if(r.dtype==="complex64"){const a=gh({inputs:{input:r},backend:n}),i=S0({inputs:{x:a},backend:n,attrs:{dtype:o}});return n.disposeIntermediateTensorInfo(a),i}if(!iN(r.dtype,o)){const a=Zn({inputs:{x:r},backend:n});return{dataId:a.dataId,shape:a.shape,dtype:o}}if(n.shouldExecuteOnCPU([r])){const a=n.texData.get(r.dataId).values,[i,l,u]=mY(a,r.shape,r.dtype,o);return n.makeTensorInfo(i,l,u)}if(o==="int32")return fJ(r,n);if(o==="bool"){const a=n.makeTensorInfo([],"bool",en("bool",1)),l=HD({inputs:{a:r,b:a},backend:n});return n.disposeIntermediateTensorInfo(a),l}throw new Error(`Error in Cast: failed to cast ${r.dtype} to ${o}`)}const mJ={kernelName:oc,backendName:"webgl",kernelFunc:S0};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const vk="return ceil(x);",gJ=Ge({opSnippet:vk,packedOpSnippet:vk,cpuKernelImpl:gY}),yJ={kernelName:ac,backendName:"webgl",kernelFunc:gJ};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class xJ{constructor(e){this.variableNames=["A"],this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}],this.outputShape=e,this.userCode=`

      void main() {
        float value = getAAtOutCoords();
        if (isnan(value)) {
          setOutput(value);
          return;
        }

        setOutput(clamp(value, minVal, maxVal));
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class bJ{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}],this.outputShape=e,this.userCode=`
      void main() {
        vec4 value = getAAtOutCoords();

        if (any(isnan(value))) {
          setOutput(value);
          return;
        }

        setOutput(clamp(value, vec4(minVal), vec4(maxVal)));
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function wJ(t){const{inputs:e,backend:n,attrs:s}=t,{x:r}=e,{clipValueMin:o,clipValueMax:a}=s;let i;G().getBool("WEBGL_PACK_CLIP")?i=new bJ(r.shape):i=new xJ(r.shape);const l=[[o],[a]];return n.runWebGLProgram(i,[r],r.dtype,l)}const vJ={kernelName:ic,backendName:"webgl",kernelFunc:wJ};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class SJ{constructor(e){this.variableNames=["real","imag"],this.outputShape=e,this.userCode=`
      void main() {
        float re = abs(getRealAtOutCoords());
        float im = abs(getImagAtOutCoords());
        float mx = max(re, im);

        // sadly the length function in glsl is not underflow-safe
        // (at least not on Intel GPUs). So the safe solution is
        // to ensure underflow-safety in all cases.
        setOutput(
          mx == 0.0 ? 0.0 : mx * length(vec2(1, min(re, im)/mx))
        );
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Sk(t,e){return{dataId:e.dataId,dtype:e.dtype,shape:t.shape}}function kJ(t){const{inputs:e,backend:n}=t,{x:s}=e,r=n.texData.get(s.dataId),o=new SJ(s.shape),a=[Sk(s,r.complexTensorInfos.real),Sk(s,r.complexTensorInfos.imag)];return n.runWebGLProgram(o,a,a[0].dtype)}const $J={kernelName:jp,backendName:"webgl",kernelFunc:kJ};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class CJ{constructor(e){this.outputShape=[],this.outputShape=Ir(e,1),this.variableNames=e.map((a,i)=>`T${i}`);const n=new Array(e.length-1);n[0]=e[0][1];for(let a=1;a<n.length;a++)n[a]=n[a-1]+e[a][1];const s=[`if (yC < ${n[0]}) setOutput(getT0(yR, yC));`];for(let a=1;a<n.length;a++){const i=n[a-1];s.push(`else if (yC < ${n[a]}) setOutput(getT${a}(yR, yC-${i}));`)}const r=n.length,o=n[n.length-1];s.push(`else setOutput(getT${r}(yR, yC-${o}));`),this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int yR = coords.x;
        int yC = coords.y;

        ${s.join(`
        `)}
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class NJ{constructor(e,n){this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[],this.outputShape=Ir(e,n);const s=this.outputShape,r=s.length,o=Ye(r),a=vn("coords",r),i=["x","y","z","w","u","v"].slice(0,r);this.variableNames=e.map((m,y)=>`T${y}`);const l=new Array(e.length-1);l[0]=e[0][n];for(let m=1;m<l.length;m++)l[m]=l[m-1]+e[m][n];const u=i[n],c=i.slice(-2),h=i.join();let d=`if (${u} < ${l[0]}) {
        return getChannel(
            getT0(${h}), vec2(${c.join()}));
        }`;for(let m=1;m<l.length;m++){const y=l[m-1];d+=`
        if (${u} < ${l[m]}  && ${u} >= ${l[m-1]}) {
          return getChannel(
            getT${m}(${Yh(i,u,y)}),
            vec2(${Yh(c,u,y)}));
        }`}const p=l.length,f=l[l.length-1];d+=`
        return getChannel(
          getT${p}(${Yh(i,u,f)}),
          vec2(${Yh(c,u,f)}));`,this.userCode=`
      float getValue(${i.map(m=>"int "+m)}) {
        ${d}
      }

      void main() {
        ${o} coords = getOutputCoords();
        vec4 result = vec4(getValue(${a}), 0., 0., 0.);

        ${a[r-1]} = ${a[r-1]} + 1;
        if (${a[r-1]} < ${s[r-1]}) {
          result.g = getValue(${a});
        }

        ${a[r-2]} = ${a[r-2]} + 1;
        if (${a[r-2]} < ${s[r-2]}) {
          result.a = getValue(${a});
        }

        ${a[r-1]} = ${a[r-1]} - 1;
        if (${a[r-2]} < ${s[r-2]} &&
            ${a[r-1]} < ${s[r-1]}) {
          result.b = getValue(${a});
        }
        setOutput(result);
      }
    `}}function Yh(t,e,n){const s=t.indexOf(e);return t.map((o,a)=>a===s?`${o} - ${n}`:o).join()}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Em(t){const{inputs:e,backend:n}=t,{input:s}=e,r=n.texData.get(s.dataId);return Zn({inputs:{x:r.complexTensorInfos.imag},backend:n})}const IJ={kernelName:K1,backendName:"webgl",kernelFunc:Em};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tu(t,e,n){const s=t[0].dtype;if(s==="complex64"){const p=t.map(x=>gh({inputs:{input:x},backend:n})),f=t.map(x=>Em({inputs:{input:x},backend:n})),m=tu(p,e,n),y=tu(f,e,n),g=sa({inputs:{real:m,imag:y},backend:n});return p.forEach(x=>n.disposeIntermediateTensorInfo(x)),f.forEach(x=>n.disposeIntermediateTensorInfo(x)),n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(y),g}let r=n.shouldExecuteOnCPU(t);if(s==="string"&&(r=!0),r){const p=t.map(b=>{const k=[-1,K(b.shape.slice(e))];return le({inputs:{x:b},backend:n,attrs:{shape:k}})}),f=p.map(b=>({vals:n.readSync(b.dataId),shape:b.shape})),m=Ir(p.map(b=>b.shape),1),y=p[0].shape[0]===1,g=yY(f,m,s,y),x=Ir(t.map(b=>b.shape),e),w=n.makeTensorInfo(x,s,g);return p.forEach(b=>n.disposeIntermediateTensorInfo(b)),w}const o=t.filter(p=>K(p.shape)>0),a=G().getBool("WEBGL_PACK_ARRAY_OPERATIONS")&&o[0].shape.length>1;if(o.length===1){const p=a?new Sr(t[0].shape,co):new xo(t[0].shape,co);return n.runWebGLProgram(p,t,s)}const i=G().getNumber("WEBGL_MAX_TEXTURES_IN_SHADER");if(o.length>i){const p=[];for(let m=0;m<o.length;m+=i){const y=o.slice(m,m+i);p.push(tu(y,e,n))}const f=tu(p,e,n);for(const m of p)n.disposeIntermediateTensorInfo(m);return f}if(a){const p=new NJ(o.map(f=>f.shape),e);return n.runWebGLProgram(p,o,s)}const{tensors2D:l,outShape:u}=TJ(o,e,n),c=new CJ(l.map(p=>p.shape)),h=n.runWebGLProgram(c,l,s);l.forEach(p=>n.disposeIntermediateTensorInfo(p));const d=le({inputs:{x:h},attrs:{shape:u},backend:n});return n.disposeIntermediateTensorInfo(h),d}function TJ(t,e,n){const s=Ir(t.map(o=>o.shape),e);return{tensors2D:t.map(o=>le({inputs:{x:o},attrs:{shape:[-1,K(o.shape.slice(e))]},backend:n})),outShape:s}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function jD(t){const{inputs:e,backend:n,attrs:s}=t,{axis:r}=s,o=Fe(r,e[0].shape)[0],a=e.map(u=>u.shape);Eb(a,o);const i=Ir(e.map(u=>u.shape),o);if(K(i)===0)return n.makeTensorInfo(i,e[0].dtype,[]);const l=e.filter(u=>K(u.shape)>0);return l.length===1?Zn({inputs:{x:l[0]},backend:n}):tu(l,o,n)}const EJ={kernelName:Kp,backendName:"webgl",kernelFunc:jD};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class KD{constructor(e,n=!1,s=null,r=!1,o=!1){this.variableNames=["x","W"],this.outputShape=e.outShape;const a=e.padInfo.top,i=e.padInfo.left,l=e.strideHeight,u=e.strideWidth,c=e.dilationHeight,h=e.dilationWidth,d=e.filterHeight,p=e.filterWidth,f=Math.floor(e.inChannels/4)*4,m=e.inChannels%4,y=e.dataFormat==="channelsLast",g=y?1:2,x=y?2:3,w=y?3:1;let b="",v="";s&&(r?b=`float activation(float a) {
          float b = getPreluActivationWeightsAtOutCoords();
          ${s}
        }`:o?b=`float activation(float a) {
          float b = getLeakyreluAlphaAtOutCoords();
          ${s}
        }`:b=`
          float activation(float x) {
            ${s}
          }
        `,v="result = activation(result);");const k=n?"result += getBiasAtOutCoords();":"";n&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),o&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
      ${b}

      const ivec2 strides = ivec2(${l}, ${u});
      const ivec2 pads = ivec2(${a}, ${i});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d2 = coords[${w}];

        ivec2 xRCCorner =
            ivec2(coords[${g}], coords[${x}]) * strides - pads;
        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        // Convolve x(?, ?, d1) with w(:, :, d1, d2) to get y(yR, yC, d2).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${d}; wR++) {
          int xR = xRCorner + wR * ${c};

          if (xR < 0 || xR >= ${e.inHeight}) {
            continue;
          }

          for (int wC = 0; wC < ${p}; wC++) {
            int xC = xCCorner + wC * ${h};

            if (xC < 0 || xC >= ${e.inWidth}) {
              continue;
            }

            for (int d1 = 0; d1 < ${f}; d1 += 4) {
              vec4 wValues = vec4(
                getW(wR, wC, d1, d2),
                getW(wR, wC, d1 + 1, d2),
                getW(wR, wC, d1 + 2, d2),
                getW(wR, wC, d1 + 3, d2)
              );

              if (${y}) {
                vec4 xValues = vec4(
                  getX(batch, xR, xC, d1),
                  getX(batch, xR, xC, d1 + 1),
                  getX(batch, xR, xC, d1 + 2),
                  getX(batch, xR, xC, d1 + 3)
                );
                dotProd += dot(xValues, wValues);
              } else {
                vec4 xValues = vec4(
                  getX(batch, d1, xR, xC),
                  getX(batch, d1 + 1, xR, xC),
                  getX(batch, d1 + 2, xR, xC),
                  getX(batch, d1 + 3, xR, xC)
                );
                dotProd += dot(xValues, wValues);
              }
            }

            if (${m===1}) {

              if (${y}) {
                dotProd +=
                    getX(batch, xR, xC, ${f}) *
                    getW(wR, wC, ${f}, d2);
              } else {
                dotProd +=
                    getX(batch, ${f}, xR, xC) *
                    getW(wR, wC, ${f}, d2);
              }

            } else if (${m===2}) {
              vec2 wValues = vec2(
                getW(wR, wC, ${f}, d2),
                getW(wR, wC, ${f} + 1, d2)
              );

              if (${y}) {
                vec2 xValues = vec2(
                  getX(batch, xR, xC, ${f}),
                  getX(batch, xR, xC, ${f} + 1)
                );
                dotProd += dot(xValues, wValues);
              } else {
                vec2 xValues = vec2(
                  getX(batch, ${f}, xR, xC),
                  getX(batch, ${f} + 1, xR, xC)
                );
                dotProd += dot(xValues, wValues);
              }

            } else if (${m===3}) {
              vec3 wValues = vec3(
                getW(wR, wC, ${f}, d2),
                getW(wR, wC, ${f} + 1, d2),
                getW(wR, wC, ${f} + 2, d2)
              );

              if (${y}) {
                vec3 xValues = vec3(
                  getX(batch, xR, xC, ${f}),
                  getX(batch, xR, xC, ${f} + 1),
                  getX(batch, xR, xC, ${f} + 2)
                );
                dotProd += dot(xValues, wValues);
              } else {
                vec3 xValues = vec3(
                  getX(batch, ${f}, xR, xC),
                  getX(batch, ${f} + 1, xR, xC),
                  getX(batch, ${f} + 2, xR, xC)
                );
                dotProd += dot(xValues, wValues);
              }

            }
          }
        }

        float result = dotProd;
        ${k}
        ${v}
        setOutput(result);
      }
    `}}class RJ{constructor(e){this.variableNames=["x","W"],this.outputShape=e.outShape;const n=e.padInfo.front,s=e.padInfo.top,r=e.padInfo.left,o=e.strideDepth,a=e.strideHeight,i=e.strideWidth,l=e.dilationDepth,u=e.dilationHeight,c=e.dilationWidth,h=e.filterDepth,d=e.filterHeight,p=e.filterWidth,f=Math.floor(e.inChannels/4)*4,m=e.inChannels%4;this.userCode=`
      const ivec3 strides = ivec3(${o}, ${a}, ${i});
      const ivec3 pads = ivec3(${n}, ${s}, ${r});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int d2 = coords.u;

        ivec3 xFRCCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;
        int xFCorner = xFRCCorner.x;
        int xRCorner = xFRCCorner.y;
        int xCCorner = xFRCCorner.z;

        // Convolve x(?, ?, ?, d1) with w(:, :, :, d1, d2) to get
        // y(yF, yR, yC, d2). ? = to be determined. : = across all
        // values in that axis.
        float dotProd = 0.0;
        for (int wF = 0; wF < ${h}; wF++) {
          int xF = xFCorner + wF * ${l};

          if (xF < 0 || xF >= ${e.inDepth}) {
            continue;
          }

          for (int wR = 0; wR < ${d}; wR++) {
            int xR = xRCorner + wR * ${u};

            if (xR < 0 || xR >= ${e.inHeight}) {
              continue;
            }

            for (int wC = 0; wC < ${p}; wC++) {
              int xC = xCCorner + wC * ${c};

              if (xC < 0 || xC >= ${e.inWidth}) {
                continue;
              }

              for (int d1 = 0; d1 < ${f}; d1 += 4) {
                vec4 xValues = vec4(
                  getX(batch, xF, xR, xC, d1),
                  getX(batch, xF, xR, xC, d1 + 1),
                  getX(batch, xF, xR, xC, d1 + 2),
                  getX(batch, xF, xR, xC, d1 + 3)
                );
                vec4 wValues = vec4(
                  getW(wF, wR, wC, d1, d2),
                  getW(wF, wR, wC, d1 + 1, d2),
                  getW(wF, wR, wC, d1 + 2, d2),
                  getW(wF, wR, wC, d1 + 3, d2)
                );

                dotProd += dot(xValues, wValues);
              }

              if (${m===1}) {
                dotProd +=
                  getX(batch, xF, xR, xC, ${f}) *
                  getW(wF, wR, wC, ${f}, d2);
              } else if (${m===2}) {
                vec2 xValues = vec2(
                  getX(batch, xF, xR, xC, ${f}),
                  getX(batch, xF, xR, xC, ${f} + 1)
                );
                vec2 wValues = vec2(
                  getW(wF, wR, wC, ${f}, d2),
                  getW(wF, wR, wC, ${f} + 1, d2)
                );
                dotProd += dot(xValues, wValues);
              } else if (${m===3}) {
                vec3 xValues = vec3(
                  getX(batch, xF, xR, xC, ${f}),
                  getX(batch, xF, xR, xC, ${f} + 1),
                  getX(batch, xF, xR, xC, ${f} + 2)
                );
                vec3 wValues = vec3(
                  getW(wF, wR, wC, ${f}, d2),
                  getW(wF, wR, wC, ${f} + 1, d2),
                  getW(wF, wR, wC, ${f} + 2, d2)
                );
                dotProd += dot(xValues, wValues);
              }
            }
          }
        }
        setOutput(dotProd);
      }
    `}}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class qD{constructor(e,n=!1,s=null,r=!1,o=!1){this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=pn(this.outputShape.length);const a=e.padInfo.left,i=e.strideWidth,l=e.dilationWidth,u=e.filterHeight,c=e.filterWidth,h=c;let d=`
       int xR; int xC; int xCOffset;
       vec4 wTexel; vec4 previous; vec4 final;`;for(let y=0;y<c;y++)d+=`
           vec4 xTexelC${y*2};
           int xTexelC${y*2}Ready;
           vec4 xTexelC${y*2+1};
           int xTexelC${y*2+1}Ready;
           vec4 xC${y};`;d+=`
     for (int r = 0; r < ${u}; r++) {
      for (int d1 = 0; d1 < ${e.inChannels}; d1 += 2) {
       `;for(let y=0;y<c;y++)d+=`
           xTexelC${y*2} = vec4(0.0);
           xTexelC${y*2}Ready = 0;
           xTexelC${y*2+1} = vec4(0.0);
           xTexelC${y*2+1}Ready = 0;
           xC${y} = vec4(0.0);`;d+=`
         xR = xRCorner + r * dilations[0];
         if (xR >=0 && xR < inDims[0]) {
       `;for(let y=0;y<(h+1)/2;y++){const g=y*2;if(d+=`
           xC = xCCorner + ${g*l};
           `,i===1){if(g<c&&(a%2===1?(d+=`
                 xCOffset = xC + 1;
                 if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${g}Ready == 0) {
                   xTexelC${g} = getX(batch, xR, xCOffset, d1);

                   // Need to manually clear unused channels in case
                   // we're reading from recycled texture.
                   if (xCOffset + 1 >= inDims[1]) {
                     xTexelC${g}.zw = vec2(0.0);
                   }
                   xTexelC${g}Ready = 1;
                 }
               `,l===1&&g>0?d+=`
                 xC${g} = vec4(xTexelC${g-2}.zw, xTexelC${g}.xy);
                 `:d+=`
                   xCOffset = xC + 1 - 2;

                   if (xCOffset >= 0 && xCOffset < inDims[1]) {
                     previous = getX(batch, xR, xCOffset, d1);

                     // Need to manually clear unused channels in case
                     // we're reading from recycled texture.
                     if (xCOffset + 1 >= inDims[1]) {
                       previous.zw = vec2(0.0);
                     }

                     xC${g} = vec4(previous.zw, xTexelC${g}.xy);
                   } else {
                     xC${g} = vec4(0.0, 0.0, xTexelC${g}.xy);
                   }
                   `):d+=`
                 if (xC >= 0 && xC < inDims[1] && xTexelC${g}Ready == 0) {
                   xTexelC${g} = getX(batch, xR, xC, d1);
                   if (xC + 1 >= inDims[1]) {
                     xTexelC${g}.zw = vec2(0.0);
                   }
                   xTexelC${g}Ready = 1;
                 }

                 xC${g} = xTexelC${g};
                 `,g+1<c)){const x=a%2===0?w1(l):l;l%2===0&&a%2===1||l%2!==0&&a%2!==1?(d+=`
                   xCOffset = xC + imod(pads[1], 2) + ${x};

                   if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${g+1}Ready == 0) {
                     xTexelC${g+1} = getX(batch, xR, xCOffset, d1);

                     // Need to manually clear unused channels in case
                     // we're reading from recycled texture.
                     if (xCOffset + 1 >= inDims[1]) {
                       xTexelC${g+1}.zw = vec2(0.0);
                     }
                     xTexelC${g+1}Ready = 1;
                   }
                   `,l>1?d+=`
                     xCOffset -= 2;
                     if (xCOffset >= 0 && xCOffset < inDims[1]) {
                      previous = getX(batch, xR, xCOffset, d1);
                      xC${g+1} = vec4(previous.zw, xTexelC${g+1}.xy);
                     } else {
                      xC${g+1} = vec4(0.0, 0.0, xTexelC${g+1}.xy);
                     }
                     `:d+=`
                     xC${g+1} = vec4(xTexelC${g}.zw, xTexelC${g+1}.xy);
                     `):x===1?d+=`
                     xC${g+1} = xTexelC${g};
                     `:d+=`
                     xCOffset = xC + ${x};

                     if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${g+1}Ready == 0) {
                       xTexelC${g+1} = getX(batch, xR, xCOffset, d1);
                       if (xCOffset + 1 >= inDims[1]) {
                         xTexelC${g+1}.zw = vec2(0.0);
                       }
                       xTexelC${g+1}Ready = 1;
                     }

                     xC${g+1} = xTexelC${g+1};
                     `}}else g<c&&(a%2===1?(d+=`
                 xCOffset = xC + 1 - strides[1];
                 if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${g}Ready == 0) {
                   xTexelC${g} = getX(batch, xR, xCOffset, d1);
                   // Need to manually clear unused channels in case
                   // we're reading from recycled texture.
                   if (xCOffset + 1 >= inDims[1]) {
                     xTexelC${g}.zw = vec2(0.0);
                   }
                   xTexelC${g}Ready = 1;
                 }

                 if(xC + 1 >= 0 && xC + 1 < inDims[1] && xTexelC${g+1}Ready == 0) {
                   xTexelC${g+1} = getX(batch, xR, xC + 1, d1);
                   // Need to manually clear unused channels in case
                   // we're reading from recycled texture.
                   if (xC + 2 >= inDims[1]) {
                     xTexelC${g+1}.zw = vec2(0.0);
                   }
                   xTexelC${g+1}Ready = 1;
                 }

                 xC${g} = vec4(xTexelC${g}.zw, xTexelC${g+1}.zw);
               `,g+1<c&&(d+=`
                   final = vec4(0.0);
                   xCOffset = xC + 1 + strides[1];
                   if(xCOffset >= 0 && xCOffset < inDims[1]) {
                     final = getX(batch, xR, xCOffset, d1);
                   }
                   xC${g+1} = vec4(xTexelC${g+1}.xy, final.xy);
                 `)):(d+=`
                 if(xC >= 0 && xC < inDims[1] && xTexelC${g}Ready == 0) {
                   xTexelC${g} = getX(batch, xR, xC, d1);
                   if (xC + 1 >= inDims[1]) {
                     xTexelC${g}.zw = vec2(0.0);
                   }
                   xTexelC${g}Ready = 1;
                 }

                 xCOffset = xC + strides[1];
                 if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${g+1}Ready == 0) {
                   xTexelC${g+1} = getX(batch, xR, xCOffset, d1);
                   if (xCOffset + 1 >= inDims[1]) {
                     xTexelC${g+1}.zw = vec2(0.);
                   }
                   xTexelC${g+1}Ready = 1;
                 }

                 xC${g} = vec4(
                   xTexelC${g}.xy, xTexelC${g+1}.xy);
               `,g+1<c&&(d+=`
                   xC${g+1} = vec4(xTexelC${g}.zw, xTexelC${g+1}.zw);
                 `)));g<c&&(d+=`
             wTexel = getW(r, ${g}, d1, d2);
             dotProd += xC${g}.xxzz * vec4(wTexel.xy, wTexel.xy);
             if(d1 + 1 < ${e.inChannels}) {
               dotProd += xC${g}.yyww * vec4(wTexel.zw, wTexel.zw);
             }
           `,g+1<c&&(d+=`
               wTexel = getW(r, ${g+1}, d1, d2);
               dotProd += xC${g+1}.xxzz * vec4(wTexel.xy, wTexel.xy);
               if(d1 + 1 < ${e.inChannels}) {
                 dotProd += xC${g+1}.yyww * vec4(wTexel.zw, wTexel.zw);
               }
             `))}d+=`
     }
   `,d+=`
     }
   `,d+=`
     }
   `;let p="",f="";s&&(r?p=`vec4 activation(vec4 a) {
           vec4 b = getPreluActivationWeightsAtOutCoords();
           ${s}
         }`:o?p=`vec4 activation(vec4 a) {
           vec4 b = getLeakyreluAlphaAtOutCoords();
           ${s}
         }`:p=`vec4 activation(vec4 x) {
           ${s}
         }`,f="result = activation(result);");const m=n?"result += getBiasAtOutCoords();":"";n&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),o&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
       ${p}

       void main() {
         ivec4 coords = getOutputCoords();
         int batch = coords.x;
         ivec2 xRCCorner = coords.yz * strides - pads;
         int d2 = coords.w;
         int xRCorner = xRCCorner.x;
         int xCCorner = xRCCorner.y;

         //intialize dotProd with a small epsilon seems to reduce GPU accuracy loss.
         vec4 dotProd = vec4(0.000000000000001);

         ${d}

         vec4 result = dotProd - vec4(0.000000000000001);
         ${m}
         ${f}
         setOutput(result);
       }
     `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class DJ{constructor(e,n){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"inputShape",type:"ivec4"},{name:"pad",type:"ivec2"},{name:"stride",type:"ivec2"},{name:"dilation",type:"ivec2"},{name:"inChannels",type:"int"},{name:"itemsPerBlockRow",type:"int"},{name:"outWidth",type:"int"}],this.outputShape=e,this.enableShapeUniforms=pn(this.outputShape.length);const{dataFormat:s}=n,r=Nn(),o=s==="channelsLast",a=o?1:2,i=o?2:3,l=this.enableShapeUniforms?"if(blockIndex < outShape[2] && pos < outShape[1]) {":`if(blockIndex < ${e[2]} && pos < ${e[1]}) {`;let u="";for(let c=0;c<=1;c++)for(let h=0;h<=1;h++)u+=`
          blockIndex = rc.z + ${h};
          pos = rc.y + ${c};

          ${l}
            offsetY = int(blockIndex / outWidth) * stride[0] - pad[0];
            d0 = offsetY + dilation[0] * (pos / itemsPerBlockRow);

            if(d0 < inputShape[${a}] && d0 >= 0) {
              // Use custom imod instead mod. On Intel GPU, mod may generate
              // unexpected value.
              // https://github.com/tensorflow/tfjs/issues/5447
              offsetX = imod(blockIndex, outWidth) * stride[1] - pad[1];
              d1 = offsetX + dilation[1] * (imod(pos, itemsPerBlockRow) /
                  inChannels);

              if(d1 < inputShape[${i}] && d1 >= 0) {

                ch = imod(pos, inChannels);

                if (${o}) {
                  innerDims = vec2(d1, ch);
                  result[${c*2+h}] = getChannel(
                    getA(rc.x, d0, int(innerDims.x),
                    int(innerDims.y)), innerDims);
                } else {
                  innerDims = vec2(d0, d1);
                  result[${c*2+h}] = getChannel(
                    getA(rc.x, ch, int(innerDims.x),
                    int(innerDims.y)), innerDims);
                }
              }
            }
          }
        `;this.userCode=`
      void main() {
        ivec3 rc = getOutputCoords();

        vec4 result = vec4(0);

        int blockIndex, pos, offsetY, d0, offsetX, d1, ch;
        vec2 innerDims;

        ${u}

        ${r.output} = result;
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function yp(t,e){const n=t.length;return n>=3?e?[...t.slice(0,-3),t[n-3]*t[n-2],t[n-1]]:[...t.slice(0,-3),t[n-3],t[n-2]*t[n-1]]:!e&&n===1&&t[0]>1?[t[0],1]:null}function XD({x:t,filter:e,convInfo:n,backend:s,bias:r=null,preluActivationWeights:o=null,leakyreluAlpha:a=0,activation:i=null}){const l=t.shape,u=s.texData.get(t.dataId),c=n.inChannels,h=l[0]*l[1]*l[2],d=n.outChannels,p=n.dataFormat==="channelsLast",f=!1,m=!1;let y;const g=[];if(o!=null){const b=yp(o.shape,p);b!=null&&(o=le({inputs:{x:o},backend:s,attrs:{shape:b}}),g.push(o))}if(r!=null){const b=yp(r.shape,p);b!=null&&(r=le({inputs:{x:r},backend:s,attrs:{shape:b}}),g.push(r))}if(!((h===1||d===1)&&c>VD)&&u.isPacked&&p&&u.texture!=null&&l[2]%2!==0&&Me(u.shape.slice(-3),l.slice(-3))){const b=l[0]*l[1]*(l[2]+1),v={dataId:t.dataId,shape:[1,b,n.inChannels],dtype:t.dtype},k=u.shape;u.shape=u.shape.slice(),u.shape[u.shape.length-2]++,C(mp(u.shape,v.shape),()=>`packed reshape ${u.shape} to ${v.shape} isn't free`);const $=le({inputs:{x:e},backend:s,attrs:{shape:[1,n.inChannels,n.outChannels]}});g.push($);const N=gp({a:v,b:$,backend:s,transposeA:f,transposeB:m,bias:r,activation:i,preluActivationWeights:o,leakyreluAlpha:a}),E=s.texData.get(N.dataId);C(E.isPacked,()=>"batchMatMul result is expected to be packed"),u.shape=k,E.shape=n.outShape,y=Zn({inputs:{x:N},backend:s}),y.shape=n.outShape,g.push(N)}else{const b=n.outHeight*n.outWidth,v=le({inputs:{x:t},backend:s,attrs:{shape:p?[n.batchSize,b,n.inChannels]:[n.batchSize,n.inChannels,b]}}),k=le({inputs:{x:e},backend:s,attrs:{shape:[1,n.inChannels,n.outChannels]}}),$=gp({a:p?v:k,b:p?k:v,transposeA:!p,transposeB:m,backend:s,bias:r,activation:i,preluActivationWeights:o,leakyreluAlpha:a});y=le({inputs:{x:$},backend:s,attrs:{shape:n.outShape}}),g.push(v),g.push(k),g.push($)}for(const b of g)s.disposeIntermediateTensorInfo(b);return y}function YD({x:t,filter:e,convInfo:n,backend:s,bias:r=null,preluActivationWeights:o=null,leakyreluAlpha:a=0,activation:i=null}){const{filterWidth:l,filterHeight:u,inChannels:c,outWidth:h,outHeight:d,dataFormat:p}=n,f=p==="channelsLast",m=l*u*c,y=d*h,g=[n.batchSize,m,y],x=!0,w=!1,b=[];if(o!=null){const _=yp(o.shape,f);_!=null&&(o=le({inputs:{x:o},backend:s,attrs:{shape:_}}),b.push(o))}if(r!=null){const _=yp(r.shape,f);_!=null&&(r=le({inputs:{x:r},backend:s,attrs:{shape:_}}),b.push(r))}const v=le({inputs:{x:e},backend:s,attrs:{shape:[1,m,K(e.shape)/m]}});b.push(v);const k=new DJ(g,n),$=[t.shape,[n.padInfo.top,n.padInfo.left],[n.strideHeight,n.strideWidth],[n.dilationHeight,n.dilationWidth],[n.inChannels],[n.filterWidth*n.inChannels],[n.outWidth]],N=s.runWebGLProgram(k,[t],"float32",$),E=le({inputs:{x:N},backend:s,attrs:{shape:g}});b.push(N),b.push(E);const T=r!=null,R=o!=null,z=i==="leakyrelu",P=i?Uu(i,!0):null,W=new BD(f?E.shape:v.shape,f?v.shape:E.shape,f?[n.batchSize,y,n.outChannels]:[n.batchSize,n.outChannels,y],x,w,T,P,R,z),M=f?[E,v]:[v,E];if(r&&M.push(r),R&&M.push(o),z){const _=s.makeTensorInfo([],"float32",Ko(a,"float32"));M.push(_),b.push(_)}const U=s.runWebGLProgram(W,M,"float32"),j=le({inputs:{x:U},backend:s,attrs:{shape:n.outShape}});b.push(U);for(const _ of b)s.disposeIntermediateTensorInfo(_);return j}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function AJ(t){const{inputs:e,backend:n,attrs:s}=t,{x:r,filter:o}=e,{strides:a,pad:i,dataFormat:l,dilations:u,dimRoundingMode:c}=s,h=so(l),d=Kt(r.shape,o.shape,a,u,i,c,!1,h);let p;if(d.filterHeight===1&&d.filterWidth===1&&d.dilationHeight===1&&d.dilationWidth===1&&d.strideHeight===1&&d.strideWidth===1&&(d.padInfo.type==="SAME"||d.padInfo.type==="VALID"))p=XD({x:r,filter:o,convInfo:d,backend:n});else if(d.strideWidth<=2&&h==="channelsLast"&&G().getBool("WEBGL_EXP_CONV")){const m=new qD(d),y=[[d.padInfo.top,d.padInfo.left],[d.strideHeight,d.strideWidth],[d.dilationHeight,d.dilationWidth],[d.inHeight,d.inWidth]];p=n.runWebGLProgram(m,[r,o],"float32",y)}else if(G().getBool("WEBGL_CONV_IM2COL"))p=YD({x:r,filter:o,convInfo:d,backend:n});else{const m=new KD(d);p=n.runWebGLProgram(m,[r,o],"float32")}const f=le({inputs:{x:p},backend:n,attrs:{shape:d.outShape}});return n.disposeIntermediateTensorInfo(p),f}const _J={kernelName:qp,backendName:"webgl",kernelFunc:AJ};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class OJ{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;const n=e.strideHeight,s=e.strideWidth,r=e.padInfo.top,o=e.padInfo.left,a=e.dataFormat==="channelsLast";this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int wR = coords.x;
        int wC = coords.y;
        int d1 = coords.z;
        int d2 = coords.w;

        // Convolve x(?, ?, d1) with dy(:, :, d2) to get dw(wR, wC, d1, d2).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;

        for (int b = 0; b < ${e.batchSize}; b++) {
          for (int yR = 0; yR < ${e.outHeight}; yR++) {
            int xR = wR + yR * ${n} - ${r};

            if (xR < 0 || xR >= ${e.inHeight}) {
              continue;
            }

            for (int yC = 0; yC < ${e.outWidth}; yC++) {
              int xC = wC + yC * ${s} - ${o};

              if (xC < 0 || xC >= ${e.inWidth}) {
                continue;
              }

              ${a?`float dyValue = getDy(b, yR, yC, d2);
              float xValue = getX(b, xR, xC, d1);
              dotProd += (xValue * dyValue);`:`float dyValue = getDy(b, d2, yR, yC);
              float xValue = getX(b, d1, xR, xC);
              dotProd += (xValue * dyValue);`}
            }
          }
        }
        setOutput(dotProd);
      }
    `}}class FJ{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const n=e.filterHeight,s=e.filterWidth,r=e.strideHeight,o=e.strideWidth,a=e.dataFormat==="channelsLast",i=n-1-e.padInfo.top,l=s-1-e.padInfo.left,u=a?1:2,c=a?2:3,h=a?3:1;this.userCode=`
      const ivec2 pads = ivec2(${i}, ${l});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d1 = coords[${h}];

        ivec2 dyCorner = ivec2(coords[${u}], coords[${c}]) - pads;
        int dyRCorner = dyCorner.x;
        int dyCCorner = dyCorner.y;

        // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${n}; wR++) {
          float dyR = float(dyRCorner + wR) / ${r}.0;

          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          int wRPerm = ${n} - 1 - wR;

          for (int wC = 0; wC < ${s}; wC++) {
            float dyC = float(dyCCorner + wC) / ${o}.0;

            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            int wCPerm = ${s} - 1 - wC;

            for (int d2 = 0; d2 < ${e.outChannels}; d2++) {

              if (${a}) {
                float xValue = getDy(batch, idyR, idyC, d2);
                float wValue = getW(wRPerm, wCPerm, d1, d2);
                dotProd += xValue * wValue;
              } else {
                float xValue = getDy(batch, d2, idyR, idyC);
                float wValue = getW(wRPerm, wCPerm, d1, d2);
                dotProd += xValue * wValue;
              }

            }
          }
        }
        setOutput(dotProd);
      }
    `}}class LJ{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;const n=e.strideDepth,s=e.strideHeight,r=e.strideWidth,o=e.padInfo.front,a=e.padInfo.top,i=e.padInfo.left;this.userCode=`
      void main() {
        ivec5 coords = getOutputCoords();
        int wF = coords.x;
        int wR = coords.y;
        int wC = coords.z;
        int d1 = coords.w;
        int d2 = coords.u;

        float dotProd = 0.0;

        for (int b = 0; b < ${e.batchSize}; b++) {
          for (int yF = 0; yF < ${e.outDepth}; yF++) {
            int xF = wF + yF * ${n} - ${o};

            if (xF < 0 || xF >= ${e.inDepth}) {
              continue;
            }

            for (int yR = 0; yR < ${e.outHeight}; yR++) {
              int xR = wR + yR * ${s} - ${a};

              if (xR < 0 || xR >= ${e.inHeight}) {
                continue;
              }

              for (int yC = 0; yC < ${e.outWidth}; yC++) {
                int xC = wC + yC * ${r} - ${i};

                if (xC < 0 || xC >= ${e.inWidth}) {
                  continue;
                }

                float dyValue = getDy(b, yF, yR, yC, d2);
                float xValue = getX(b, xF, xR, xC, d1);
                dotProd += (xValue * dyValue);
              }
            }
          }
        }
        setOutput(dotProd);
      }
    `}}class PJ{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const n=e.filterDepth,s=e.filterHeight,r=e.filterWidth,o=e.strideDepth,a=e.strideHeight,i=e.strideWidth,l=n-1-e.padInfo.front,u=s-1-e.padInfo.top,c=r-1-e.padInfo.left;this.userCode=`
      const ivec3 pads = ivec3(${l}, ${u}, ${c});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int d1 = coords.u;


        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;
        int dyFCorner = dyCorner.x;
        int dyRCorner = dyCorner.y;
        int dyCCorner = dyCorner.z;

        float dotProd = 0.0;
        for (int wF = 0; wF < ${n}; wF++) {
          float dyF = float(dyFCorner + wF) / ${o}.0;

          if (dyF < 0.0 || dyF >= ${e.outDepth}.0 || fract(dyF) > 0.0) {
            continue;
          }
          int idyF = int(dyF);

          int wFPerm = ${n} - 1 - wF;

          for (int wR = 0; wR < ${s}; wR++) {
            float dyR = float(dyRCorner + wR) / ${a}.0;

            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||
              fract(dyR) > 0.0) {
              continue;
            }
            int idyR = int(dyR);

            int wRPerm = ${s} - 1 - wR;

            for (int wC = 0; wC < ${r}; wC++) {
              float dyC = float(dyCCorner + wC) / ${i}.0;

              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                  fract(dyC) > 0.0) {
                continue;
              }
              int idyC = int(dyC);

              int wCPerm = ${r} - 1 - wC;

              for (int d2 = 0; d2 < ${e.outChannels}; d2++) {
                float xValue = getDy(batch, idyF, idyR, idyC, d2);
                float wValue = getW(wFPerm, wRPerm, wCPerm, d1, d2);
                dotProd += xValue * wValue;
              }
            }
          }
        }
        setOutput(dotProd);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function zJ(t){const{inputs:e,backend:n,attrs:s}=t,{x:r,dy:o}=e,{strides:a,pad:i,dataFormat:l,dimRoundingMode:u,filterShape:c}=s,h=so(l),d=Kt(r.shape,c,a,1,i,u,!1,h),p=new OJ(d);return n.runWebGLProgram(p,[r,o],"float32")}const MJ={kernelName:R1,backendName:"webgl",kernelFunc:zJ};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class BJ{constructor(e){this.variableNames=["dy","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"strides",type:"vec2"}],this.outputShape=e.inShape,this.enableShapeUniforms=pn(this.outputShape.length);const n=e.filterHeight,s=e.filterWidth,r=n-1-e.padInfo.top,o=s-1-e.padInfo.left;this.userCode=`
      const ivec2 pads = ivec2(${r}, ${o});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d1 = coords[3];

        ivec2 dyCorner = ivec2(coords[1], coords[2]) - pads;
        int dyRCorner = dyCorner.x;
        int dyCCorner = dyCorner.y;

        vec4 result = vec4(0.);
        for (int wR = 0; wR < ${n}; wR++) {
          float dyR = float(dyRCorner + wR) / strides[0];
          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);
          int wRPerm = ${n} - 1 - wR;

          for (int wC = 0; wC < ${s}; wC++) {
            int wCPerm = ${s} - 1 - wC;

            float dyC = float(dyCCorner + wC) / strides[1];
            bool idyCVal = (dyC >= 0.0) && (dyC < ${e.outWidth}.0)
              && (fract(dyC) == 0.0);
            int idyC = int(dyC);

            float dyC2 = float(dyCCorner + wC + 1) / strides[1];
            bool idyCVal2 = (dyC2 >= 0.0) && (dyC2 < ${e.outWidth}.0)
              && (fract(dyC2) == 0.0);
            int idyC2 = int(dyC2);

            if (idyCVal && idyCVal2) {
              for (int d2 = 0; d2 < ${e.outChannels}; d2 += 2) {
                vec4 wValue = getW(wRPerm, wCPerm, d1, d2);
                vec4 dySample = getDy(batch, idyR, idyC, d2);
                vec4 dySample2 = (idyC / 2 == idyC2 / 2) ?
                  dySample : getDy(batch, idyR, idyC2, d2);

                vec2 dyValue = mod(float(idyC), 2.) == 0. ?
                  dySample.xy : dySample.zw;
                result.xy += vec2(dot(dyValue, wValue.xy),
                  dot(dyValue, wValue.zw));

                dyValue = mod(float(idyC2), 2.) == 0. ?
                  dySample2.xy : dySample2.zw;
                result.zw += vec2(dot(dyValue, wValue.xy),
                  dot(dyValue, wValue.zw));
              }
            } else if (idyCVal) {
              for (int d2 = 0; d2 < ${e.outChannels}; d2 += 2) {
                vec4 wValue = getW(wRPerm, wCPerm, d1, d2);
                vec4 dySample = getDy(batch, idyR, idyC, d2);
                vec2 dyValue = mod(float(idyC), 2.) == 0. ?
                  dySample.xy : dySample.zw;
                result.xy += vec2(dot(dyValue, wValue.xy),
                  dot(dyValue, wValue.zw));
              }
            } else if (idyCVal2) {
              for (int d2 = 0; d2 < ${e.outChannels}; d2 += 2) {
                vec4 wValue = getW(wRPerm, wCPerm, d1, d2);
                vec4 dySample = getDy(batch, idyR, idyC2, d2);
                vec2 dyValue = mod(float(idyC2), 2.) == 0. ?
                  dySample.xy : dySample.zw;
                result.zw += vec2(dot(dyValue, wValue.xy),
                  dot(dyValue, wValue.zw));
              }
            }
          }
        }
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function VJ(t){const{inputs:e,backend:n,attrs:s}=t,{dy:r,filter:o}=e,{inputShape:a,strides:i,pad:l,dataFormat:u,dimRoundingMode:c}=s,h=so(u),d=Kt(a,o.shape,i,1,l,c,!1,h);if(G().getBool("WEBGL_PACK")&&h==="channelsLast"){const p=[[d.strideHeight,d.strideWidth]],f=new BJ(d);return n.runWebGLProgram(f,[r,o],"float32",p)}else{const p=new FJ(d);return n.runWebGLProgram(p,[r,o],"float32")}}const WJ={kernelName:Xp,backendName:"webgl",kernelFunc:VJ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function UJ(t){const{inputs:e,backend:n,attrs:s}=t,{x:r,filter:o}=e,{strides:a,pad:i,dilations:l}=s,u=Yo(r.shape,o.shape,a,l,i),c=new RJ(u);return n.runWebGLProgram(c,[r,o],"float32")}const GJ={kernelName:Yp,backendName:"webgl",kernelFunc:UJ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function HJ(t){const{inputs:e,backend:n,attrs:s}=t,{x:r,dy:o}=e,{strides:a,pad:i,filterShape:l}=s,u=Yo(r.shape,l,a,1,i),c=new LJ(u);return n.runWebGLProgram(c,[r,o],"float32")}const jJ={kernelName:D1,backendName:"webgl",kernelFunc:HJ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function KJ(t){const{inputs:e,backend:n,attrs:s}=t,{dy:r,filter:o}=e,{pad:a,strides:i,inputShape:l}=s,u=Yo(l,o.shape,i,1,a),c=new PJ(u);return n.runWebGLProgram(c,[r,o],"float32")}const qJ={kernelName:A1,backendName:"webgl",kernelFunc:KJ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const XJ=Dl+`
  return cos(x);
`,YJ=`
  vec4 result = cos(x);
  bvec4 isNaN = isnan(x);
  ${ni}
  return result;
`,QJ=Ge({opSnippet:XJ,packedOpSnippet:YJ}),ZJ={kernelName:lc,backendName:"webgl",kernelFunc:QJ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const JJ=`
  float e2x = exp(-x);
  return (e2x + 1.0 / e2x) / 2.0;
`,eee=Ge({opSnippet:JJ}),tee={kernelName:uc,backendName:"webgl",kernelFunc:eee};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class nee{constructor(e,n,s,r,o){this.variableNames=["Image","Boxes","BoxInd"],this.outputShape=[];const[a,i,l,u]=e,[c]=n,[h,d]=s;this.outputShape=[c,h,d,u];const p=r==="bilinear"?1:0,[f,m]=[`${i-1}.0`,`${l-1}.0`],[y,g,x]=h>1?[`${(i-1)/(h-1)}`,"(y2-y1) * height_ratio",`y1*${f} + float(y)*(height_scale)`]:["0.0","0.0",`0.5 * (y1+y2) * ${f}`],[w,b,v]=d>1?[`${(l-1)/(d-1)}`,"(x2-x1) * width_ratio",`x1*${m} + float(x)*(width_scale)`]:["0.0","0.0",`0.5 * (x1+x2) * ${m}`];this.userCode=`
      const float height_ratio = float(${y});
      const float width_ratio = float(${w});
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int y = coords[1];
        int x = coords[2];
        int d = coords[3];

        // get box vals
        float y1 = getBoxes(b,0);
        float x1 = getBoxes(b,1);
        float y2 = getBoxes(b,2);
        float x2 = getBoxes(b,3);

        // get image in batch index
        int bInd = round(getBoxInd(b));
        if(bInd < 0 || bInd >= ${a}) {
          return;
        }

        float height_scale = ${g};
        float width_scale = ${b};

        float in_y = ${x};
        if( in_y < 0.0 || in_y > ${f} ) {
          setOutput(float(${o}));
          return;
        }
        float in_x = ${v};
        if( in_x < 0.0 || in_x > ${m} ) {
          setOutput(float(${o}));
          return;
        }

        vec2 sourceFracIndexCR = vec2(in_x,in_y);
        if(${p} == 1) {
          // Compute the four integer indices.
          ivec2 sourceFloorCR = ivec2(sourceFracIndexCR);
          ivec2 sourceCeilCR = ivec2(ceil(sourceFracIndexCR));

          float topLeft = getImage(b, sourceFloorCR.y, sourceFloorCR.x, d);
          float bottomLeft = getImage(b, sourceCeilCR.y, sourceFloorCR.x, d);
          float topRight = getImage(b, sourceFloorCR.y, sourceCeilCR.x, d);
          float bottomRight = getImage(b, sourceCeilCR.y, sourceCeilCR.x, d);

          vec2 fracCR = sourceFracIndexCR - vec2(sourceFloorCR);

          float top = topLeft + (topRight - topLeft) * fracCR.x;
          float bottom = bottomLeft + (bottomRight - bottomLeft) * fracCR.x;
          float newValue = top + (bottom - top) * fracCR.y;
          setOutput(newValue);
        } else {
          // Compute the coordinators of nearest neighbor point.
          ivec2 sourceNearestCR = ivec2(floor(
            sourceFracIndexCR + vec2(0.5,0.5)));
          float newValue = getImage(b, sourceNearestCR.y, sourceNearestCR.x, d);
          setOutput(newValue);
        }
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const see=t=>{const{inputs:e,backend:n,attrs:s}=t,{image:r,boxes:o,boxInd:a}=e,{cropSize:i,method:l,extrapolationValue:u}=s,c=new nee(r.shape,o.shape,i,l,u);return n.runWebGLProgram(c,[r,o,a],"float32")},ree={kernelName:O1,backendName:"webgl",kernelFunc:see};var Hu;(function(t){t.Prod="*",t.Sum="+"})(Hu||(Hu={}));class kk{constructor(e,n,s,r){this.op=e,this.outputShape=n,this.variableNames=["x"],this.customUniforms=[{name:"index",type:"float"}];const o=this.outputShape.length,a=this.op===Hu.Prod?"1.0":"0.0",i=s?a:`getX(${$k(o,"coords",this.op)})`,l=this.outputShape[this.outputShape.length-1];let u="",c="";s?(u=r?`end != ${l-1}`:"end != 0",c=r?"end + 1":"end - 1"):(u=r?`end + pow2 < ${l}`:"end >= pow2",c=r?"end + pow2":"end - pow2"),this.userCode=`
      void main() {
        ${Ye(o)} coords = getOutputCoords();
        int end = ${Ck(o,"coords",this.op)};
        float val = ${i};
        int pow2 = int(pow(2.0, index));
        if (${u}) {
          int idx = ${c};
          ${Ck(o,"coords",this.op)} = idx;
          val ${this.op}= getX(${$k(o,"coords",this.op)});
        }
        setOutput(val);
      }
    `}}function $k(t,e,n){if(t===1)return`${e}`;if(t===2)return`${e}.x, ${e}.y`;if(t===3)return`${e}.x, ${e}.y, ${e}.z`;if(t===4)return`${e}.x, ${e}.y, ${e}.z, ${e}.w`;throw new Error(`Cumulative ${n} for rank ${t} is not yet supported`)}function Ck(t,e,n){if(t===1)return`${e}`;if(t===2)return`${e}.y`;if(t===3)return`${e}.z`;if(t===4)return`${e}.w`;throw new Error(`Cumulative ${n} for rank ${t} is not yet supported`)}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function QD(t,e,n,s,r,o){const a=e.shape.length,i=gt([s],a);let l=e;i!=null&&(l=$n({inputs:{x:e},backend:n,attrs:{perm:i}}));const u=Ct(1,a)[0];if(u!==a-1)throw new Error(`WebGL cumprod shader expects an inner-most axis=${e.shape.length-1} but got axis=${s}`);const c=l.shape[u];let h=Zn({inputs:{x:l},backend:n});for(let d=0;d<=Math.ceil(Math.log2(c))-1;d++){const p=new kk(t,l.shape,!1,o),f=[[d]],m=h;h=n.runWebGLProgram(p,[h],h.dtype,f),n.disposeIntermediateTensorInfo(m)}if(r){const d=new kk(t,l.shape,r,o),p=h;h=n.runWebGLProgram(d,[h],h.dtype),n.disposeIntermediateTensorInfo(p)}if(i!=null){const d=Qo(i),p=$n({inputs:{x:h},backend:n,attrs:{perm:d}});return n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(l),p}return h}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function oee(t){const{inputs:e,backend:n,attrs:s}=t,{x:r}=e,{axis:o,exclusive:a,reverse:i}=s;return QD(Hu.Prod,r,n,o,a,i)}const aee={kernelName:_1,backendName:"webgl",kernelFunc:oee};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function iee(t){const{inputs:e,backend:n,attrs:s}=t,{x:r}=e,{axis:o,exclusive:a,reverse:i}=s;return QD(Hu.Sum,r,n,o,a,i)}const lee={kernelName:Qp,backendName:"webgl",kernelFunc:iee};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function uee(t){const{inputs:e,backend:n,attrs:s}=t,{x:r,weights:o}=e,{size:a,binaryOutput:i}=s;if(r.shape.length===1){const l=n.readSync(r.dataId),u=n.readSync(o.dataId),c=DD(l,u,o.dtype,o.shape,a);return n.makeTensorInfo([a],o.dtype,c)}else if(r.shape.length===2){const l=n.bufferSync(r),u=n.bufferSync(o),c=pY(l,u,a,i);return n.makeTensorInfo(c.shape,o.dtype,c.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${r.shape.length}.`)}const cee={kernelName:F1,backendName:"webgl",kernelFunc:uee};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class hee{constructor(e,n,s){this.variableNames=["x"],this.outputShape=[],this.outputShape=e,this.blockSize=n,this.dataFormat=s,this.userCode=`
    void main() {
      ivec4 coords = getOutputCoords();
      int b = coords[0];
      int h = ${this.getHeightCoordString()};
      int w = ${this.getWidthCoordString()};
      int d = ${this.getDepthCoordString()};

      int in_h = h / ${n};
      int offset_h = imod(h, ${n});
      int in_w = w / ${n};
      int offset_w = imod(w, ${n});
      int offset_d = (offset_h * ${n} + offset_w) *
        ${this.getOutputDepthSize()};
      int in_d = d + offset_d;

      float result = ${this.getInputSamplingString()};
      setOutput(result);
    }
  `}getHeightCoordString(){return this.dataFormat==="NHWC"?"coords[1]":"coords[2]"}getWidthCoordString(){return this.dataFormat==="NHWC"?"coords[2]":"coords[3]"}getDepthCoordString(){return this.dataFormat==="NHWC"?"coords[3]":"coords[1]"}getOutputDepthSize(){return this.dataFormat==="NHWC"?this.outputShape[3]:this.outputShape[1]}getInputSamplingString(){return this.dataFormat==="NHWC"?"getX(b, in_h, in_w, in_d)":"getX(b, in_d, in_h, in_w)"}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function dee(t){const{inputs:e,backend:n,attrs:s}=t,{x:r}=e,{blockSize:o,dataFormat:a}=s,i=r.shape[0],l=a==="NHWC"?r.shape[1]:r.shape[2],u=a==="NHWC"?r.shape[2]:r.shape[3],c=a==="NHWC"?r.shape[3]:r.shape[1],h=l*o,d=u*o,p=c/(o*o),f=a==="NHWC"?[i,h,d,p]:[i,p,h,d],m=new hee(f,o,a);return n.runWebGLProgram(m,[r],r.dtype)}const pee={kernelName:L1,backendName:"webgl",kernelFunc:dee};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class ZD{constructor(e,n=!1,s=null,r=!1,o=!1){this.variableNames=["x","W"],this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=pn(this.outputShape.length);const a=e.filterHeight,i=e.filterWidth,l=e.outChannels/e.inChannels;let u="",c="";s&&(r?u=`float activation(float a) {
          float b = getPreluActivationWeightsAtOutCoords();
          ${s}
        }`:o?u=`float activation(float a) {
          float b = getLeakyreluAlphaAtOutCoords();
          ${s}
        }`:u=`
          float activation(float x) {
            ${s}
          }
        `,c="result = activation(result);");const h=n?"result += getBiasAtOutCoords();":"";n&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),o&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
      ${u}

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords.x;
        ivec2 xRCCorner = coords.yz * strides - pads;
        int d2 = coords.w;
        int d1 = d2 / ${l};
        int q = d2 - d1 * ${l};

        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        // Convolve x(?, ?, d1) with w(:, :, d1, q) to get y(yR, yC, d2).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        // TO DO(dsmilkov): Flatten the two for loops and vec4 the operations.
        for (int wR = 0; wR < ${a}; wR++) {
          int xR = xRCorner + wR * dilations[0];

          if (xR < 0 || xR >= inDims[0]) {
            continue;
          }

          for (int wC = 0; wC < ${i}; wC++) {
            int xC = xCCorner + wC * dilations[1];

            if (xC < 0 || xC >= inDims[1]) {
              continue;
            }

            float xVal = getX(batch, xR, xC, d1);
            float wVal = getW(wR, wC, d1, q);
            dotProd += xVal * wVal;
          }
        }

        float result = dotProd;
        ${h}
        ${c}
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class JD{constructor(e,n=!1,s=null,r=!1,o=!1){this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=pn(this.outputShape.length);const a=e.outChannels/e.inChannels,i=e.padInfo.left,l=e.strideWidth,u=e.dilationWidth,c=e.filterHeight,h=e.filterWidth,d=h;let p=`
      int xR; int xC; int xCOffset;
      vec4 wTexel; vec4 previous; vec4 final;`;for(let g=0;g<h;g++)p+=`
          vec4 xTexelC${g*2};
          int xTexelC${g*2}Ready;
          vec4 xTexelC${g*2+1};
          int xTexelC${g*2+1}Ready;
          vec4 xC${g};`;p+=`
    for (int r = 0; r < ${c}; r++) {
      `;for(let g=0;g<h;g++)p+=`
          xTexelC${g*2} = vec4(0.0);
          xTexelC${g*2}Ready = 0;
          xTexelC${g*2+1} = vec4(0.0);
          xTexelC${g*2+1}Ready = 0;
          xC${g} = vec4(0.0);`;p+=`
        xR = xRCorner + r * dilations[0];
        if (xR >=0 && xR < inDims[0]) {
      `;for(let g=0;g<(d+1)/2;g++){const x=g*2;if(p+=`
          xC = xCCorner + ${x*u};
          `,l===1){if(x<h&&(i%2===1?(p+=`
                xCOffset = xC + 1;
                if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${x}Ready == 0) {
                  xTexelC${x} = getX(batch, xR, xCOffset, d1);

                  // Need to manually clear unused channels in case
                  // we're reading from recycled texture.
                  if (xCOffset + 1 >= inDims[1]) {
                    xTexelC${x}.zw = vec2(0.0);
                  }
                  xTexelC${x}Ready = 1;
                }
              `,u===1&&x>0?p+=`
                xC${x} = vec4(xTexelC${x-2}.zw, xTexelC${x}.xy);
                `:p+=`
                  xCOffset = xC + 1 - 2;

                  if (xCOffset >= 0 && xCOffset < inDims[1]) {
                    previous = getX(batch, xR, xCOffset, d1);

                    // Need to manually clear unused channels in case
                    // we're reading from recycled texture.
                    if (xCOffset + 1 >= inDims[1]) {
                      previous.zw = vec2(0.0);
                    }

                    xC${x} = vec4(previous.zw, xTexelC${x}.xy);
                  } else {
                    xC${x} = vec4(0.0, 0.0, xTexelC${x}.xy);
                  }
                  `):p+=`
                if (xC >= 0 && xC < inDims[1] && xTexelC${x}Ready == 0) {
                  xTexelC${x} = getX(batch, xR, xC, d1);
                  if (xC + 1 >= inDims[1]) {
                    xTexelC${x}.zw = vec2(0.0);
                  }
                  xTexelC${x}Ready = 1;
                }

                xC${x} = xTexelC${x};
                `,x+1<h)){const w=i%2===0?w1(u):u;u%2===0&&i%2===1||u%2!==0&&i%2!==1?(p+=`
                  xCOffset = xC + imod(pads[1], 2) + ${w};

                  if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${x+1}Ready == 0) {
                    xTexelC${x+1} = getX(batch, xR, xCOffset, d1);

                    // Need to manually clear unused channels in case
                    // we're reading from recycled texture.
                    if (xCOffset + 1 >= inDims[1]) {
                      xTexelC${x+1}.zw = vec2(0.0);
                    }
                    xTexelC${x+1}Ready = 1;
                  }
                  `,u>1?p+=`
                    xCOffset -= 2;
                    if (xCOffset >= 0 && xCOffset < inDims[1]) {
                     previous = getX(batch, xR, xCOffset, d1);
                     xC${x+1} = vec4(previous.zw, xTexelC${x+1}.xy);
                    } else {
                     xC${x+1} = vec4(0.0, 0.0, xTexelC${x+1}.xy);
                    }
                    `:p+=`
                    xC${x+1} = vec4(xTexelC${x}.zw, xTexelC${x+1}.xy);
                    `):w===1?p+=`
                    xC${x+1} = xTexelC${x};
                    `:p+=`
                    xCOffset = xC + ${w};

                    if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${x+1}Ready == 0) {
                      xTexelC${x+1} = getX(batch, xR, xCOffset, d1);
                      if (xCOffset + 1 >= inDims[1]) {
                        xTexelC${x+1}.zw = vec2(0.0);
                      }
                      xTexelC${x+1}Ready = 1;
                    }

                    xC${x+1} = xTexelC${x+1};
                    `}}else x<h&&(i%2===1?(p+=`
                xCOffset = xC + 1 - strides[1];
                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${x}Ready == 0) {
                  xTexelC${x} = getX(batch, xR, xCOffset, d1);
                  // Need to manually clear unused channels in case
                  // we're reading from recycled texture.
                  if (xCOffset + 1 >= inDims[1]) {
                    xTexelC${x}.zw = vec2(0.0);
                  }
                  xTexelC${x}Ready = 1;
                }

                if(xC + 1 >= 0 && xC + 1 < inDims[1] && xTexelC${x+1}Ready == 0) {
                  xTexelC${x+1} = getX(batch, xR, xC + 1, d1);
                  // Need to manually clear unused channels in case
                  // we're reading from recycled texture.
                  if (xC + 2 >= inDims[1]) {
                    xTexelC${x+1}.zw = vec2(0.0);
                  }
                  xTexelC${x+1}Ready = 1;
                }

                xC${x} = vec4(xTexelC${x}.zw, xTexelC${x+1}.zw);
              `,x+1<h&&(p+=`
                  final = vec4(0.0);
                  xCOffset = xC + 1 + strides[1];
                  if(xCOffset >= 0 && xCOffset < inDims[1]) {
                    final = getX(batch, xR, xCOffset, d1);
                  }
                  xC${x+1} = vec4(xTexelC${x+1}.xy, final.xy);
                `)):(p+=`
                if(xC >= 0 && xC < inDims[1] && xTexelC${x}Ready == 0) {
                  xTexelC${x} = getX(batch, xR, xC, d1);
                  if (xC + 1 >= inDims[1]) {
                    xTexelC${x}.zw = vec2(0.0);
                  }
                  xTexelC${x}Ready = 1;
                }

                xCOffset = xC + strides[1];
                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${x+1}Ready == 0) {
                  xTexelC${x+1} = getX(batch, xR, xCOffset, d1);
                  if (xCOffset + 1 >= inDims[1]) {
                    xTexelC${x+1}.zw = vec2(0.);
                  }
                  xTexelC${x+1}Ready = 1;
                }

                xC${x} = vec4(
                  xTexelC${x}.xy, xTexelC${x+1}.xy);
              `,x+1<h&&(p+=`
                  xC${x+1} = vec4(xTexelC${x}.zw, xTexelC${x+1}.zw);
                `)));x<h&&(p+=`
            wTexel = getW(r, ${x}, d1, q);
            dotProd += xC${x} * vec4(wTexel.xz, wTexel.xz);
          `,x+1<h&&(p+=`
              wTexel = getW(r, ${x+1}, d1, q);
              dotProd += xC${x+1} * vec4(wTexel.xz, wTexel.xz);
            `))}p+=`
    }
  `,p+=`
      }
    `;let f="",m="";s&&(r?f=`vec4 activation(vec4 a) {
          vec4 b = getPreluActivationWeightsAtOutCoords();
          ${s}
        }`:o?f=`vec4 activation(vec4 a) {
          vec4 b = getLeakyreluAlphaAtOutCoords();
          ${s}
        }`:f=`vec4 activation(vec4 x) {
          ${s}
        }`,m="result = activation(result);");const y=n?"result += getBiasAtOutCoords();":"";n&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),o&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
      ${f}

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords.x;
        ivec2 xRCCorner = coords.yz * strides - pads;
        int d2 = coords.w;
        int d1 = d2 / ${a};
        int q = d2 - d1 * ${a};
        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        //intialize dotProd with a small epsilon seems to reduce GPU accuracy loss.
        vec4 dotProd = vec4(0.000000000000001);

        ${p}

        vec4 result = dotProd - vec4(0.000000000000001);
        ${y}
        ${m}
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fee(t){const{inputs:e,backend:n,attrs:s}=t,{x:r,filter:o}=e,{strides:a,pad:i,dilations:l,dimRoundingMode:u}=s;let c=l;c==null&&(c=[1,1]),C(tn(a,c),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${a} and dilations '${c}'`);const h=Kt(r.shape,o.shape,a,c,i,u,!0);let d;G().getBool("WEBGL_PACK_DEPTHWISECONV")&&h.strideWidth<=2&&h.outChannels/h.inChannels===1?d=new JD(h):d=new ZD(h);const p=[[h.padInfo.top,h.padInfo.left],[h.strideHeight,h.strideWidth],[h.dilationHeight,h.dilationWidth],[h.inHeight,h.inWidth]];return n.runWebGLProgram(d,[r,o],"float32",p)}const mee={kernelName:Zp,backendName:"webgl",kernelFunc:fee};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class gee{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;const n=e.strideHeight,s=e.strideWidth,r=e.padInfo.top,o=e.padInfo.left,a=e.outChannels/e.inChannels;this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int wR = coords.x;
        int wC = coords.y;
        int d1 = coords.z;
        int dm = coords.w;
        int d2 = d1 * ${a} + dm;

        float dotProd = 0.0;

        // TO DO: Vec4 over the batch size
        for (int b = 0; b < ${e.batchSize}; b++) {
          for (int yR = 0; yR < ${e.outHeight}; yR++) {
            int xR = wR + yR * ${n} - ${r};

            if (xR < 0 || xR >= ${e.inHeight}) {
              continue;
            }

            for (int yC = 0; yC < ${e.outWidth}; yC++) {
              int xC = wC + yC * ${s} - ${o};

              if (xC < 0 || xC >= ${e.inWidth}) {
                continue;
              }

              float dyValue = getDy(b, yR, yC, d2);
              float xValue = getX(b, xR, xC, d1);
              dotProd += (xValue * dyValue);
            }
          }
        }
        setOutput(dotProd);
      }
    `}}class yee{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const n=e.filterHeight,s=e.filterWidth,r=e.strideHeight,o=e.strideWidth,a=n-1-e.padInfo.top,i=s-1-e.padInfo.left,l=e.outChannels/e.inChannels;this.userCode=`
      const ivec2 pads = ivec2(${a}, ${i});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d1 = coords[3];
        ivec2 dyCorner = coords.yz - pads;
        int dyRCorner = dyCorner.x;
        int dyCCorner = dyCorner.y;

        float dotProd = 0.0;

        for (int wR = 0; wR < ${n}; wR++) {
          float dyR = float(dyRCorner + wR) / ${r}.0;

          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          int wRPerm = ${n} - 1 - wR;

          for (int wC = 0; wC < ${s}; wC++) {
            float dyC = float(dyCCorner + wC) / ${o}.0;

            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            int wCPerm = ${s} - 1 - wC;

            // TO DO: Vec4 over the channelMul
            for (int dm = 0; dm < ${l}; dm++) {
              int d2 = d1 * ${l} + dm;
              float xValue = getDy(batch, idyR, idyC, d2);
              float wValue = getW(wRPerm, wCPerm, d1, dm);
              dotProd += xValue * wValue;
            }
          }
        }
        setOutput(dotProd);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function xee(t){const{inputs:e,backend:n,attrs:s}=t,{x:r,dy:o}=e,{strides:a,dilations:i,pad:l,dimRoundingMode:u,filterShape:c}=s,h=Kt(r.shape,c,a,i,l,u,!0),d=new gee(h);return n.runWebGLProgram(d,[r,o],"float32")}const bee={kernelName:P1,backendName:"webgl",kernelFunc:xee};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function wee(t){const{inputs:e,backend:n,attrs:s}=t,{dy:r,filter:o}=e,{strides:a,dilations:i,pad:l,dimRoundingMode:u,inputShape:c}=s,h=Kt(c,o.shape,a,i,l,u,!0),d=new yee(h);return n.runWebGLProgram(d,[r,o],"float32")}const vee={kernelName:z1,backendName:"webgl",kernelFunc:wee};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class See{constructor(e){this.variableNames=["X"],this.outputShape=[e,e],this.userCode=`
      void main() {
          ivec2 coords = getOutputCoords();
          float val = coords[0] == coords[1] ? getX(coords[0]) : 0.0;
          setOutput(val);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function kee(t){const{inputs:e,backend:n}=t,{x:s}=e,r=[...s.shape,...s.shape],o=K(s.shape),a=le({inputs:{x:s},backend:n,attrs:{shape:[o]}}),i=new See(o),l=n.runWebGLProgram(i,[a],a.dtype),u=le({inputs:{x:l},backend:n,attrs:{shape:r}});return n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(l),u}const $ee={kernelName:M1,backendName:"webgl",kernelFunc:kee};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Cee{constructor(e){this.variableNames=["x","W"],this.outputShape=e.outShape;const{inHeight:n,inWidth:s,padInfo:r,strideHeight:o,strideWidth:a,filterHeight:i,filterWidth:l,dilationHeight:u,dilationWidth:c}=e,{top:h,left:d}=r;this.userCode=`
      const ivec2 strides = ivec2(${o}, ${a});
      const ivec2 pads = ivec2(${h}, ${d});
      const float neg_infinity = -3.4e38;

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords.x;
        int d1 = coords.w;
        ivec2 outTopLeftCorner =
            coords.yz * strides - pads;
        int hBeg = outTopLeftCorner.x;
        int wBeg = outTopLeftCorner.y;

        float curVal = neg_infinity;
        for (int h = 0; h < ${i}; h++) {
          int hIn = hBeg + h * ${u};

          if (hIn >= 0 && hIn < ${n}) {
            for (int w = 0; w < ${l}; w++) {
              int wIn = wBeg + w * ${c};

              if (wIn >= 0 && wIn < ${s}) {
                float xVal = getX(batch, hIn, wIn, d1);
                float wVal = getW(h, w, d1);

                float val = xVal + wVal;
                if (val > curVal) {
                  curVal = val;
                }
              }
            }
          }
        }

        float result = curVal;
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Nee(t){const{inputs:e,backend:n,attrs:s}=t,{x:r,filter:o}=e,{strides:a,pad:i,dilations:l}=s,u=qc(r.shape,o.shape,a,i,"NHWC",l);let c;const h=new Cee(u);c=n.runWebGLProgram(h,[r,o],"float32");const d=le({inputs:{x:c},backend:n,attrs:{shape:u.outShape}});return n.disposeIntermediateTensorInfo(c),d}const Iee={kernelName:Jp,backendName:"webgl",kernelFunc:Nee};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Tee(t){const{inputs:e,backend:n,attrs:s}=t,{equation:r}=s,o=e,{allDims:a,summedDims:i,idDims:l}=Vb(r,o.length);Ub(a.length,l,o);const{path:u,steps:c}=Gb(i,l),h=c.length;let d=null,p=a.length;const f=[];for(let m=0;m<h;++m){for(const y of c[m]){const{permutationIndices:g,expandDims:x}=Wb(p,l[y]);let w;Hb(g)?w=o[y]:(w=$n({inputs:{x:o[y]},backend:n,attrs:{perm:g}}),f.push(w));const b=w.shape.slice();for(let v=0;v<x.length;++v)b.splice(x[v],0,1);Me(w.shape,b)||(w=le({inputs:{x:w},backend:n,attrs:{shape:b}}),f.push(w)),d===null?d=w:(d=Aw({inputs:{a:w,b:d},backend:n}),f.push(d))}m<h-1&&(u[m]>=0&&(d=Tm({inputs:{x:d},backend:n,attrs:{axis:u[m]-(a.length-p),keepDims:!1}}),f.push(d)),p--)}for(const m of f)m!==d&&n.disposeIntermediateTensorInfo(m);return d}const Eee={kernelName:B1,backendName:"webgl",kernelFunc:Tee};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ree="return (x >= 0.0) ? x : (exp(x) - 1.0);",Dee=`
  vec4 result;

  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);
  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);
  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);
  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);

  return result;
`,Aee=Ge({opSnippet:Ree,packedOpSnippet:Dee}),_ee={kernelName:hc,backendName:"webgl",kernelFunc:Aee};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Oee="return (b >= 0.0) ? a : a * (b + 1.0);",Fee=`
  vec4 bGTEZero = vec4(greaterThanEqual(b, vec4(0.)));
  return (bGTEZero * a) + ((vec4(1.0) - bGTEZero) * (a * (b + vec4(1.0))));
`,Lee=t=>{const{inputs:e,backend:n}=t,{dy:s,y:r}=e,o=G().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new Rl(Fee,s.shape,r.shape):new Ba(Oee,s.shape,r.shape);return n.runWebGLProgram(o,[s,r],s.dtype)},Pee={kernelName:V1,backendName:"webgl",kernelFunc:Lee};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const zee=`
  return vec4(equal(a, b));
`,Mee="return float(a == b);",Bee=rn({opSnippet:Mee,packedOpSnippet:zee,dtype:"bool",cpuKernelImpl:xY}),Vee={kernelName:ef,backendName:"webgl",kernelFunc:Bee};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Wee=`
  // Error function is calculated approximately with elementary function.
  // See "Handbook of Mathematical Functions with Formulas,
  // Graphs, and Mathematical Tables", Abramowitz and Stegun.
  float p = ${Ob};
  float a1 = ${Fb};
  float a2 = ${Lb};
  float a3 = ${Pb};
  float a4 = ${zb};
  float a5 = ${Mb};

  float sign = sign(x);
  x = abs(x);
  float t = 1.0 / (1.0 + p * x);
  return sign * (1.0 - (((((a5*t + a4)*t) + a3)*t + a2)*t + a1)*t*exp(-x*x));
`,Uee=Ge({opSnippet:Wee}),Gee={kernelName:dc,backendName:"webgl",kernelFunc:Uee};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Hee=Dl+`
  return exp(x);
`,jee=`
  vec4 result = exp(x);
  bvec4 isNaN = isnan(x);
  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,eA=Ge({opSnippet:Hee,packedOpSnippet:jee,cpuKernelImpl:bY,dtype:"float32"}),Kee={kernelName:pc,backendName:"webgl",kernelFunc:eA};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function k0(t){const{inputs:e,attrs:n,backend:s}=t,{dim:r}=n,{input:o}=e,a=o.shape.length,i=o.shape.slice();let l=r;return r<0&&(C(-(a+1)<=r,()=>`Axis must be in the interval [${-(a+1)}, ${a}]`),l=a+r+1),i.splice(l,0,1),le({inputs:{x:o},backend:s,attrs:{shape:i}})}const qee={kernelName:tf,backendName:"webgl",kernelFunc:k0};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Nk="return exp(x) - 1.0;",Xee=Ge({opSnippet:Nk,packedOpSnippet:Nk,cpuKernelImpl:wY}),Yee={kernelName:fc,backendName:"webgl",kernelFunc:Xee};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Ik{constructor(e,n,s){this.variableNames=["real","imag"];const r=n[1];this.outputShape=n;const o=s?`2.0 * ${Math.PI}`:`-2.0 * ${Math.PI}`,a=s?`${r}.0`:"1.0";let i;if(e==="real")i="return real * expR - imag * expI;";else if(e==="imag")i="return real * expI + imag * expR;";else throw new Error(`FFT component must be either "real" or "imag", got ${e}.`);this.userCode=`
      const float exponentMultiplier = ${o};

      float unaryOpComplex(float real, float expR, float imag, float expI) {
        ${i}
      }

      float mulMatDFT(int batch, int index) {
        float indexRatio = float(index) / float(${r});
        float exponentMultiplierTimesIndexRatio =
            exponentMultiplier * indexRatio;

        float result = 0.0;

        for (int i = 0; i < ${r}; i++) {
          // x = (-2|2 * PI / N) * index * i;
          float x = exponentMultiplierTimesIndexRatio * float(i);
          float expR = cos(x);
          float expI = sin(x);
          float real = getReal(batch, i);
          float imag = getImag(batch, i);

          result +=
              unaryOpComplex(real, expR, imag, expI) / ${a};
        }

        return result;
      }

      void main() {
        ivec2 coords = getOutputCoords();
        setOutput(mulMatDFT(coords[0], coords[1]));
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tA(t,e,n){const s=n.texData.get(t.dataId),r=K(t.shape),o=t.shape[t.shape.length-1],a=r/o,i=le({inputs:{x:t},backend:n,attrs:{shape:[a,o]}}),l=i.shape,u=new Ik("real",l,e),c=new Ik("imag",l,e),h=[{dataId:s.complexTensorInfos.real.dataId,dtype:s.complexTensorInfos.real.dtype,shape:l},{dataId:s.complexTensorInfos.imag.dataId,dtype:s.complexTensorInfos.imag.dtype,shape:l}],d=n.runWebGLProgram(u,h,"float32"),p=n.runWebGLProgram(c,h,"float32"),f=sa({inputs:{real:d,imag:p},backend:n});n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(p);const m=le({inputs:{x:f},backend:n,attrs:{shape:t.shape}});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(f),m}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Qee(t){const{inputs:e,backend:n}=t,{input:s}=e;return tA(s,!1,n)}const Zee={kernelName:W1,backendName:"webgl",kernelFunc:Qee};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Jee{constructor(e,n){this.outputShape=[],this.customUniforms=[{name:"value",type:"float"}],this.variableNames=["x"],this.outputShape=e,this.userCode=`
      void main() {
        // Input can be obtained from uniform value.
        setOutput(value);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function yh(t){const{backend:e,attrs:n}=t,{shape:s,value:r}=n;let{dtype:o}=n;if(o=o||gl(r),o==="string"){const a=kt(o,K(s));return a.fill(r),e.makeTensorInfo(s,o,a)}else{const a=new Jee(s,r),i=[[r]];return e.runWebGLProgram(a,[],o,i)}}const ete={kernelName:U1,backendName:"webgl",kernelFunc:yh};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class tte{constructor(e){this.variableNames=["Image"],this.outputShape=[];const n=e[2];this.outputShape=e,this.userCode=`
        void main() {
          ivec4 coords = getOutputCoords();
          int x = coords[2];

          int coordX = ${n} - x - 1;
          float outputValue;
          if(coordX >= 0 && coordX < ${n}) {
            outputValue = getImage(coords[0], coords[1], coordX, coords[3]);
          } else {
            outputValue = getImage(coords[0], coords[1], coords[2], coords[3]);
          }
          setOutput(outputValue);
        }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const nte={kernelName:G1,backendName:"webgl",kernelFunc:({inputs:t,backend:e})=>{const{image:n}=t,s=e,r=new tte(n.shape);return s.runWebGLProgram(r,[n],n.dtype)}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Tk="return floor(x);",ste=Ge({opSnippet:Tk,packedOpSnippet:Tk,cpuKernelImpl:vY}),rte={kernelName:mc,backendName:"webgl",kernelFunc:ste};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ote=`
  float s = sign(a) * sign(b);
  int ia = round(a);
  int ib = round(b);
  if (ib != 0) {
    // Windows (D3D) wants guaranteed non-zero int division at compile-time.
    return float(idiv(ia, ib, s));
  } else {
    return NAN;
  }
`,ate=`
  ivec4 ia = round(a);
  ivec4 ib = round(b);
  bvec4 cond = notEqual(ib, ivec4(0));
  ivec4 result = ivec4(0);
  vec4 s = sign(a) * sign(b);

  // Windows (D3D) wants guaranteed non-zero int division at compile-time.
  if (cond[0]) {
    result[0] = idiv(ia[0], ib[0], s[0]);
  }
  if (cond[1]) {
    result[1] = idiv(ia[1], ib[1], s[1]);
  }
  if (cond[2]) {
    result[2] = idiv(ia[2], ib[2], s[2]);
  }
  if (cond[3]) {
    result[3] = idiv(ia[3], ib[3], s[3]);
  }
  return vec4(result);
`,ite=rn({opSnippet:ote,packedOpSnippet:ate,dtype:"int32"}),lte={kernelName:gc,backendName:"webgl",kernelFunc:ite};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class ute{constructor(e){this.variableNames=["A"];const n=Nn(),[s,r]=e;this.outputShape=e,this.userCode=`
      void main() {
        ivec3 coords = getOutputCoords();
        int texR = coords[0];
        int texC = coords[1];
        int depth = coords[2];
        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${r}.0, ${s}.0);

        vec4 values = ${n.texture2D}(A, uv);
        float value;
        if (depth == 0) {
          value = values.r;
        } else if (depth == 1) {
          value = values.g;
        } else if (depth == 2) {
          value = values.b;
        } else if (depth == 3) {
          value = values.a;
        }

        setOutput(floor(value * 255.0 + 0.5));
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class cte{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0;const n=Nn(),[s,r]=e;this.outputShape=e,this.userCode=`
      void main() {
        ivec3 coords = getOutputCoords();
        int texR = coords[0];
        int texC = coords[1];
        int depth = coords[2];

        vec4 result = vec4(0.);

        for(int row=0; row<=1; row++) {
          for(int col=0; col<=1; col++) {
            texC = coords[1] + row;
            depth = coords[2] + col;

            vec2 uv = (vec2(texC, texR) + halfCR) /
                       vec2(${r}.0, ${s}.0);
            vec4 values = ${n.texture2D}(A, uv);
            float value;
            if (depth == 0) {
              value = values.r;
            } else if (depth == 1) {
              value = values.g;
            } else if (depth == 2) {
              value = values.b;
            } else if (depth == 3) {
              value = values.a;
            }

            result[row * 2 + col] = floor(value * 255.0 + 0.5);
          }
        }

        ${n.output} = result;
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const hte={kernelName:mF,backendName:"webgl",kernelFunc:dte};let ii,kg=G().getBool("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU");function dte(t){const{inputs:e,backend:n,attrs:s}=t;let{pixels:r}=e;const{numChannels:o}=s,a=typeof HTMLVideoElement<"u"&&r instanceof HTMLVideoElement,i=typeof HTMLImageElement<"u"&&r instanceof HTMLImageElement,[l,u]=a?[r.videoWidth,r.videoHeight]:[r.width,r.height],c=[u,l],h=[u,l,o];if(i||a){const m=G().getBool("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU");(ii==null||m!==kg)&&(kg=m,ii=document.createElement("canvas").getContext("2d",{willReadFrequently:kg})),ii.canvas.width=l,ii.canvas.height=u,ii.drawImage(r,0,0,l,u),r=ii.canvas}const d=n.makeTensorInfo(c,"int32");n.texData.get(d.dataId).usage=as.PIXELS,n.gpgpu.uploadPixelDataToTexture(n.getTexture(d.dataId),r);const p=G().getBool("WEBGL_PACK")?new cte(h):new ute(h),f=n.runWebGLProgram(p,[d],"int32");return n.disposeData(d.dataId),f}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pte(t){const{inputs:e,backend:n,attrs:s}=t,{x:r,filter:o,bias:a,preluActivationWeights:i}=e,{strides:l,pad:u,dataFormat:c,dilations:h,dimRoundingMode:d,activation:p,leakyreluAlpha:f}=s,m=so(c),y=Kt(r.shape,o.shape,l,h,u,d,!1,m);let g;const x=[],w=a!=null,b=i!=null,v=p==="leakyrelu",k=()=>{const N=[r,o],E=(T,R)=>{if(R==="NCHW"&&T.shape.length===1&&T.shape[0]!==1){const z=le({inputs:{x:T},backend:n,attrs:{shape:[T.shape[0],1,1]}});return x.push(z),z}return T};if(w&&N.push(E(a,c)),b&&N.push(E(i,c)),v){const T=n.makeTensorInfo([],"float32",Ko(f,"float32"));N.push(T),x.push(T)}return N};if(y.filterHeight===1&&y.filterWidth===1&&y.dilationHeight===1&&y.dilationWidth===1&&y.strideHeight===1&&y.strideWidth===1&&(y.padInfo.type==="SAME"||y.padInfo.type==="VALID"))g=XD({x:r,filter:o,convInfo:y,backend:n,bias:a,activation:p,preluActivationWeights:i,leakyreluAlpha:f});else if(y.strideWidth<=2&&m==="channelsLast"&&G().getBool("WEBGL_EXP_CONV")){const N=p?Uu(p,!0):null,E=new qD(y,w,N,b,v),T=[[y.padInfo.top,y.padInfo.left],[y.strideHeight,y.strideWidth],[y.dilationHeight,y.dilationWidth],[y.inHeight,y.inWidth]],R=k();g=n.runWebGLProgram(E,R,"float32",T)}else if(G().getBool("WEBGL_CONV_IM2COL"))g=YD({x:r,filter:o,convInfo:y,backend:n,bias:a,activation:p,preluActivationWeights:i,leakyreluAlpha:f});else{const N=p?Uu(p,!1):null,E=new KD(y,w,N,b,v),T=k();g=n.runWebGLProgram(E,T,"float32")}const $=le({inputs:{x:g},backend:n,attrs:{shape:y.outShape}});return x.push(g),x.forEach(N=>n.disposeIntermediateTensorInfo(N)),$}const fte={kernelName:Gd,backendName:"webgl",kernelFunc:pte};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function mte(t){const{inputs:e,backend:n,attrs:s}=t,{x:r,filter:o,bias:a,preluActivationWeights:i}=e,{strides:l,pad:u,dilations:c,dimRoundingMode:h,activation:d,leakyreluAlpha:p}=s,f=[];let m=c;m==null&&(m=[1,1]),C(tn(l,m),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${l} and dilations '${m}'`);const y=Kt(r.shape,o.shape,l,m,u,h,!0),g=G().getBool("WEBGL_PACK_DEPTHWISECONV")&&y.strideWidth<=2&&y.outChannels/y.inChannels===1,x=d?Uu(d,g):null,w=[r,o],b=a!=null,v=i!=null,k=d==="leakyrelu";if(b&&w.push(a),v&&w.push(i),k){const T=n.makeTensorInfo([],"float32",Ko(p,"float32"));w.push(T),f.push(T)}let $;g?$=new JD(y,b,x,v,k):$=new ZD(y,b,x,v,k);const N=[[y.padInfo.top,y.padInfo.left],[y.strideHeight,y.strideWidth],[y.dilationHeight,y.dilationWidth],[y.inHeight,y.inWidth]],E=n.runWebGLProgram($,w,"float32",N);return f.forEach(T=>n.disposeIntermediateTensorInfo(T)),E}const gte={kernelName:Hd,backendName:"webgl",kernelFunc:mte};class yte{constructor(e,n,s,r){this.sliceDim=e,this.strides=n,this.paramsShape=r,this.variableNames=["x","indices"],this.outputShape=s;const o=Ye(s.length);let a=`
    int index;`;for(let i=0;i<this.sliceDim;i++)a+=`
          index = round(getIndices(coords[0], ${i}));
          out_of_bounds = out_of_bounds || index < 0;
          out_of_bounds = out_of_bounds || index >= ${this.paramsShape[i]};
          flattenIndex += index * ${this.strides[i]};`;this.userCode=`
         void main() {
          ${o} coords = getOutputCoords();
          int flattenIndex = 0;
          bool out_of_bounds = false;

          ${a}

          setOutput(out_of_bounds ? 0.0 : getX(flattenIndex, coords[1]));
        }
      `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function xte(t){const{inputs:e,backend:n}=t,{params:s,indices:r}=e,o=r.shape,a=o[o.length-1],i=K(s.shape),[l,u,c,h]=kb(s,r),d=le({inputs:{x:r},backend:n,attrs:{shape:[u,a]}}),p=le({inputs:{x:s},backend:n,attrs:{shape:[K(s.shape)/c,c]}});if(n.shouldExecuteOnCPU([s,r])||s.dtype==="string"){const g=n.readSync(r.dataId),x=n.bufferSync(s),w=SY(g,x,s.dtype,u,a,c,h,s.shape,i);return n.makeTensorInfo(l,s.dtype,w.values)}const f=new yte(a,h,[u,c],s.shape),m=n.runWebGLProgram(f,[p,d],p.dtype),y=le({inputs:{x:m},backend:n,attrs:{shape:l}});return n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(m),y}const bte={kernelName:H1,backendName:"webgl",kernelFunc:xte};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class wte{constructor(e,n){this.variableNames=["A","indices"],this.outputShape=n,this.rank=n.length;const s=Ye(this.rank),r=vte(e);this.userCode=`
      void main() {
        ${s} resRC = getOutputCoords();
        int index = int(getIndices(resRC.x, resRC.z));
        float inBounds = (index >= 0) && (index < ${e[2]}) ? 1.0 : 0.0;
        setOutput(inBounds * getA(${r}));
      }
    `}}function vte(t,e){const n=["resRC.x","resRC.y","resRC.z","resRC.w"],s=[];for(let r=0;r<t.length;r++)r===2?s.push("index"):s.push(`${n[r]}`);return s.join()}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function nA(t){const{inputs:e,backend:n,attrs:s}=t,{x:r,indices:o}=e,{axis:a,batchDims:i}=s,l=Fe(a,r.shape)[0];if(G().get("DEBUG")){const x=n.readSync(o.dataId),w=r.shape[l];for(let b=0;b<x.length;++b){const v=x[b];C(v<=w-1&&v>=0,()=>`GatherV2: the index value ${v} is not in [0, ${w-1}]`)}}const u=Kb(r,o,l,i),c=K(o.shape),h=[],d=le({inputs:{x:r},backend:n,attrs:{shape:[u.batchSize,u.outerSize,u.dimSize,u.sliceSize]}}),p=le({inputs:{x:o},backend:n,attrs:{shape:[u.batchSize,c/u.batchSize]}});h.push(d),h.push(p);const f=[u.batchSize,u.outerSize,c/u.batchSize,u.sliceSize];if(n.shouldExecuteOnCPU([r,o])||r.dtype==="string"){const x=n.bufferSync(p),w=n.bufferSync(d),b=kY(w,x,f);return h.forEach(v=>n.disposeIntermediateTensorInfo(v)),n.makeTensorInfo(u.outputShape,b.dtype,b.values)}const m=new wte(d.shape,f),y=n.runWebGLProgram(m,[d,p],d.dtype);h.push(y);const g=le({inputs:{x:y},backend:n,attrs:{shape:u.outputShape}});return h.forEach(x=>n.disposeIntermediateTensorInfo(x)),g}const Ste={kernelName:sf,backendName:"webgl",kernelFunc:nA};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const kte="return float(a > b);",$te=`
  return vec4(greaterThan(a, b));
`,Cte=rn({opSnippet:kte,packedOpSnippet:$te,cpuKernelImpl:$Y,dtype:"bool"}),Nte={kernelName:rf,backendName:"webgl",kernelFunc:Cte};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ite="return float(a >= b);",Tte=`
  return vec4(greaterThanEqual(a, b));
`,Ete=rn({opSnippet:Ite,packedOpSnippet:Tte,dtype:"bool",cpuKernelImpl:CY}),Rte={kernelName:yc,backendName:"webgl",kernelFunc:Ete};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Dte(t){const{inputs:e,backend:n}=t,{input:s}=e;return tA(s,!0,n)}const Ate={kernelName:j1,backendName:"webgl",kernelFunc:Dte};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const _te="return float(!isnan(x) && !isinf(x));",Ote=Ge({opSnippet:_te,dtype:"bool"}),Fte={kernelName:bc,backendName:"webgl",kernelFunc:Ote};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Lte="return float(isinf(x));",Pte=Ge({opSnippet:Lte,dtype:"bool"}),zte={kernelName:wc,backendName:"webgl",kernelFunc:Pte};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Mte="return float(isnan(x));",Bte=Ge({opSnippet:Mte,dtype:"bool"}),Vte={kernelName:vc,backendName:"webgl",kernelFunc:Bte};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Wte="return float(a < b);",Ute=`
  return vec4(lessThan(a, b));
`,Gte=rn({opSnippet:Wte,packedOpSnippet:Ute,cpuKernelImpl:NY,dtype:"bool"}),Hte={kernelName:af,backendName:"webgl",kernelFunc:Gte};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const jte="return float(a <= b);",Kte=`
  return vec4(lessThanEqual(a, b));
`,qte=rn({opSnippet:jte,packedOpSnippet:Kte,cpuKernelImpl:IY,dtype:"bool"}),Xte={kernelName:lf,backendName:"webgl",kernelFunc:qte};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Yte(t){const{backend:e,attrs:n}=t,{start:s,stop:r,num:o}=n,a=TY(s,r,o);return e.makeTensorInfo([a.length],"float32",a)}const Qte={kernelName:q1,backendName:"webgl",kernelFunc:Yte};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Zte=Dl+`
  return x < 0.0 ? 0./0. : log(x);
`,Jte=`
  vec4 result = log(x);
  bvec4 isNaN = isnan(x);
  result.r = isNaN.r ? x.r : (x.r < 0.0 ? 0./0. : result.r);
  result.g = isNaN.g ? x.g : (x.g < 0.0 ? 0./0. : result.g);
  result.b = isNaN.b ? x.b : (x.b < 0.0 ? 0./0. : result.b);
  result.a = isNaN.a ? x.a : (x.a < 0.0 ? 0./0. : result.a);
  return result;
`,ene=Ge({opSnippet:Zte,packedOpSnippet:Jte,cpuKernelImpl:EY}),tne={kernelName:Sc,backendName:"webgl",kernelFunc:ene};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const nne=Dl+`
  return log(1.0 + x);
`,sne=Ge({opSnippet:nne}),rne={kernelName:kc,backendName:"webgl",kernelFunc:sne};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const one="return float(a >= 1.0 && b >= 1.0);",ane=`
  return vec4(
    vec4(greaterThanEqual(a, vec4(1.0))) *
    vec4(greaterThanEqual(b, vec4(1.0))));
`,ine=rn({opSnippet:one,packedOpSnippet:ane,dtype:"bool"}),lne={kernelName:uf,backendName:"webgl",kernelFunc:ine};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const une="return float(!(x >= 1.0));",cne=Ge({opSnippet:une}),hne={kernelName:cf,backendName:"webgl",kernelFunc:cne};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const dne="return float(a >= 1.0 || b >= 1.0);",pne=`
  return min(
    vec4(greaterThanEqual(a, vec4(1.0))) +
    vec4(greaterThanEqual(b, vec4(1.0))),
    vec4(1.0));
`,fne=rn({opSnippet:dne,packedOpSnippet:pne,dtype:"bool"}),mne={kernelName:hf,backendName:"webgl",kernelFunc:fne};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class gne{constructor(e,n,s,r,o){this.variableNames=["x"],this.outputShape=[];const a=n,i=e[3]-1;this.outputShape=e;let l;const u=`float(${s}) + float(${r}) * sum`;o===.5?l=`inversesqrt(${u})`:o===1?l=`1.0/(${u})`:l=`exp(log(${u}) * float(-${o}));`,this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int r = coords[1];
        int c = coords[2];
        int d = coords[3];
        float x = getX(b, r, c, d);
        float sum = 0.0;
        for (int j = -${a}; j <= ${a}; j++) {
          int idx = d + j;
          if (idx >= 0 && idx <=  ${i}) {
            float z = getX(b, r, c, idx);
            sum += z * z;
          }
        }
        float val = x * ${l};
        setOutput(val);
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class yne{constructor(e,n,s,r,o){this.variableNames=["x"],this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0;const a=n,i=e[3]-1;this.outputShape=e;let l;const u=`float(${s}) + float(${r}) * sum`;o===.5?l=`inversesqrt(${u})`:o===1?l=`1.0/(${u})`:l=`exp(log(${u}) * float(-${o}));`,this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords.x;
        int r = coords.y;
        int c = coords.z;
        int d = coords.w;

        bool hasNextCol = d < ${this.outputShape[3]};
        bool hasNextRow = c < ${this.outputShape[2]};

        vec4 sum = vec4(0.);
        vec4 xFragAtOutputCoords = getX(b, r, c, d);

        vec4 xAtOutputCoords = vec4(
          getChannel(xFragAtOutputCoords, vec2(c, d)),
          hasNextCol ?
            getChannel(xFragAtOutputCoords, vec2(c, d + 1)) : 0.0,
          hasNextRow ?
            getChannel(xFragAtOutputCoords , vec2(c + 1, d)) : 0.0,
          (hasNextRow && hasNextCol) ?
            getChannel(xFragAtOutputCoords, vec2(c + 1, d + 1)) : 0.0
        );

        int firstChannel = d - ${a};
        vec2 cache = vec2(0.);
        if(firstChannel >= 0){
          vec4 firstChannelFrag = getX(b, r, c, firstChannel);
          cache.x = getChannel(firstChannelFrag, vec2(c, firstChannel));
            if(hasNextRow){
              cache.y = getChannel(firstChannelFrag, vec2(c + 1, firstChannel));
            }
        }

        ivec2 depth = ivec2(d, d + 1);
        for (int j = - ${a}; j <= ${a}; j++) {
          ivec2 idx = depth + j;
          bvec2 aboveLowerBound = greaterThanEqual(idx, ivec2(0));
          bvec2 belowUpperBound = lessThanEqual(idx, ivec2(${i}));

          bool depthInRange = aboveLowerBound.x && belowUpperBound.x;
          bool depthPlusOneInRange = aboveLowerBound.y && belowUpperBound.y;

          if(depthInRange || depthPlusOneInRange){
            vec4 z = vec4(0.);
            vec4 xFragAtCurrentDepth;
            z.xz = cache.xy;
            if(depthPlusOneInRange && hasNextCol){
              xFragAtCurrentDepth = idx.y != d ?
                getX(b, r, c, idx.y) : xFragAtOutputCoords;
              z.y = getChannel(xFragAtCurrentDepth, vec2(c, idx.y));
              if(hasNextRow){
                z.w = getChannel(xFragAtCurrentDepth, vec2(c + 1, idx.y));
              }
            }
            cache.xy = z.yw;
            sum += z * z;
          }
        }
        vec4 result = xAtOutputCoords * ${l};
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const xne=t=>{const{inputs:e,backend:n,attrs:s}=t,{x:r}=e,{depthRadius:o,bias:a,alpha:i,beta:l}=s,u=G().getBool("WEBGL_PACK_NORMALIZATION")?new yne(r.shape,o,a,i,l):new gne(r.shape,o,a,i,l);return n.runWebGLProgram(u,[r],r.dtype)},bne={kernelName:df,backendName:"webgl",kernelFunc:xne};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class wne{constructor(e,n,s,r,o){this.variableNames=["inputImage","outputImage","dy"],this.outputShape=[],this.outputShape=e,this.depth=e[3],this.depthRadius=n,this.bias=s,this.alpha=r,this.beta=o,this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int r = coords[1];
        int c = coords[2];

        float result = 0.0;
        for (int d = 0; d < ${this.depth}; ++d) {
          int depthBegin = int(max(0.0, float(d - ${n})));
          int depthEnd = int(min(float(${this.depth}),
              float(d + ${n} + 1)));

          const int MIN_DEPTH_BEGIN = 0;
          const int MAX_DEPTH_END = ${this.depth};

          float norm = 0.0;
          for (int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k) {
            if (k < depthBegin){
              continue;
            }
            else if (k >= depthBegin && k < depthEnd) {
              norm += getInputImage(b, r, c, k) * getInputImage(b, r, c, k);
            }
            else {
              break;
            }
          }

          norm = float(${r}) * norm + float(${s});

          for(int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k){
            if (k < depthBegin){
              continue;
            }
            else if (k >= depthBegin && k < depthEnd){
              float dyi = -2.0 * float(${r})
                * float(${o})
                * getInputImage(b, r, c, k) * getOutputImage(b, r, c, d)
                / norm;
              if (k == d) {
                dyi += pow(norm, -1.0 * ${o});
              }
              if (k == coords[3]) {
                dyi *= getDy(b, r, c, d);
                result += dyi;
              }
            }
            else {
              break;
            }
          }
      }
      setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const vne=t=>{const{inputs:e,backend:n,attrs:s}=t,{x:r,y:o,dy:a}=e,{depthRadius:i,bias:l,alpha:u,beta:c}=s,h=new wne(r.shape,i,l,u,c);return n.runWebGLProgram(h,[r,o,a],r.dtype)},Sne={kernelName:X1,backendName:"webgl",kernelFunc:vne};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function kne(t,e,n,s){const r=K(e),a=K(t.shape)/r,i=le({inputs:{x:t},attrs:{shape:[a,r]},backend:s}),l=si(i,t.dtype,"max",s),u=le({inputs:{x:l},attrs:{shape:n},backend:s});return s.disposeIntermediateTensorInfo(i),s.disposeIntermediateTensorInfo(l),u}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sA(t){const{inputs:e,backend:n,attrs:s}=t,{x:r}=e,{reductionIndices:o,keepDims:a}=s,i=r.shape.length,l=Fe(o,r.shape);let u=l;const c=gt(u,i),h=c!=null,d=n.shouldExecuteOnCPU([r]);let p=r;if(h){if(d){const w=n.texData.get(p.dataId).values,b=new Array(i);for(let $=0;$<b.length;$++)b[$]=r.shape[c[$]];const v=Rw(w,r.shape,r.dtype,c,b);p=n.makeTensorInfo(b,r.dtype);const k=n.texData.get(p.dataId);k.values=v}else p=Im(r,c,n);u=Ct(u.length,i)}nn("max",u,i);const[f,m]=qt(p.shape,u);let y=f;a&&(y=$t(f,l));let g;if(d){const w=n.texData.get(p.dataId).values,b=RY(w,K(m),y,r.dtype);g=n.makeTensorInfo(y,r.dtype);const v=n.texData.get(g.dataId);v.values=b}else g=kne(p,m,y,n);return h&&n.disposeIntermediateTensorInfo(p),g}const $ne={kernelName:pf,backendName:"webgl",kernelFunc:sA};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Cne=Dw+`
  return max(a, b);
`,Nne=`
  vec4 result = vec4(max(a, b));
  bvec4 isNaNA = isnan(a);
  bvec4 isNaNB = isnan(b);
  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);
  `+ni+`
  return result;
`,Ine=rn({opSnippet:Cne,packedOpSnippet:Nne,cpuKernelImpl:DY}),Tne={kernelName:$c,backendName:"webgl",kernelFunc:Ine};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ene(t){const{inputs:e,backend:n,attrs:s}=t,{x:r}=e;fh(r,"maxPool");const{filterSize:o,strides:a,pad:i,dimRoundingMode:l}=s,u=1;C(tn(a,u),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${a} and dilations '${u}'`);const c=Ws(r.shape,o,a,u,i,l);if(c.filterWidth===1&&c.filterHeight===1&&Me(c.inShape,c.outShape))return Zn({inputs:{x:r},backend:n});const h=new Gu(c,"max",!1);return n.runWebGLProgram(h,[r],r.dtype)}const Rne={kernelName:ff,backendName:"webgl",kernelFunc:Ene};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Dne(t){const{inputs:e,backend:n,attrs:s}=t,{x:r}=e,{filterSize:o,strides:a,pad:i,dataFormat:l,dimRoundingMode:u}=s,c=[1,1,1],h=no(r.shape,o,a,c,i,u,l),d=new _w(h,"max",!1);return n.runWebGLProgram(d,[r],r.dtype)}const Ane={kernelName:mf,backendName:"webgl",kernelFunc:Dne};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class _ne{constructor(e){this.variableNames=["dy","maxPos"],this.outputShape=e.inShape;const n=e.strideHeight,s=e.strideWidth,r=e.dilationHeight,o=e.effectiveFilterHeight,a=e.effectiveFilterWidth,i=o-1-e.padInfo.top,l=a-1-e.padInfo.left,u=o*a-1;this.userCode=`
      const ivec2 pads = ivec2(${i}, ${l});

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];

        ivec2 dyRCCorner = coords.yz - pads;
        int dyRCorner = dyRCCorner.x;
        int dyCCorner = dyRCCorner.y;

        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${o};
          wR += ${r}) {
          float dyR = float(dyRCorner + wR) / ${n}.0;

          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          for (int wC = 0; wC < ${a}; wC++) {
            float dyC = float(dyCCorner + wC) / ${s}.0;

            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            float dyValue = getDy(b, idyR, idyC, d);
            int maxPosValue = ${u} - int(getMaxPos(b, idyR, idyC, d));

            // Get the current value, check it against the value from the
            // position matrix.
            int curPosValue = wR * ${a} + wC;
            float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);

            dotProd += dyValue * mask;
          }
        }
        setOutput(dotProd);
      }
    `}}class One{constructor(e){this.variableNames=["dy","maxPos"],this.outputShape=e.inShape;const n=e.strideDepth,s=e.strideHeight,r=e.strideWidth,o=e.dilationDepth,a=e.dilationHeight,i=e.dilationWidth,l=e.effectiveFilterDepth,u=e.effectiveFilterHeight,c=e.effectiveFilterWidth,h=l-1-e.padInfo.front,d=u-1-e.padInfo.top,p=c-1-e.padInfo.left,f=l*u*c-1;this.userCode=`
      const ivec3 pads = ivec3(${h}, ${d}, ${p});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int ch = coords.u;

        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;
        int dyDCorner = dyCorner.x;
        int dyRCorner = dyCorner.y;
        int dyCCorner = dyCorner.z;

        // Convolve dy(?, ?, ?, ch) with pos mask(:, :, :, d) to get
        // dx(xD, xR, xC, ch).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;

        for (int wD = 0; wD < ${l};
           wD += ${o}) {
          float dyD = float(dyDCorner + wD) / ${n}.0;

          if (dyD < 0.0 || dyD >= ${e.outDepth}.0 || fract(dyD) > 0.0) {
            continue;
          }
          int idyD = int(dyD);

          for (int wR = 0; wR < ${u};
              wR += ${a}) {
            float dyR = float(dyRCorner + wR) / ${s}.0;

            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||
                fract(dyR) > 0.0) {
              continue;
            }
            int idyR = int(dyR);

            for (int wC = 0; wC < ${c};
                wC += ${i}) {
              float dyC = float(dyCCorner + wC) / ${r}.0;

              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                  fract(dyC) > 0.0) {
                continue;
              }
              int idyC = int(dyC);

              float dyValue = getDy(batch, idyD, idyR, idyC, ch);
              int maxPosValue = ${f} -
                  int(getMaxPos(batch, idyD, idyR, idyC, ch));

              // Get the current value, check it against the value from the
              // position matrix.
              int curPosValue =
                  wD * ${u} * ${c} +
                  wR * ${c} + wC;
              float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);

              dotProd += dyValue * mask;
            }
          }
        }
        setOutput(dotProd);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Fne(t){const{inputs:e,backend:n,attrs:s}=t,{dy:r,input:o}=e,a=o,{filterSize:i,strides:l,pad:u,dimRoundingMode:c}=s,h=[1,1,1],d=no(a.shape,i,l,h,u,c),p=new _w(d,"max",!0),f=n.runWebGLProgram(p,[a],a.dtype),m=new One(d),y=n.runWebGLProgram(m,[r,f],a.dtype);return n.disposeIntermediateTensorInfo(f),y}const Lne={kernelName:Q1,backendName:"webgl",kernelFunc:Fne};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Pne(t){const{inputs:e,backend:n,attrs:s}=t,{dy:r,input:o,output:a}=e,i=o;fh([o,a],"maxPoolGrad");const{filterSize:l,strides:u,pad:c,dimRoundingMode:h}=s,d=Ws(i.shape,l,u,1,c,h),p=!0,f=new Gu(d,"max",p),m=n.runWebGLProgram(f,[i],i.dtype),y=new _ne(d),g=n.runWebGLProgram(y,[r,m],i.dtype);return n.disposeIntermediateTensorInfo(m),g}const zne={kernelName:Y1,backendName:"webgl",kernelFunc:Pne};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Mne(t,e,n,s){let r=new Gu(n,"max",!1);const o=s.runWebGLProgram(r,[t],"float32");r=new Gu(n,"max",!0,!0,e);const a=s.runWebGLProgram(r,[t],"float32");return[o,a]}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Bne={kernelName:Z1,backendName:"webgl",kernelFunc:({inputs:t,attrs:e,backend:n})=>{const{x:s}=t,{filterSize:r,strides:o,pad:a,includeBatchInIndex:i}=e,l=n;C(s.shape.length===4,()=>`Error in maxPool: input must be rank 4 but got rank ${s.shape.length}.`);const u=[1,1];C(tn(o,u),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${o} and dilations '${u}'`);const c=Ws(s.shape,r,o,u,a),[h,d]=Mne(s,i,c,l);return[h,d]}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Vne(t,e,n,s){const r=K(e),a=K(t.shape)/r,i=le({inputs:{x:t},attrs:{shape:[a,r]},backend:s}),l=si(i,"float32","mean",s),u=le({inputs:{x:l},attrs:{shape:n},backend:s});return s.disposeIntermediateTensorInfo(i),s.disposeIntermediateTensorInfo(l),u}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Wne={kernelName:gf,backendName:"webgl",kernelFunc:({inputs:t,attrs:e,backend:n})=>{const{x:s}=t,{keepDims:r,axis:o}=e,a=n,i=s.shape.length,l=Fe(o,s.shape);let u=l;const c=gt(u,i),h=c!=null,d=a.shouldExecuteOnCPU([s]),p=[];let f=s;if(h){if(d){const b=a.texData.get(f.dataId).values,v=new Array(i);for(let N=0;N<v.length;N++)v[N]=s.shape[c[N]];const k=Rw(b,s.shape,s.dtype,c,v);f=a.makeTensorInfo(v,s.dtype);const $=a.texData.get(f.dataId);$.values=k}else f=Im(s,c,a);p.push(f),u=Ct(u.length,i)}nn("sum",u,i);const[m,y]=qt(f.shape,u);let g=m;r&&(g=$t(m,l));const x=Vne(f,y,g,a);for(const w of p)a.disposeIntermediateTensorInfo(w);return x}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Une(t){const{inputs:e,backend:n,attrs:s}=t,{x:r}=e,{axis:o,keepDims:a}=s,i=r.shape.length,l=Fe(o,r.shape);let u=l;const c=gt(u,i);let h=r;c!=null&&(h=$n({inputs:{x:r},backend:n,attrs:{perm:c}}),u=Ct(u.length,r.shape.length)),nn("min",u,i);const[d,p]=qt(h.shape,u),f=K(p),m=le({inputs:{x:h},backend:n,attrs:{shape:[-1,f]}}),y=si(m,m.dtype,"min",n);let g;if(a){const x=$t(d,l);g=le({inputs:{x:y},backend:n,attrs:{shape:x}})}else g=le({inputs:{x:y},backend:n,attrs:{shape:d}});return n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(y),c!=null&&n.disposeIntermediateTensorInfo(h),g}const Gne={kernelName:yf,backendName:"webgl",kernelFunc:Une};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Hne=Dw+`
  return min(a, b);
`,jne=`
  vec4 result = vec4(min(a, b));
  bvec4 isNaNA = isnan(a);
  bvec4 isNaNB = isnan(b);
  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);
  `+ni+`
  return result;
`,Kne=rn({opSnippet:Hne,packedOpSnippet:jne,cpuKernelImpl:AY}),qne={kernelName:Cc,backendName:"webgl",kernelFunc:Kne};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Xne{constructor(e,n,s){this.variableNames=["x"],this.outputShape=n.map((c,h)=>c[0]+e[h]+c[1]);const r=e.length,o=Ye(r),a=n.map(c=>c[0]).join(","),i=n.map((c,h)=>c[0]+e[h]).join(","),l=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,r),u=s==="reflect"?0:1;if(r===1){this.userCode=`
        int start = ${a};
        int end = ${i};

        void main() {
          int outC = getOutputCoords();
          if (outC < start) {
            outC = start * 2 - outC - ${u};
          } else if(outC >= end) {
            outC = (end - 1) * 2 - outC + ${u};
          }
          setOutput(getX(outC - start));
        }
      `;return}this.userCode=`
      ${o} start = ${o}(${a});
      ${o} end = ${o}(${i});

      void main() {
        ${o} outC = getOutputCoords();
        for (int i = 0; i < ${r}; i++) {
          if (outC[i] < start[i]) {
            outC[i] = start[i] * 2 - outC[i] - ${u};
          } else if(outC[i] >= end[i]) {
            outC[i] = (end[i] - 1) * 2 - outC[i] + ${u};
          }
        }
        ${o} coords = outC - start;
        setOutput(getX(${l}));
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Yne{constructor(e,n,s){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=n.map((f,m)=>f[0]+e[m]+f[1]);const r=e.length,o=Ye(r),a=n.map(f=>f[0]).join(","),i=n.map((f,m)=>f[0]+e[m]).join(","),l=vn("rc",r),u=vn("source",r),c=`${l[r-1]} < ${this.outputShape[r-1]}`,h=r===1?"source":`vec2(${u.slice(-2).join()})`,d=s==="reflect"?0:1;let p="";if(r===1){const f=`
        ${o} source = rc;
        if (source < start) {
          source = start * 2 - source - ${d};
        } else if (source >= end) {
          source = (end - 1) * 2 - source + ${d};
        }
        source -= start;
      `;p=`
        ${o} rc = outputLoc;
        ${f}
        result[0] = getChannel(getX(${u.join()}), ${h});
        ${l[r-1]} += 1;
        if(${c}) {
          ${f}
          result[1] = getChannel(getX(${u.join()}), ${h});
        }
      `}else{const f=`
        ${o} source = rc;
        ${o} lt = ${o}(lessThan(source, start));
        ${o} gte = ${o}(greaterThanEqual(source, end));
        ${o} orig = 1 - (lt + gte);
        source = orig * source +
                lt * (start * 2 - source - ${d}) +
                gte * ((end - 1) * 2 - source + ${d});
        source -= start;
      `;p=`
        ${o} rc = outputLoc;
        ${f}
        result[0] = getChannel(getX(${u.join()}), ${h});
        ${l[r-1]} += 1;
        if(${c}) {
          ${f}
          result[1] = getChannel(getX(${u.join()}), ${h});
        }
        rc = outputLoc;
        ${l[r-2]} += 1;
        if(${l[r-2]} < ${this.outputShape[r-2]}) {
          ${f}
          result[2] = getChannel(getX(${u.join()}), ${h});
          ${l[r-1]} += 1;
          if(${c}) {
            ${f}
            result[3] = getChannel(getX(${u.join()}), ${h});
          }
        }
      `}this.userCode=`
      const ${o} start = ${o}(${a});
      const ${o} end = ${o}(${i});

      void main() {
        ${o} outputLoc = getOutputCoords();
        vec4 result = vec4(0.);
        ${p}
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Qne=({inputs:t,backend:e,attrs:n})=>{const{x:s}=t,{paddings:r,mode:o}=n,a=G().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new Yne(s.shape,r,o):new Xne(s.shape,r,o);return e.runWebGLProgram(a,[s],s.dtype)},Zne={kernelName:xf,backendName:"webgl",kernelFunc:Qne};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Jne=`if (b == 0.0) return NAN;
  return mod(a, b);`,ese=`
  vec4 result = mod(a, b);
  bvec4 isNaN = equal(b, vec4(0.0));
  `+ni+`
  return result;
`,tse=rn({opSnippet:Jne,packedOpSnippet:ese}),nse={kernelName:Nc,backendName:"webgl",kernelFunc:tse};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class sse{constructor(e,n,s){this.variableNames=["probs"],this.customUniforms=[{name:"seed",type:"float"}],this.outputShape=[e,s],this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];

        float r = random(seed);
        float cdf = 0.0;

        for (int i = 0; i < ${n-1}; i++) {
          cdf += getProbs(batch, i);

          if (r < cdf) {
            setOutput(float(i));
            return;
          }
        }

        // If no other event happened, last event happened.
        setOutput(float(${n-1}));
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const rse=`
if (a == b) {
  return 1.0;
};
return a / b;`,ose=`
  // vec4 one = vec4(equal(a, b));
  // return one + (vec4(1.0) - one) * a / b;
  vec4 result = a / b;
  if(a.x == b.x) {
    result.x = 1.;
  }
  if(a.y == b.y) {
    result.y = 1.;
  }
  if(a.z == b.z) {
    result.z = 1.;
  }
  if(a.w == b.w) {
    result.w = 1.;
  }

  return result;
`,rA=rn({opSnippet:rse,packedOpSnippet:ose,checkOutOfBounds:!0}),ase={kernelName:cc,backendName:"webgl",kernelFunc:rA};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ek="return a - b;",oA=rn({opSnippet:Ek,packedOpSnippet:Ek,supportsComplex:!0,cpuKernelImpl:JY}),ise={kernelName:Wc,backendName:"webgl",kernelFunc:oA};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function aA(t){const{inputs:e,backend:n,attrs:s}=t,{logits:r}=e,{dim:o}=s,a=Fe([o],r.shape),i=sA({inputs:{x:r},backend:n,attrs:{reductionIndices:a,keepDims:!1}}),l=$t(i.shape,a),u=le({inputs:{x:i},backend:n,attrs:{shape:l}}),c=oA({inputs:{a:r,b:u},backend:n}),h=eA({inputs:{x:c},backend:n}),d=Tm({inputs:{x:h},backend:n,attrs:{axis:a,keepDims:!1}}),p=le({inputs:{x:d},backend:n,attrs:{shape:l}}),f=rA({inputs:{a:h,b:p},backend:n});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(u),n.disposeIntermediateTensorInfo(c),n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(p),f}const lse={kernelName:Lf,backendName:"webgl",kernelFunc:aA};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function use(t){const{inputs:e,backend:n,attrs:s}=t,{logits:r}=e,{numSamples:o,seed:a,normalized:i}=s,l=i?r:aA({inputs:{logits:r},backend:n,attrs:{dim:r.shape.length-1}}),u=l.shape[0],c=l.shape[1],h=new sse(u,c,o),d=[[a]],p=n.runWebGLProgram(h,[l],"int32",d);return i||n.disposeIntermediateTensorInfo(l),p}const cse={kernelName:J1,backendName:"webgl",kernelFunc:use};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const hse=Gs+`
  return -x;
`,dse=`
  vec4 result = -x;
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`;function pse(t){const{inputs:e,backend:n}=t,{x:s}=e;if(n.shouldExecuteOnCPU([s])){const o=n.texData.get(s.dataId),[a,i]=OY(o.values,s.shape,s.dtype);return n.makeTensorInfo(i,s.dtype,a)}let r;return G().getBool("WEBGL_PACK_UNARY_OPERATIONS")?r=new xo(s.shape,dse):r=new Sr(s.shape,hse),n.runWebGLProgram(r,[s],s.dtype)}const fse={kernelName:bf,backendName:"webgl",kernelFunc:pse};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const mse=gb;function gse(t){ss("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:e,backend:n,attrs:s}=t,{boxes:r,scores:o}=e,{maxOutputSize:a,iouThreshold:i,scoreThreshold:l}=s,u=n.readSync(r.dataId),c=n.readSync(o.dataId),{selectedIndices:h}=mse(u,c,a,i,l);return n.makeTensorInfo([h.length],"int32",new Int32Array(h))}const yse={kernelName:ex,backendName:"webgl",kernelFunc:gse};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const xse=yb;function bse(t){ss("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:e,backend:n,attrs:s}=t,{boxes:r,scores:o}=e,{maxOutputSize:a,iouThreshold:i,scoreThreshold:l,padToMaxOutputSize:u}=s,c=n.readSync(r.dataId),h=n.readSync(o.dataId),{selectedIndices:d,validOutputs:p}=xse(c,h,a,i,l,u);return[n.makeTensorInfo([d.length],"int32",new Int32Array(d)),n.makeTensorInfo([],"int32",new Int32Array([p]))]}const wse={kernelName:tx,backendName:"webgl",kernelFunc:bse};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const vse=xb;function Sse(t){ss("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:e,backend:n,attrs:s}=t,{boxes:r,scores:o}=e,{maxOutputSize:a,iouThreshold:i,scoreThreshold:l,softNmsSigma:u}=s,c=n.readSync(r.dataId),h=n.readSync(o.dataId),d=a,p=i,f=l,m=u,{selectedIndices:y,selectedScores:g}=vse(c,h,d,p,f,m);return[n.makeTensorInfo([y.length],"int32",new Int32Array(y)),n.makeTensorInfo([g.length],"float32",new Float32Array(g))]}const kse={kernelName:nx,backendName:"webgl",kernelFunc:Sse};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class $se{constructor(e,n,s,r){this.variableNames=["indices"],this.outputShape=[e,n],this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int index = round(getIndices(coords.x));
        setOutput(mix(float(${r}), float(${s}),
                      float(index == coords.y)));
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Cse=t=>{const{inputs:e,backend:n,attrs:s}=t,{indices:r}=e,{dtype:o,depth:a,onValue:i,offValue:l}=s,u=K(r.shape),c=new $se(u,a,i,l),h=le({inputs:{x:r},backend:n,attrs:{shape:[u]}}),d=n.runWebGLProgram(c,[h],o);n.disposeIntermediateTensorInfo(h);const p=[...r.shape,a],f=le({inputs:{x:d},backend:n,attrs:{shape:p}});return n.disposeIntermediateTensorInfo(d),f},Nse={kernelName:Sf,backendName:"webgl",kernelFunc:Cse};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function xp(t){const{inputs:e,backend:n}=t,{x:s}=e;if(s.dtype==="complex64"){const r=gh({inputs:{input:s},backend:n}),o=xp({inputs:{x:r},backend:n}),a=Em({inputs:{input:s},backend:n}),i=xp({inputs:{x:a},backend:n}),l=sa({inputs:{real:o,imag:i},backend:n});return n.disposeIntermediateTensorInfo(r),n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(i),l}else return yh({attrs:{shape:s.shape,dtype:s.dtype,value:s.dtype==="string"?"":0},backend:n})}const Ise={kernelName:Bf,backendName:"webgl",kernelFunc:xp};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function iA(t){const{inputs:e,backend:n}=t,{x:s}=e;if(s.dtype==="string")throw new Error("onesLike is not supported under string dtype");if(s.dtype==="complex64"){const r=gh({inputs:{input:s},backend:n}),o=iA({inputs:{x:r},backend:n}),a=Em({inputs:{input:s},backend:n}),i=xp({inputs:{x:a},backend:n}),l=sa({inputs:{real:o,imag:i},backend:n});return n.disposeIntermediateTensorInfo(r),n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(i),l}else return yh({attrs:{shape:s.shape,dtype:s.dtype,value:1},backend:n})}const Tse={kernelName:vf,backendName:"webgl",kernelFunc:iA};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ese(t){const{inputs:e,backend:n,attrs:s}=t,{axis:r}=s;if(e.length===1)return k0({inputs:{input:e[0]},backend:n,attrs:{dim:r}});const o=e[0].shape,a=e[0].dtype;e.forEach(c=>{Jn(o,c.shape,"All tensors passed to stack must have matching shapes"),C(a===c.dtype,()=>"All tensors passed to stack must have matching dtypes")});const i=[],l=e.map(c=>{const h=k0({inputs:{input:c},backend:n,attrs:{dim:r}});return i.push(h),h}),u=jD({inputs:l,backend:n,attrs:{axis:r}});return i.forEach(c=>n.disposeIntermediateTensorInfo(c)),u}const Rse={kernelName:kf,backendName:"webgl",kernelFunc:Ese};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Dse{constructor(e,n,s){this.variableNames=["x"],this.customUniforms=[{name:"value",type:"float"}],this.outputShape=n.map((u,c)=>u[0]+e[c]+u[1]);const r=e.length,o=Ye(r),a=n.map(u=>u[0]).join(","),i=n.map((u,c)=>u[0]+e[c]).join(","),l=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,r);if(r===1){this.userCode=`
        int start = ${a};
        int end = ${i};

        void main() {
          int outC = getOutputCoords();
          if (outC < start || outC >= end) {
            setOutput(value);
          } else {
            setOutput(getX(outC - start));
          }
        }
      `;return}this.userCode=`
      ${o} start = ${o}(${a});
      ${o} end = ${o}(${i});

      void main() {
        ${o} outC = getOutputCoords();
        if (any(lessThan(outC, start)) || any(greaterThanEqual(outC, end))) {
          setOutput(value);
        } else {
          ${o} coords = outC - start;
          setOutput(getX(${l}));
        }
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Ase{constructor(e,n,s){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"value",type:"float"}],this.outputShape=n.map((m,y)=>m[0]+e[y]+m[1]);const r=e.length,o=Ye(r),a=n.map(m=>m[0]).join(","),i=n.map((m,y)=>m[0]+e[y]).join(","),l=vn("rc",r),u=vn("source",r),c=`${l[r-1]} < ${this.outputShape[r-1]}`,h=r===1?"source":`vec2(${u.slice(-2).join()})`,d=[`${o} rc = outputLoc;`,`${l[r-1]} += 1;
       if(${c}) {
      `,r===1?"":`}
       rc = outputLoc;
       ${l[r-2]} += 1;
       if(${l[r-2]} < ${this.outputShape[r-2]}) {`,r===1?"":`  ${l[r-1]} += 1;
         if(${c}) {`],p=r===1?"rc < start || rc >= end":"any(lessThan(rc, start)) || any(greaterThanEqual(rc, end))";let f="";for(let m=0,y=r===1?2:4;m<y;m++)f+=`
        ${d[m]}
        if (${p}) {
          result[${m}] = float(value);
        } else {
          ${o} source = rc - start;
          result[${m}] = getChannel(getX(${u.join()}), ${h});
        }
      `;f+=r===1?"} ":"}}",this.userCode=`
      const ${o} start = ${o}(${a});
      const ${o} end = ${o}(${i});

      void main() {
        ${o} outputLoc = getOutputCoords();
        vec4 result = vec4(0.);
        ${f}
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const lA=t=>{const{inputs:e,backend:n,attrs:s}=t,{x:r}=e,{paddings:o,constantValue:a}=s;if(K(r.shape)===0){const u=o.map((c,h)=>c[0]+r.shape[h]+c[1]);return yh({backend:n,attrs:{shape:u,value:a,dtype:r.dtype}})}const i=G().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new Ase(r.shape,o,a):new Dse(r.shape,o,a),l=[[a]];return n.runWebGLProgram(i,[r],r.dtype,l)},_se={kernelName:$f,backendName:"webgl",kernelFunc:lA};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ose=`
  if(a < 0.0 && floor(b) < b){
    return NAN;
  }
  if (b == 0.0) {
    return 1.0;
  }
  return (round(mod(b, 2.0)) != 1) ?
      pow(abs(a), b) : sign(a) * pow(abs(a), b);
`,Fse=`
  // isModRound1 has 1 for components with round(mod(b, 2.0)) == 1, 0 otherwise.
  vec4 isModRound1 = vec4(equal(round(mod(b, 2.0)), ivec4(1)));
  vec4 multiplier = sign(a) * isModRound1 + (vec4(1.0) - isModRound1);
  vec4 result = multiplier * pow(abs(a), b);

  // Ensure that a^0 = 1, including 0^0 = 1 as this correspond to TF and JS
  bvec4 isExpZero = equal(b, vec4(0.0));
  result.r = isExpZero.r ? 1.0 : result.r;
  result.g = isExpZero.g ? 1.0 : result.g;
  result.b = isExpZero.b ? 1.0 : result.b;
  result.a = isExpZero.a ? 1.0 : result.a;

  bvec4 isNaN1 = lessThan(a, vec4(0.0));
  bvec4 isNaN2 = lessThan(floor(b), b);
  bvec4 isNaN = bvec4(isNaN1.x && isNaN2.x, isNaN1.y && isNaN2.y, isNaN1.z && isNaN2.z, isNaN1.w && isNaN2.w);
  `+ni+`
  return result;
`,Lse=rn({opSnippet:Ose,packedOpSnippet:Fse}),Pse={kernelName:Tc,backendName:"webgl",kernelFunc:Lse};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function zse(t){const{inputs:e,backend:n,attrs:s}=t,{x:r}=e,{axis:o,keepDims:a}=s,i=r.shape.length,l=[],u=Fe(o,r.shape);let c=u;const h=gt(c,i);let d=r;h!=null&&(d=$n({inputs:{x:r},backend:n,attrs:{perm:h}}),c=Ct(c.length,i),l.push(d)),nn("prod",c,i);let p;if(n.shouldExecuteOnCPU([d])){const f=n.texData.get(d.dataId).values,{outVals:m,outShape:y,outDtype:g}=LY(d.shape,d.dtype,f,c);p=n.makeTensorInfo(y,g,m)}else{const[f,m]=qt(d.shape,c),y=K(m),g=le({inputs:{x:d},backend:n,attrs:{shape:[-1,y]}}),x=Tx(r.dtype),w=si(g,x,"prod",n);p=le({inputs:{x:w},backend:n,attrs:{shape:f}}),l.push(g),l.push(w)}if(a){l.push(p);const f=$t(p.shape,u);p=le({inputs:{x:p},backend:n,attrs:{shape:f}})}return l.forEach(f=>n.disposeIntermediateTensorInfo(f)),p}const Mse={kernelName:Nf,backendName:"webgl",kernelFunc:zse};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Bse(t){const{inputs:e,backend:n,attrs:s}=t,{paramsNestedSplits:r,paramsDenseValues:o,indices:a}=e,{outputRaggedRank:i}=s,l=r.map(g=>n.readSync(g.dataId)),u=r.map(g=>g.shape),c=n.readSync(o.dataId),h=n.readSync(a.dataId),[d,p,f]=PY(l,u,c,o.shape,o.dtype,h,a.shape,i),m=d.map(g=>n.makeTensorInfo([g.length],"int32",g)),y=n.makeTensorInfo(f,o.dtype,p);return m.concat([y])}const Vse={kernelName:sx,backendName:"webgl",kernelFunc:Bse};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Wse(t){const{inputs:e,backend:n}=t,{starts:s,limits:r,deltas:o}=e,a=n.readSync(s.dataId),i=n.readSync(r.dataId),l=n.readSync(o.dataId),[u,c]=zY(a,s.shape,s.dtype,i,r.shape,l,o.shape),h=n.makeTensorInfo([u.length],"int32",u),d=n.makeTensorInfo([c.length],s.dtype,c);return[h,d]}const Use={kernelName:rx,backendName:"webgl",kernelFunc:Wse};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Gse(t){const{inputs:e,backend:n,attrs:s}=t,{shape:r,values:o,defaultValue:a,rowPartitionTensors:i}=e,{rowPartitionTypes:l}=s,u=n.readSync(r.dataId),c=n.readSync(o.dataId),h=n.readSync(a.dataId),d=i.map(y=>n.readSync(y.dataId)),p=i.map(y=>y.shape),[f,m]=MY(u,r.shape,c,o.shape,o.dtype,h,a.shape,d,p,l);return n.makeTensorInfo(f,o.dtype,m)}const Hse={kernelName:ox,backendName:"webgl",kernelFunc:Gse};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const uA=t=>{const{backend:e,attrs:n}=t,{start:s,stop:r,step:o,dtype:a}=n,i=BY(s,r,o,a);return e.makeTensorInfo([i.length],a,i)},jse={kernelName:ax,backendName:"webgl",kernelFunc:uA};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Kse="return 1.0 / x;",qse=Ge({opSnippet:Kse}),Xse={kernelName:Ec,backendName:"webgl",kernelFunc:qse};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Yse=Gs+`
  return (x < 0.0) ? 0.0 : x;
`,Qse=`
  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,Zse=Ge({opSnippet:Yse,packedOpSnippet:Qse}),Jse={kernelName:Rc,backendName:"webgl",kernelFunc:Zse};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ere=Gs+`
  return (x < 0.0) ? 0.0 : min(6.0, x);
`,tre=`
  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,nre=Ge({opSnippet:ere,packedOpSnippet:tre}),sre={kernelName:Dc,backendName:"webgl",kernelFunc:nre};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class rre{constructor(e,n,s,r,o){this.variableNames=["A"],this.outputShape=[];const[a,i,l,u]=e;this.outputShape=[a,n,s,u];const c=[r&&n>1?i-1:i,r&&s>1?l-1:l],h=[r&&n>1?n-1:n,r&&s>1?s-1:s];let d;o?d="(vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC - vec2(0.5)":d="vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec2 effectiveInputOverOutputRatioRC = vec2(
          ${c[0]/h[0]},
          ${c[1]/h[1]});
      const vec2 inputShapeRC = vec2(${i}.0, ${l}.0);

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        ivec2 yRC = coords.yz;

        // Fractional source index.
        vec2 sourceFracIndexRC = ${d};

        // Compute the four integer indices.
        ivec2 sourceFloorRC = ivec2(max(sourceFracIndexRC, vec2(0.0)));
        ivec2 sourceCeilRC = ivec2(
          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));

        float topLeft = getA(b, sourceFloorRC.x, sourceFloorRC.y, d);
        float bottomLeft = getA(b, sourceCeilRC.x, sourceFloorRC.y, d);
        float topRight = getA(b, sourceFloorRC.x, sourceCeilRC.y, d);
        float bottomRight = getA(b, sourceCeilRC.x, sourceCeilRC.y, d);

        vec2 fracRC = sourceFracIndexRC - vec2(sourceFloorRC);

        float top = topLeft + (topRight - topLeft) * fracRC.y;
        float bottom = bottomLeft + (bottomRight - bottomLeft) * fracRC.y;
        float newValue = top + (bottom - top) * fracRC.x;

        setOutput(newValue);
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class ore{constructor(e,n,s,r,o){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];const[a,i,l,u]=e;this.outputShape=[a,n,s,u];const c=[r&&n>1?i-1:i,r&&s>1?l-1:l],h=[r&&n>1?n-1:n,r&&s>1?s-1:s];let d;o?d="(vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC - vec3(0.5)":d="vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec3 effectiveInputOverOutputRatioRC = vec3(
          ${c[0]/h[0]},
          ${c[1]/h[1]},
          ${c[1]/h[1]});
      const vec3 inputShapeRC = vec3(${i}.0, ${l}.0,
                                     ${l}.0);

      float getAValue(int b, int r, int c, int d) {
        return getChannel(getA(b, r, c, d), vec2(c, d));
      }

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        // Calculate values for next column in yRC.z.
        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);

        // Fractional source index.
        vec3 sourceFracIndexRC = ${d};

        // Compute the four integer indices.
        ivec3 sourceFloorRC = ivec3(max(sourceFracIndexRC, vec3(0.0)));
        ivec3 sourceCeilRC = ivec3(
          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));

        // Should we calculate next column and row elements in 2x2 packed cell.
        bool hasNextCol = d < ${u-1};
        bool hasNextRow = coords.z < ${s-1};

        // In parallel, construct four corners for all four components in
        // packed 2x2 cell.
        vec4 topLeft = vec4(
          getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d),
          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d + 1) : 0.0);

        vec4 bottomLeft = vec4(
          getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d),
          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d + 1) : 0.0);

        vec4 topRight = vec4(
          getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d),
          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d + 1) : 0.0);

        vec4 bottomRight = vec4(
          getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d),
          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d + 1) : 0.0);

        vec3 fracRC = sourceFracIndexRC - vec3(sourceFloorRC);

        vec4 top = mix(topLeft, topRight, fracRC.yyzz);
        vec4 bottom = mix(bottomLeft, bottomRight, fracRC.yyzz);
        vec4 newValue = mix(top, bottom, fracRC.x);

        setOutput(newValue);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function are(t){const{inputs:e,backend:n,attrs:s}=t,{images:r}=e,{alignCorners:o,halfPixelCenters:a,size:i}=s,[l,u]=i,c=G().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new ore(r.shape,l,u,o,a):new rre(r.shape,l,u,o,a);return n.runWebGLProgram(c,[r],"float32")}const ire={kernelName:Ef,backendName:"webgl",kernelFunc:are};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class lre{constructor(e,n,s){this.variableNames=["dy"],this.outputShape=[],this.outputShape=n;const[,r,o]=n,[,a,i]=e,l=[s&&a>1?r-1:r,s&&i>1?o-1:o],u=[s&&a>1?a-1:a,s&&i>1?i-1:i],c=l[0]/u[0],h=l[1]/u[1],d=1/c,p=1/h,f=Math.ceil(d)*2+2,m=Math.ceil(p)*2+2;this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        int r = coords[1];
        int c = coords[2];

        float accumulator = 0.0;

        const float heightScale = float(${c});
        const float widthScale = float(${h});

        const float invHeightScale = float(${d});
        const float invWidthScale = float(${p});

        const int winHeight = int(${f});
        const int winWidth = int(${m});

        // Compute bounds for where in dy we will look
        float startRLerp = floor(float(r) * invHeightScale);
        int startDyR = int(startRLerp - float(winHeight / 2));

        float startCLerp = floor(float(c) * invWidthScale);
        int startDyC = int(startCLerp - float(winWidth / 2));

        // Loop over dy
        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {
          int dyR = dyROffset + startDyR;

          // Guard against the window exceeding the bounds of dy
          if (dyR < 0 || dyR >= ${a}) {
            continue;
          }

          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {
            int dyC = dyCOffset + startDyC;

            // Guard against the window exceeding the bounds of dy
            if (dyC < 0 || dyC >= ${i}) {
              continue;
            }

            float dxR = float(dyR) * heightScale;
            int topDxRIndex = int(floor(dxR));
            int bottomDxRIndex = int(min(ceil(dxR), ${r-1}.0));
            float dxRLerp = dxR - float(topDxRIndex);
            float inverseDxRLerp = 1.0 - dxRLerp;

            float dxC = float(dyC) * widthScale;
            int leftDxCIndex = int(floor(dxC));
            int rightDxCIndex = int(min(ceil(dxC), ${o-1}.0));
            float dxCLerp = dxC - float(leftDxCIndex);
            float inverseDxCLerp = 1.0 - dxCLerp;

            if (r == topDxRIndex && c == leftDxCIndex) {
              // topLeft
              accumulator +=
                getDy(b, dyR, dyC, d) * inverseDxRLerp * inverseDxCLerp;
            }

            if (r == topDxRIndex && c == rightDxCIndex) {
              // topRight
              accumulator += getDy(b, dyR, dyC, d) * inverseDxRLerp * dxCLerp;
            }

            if (r == bottomDxRIndex && c == leftDxCIndex) {
              // bottomLeft
              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * inverseDxCLerp;
            }

            if (r == bottomDxRIndex && c == rightDxCIndex) {
              // bottomRight
              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * dxCLerp;
            }
          }
        }
        // End loop over dy

        setOutput(accumulator);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ure(t){const{inputs:e,backend:n,attrs:s}=t,{images:r,dy:o}=e,{alignCorners:a}=s,i=new lre(o.shape,r.shape,a);return n.runWebGLProgram(i,[o],o.dtype)}const cre={kernelName:ux,backendName:"webgl",kernelFunc:ure};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class hre{constructor(e,n,s,r,o){this.variableNames=["A"],this.outputShape=[];const[a,i,l,u]=e;this.outputShape=[a,n,s,u];const c=[r&&n>1?i-1:i,r&&s>1?l-1:l],h=[r&&n>1?n-1:n,r&&s>1?s-1:s],d=r?"0.5":"0.0";let p;o?p="max((vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC, vec2(0.0))":p="vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec2 effectiveInputOverOutputRatioRC = vec2(
          ${c[0]/h[0]},
          ${c[1]/h[1]});
      const vec2 inputShapeRC = vec2(${i}.0, ${l}.0);

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        ivec2 yRC = coords.yz;

        // Fractional source index.
        vec2 sourceFracIndexRC = ${p};

        // Compute the coordinators of nearest neighbor point.
        ivec2 sourceNearestRC = ivec2(
          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${d})));
        float newValue = getA(b, sourceNearestRC.x, sourceNearestRC.y, d);

        setOutput(newValue);
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class dre{constructor(e,n,s,r,o){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];const[a,i,l,u]=e;this.outputShape=[a,n,s,u];const c=[r&&n>1?i-1:i,r&&s>1?l-1:l],h=[r&&n>1?n-1:n,r&&s>1?s-1:s],d=r?"0.5":"0.0";let p;o?p="max((vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC, vec3(0.0))":p="vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec3 effectiveInputOverOutputRatioRC = vec3(
          ${c[0]/h[0]},
          ${c[1]/h[1]},
          ${c[1]/h[1]});
      const vec3 inputShapeRC = vec3(${i}.0, ${l}.0,
                                     ${l}.0);

      float getAValue(int b, int r, int c, int d) {
        return getChannel(getA(b, r, c, d), vec2(c, d));
      }

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        // Calculate values for next column in yRC.z.
        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);

        // Fractional source index.
        vec3 sourceFracIndexRC = ${p};

        // Compute the coordinators of nearest neighbor point.
        ivec3 sourceNearestRC = ivec3(
          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${d})));

        // Should we calculate next column and row elements in 2x2 packed cell.
        bool hasNextCol = d < ${u-1};
        bool hasNextRow = coords.z < ${s-1};

        vec4 newValue = vec4(
          getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d),
          hasNextCol ? getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d + 1) : 0.0);

        setOutput(newValue);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pre(t){const{inputs:e,backend:n,attrs:s}=t,{images:r}=e,{alignCorners:o,halfPixelCenters:a,size:i}=s,[l,u]=i,c=G().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new dre(r.shape,l,u,o,a):new hre(r.shape,l,u,o,a);return n.runWebGLProgram(c,[r],r.dtype)}const fre={kernelName:Tf,backendName:"webgl",kernelFunc:pre};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class mre{constructor(e,n,s){this.variableNames=["dy"],this.outputShape=[],this.outputShape=n;const[,r,o]=n,[,a,i]=e,l=[s&&a>1?r-1:r,s&&i>1?o-1:o],u=[s&&a>1?a-1:a,s&&i>1?i-1:i],c=l[0]/u[0],h=l[1]/u[1],d=1/c,p=1/h,f=Math.ceil(d)*2+2,m=Math.ceil(p)*2+2;this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        int r = coords[1];
        int c = coords[2];

        float accumulator = 0.0;

        const float heightScale = float(${c});
        const float widthScale = float(${h});

        const float invHeightScale = float(${d});
        const float invWidthScale = float(${p});

        const int winHeight = int(${f});
        const int winWidth = int(${m});

        // Compute bounds for where in dy we will look
        float startRLerp = floor(float(r) * invHeightScale);
        int startDyR = int(floor(startRLerp - float(winHeight / 2)));

        float startCLerp = floor(float(c) * invWidthScale);
        int startDyC = int(floor(startCLerp - float(winWidth / 2)));

        // Loop over dy
        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {
          int dyR = dyROffset + startDyR;

          // Guard against the window exceeding the bounds of dy
          if (dyR < 0 || dyR >= ${a}) {
            continue;
          }

          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {
            int dyC = dyCOffset + startDyC;

            // Guard against the window exceeding the bounds of dy
            if (dyC < 0 || dyC >= ${i}) {
              continue;
            }

            float sourceFracRow =
              float(${l[0]}) *
                (float(dyR) / float(${u[0]}));

            float sourceFracCol =
                float(${l[1]}) *
                  (float(dyC) / float(${u[1]}));

            int sourceNearestRow = int(min(
                float(int(${r}) - 1),
                ${s} ? float(round(sourceFracRow)) :
                                  float(floor(sourceFracRow))));

            int sourceNearestCol = int(min(
                float(int(${o}) - 1),
                ${s} ? float(round(sourceFracCol)) :
                                  float(floor(sourceFracCol))));

            if (r == sourceNearestRow && c == sourceNearestCol) {
              accumulator += getDy(b, dyR, dyC, d);
            }
          }
        }
        // End loop over dy

        setOutput(accumulator);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gre(t){const{inputs:e,backend:n,attrs:s}=t,{images:r,dy:o}=e,{alignCorners:a}=s,i=new mre(o.shape,r.shape,a);return n.runWebGLProgram(i,[o],o.dtype)}const yre={kernelName:lx,backendName:"webgl",kernelFunc:gre};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class xre{constructor(e,n){this.variableNames=["x"];const s=e.length;if(s>4)throw new Error(`WebGL backend: Reverse of rank-${s} tensor is not yet supported`);if(this.outputShape=e,s===1){this.userCode=`
        void main() {
          int coord = getOutputCoords();
          setOutput(getX(${e[0]} - coord - 1));
        }
      `;return}const r=i=>n.indexOf(i)!==-1&&e[i]!==1?`${e[i]} - coords[${i}] - 1`:`coords[${i}]`,o=e.map((i,l)=>r(l)).join(","),a=Ye(s);this.userCode=`
      void main() {
        ${a} coords = getOutputCoords();
        setOutput(getX(${o}));
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class bre{constructor(e,n){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0;const s=e.length;if(s>4)throw new Error(`WebGL backend: Reverse of rank-${s} tensor is not yet supported`);this.outputShape=e;const r=vn("rc",s),o=`${r[s-1]} + 1 < ${this.outputShape[s-1]}`,a=`${r[s-2]} + 1 < ${this.outputShape[s-2]}`,i=Ye(s);s===1?this.userCode=`
        void main(){
          int rc = getOutputCoords();
          vec4 result = vec4(0.);
          result.r = getChannel(getX(${e[0]} - rc - 1),
            ${e[0]} - rc - 1);
          if(${o}){
              result.g = getChannel(getX(${e[0]} - (rc  + 1) - 1),
                ${e[0]} - (rc  + 1) - 1);
          }
          setOutput(result);
        }
      `:this.userCode=`
        void main() {
          ${i} rc = getOutputCoords();
          vec4 result = vec4(0.);
          result.r = ${l(r.slice())};
          if(${o}){
            result.g = ${u(r.slice())};
          }
          if(${a}) {
            result.b = ${c(r.slice())};
            if(${o}) {
              result.a = ${h(r.slice())};
            }
          }
          setOutput(result);
        }
    `;function l(f){return d(f)}function u(f){return f[s-1]="("+f[s-1]+" + 1)",d(f)}function c(f){return f[s-2]="("+f[s-2]+" + 1)",d(f)}function h(f){return f[s-1]="("+f[s-1]+" + 1)",f[s-2]="("+f[s-2]+" + 1)",d(f)}function d(f){const m=e.map((x,w)=>p(w,f)),y=m.join(","),g=m.slice(-2).join(",");return`getChannel(getX(${y}), vec2(${g}))`}function p(f,m){return n.indexOf(f)!==-1&&e[f]!==1?`${e[f]} - ${m[f]} - 1`:`${m[f]}`}}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function wre(t){const{inputs:e,backend:n,attrs:s}=t,{x:r}=e,{dims:o}=s,a=r.shape.length,i=Fe(o,r.shape);if(a===0)return Zn({inputs:{x:r},backend:n});const l=G().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new bre(r.shape,i):new xre(r.shape,i);return n.runWebGLProgram(l,[r],r.dtype)}const vre={kernelName:Rf,backendName:"webgl",kernelFunc:wre};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Sre{constructor(e,n){this.variableNames=["Image"],this.outputShape=[],this.customUniforms=[{name:"params",type:"vec4"}];const s=e[1],r=e[2];this.outputShape=e;let o="";typeof n=="number"?o=`float outputValue = ${n.toFixed(2)};`:o=`
        vec3 fill = vec3(${n.join(",")});
        float outputValue = fill[coords[3]];`,this.userCode=`
        void main() {
          ivec4 coords = getOutputCoords();
          int x = coords[2];
          int y = coords[1];
          float coordXFloat = (float(x) - params[0]) * params[3] -
            (float(y) - params[1]) * params[2];
          float coordYFloat = (float(x) - params[0]) * params[2] +
            (float(y) - params[1]) * params[3];
          int coordX = int(round(coordXFloat + params[0]));
          int coordY = int(round(coordYFloat + params[1]));
          ${o}
          if(coordX >= 0 && coordX < ${r} && coordY >= 0 && coordY < ${s}) {
            outputValue = getImage(coords[0], coordY, coordX, coords[3]);
          }
          setOutput(outputValue);
        }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const kre={kernelName:Nx,backendName:"webgl",kernelFunc:({inputs:t,attrs:e,backend:n})=>{const{image:s}=t,{radians:r,fillValue:o,center:a}=e,i=n,l=new Sre(s.shape,o),[u,c]=Db(a,s.shape[1],s.shape[2]),h=[[u,c,Math.sin(r),Math.cos(r)]];return i.runWebGLProgram(l,[s],s.dtype,h)}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const $re=`
  // OpenGL ES does not support round function.
  // The algorithm is based on banker's rounding.
  float base = floor(x);
  if ((x - base) < 0.5) {
    return floor(x);
  } else if ((x - base) > 0.5) {
    return ceil(x);
  } else {
    if (mod(base, 2.0) == 0.0) {
      return base;
    } else {
      return base + 1.0;
    }
  }
`,Cre=Ge({opSnippet:$re}),Nre={kernelName:Ac,backendName:"webgl",kernelFunc:Cre};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ire="return inversesqrt(x);",Tre=Ge({opSnippet:Ire,cpuKernelImpl:VY}),Ere={kernelName:_c,backendName:"webgl",kernelFunc:Tre};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Ow{constructor(e,n,s,r,o,a,i=!0,l=!1){this.variableNames=["updates","indices","defaultValue"],this.outputShape=a;const u=Ye(o.length),c=Ye(a.length);let h="";s===1?h="i":s===2&&(h="i, j");const d=`getIndices(${h})`;let p="";r===1?p="i":r===2&&(p="i, coords[1]");const f=`getUpdates(${p})`;let m="";l&&(m="coords[0], coords[1]");const y=`getDefaultValue(${m})`,g=n>1?"strides[j]":"strides";this.userCode=`
        ${u} strides = ${u}(${o});

        void main() {
          ${c} coords = getOutputCoords();
          float sum = 0.0;
          bool found = false;
          for (int i = 0; i < ${e}; i++) {
            int flattenedIndex = 0;
            for (int j = 0; j < ${n}; j++) {
              int index = round(${d});
              flattenedIndex += index * ${g};
            }
            if (flattenedIndex == coords[0]) {
              sum += ${f};
              found = true;
            }
          }
          setOutput(mix(${y}, sum, float(found)));
        }
      `}}/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Rre{constructor(e,n,s,r,o,a,i=!0,l=!1){this.variableNames=["updates","indices","defaultValue"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=a;const u=Ye(o.length),c=Ye(a.length);let h="";s===1?h="i":s===2&&(h="i, j");const d=`getIndices(${h})`;let p="";r===1?p="i":r===2&&(p="i, coords[1]");const f=`getUpdates(${p})`;let m="";l&&(m="coords[0], coords[1]");const y=`getDefaultValue(${m})`,g=n>1?"strides[j]":"strides",x=n>1?"strides[j + 1]":"strides";this.userCode=`
        ${u} strides = ${u}(${o});

        void main() {
          ${c} coords = getOutputCoords();
          vec4 sum = vec4(0.);
          vec4 found = vec4(0.);
          for (int i = 0; i < ${e}; i+=2) {
            ivec2 flattenedIndex = ivec2(0);
            for (int j = 0; j < ${n}; j+=2) {
              ivec4 index = round(${d});
              flattenedIndex += index.xz * ${g};
              if (j + 1 < ${n}) {
                flattenedIndex += index.yw * ${x};
              }
            }
            if (flattenedIndex[0] == coords[0] || flattenedIndex[1] == coords[0] ||
                flattenedIndex[0] == coords[0] + 1 || flattenedIndex[1] == coords[0] + 1) {
              vec4 updVals = ${f};
              if (flattenedIndex[0] == coords[0]) {
                sum.xy += updVals.xy;
                found.xy = vec2(1.);
              } else if (flattenedIndex[0] == coords[0] + 1) {
                sum.zw += updVals.xy;
                found.zw = vec2(1.);
              }
              if (flattenedIndex[1] == coords[0]) {
                sum.xy += updVals.zw;
                found.xy = vec2(1.);
              } else if (flattenedIndex[1] == coords[0] + 1) {
                sum.zw += updVals.zw;
                found.zw = vec2(1.);
              }
            }
          }
          setOutput(mix(${y}, sum, found));
        }
      `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Dre(t){const{inputs:e,backend:n,attrs:s}=t,{indices:r,updates:o}=e,{shape:a}=s,{sliceRank:i,numUpdates:l,sliceSize:u,strides:c,outputSize:h}=Qa(o,r,a),d=[h/u,u];if(h===0)return n.makeTensorInfo(a,r.dtype);const p=le({inputs:{x:r},backend:n,attrs:{shape:[l,i]}}),f=le({inputs:{x:o},backend:n,attrs:{shape:[l,u]}}),m=n.makeTensorInfo([],"float32",new Float32Array([0]));let y;G().getBool("WEBGL_PACK")?y=new Rre(l,i,p.shape.length,f.shape.length,c,d):y=new Ow(l,i,p.shape.length,f.shape.length,c,d);const g=n.runWebGLProgram(y,[f,p,m],f.dtype),x=le({inputs:{x:g},backend:n,attrs:{shape:a}});return n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(g),n.disposeIntermediateTensorInfo(m),x}const Are={kernelName:cx,backendName:"webgl",kernelFunc:Dre};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class _re{constructor(e,n,s,r){this.variableNames=["sortedSequence","values"],this.customUniforms=[{name:"numInputs",type:"int"}],this.outputShape=[e,s];const o="while (left < right) {",a=`for (int i = 0; i < ${Math.ceil(Math.log2(n+1))}; ++i) { if (left >= right) break;`,i=G().getNumber("WEBGL_VERSION")===2?o:a,l=r==="left"?"<":"<=";this.userCode=`
       int findBound(int batch, float value) {
         int left = 0;
         int right = numInputs;
         int mid;
         ${i}
           mid = (left + right) / 2;
           if (getSortedSequence(batch, mid) ${l} value) {
             left = mid + 1;
           } else {
             right = mid;
           }
         }
         return right;
       }

       void main() {
         ivec2 coords = getOutputCoords();
         int batch = coords[0];
         int valueIndex = coords[1];

         float value = getValues(batch, valueIndex);

         setOutput(float(findBound(batch, value)));
       }
     `}}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ore(t){const{inputs:e,backend:n,attrs:s}=t,{sortedSequence:r,values:o}=e,{side:a}=s,i=new _re(r.shape[0],r.shape[1],o.shape[1],a),l=[[r.shape[1]]];return n.runWebGLProgram(i,[r,o],"int32",l)}const Fre={kernelName:dx,backendName:"webgl",kernelFunc:Ore};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Lre{constructor(e,n,s){this.variableNames=["c","a","b"],this.outputShape=n;let r,o;if(s>4)throw Error(`Where for rank ${s} is not yet supported`);if(s===1)o="resRC",r="resRC";else{const i=["resRC.x","resRC.y","resRC.z","resRC.w"],l=[],u=[];for(let c=0;c<n.length;c++)u.push(`${i[c]}`),c<e&&l.push(`${i[c]}`);r=l.join(),o=u.join()}const a=Ye(s);this.userCode=`
      void main() {
        ${a} resRC = getOutputCoords();
        float cVal = getC(${r});
        if (cVal >= 1.0) {
          setOutput(getA(${o}));
        } else {
          setOutput(getB(${o}));
        }
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Pre(t){const{inputs:e,backend:n}=t,{condition:s,t:r,e:o}=e,a=new Lre(s.shape.length,r.shape,r.shape.length);return n.runWebGLProgram(a,[s,r,o],Xn(r.dtype,o.dtype))}const zre={kernelName:Df,backendName:"webgl",kernelFunc:Pre};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Mre=`
  // Stable and Attracting Fixed Point (0, 1) for Normalized Weights.
  // see: https://arxiv.org/abs/1706.02515
  float scaleAlpha = ${hm};
  float scale = ${dm};
  return (x >= 0.0) ? scale * x : scaleAlpha * (exp(x) - 1.0);
`,Bre=Ge({opSnippet:Mre}),Vre={kernelName:Oc,backendName:"webgl",kernelFunc:Bre};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Wre=Dl+`
  return 1.0 / (1.0 + exp(-1.0 * x));
`,Ure=`
  vec4 result = 1.0 / (1.0 + exp(-1.0 * x));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,Gre=Ge({opSnippet:Wre,packedOpSnippet:Ure,cpuKernelImpl:UY}),Hre={kernelName:zc,backendName:"webgl",kernelFunc:Gre};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const jre=`
  if (isnan(x)) { return 0.0; }
  return sign(x);
`,Kre=Ge({opSnippet:jre}),qre={kernelName:Pc,backendName:"webgl",kernelFunc:Kre};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Xre=Dl+`
  return sin(x);
`,Yre=`
  vec4 result = sin(x);
  bvec4 isNaN = isnan(x);
  ${ni}
  return result;
`,Qre=Ge({opSnippet:Xre,packedOpSnippet:Yre}),Zre={kernelName:Fc,backendName:"webgl",kernelFunc:Qre};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Jre=`
  float e2x = exp(x);
  return (e2x - 1.0 / e2x) / 2.0;
`,eoe=Ge({opSnippet:Jre}),toe={kernelName:Lc,backendName:"webgl",kernelFunc:eoe};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const noe=`
  float epsilon = 1.1920928955078125e-7;
  float threshold = log(epsilon) + 2.0;

  bool too_large = x > -threshold;
  bool too_small = x < threshold;

  float result;
  float exp_x = exp(x);

  if (too_large){
    result = x;
  }
  else if (too_small){
    result = exp_x;
  }
  else{
    result = log(exp_x + 1.0);
  }
  return result;
`,soe=Ge({opSnippet:noe}),roe={kernelName:Mc,backendName:"webgl",kernelFunc:soe};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ooe=t=>{const{inputs:e,backend:n,attrs:s}=t,{x:r}=e,{blockShape:o,paddings:a}=s;C(r.shape.length<=4,()=>"spaceToBatchND for rank > 4 with a WebGL backend not implemented yet");const i=o.reduce((g,x)=>g*x),l=[[0,0]];l.push(...a);for(let g=1+o.length;g<r.shape.length;++g)l.push([0,0]);const u=[],c=lA({inputs:{x:r},backend:n,attrs:{paddings:l,constantValue:0}}),h=th(c.shape,o,i,!1),d=nh(h.length,o.length,!1),p=sh(c.shape,o,i,!1),f=le({inputs:{x:c},backend:n,attrs:{shape:h}}),m=$n({inputs:{x:f},backend:n,attrs:{perm:d}}),y=le({inputs:{x:m},backend:n,attrs:{shape:p}});return u.push(c),u.push(f),u.push(m),u.forEach(g=>n.disposeIntermediateTensorInfo(g)),y},aoe={kernelName:Of,backendName:"webgl",kernelFunc:ooe};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ioe(t){const{inputs:e,backend:n}=t,{indices:s,values:r,denseShape:o,defaultValue:a}=e;if(o.shape.length!==1)throw new Error(`Dense shape must be a vector, saw:
         ${o.shape}`);if(s.shape.length!==2)throw new Error(`Indices must be a matrix, saw:
         ${s.shape}`);if(r.shape.length!==1)throw new Error(`Values must be a vector, saw:
         ${r.shape}`);if(a.shape.length!==0)throw new Error(`Default value must be a scalar, saw:
        ${a.shape}`);const i=n.readSync(s.dataId),l=n.readSync(r.dataId),u=n.readSync(o.dataId),c=n.readSync(a.dataId)[0],[h,d,p,f,m]=HY(i,s.shape,s.dtype,l,r.dtype,u,c);return[n.makeTensorInfo(d,s.dtype,h),n.makeTensorInfo([d[0]],r.dtype,p),n.makeTensorInfo([f.length],"bool",new Uint8Array(f.map(y=>Number(y)))),n.makeTensorInfo([m.length],s.dtype,new Int32Array(m))]}const loe={kernelName:px,backendName:"webgl",kernelFunc:ioe};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function uoe(t){const{inputs:e,backend:n}=t,{inputIndices:s,inputShape:r,newShape:o}=e;if(s.shape.length!==2)throw new Error(`Input indices should be a matrix but received shape ${s.shape}`);if(r.shape.length!==1)throw new Error(`Input shape should be a vector but received shape ${r.shape}`);if(o.shape.length!==1)throw new Error(`Target shape should be a vector but received shape ${o.shape}`);const a=Array.from(n.readSync(r.dataId)),i=n.readSync(s.dataId),l=Array.from(n.readSync(o.dataId)),[u,c,h]=jY(i,s.shape,s.dtype,a,l);return[n.makeTensorInfo(c,s.dtype,u),n.makeTensorInfo([h.length],o.dtype,new Int32Array(h))]}const coe={kernelName:fx,backendName:"webgl",kernelFunc:uoe};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function hoe(t){const{inputs:e,backend:n}=t,{data:s,indices:r,segmentIds:o}=e;if(s.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(r.shape.length!==1)throw new Error(`Indices should be a vector but received shape
              ${r.shape}`);if(o.shape.length!==1)throw new Error(`Segment ids should be a vector but received shape
              ${o.shape}`);const a=n.readSync(s.dataId),i=n.readSync(r.dataId),l=n.readSync(o.dataId),[u,c]=_D(a,s.shape,s.dtype,i,l,!0);return n.makeTensorInfo(c,s.dtype,u)}const doe={kernelName:mx,backendName:"webgl",kernelFunc:hoe};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function poe(t){const{inputs:e,backend:n}=t,{data:s,indices:r,segmentIds:o}=e;if(s.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(r.shape.length!==1)throw new Error(`Indices should be a vector but received shape
             ${r.shape}`);if(o.shape.length!==1)throw new Error(`Segment ids should be a vector but received shape
             ${o.shape}`);const a=n.readSync(s.dataId),i=n.readSync(r.dataId),l=n.readSync(o.dataId),[u,c]=_D(a,s.shape,s.dtype,i,l);return n.makeTensorInfo(c,s.dtype,u)}const foe={kernelName:gx,backendName:"webgl",kernelFunc:poe};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function moe(t){const{inputs:e,backend:n,attrs:s}=t,{sparseIndices:r,sparseValues:o,defaultValue:a}=e,{outputShape:i}=s,{sliceRank:l,numUpdates:u,sliceSize:c,strides:h,outputSize:d}=Qa(o,r,i),p=!1;if(o.dtype==="string"){const g=n.bufferSync(r),x=n.bufferSync(o),w=_o(n.readSync(a.dataId)[0]),b=WY(g,x,i,d,c,u,l,h,w,p);return n.makeTensorInfo(i,b.dtype,b.values)}const f=new Ow(u,l,r.shape.length,o.shape.length,h,[d,1],p),m=n.runWebGLProgram(f,[o,r,a],o.dtype),y=le({inputs:{x:m},backend:n,attrs:{shape:i}});return n.disposeIntermediateTensorInfo(m),y}const goe={kernelName:yx,backendName:"webgl",kernelFunc:moe};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function yoe(t){const{inputs:e,backend:n,attrs:s}=t,{x:r}=e,{numOrSizeSplits:o,axis:a}=s,i=Fe(a,r.shape)[0],l=jb(r,o,i),u=r.shape.length,c=new Array(u).fill(0),h=r.shape.slice();return l.map(d=>{const p=[...h];p[i]=d;const f=Al({inputs:{x:r},backend:n,attrs:{begin:c,size:p}});return c[i]+=d,f})}const xoe={kernelName:Ff,backendName:"webgl",kernelFunc:yoe};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Rk="return sqrt(x);",boe=Ge({opSnippet:Rk,packedOpSnippet:Rk,cpuKernelImpl:KY}),woe={kernelName:Bc,backendName:"webgl",kernelFunc:boe};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const voe="return x * x;",Soe=Ge({opSnippet:voe}),koe={kernelName:xx,backendName:"webgl",kernelFunc:Soe};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Dk="return (a - b) * (a - b);",$oe=rn({opSnippet:Dk,packedOpSnippet:Dk}),Coe={kernelName:Vc,backendName:"webgl",kernelFunc:$oe};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Noe(t){const{inputs:e,backend:n,attrs:s}=t,{x:r}=e;if(r.dtype!=="string")throw new Error("Input must be of datatype string");const o=n.readSync(r.dataId),a=eo(o),i=qY(a,"string",s);return n.makeTensorInfo(r.shape,"string",i)}const Ioe={kernelName:Pf,backendName:"webgl",kernelFunc:Noe};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Toe({inputs:t,attrs:e,backend:n}){const{x:s}=t,r=Gs+`
    return x > 0.0 ? 1.0 : float(${e.alpha});
  `,o=new Sr(s.shape,r);return n.runWebGLProgram(o,[s],s.dtype)}const Eoe={kernelName:jc,backendName:"webgl",kernelFunc:Toe};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Roe{constructor(e,n,s){this.variableNames=["x"],this.outputShape=s;const r=s.length,o=Ye(s.length),a=Ye(s.length);let i="";if(r===1)i="coords * strides + begin";else{let l=0;i=s.map((u,c)=>(l++,s.length===1?`coords * strides[${c}] + begin[${c}]`:`coords[${l-1}] * strides[${c}] + begin[${c}]`)).join(",")}this.userCode=`
      ${o} begin = ${o}(${e});
      ${o} strides = ${o}(${n});

      void main() {
        ${a} coords = getOutputCoords();
        setOutput(getX(${i}));
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Doe(t){const{inputs:e,backend:n,attrs:s}=t,{x:r}=e,{begin:o,end:a,strides:i,beginMask:l,endMask:u,ellipsisMask:c,newAxisMask:h,shrinkAxisMask:d}=s,{finalShapeSparse:p,finalShape:f,isIdentity:m,sliceDim0:y,isSimpleSlice:g,begin:x,end:w,strides:b}=Tb(r.shape,o,a,i,l,u,c,h,d);let v;if(m)v=le({inputs:{x:r},backend:n,attrs:{shape:f}});else if(y||g){C(r.shape.length>=1,()=>`Input must have rank at least 1, got: ${r.shape.length}`);const $=Cb(x,w,b),N=Al({inputs:{x:r},backend:n,attrs:{begin:x,size:$}});v=le({inputs:{x:N},backend:n,attrs:{shape:f}}),n.disposeIntermediateTensorInfo(N)}else if(n.shouldExecuteOnCPU([r])){const N=n.readSync(r.dataId),E=Ae(r.shape,r.dtype,N),T=XY(p,E,b,x);v=n.makeTensorInfo(f,r.dtype,T.values)}else{const N=new Roe(x,b,p);v=n.runWebGLProgram(N,[r],r.dtype)}const k=le({inputs:{x:v},backend:n,attrs:{shape:f}});return n.disposeIntermediateTensorInfo(v),k}const Aoe={kernelName:bx,backendName:"webgl",kernelFunc:Doe};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _oe(t){const{inputs:e,backend:n,attrs:s}=t,{separator:r,nGramWidths:o,leftPad:a,rightPad:i,padWidth:l,preserveShortSequences:u}=s,{data:c,dataSplits:h}=e,d=n.readSync(c.dataId),p=n.readSync(h.dataId),[f,m]=YY(d,p,r,o,a,i,l,u);return[n.makeTensorInfo([f.length],"string",f),n.makeTensorInfo(h.shape,"int32",m)]}const Ooe={kernelName:wx,backendName:"webgl",kernelFunc:_oe};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Foe(t){const{inputs:e,backend:n,attrs:s}=t,{skipEmpty:r}=s,{input:o,delimiter:a}=e;if(o.dtype!=="string")throw new Error("Input must be of datatype string");if(o.shape.length!==1)throw new Error(`Input must be a vector, got shape: ${o.shape}`);if(a.shape.length!==0)throw new Error(`Delimiter must be a scalar, got shape: ${a.shape}`);const i=n.readSync(o.dataId),l=n.readSync(a.dataId)[0],[u,c,h]=QY(i,l,r),d=c.length;return[n.makeTensorInfo([d,2],"int32",u),n.makeTensorInfo([d],"string",c),n.makeTensorInfo([2],"int32",new Int32Array(h))]}const Loe={kernelName:vx,backendName:"webgl",kernelFunc:Foe};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Poe(t){const{inputs:e,backend:n,attrs:s}=t,{numBuckets:r}=s,{input:o}=e;if(o.dtype!=="string")throw new Error("Input must be of datatype string");if(r<=0)throw new Error("Number of buckets must be at least 1");const a=n.readSync(o.dataId),i=ZY(a,r);return n.makeTensorInfo(o.shape,"int32",i)}const zoe={kernelName:Sx,backendName:"webgl",kernelFunc:Poe};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Moe="return tan(x);",Boe=Ge({opSnippet:Moe}),Voe={kernelName:Uc,backendName:"webgl",kernelFunc:Boe};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Woe=`
  float e2x = exp(-2.0 * abs(x));
  return sign(x) * (1.0 - e2x) / (1.0 + e2x);
`,Uoe=Ge({opSnippet:Woe}),Goe={kernelName:Gc,backendName:"webgl",kernelFunc:Uoe};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Hoe(t){const{inputs:e,backend:n,attrs:s}=t,{tensor:r,indices:o,updates:a}=e,{sliceRank:i,numUpdates:l,sliceSize:u,strides:c,outputSize:h}=Qa(a,o,r.shape),d=[h/u,u];if(h===0)return n.makeTensorInfo(r.shape,o.dtype);const p=le({inputs:{x:o},backend:n,attrs:{shape:[l,i]}}),f=le({inputs:{x:a},backend:n,attrs:{shape:[l,u]}}),m=le({inputs:{x:r},backend:n,attrs:{shape:d}}),y=new Ow(l,i,p.shape.length,f.shape.length,c,d,!1,!0),g=n.runWebGLProgram(y,[f,p,m],m.dtype),x=le({inputs:{x:g},backend:n,attrs:{shape:r.shape}});return n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(g),x}const joe={kernelName:hx,backendName:"webgl",kernelFunc:Hoe};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Koe{constructor(e,n){this.variableNames=["A"];const s=new Array(e.length);for(let a=0;a<s.length;a++)s[a]=e[a]*n[a];this.outputShape=s,this.rank=s.length;const r=Ye(this.rank),o=qoe(e);this.userCode=`
      void main() {
        ${r} resRC = getOutputCoords();
        setOutput(getA(${o}));
      }
    `}}function qoe(t){const e=t.length;if(e>5)throw Error(`Tile for rank ${e} is not yet supported`);if(e===1)return`imod(resRC, ${t[0]})`;const n=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u"],s=[];for(let r=0;r<t.length;r++)s.push(`imod(${n[r]}, ${t[r]})`);return s.join()}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function cA(t){const{inputs:e,backend:n,attrs:s}=t,{x:r}=e,{reps:o}=s;if(r.dtype==="string"||r.shape.length>5){const l=n.readSync(r.dataId),u=r.dtype==="string"?l.map(d=>_o(d)):l,c=Ae(r.shape,r.dtype,u),h=eQ(c,o);return n.makeTensorInfo(h.shape,h.dtype,h.values)}const a=new Koe(r.shape,o);return n.runWebGLProgram(a,[r],r.dtype)}const Xoe={kernelName:Hc,backendName:"webgl",kernelFunc:cA};class Yoe{constructor(e){this.variableNames=["x","indices"],this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"negativeInf",type:"float"},{name:"dir",type:"int"},{name:"inc",type:"int"}],this.outputShape=e,this.userCode=`
       void main() {
         ivec2 coords = getOutputCoords();
         int batch = coords[0];
         int elemIdx = coords[1];

         // We compare elements pair-wise within a group of size 2 * inc.
         // The comparing rule for each group alternates between ascending
         // and descending. Within each group, we compare each pair at
         // positions i and i+inc. To decide whether an element at position i
         // is x0 or x1, we mod it by 2 * inc, if the result is smaller than
         // inc, it is in the first half of the group, we denote it as x0,
         // otherwise we denote it as x1.
         // For example, as shown in the Bitonic top K paper referenced above,
         // Figure5(a) shows that element[1] is in the
         // second half of the group when group size is 2, but it is in the
         // first half of the group when group size is 4.

         bool isFirstInPair = imod(elemIdx, 2 * inc) < inc;
         int i = isFirstInPair ? elemIdx : elemIdx - inc;

         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));
         int i1 = firstPass == 1 ? i + inc : int(getIndices(batch, i + inc));
         float x0 = i0 < n ? getX(batch, i0) : negativeInf;
         float x1 = i1 < n ? getX(batch, i1) : negativeInf;

         // Denotes which direction indices are in (ascending or descending).
         bool reverse = imod(elemIdx, 2 * dir) >= dir;
         bool isGreater = x0 > x1 || (x0 == x1 && i1 > i0);
         if (reverse == isGreater) { // Elements in opposite order of direction
           int iTemp = i0;
           i0 = i1;
           i1 = iTemp;
         }
         if (isFirstInPair) {
            setOutput(float(i0));
         } else {
            setOutput(float(i1));
         }
       }
     `}}class Qoe{constructor(e){this.variableNames=["x","indices"],this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"k",type:"int"}],this.outputShape=e,this.userCode=`
    void main() {
         // Takes max of indices (0, k), (1, k + 1), (2, k + 2) ...
         ivec2 coords = getOutputCoords();
         int batch = coords[0];
         int elemIdx = coords[1];

         // The output size is half of the previous size.
         // If the previous sequence is | | | | _ _ _ _  | | | |  _ _ _ _ (k=4),
         // we only need to output the indices at positions |, the indices at
         // positions _ can be thrown away, see Figure5(b) After Phase 2
         // (Merge phase) in the Bitonic Top K paper referenced above.
         // For example, the paper shows we only need to output the orange bars.
         // The output sequence should look like this | | | | | | | |.
         // Because the sequence is halved, to map the output index back
         // to the previous sequence to find the corresponding value,
         // we need to double the index. When we double the index,
         // we basically interpolate a position, so 2i looks like
         // | _ | _ | _ | _ | _ | _ | _. We move the | to the first k position
         // of each 2k positions by - elemIdx % k. E.g. for output at
         // index 4,5,6,7, we want to get the corresponding element at
         // original index 8,9,10,11, for output at index 8,9,10,11,
         // we want to get the corresponding element at original index
         // 16,17,18,19, so on and so forth.

         int i = elemIdx < k ? elemIdx : (elemIdx * 2 - imod(elemIdx, k));
         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));
         int i1 = firstPass == 1 ? i + k : int(getIndices(batch, i + k));

         float x0 = getX(batch, i0);
         float x1 = i1 < n ? getX(batch, i1) : x0;

         setOutput(x0 >= x1 ? float(i0) : float(i1));
       }
     `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function oa(t,e){e!==null&&t.disposeIntermediateTensorInfo(e)}function Ak(t){let e=1;for(;e<t;)e*=2;return e}function Zoe(t){const{inputs:e,backend:n,attrs:s}=t,{x:r}=e,{k:o,sorted:a}=s,i=G().getNumber("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD"),l=G().getNumber("TOPK_K_CPU_HANDOFF_THRESHOLD"),u=r.shape,c=u[u.length-1];if(n.shouldExecuteOnCPU([r])||c<i||o>l){const T=n.readSync(r.dataId),[R,z]=tQ(T,u,r.dtype,o,a);return[n.makeTensorInfo(R.shape,R.dtype,R.values),n.makeTensorInfo(z.shape,z.dtype,z.values)]}if(o===0)return u[u.length-1]=0,[n.makeTensorInfo(u,r.dtype,[]),n.makeTensorInfo(u,"int32",[])];if(c===1)return[r,yh({attrs:{shape:u,dtype:"int32",value:0},backend:n})];const h=n.texData.get(r.dataId),d=h!==null&&h.isPacked,p=d?n.unpackTensor(r):r,m=K(u)/c,y=le({inputs:{x:p},attrs:{shape:[m,c]},backend:n});d&&oa(n,p);const g=Ak(o),x=Ak(c);let w=null;const b=()=>w===null?[y,y]:[y,w],v=(T,R,z)=>{const P=b(),W=new Yoe(z),U=[[c],[w===null?1:0],[Number.NEGATIVE_INFINITY],[T],[R]],j=w;w=n.runWebGLProgram(W,P,"int32",U),oa(n,j)};for(let T=1;T<g;T*=2){const R=T*2;for(let z=T;z>=1;z/=2)v(R,z,[m,x])}for(let T=x;T>g;T/=2){const R=b(),z=new Qoe([m,T/2]),W=[[c],[w===null?1:0],[g]],M=w;w=n.runWebGLProgram(z,R,"int32",W),oa(n,M);const U=g/2,j=U*2;for(let _=U;_>=1;_/=2)v(j,_,w.shape)}let k=w;w=Al({inputs:{x:w},backend:n,attrs:{begin:0,size:[m,o]}}),oa(n,k);let $=nA({inputs:{x:y,indices:w},backend:n,attrs:{axis:1,batchDims:1}});oa(n,y);const N=u.slice(0,-1);N.push(o),k=w,w=le({inputs:{x:w},attrs:{shape:N},backend:n}),oa(n,k);const E=$;return $=le({inputs:{x:$},attrs:{shape:N},backend:n}),oa(n,E),[$,w]}const Joe={kernelName:kx,backendName:"webgl",kernelFunc:Zoe};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class eae{constructor(e,n,s,r,o,a){this.variableNames=["Image","Transforms"],this.outputShape=a;const i=s==="nearest"?1:2;let l;switch(r){case"constant":l=1;break;case"reflect":l=2;break;case"wrap":l=3;break;case"nearest":l=4;break;default:l=1;break}this.userCode=`
            float mapCoord(float outCoord, float len) {
              float inCoord = outCoord;
              if(${l} == 2) {
                if (inCoord < 0.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz2 = 2.0 * len;
                    if (inCoord < sz2) {
                      inCoord = sz2 * float(int(float(-inCoord / sz2))) +
                      inCoord;
                    }
                    inCoord = inCoord < -len ? inCoord + sz2 : -inCoord - 1.0;
                  }
                } else if (inCoord > len - 1.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz2 = 2.0 * len;
                    inCoord -= sz2 * float(int(float(inCoord / sz2)));
                    if (inCoord >= len) {
                      inCoord = sz2 - inCoord - 1.0;
                    }
                  }
                }
                return clamp(inCoord, 0.0, len - 1.0);
              } else if (${l} == 3) {
                if (inCoord < 0.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz = len - 1.0;
                    inCoord += len * (float(int(float(-inCoord / sz))) + 1.0);
                  }
                } else if (inCoord > len - 1.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz = len - 1.0;
                    inCoord -= len * float(int(float(inCoord / sz)));
                  }
                }
                return clamp(inCoord, 0.0, len - 1.0);
              } else if (${l} == 4) {
                return clamp(outCoord, 0.0, len - 1.0);
              } else {
                return outCoord;
              }
            }

            float readWithFillValue(int batch, int coordY, int coordX,
              int channel) {
              float outputValue;
              if (0 <= coordY && coordY < ${e} && 0 <= coordX && coordX < ${n}) {
                  outputValue = getImage(batch, coordY, coordX, channel);
              } else {
                outputValue = float(${o});
              }
              return outputValue;
            }

            void main() {
              ivec4 coords = getOutputCoords();
              float outputValue;
              int batch = coords[0];
              int x = coords[2];
              int y = coords[1];
              int channel = coords[3];
              float xf = float(x);
              float yf = float(y);
              float a1 = getTransforms(batch, 0);
              float a2 = getTransforms(batch, 1);
              float a3 = getTransforms(batch, 2);
              float b1 = getTransforms(batch, 3);
              float b2 = getTransforms(batch, 4);
              float b3 = getTransforms(batch, 5);
              float c1 = getTransforms(batch, 6);
              float c2 = getTransforms(batch, 7);
              float projection = c1 * xf + c2 * yf + 1.0;
              if (projection == 0.0) {
                outputValue = float(${o});
              } else {
                float inX = (a1 * xf + a2 * yf + a3) / projection;
                float inY = (b1 * xf + b2 * yf + b3) / projection;
                float mapX = mapCoord(inX, float(${n}));
                float mapY = mapCoord(inY, float(${e}));

                if (${i} == 1) {
                  int coordY = int(round(mapY));
                  int coordX = int(round(mapX));
                  outputValue = readWithFillValue(batch, coordY, coordX,
                    channel);
                } else {
                  float yFloor = floor(mapY);
                  float xFloor = floor(mapX);
                  float yCeil = yFloor + 1.0;
                  float xCeil = xFloor + 1.0;
                  float valueYFloor = (xCeil - mapX) *
                  readWithFillValue(batch, int(yFloor), int(xFloor), channel) +
                  (mapX - xFloor) *
                  readWithFillValue(batch, int(yFloor), int(xCeil), channel);
                  float valueYCeil = (xCeil - mapX) *
                  readWithFillValue(batch, int(yCeil), int(xFloor), channel) +
                  (mapX - xFloor) *
                  readWithFillValue(batch, int(yCeil), int(xCeil), channel);
                  outputValue = (yCeil - mapY) * valueYFloor +
                  (mapY - yFloor) * valueYCeil;
                }
              }
              setOutput(outputValue);
            }
        `}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tae(t){const{inputs:e,backend:n,attrs:s}=t,{image:r,transforms:o}=e,{interpolation:a,fillMode:i,fillValue:l,outputShape:u}=s,[c,h,d,p]=r.shape,[f,m]=u??[h,d],y=[c,f,m,p],g=new eae(h,d,a,i,l,y);return n.runWebGLProgram(g,[r,o],"float32")}const nae={kernelName:$x,backendName:"webgl",kernelFunc:tae};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sae(t){const{inputs:e,attrs:n,backend:s}=t,{axis:r}=n,{x:o}=e;fh(o,"unique"),console.warn("WARNING: ","UI might be locked temporarily as data is being downloaded");const a=s.readSync(o.dataId),{outputValues:i,outputShape:l,indices:u}=nQ(a,r,o.shape,o.dtype);return[s.makeTensorInfo(l,o.dtype,i),s.makeTensorInfo([u.length],"int32",u)]}const rae={kernelName:Cx,backendName:"webgl",kernelFunc:sae};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function oae(t){const{inputs:e,backend:n,attrs:s}=t,{value:r}=e;let{axis:o}=s;o<0&&(o+=r.shape.length);const a=r,i=a.shape.length,l=r.shape[o],u=new Array(i-1);let c=0;for(let m=0;m<i;m++)m!==o&&(u[c++]=a.shape[m]);const h=[],d=new Array(i).fill(0),p=a.shape.slice();p[o]=1;const f=new Array(l);for(let m=0;m<f.length;m++){d[o]=m;const y=Al({inputs:{x:a},backend:n,attrs:{begin:d,size:p}}),g=le({inputs:{x:y},backend:n,attrs:{shape:u}});f[m]=g,h.push(y)}return h.forEach(m=>n.disposeIntermediateTensorInfo(m)),f}const aae={kernelName:zf,backendName:"webgl",kernelFunc:oae};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class iae{constructor(e,n){this.variableNames=["x","segmentIds"];const s=e.windowSize,r=e.batchSize,o=e.inSize,a=e.numSegments,i=a*Math.ceil(o/s);this.outputShape=[r,i];const l="0.0",u="sumValue",c=Math.floor(s/4)*4,h=s%4,d=`
        sumValue += dot(values, segFilter);
    `;let p="";o%s>0&&(p=`
        if (inIdx < 0 || inIdx >= ${o}) {
          return initializationValue;
        }
      `);let f="";o%s>0&&(f=`
        if (inIdx < 0 || inIdx >= ${o}) {
          return -1.0;
        }
      `),this.userCode=`
      const float initializationValue = ${l};

      float getValue(int batch, int inIdx) {
        ${p}
        return getX(batch, inIdx);
      }

      float getSegmentIdAtIndex(int inIdx) {
        ${f}
        return getSegmentIds(inIdx);
      }

      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = int(floor(float(outIdx) / float(
          ${a})) * float(${s}));
        int currentSeg = int(mod(float(outIdx), float(${a})));

        float sumValue = 0.0;

        for (int i = 0; i < ${c}; i += 4) {
          int inIdx = inOffset + i;
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            getValue(batch, inIdx + 3)
          );

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 3)) == currentSeg ? 1 : 0
          );

          ${d}
        }

        int inIdx = inOffset + ${c};
        if (${h===1}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            initializationValue,
            initializationValue,
            initializationValue
          );

          int inIdxSeg = int(getSegmentIdAtIndex(inIdx));

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            0,
            0,
            0
          );

          ${d}
        } else if (${h===2}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            initializationValue,
            initializationValue
          );

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,
              0,
              0
          );

          ${d}
        } else if (${h===3}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            initializationValue
          );

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,
            0
          );

          ${d}
        }
        setOutput(${u});
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function lae(t){const{inputs:e,backend:n,attrs:s}=t,{x:r,segmentIds:o}=e,{numSegments:a}=s,i=r.shape.length,l=[];let u=0;const c=gt([u],i);let h=r;c!=null&&(h=$n({inputs:{x:r},backend:n,attrs:{perm:c}}),l.push(h),u=Ct(1,i)[0]);const d=GT(h.shape,u,a),p=K([h.shape[u]]),f=le({inputs:{x:h},backend:n,attrs:{shape:[-1,p]}});l.push(f);const m=Tx(r.dtype),y=(b,v,k,$,N)=>{const E=b.shape[0],T=b.shape[1],R=UT(T,N),z={windowSize:R,inSize:T,batchSize:E,numSegments:N},P=new iae(z,v),W=n.compileAndRun(P,[b,k],$);if(l.push(W),W.shape[1]===N)return W;const M=uA({backend:n,attrs:{start:0,stop:N,step:1,dtype:"float32"}}),U=cA({inputs:{x:M},backend:n,attrs:{reps:[T/R]}});return l.push(M),l.push(U),y(W,v,U,$,N)},g=y(f,"unsortedSegmentSum",o,m,a),x=le({inputs:{x:g},backend:n,attrs:{shape:d}});let w=x;if(c!=null){l.push(x);const b=Qo(c);w=$n({inputs:{x:w},backend:n,attrs:{perm:b}})}return l.forEach(b=>n.disposeIntermediateTensorInfo(b)),w}const uae={kernelName:Mf,backendName:"webgl",kernelFunc:lae};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const cae=[KQ,XQ,ZQ,tZ,sZ,aZ,lZ,cZ,fZ,gZ,bZ,SZ,CZ,EZ,AZ,OZ,LZ,BZ,WZ,GZ,qZ,tJ,sJ,iJ,uJ,mJ,yJ,vJ,RQ,$J,EJ,_J,MJ,WJ,GJ,jJ,qJ,ZJ,tee,ree,aee,lee,cee,pee,mee,bee,vee,$ee,Iee,Eee,_ee,Pee,Vee,Gee,Kee,qee,Yee,Zee,ete,nte,rte,lte,hte,fte,gte,bte,Ste,Nte,Rte,EQ,Ate,IJ,Fte,zte,Vte,AQ,Hte,Xte,Qte,tne,rne,lne,hne,mne,bne,Sne,$ne,Tne,Rne,Ane,Lne,zne,Bne,Wne,Gne,qne,Zne,nse,cse,FQ,fse,yse,wse,kse,hJ,Nse,Tse,Rse,_se,Pse,OQ,Mse,Vse,Use,Hse,jse,dJ,ase,Xse,Jse,sre,PQ,ire,cre,fre,yre,vre,kre,Nre,Ere,Are,Fre,zre,Vre,Hre,qre,Zre,toe,JZ,lse,roe,aoe,loe,coe,doe,foe,goe,xoe,woe,koe,Coe,Ioe,Eoe,Aoe,Ooe,Loe,zoe,ise,GQ,Voe,Goe,joe,Xoe,Joe,nae,HQ,rae,aae,uae,Ise];for(const t of cae)dN(t);const _k=t=>{let e;const n=new Set,s=(u,c)=>{const h=typeof u=="function"?u(e):u;if(!Object.is(h,e)){const d=e;e=c??(typeof h!="object"||h===null)?h:Object.assign({},e,h),n.forEach(p=>p(e,d))}},r=()=>e,i={setState:s,getState:r,getInitialState:()=>l,subscribe:u=>(n.add(u),()=>n.delete(u))},l=e=t(s,r,i);return i},hae=t=>t?_k(t):_k,dae=t=>t;function pae(t,e=dae){const n=Rg.useSyncExternalStore(t.subscribe,()=>e(t.getState()),()=>e(t.getInitialState()));return Rg.useDebugValue(n),n}const Ok=t=>{const e=hae(t),n=s=>pae(e,s);return Object.assign(n,e),n},hA=t=>t?Ok(t):Ok,$e=hA((t,e)=>({myTeam:[],enemyTeam:[],activeMy:0,activeEnemy:0,publicEnv:{weather:null,field:null,room:null,aura:[],disaster:[]},myEnv:{trap:[]},enemyEnv:{trap:[]},turn:1,logs:[],isSwitchWaiting:!1,switchRequest:null,setMyTeam:n=>t({myTeam:n}),setEnemyTeam:n=>t({enemyTeam:n}),setActiveMy:n=>t({activeMy:n}),setActiveEnemy:n=>t({activeEnemy:n}),setPublicEnv:n=>t(s=>({publicEnv:{...s.publicEnv,...n}})),setMyEnv:n=>t(s=>({myEnv:{...s.myEnv,...n}})),setEnemyEnv:n=>t(s=>({enemyEnv:{...s.enemyEnv,...n}})),updatePokemon:(n,s,r)=>t(o=>{const a=n==="my"?"myTeam":"enemyTeam",i=[...o[a]],l=i[s];return i[s]=r(l),{[a]:i}}),setTurn:n=>t({turn:n}),addLog:n=>t(s=>({logs:[...s.logs,n]})),setSwitchRequest:n=>t({isSwitchWaiting:!0,switchRequest:n}),clearSwitchRequest:()=>t({isSwitchWaiting:!1,switchRequest:null})}));class dA{constructor(e){this.state=this.clampState(JSON.parse(JSON.stringify(e)))}getState(){return this.state}resetState(){const e={attack:0,spAttack:0,defense:0,spDefense:0,speed:0,accuracy:0,dodge:0,critical:0};return console.log("랭크가 리셋됐다!"),this.state=this.clampState(e),this.state}updateState(e){this.state=this.clampState({...this.state,...e})}increaseState(e,n){const s={...this.state,[e]:(this.state[e]??0)+n};console.log(`${e}이/가 ${n}만큼 올랐다!`),this.state=this.clampState(s)}decreaseState(e,n){const s={...this.state,[e]:this.state[e]-n};console.log(`${e}이/가 ${n}만큼 내려갔다!`),this.state=this.clampState(s)}clampState(e){const n=s=>Math.max(-6,Math.min(6,s));return{attack:n(e.attack),spAttack:n(e.spAttack),defense:n(e.defense),spDefense:n(e.spDefense),speed:n(e.speed),accuracy:n(e.accuracy),dodge:n(e.dodge),critical:Math.min(4,e.critical)}}}class pA{constructor(e=[]){this.status=[...e]}addStatus(e){if(!e||this.hasStatus(e))return;const n=["마비","독","맹독","얼음","잠듦"];n.some(s=>this.status.includes(s))&&n.includes(e)||this.status.push(e)}removeStatus(e){this.status=this.status.filter(n=>n!==e)}clearStatus(){this.status=[]}hasStatus(e){return this.status.includes(e)}getStatus(){return this.status}}function At(t,e){const{addLog:n}=$e.getState(),s=Math.round(Math.max(0,t.currentHp+e)),r={...t,currentHp:Math.min(t.base.hp,s)};return r.currentHp<=0?(n(`😭 ${t.base.name}은/는 쓰러졌다!`),console.log(`${t.base.name}은/는 쓰러졌다! (currentHp: ${r.currentHp})`)):console.log(`${t.base.name}의 남은 (currentHp: ${r.currentHp})`),r}function Kr(t,e,n){var r,o;const s=new dA(JSON.parse(JSON.stringify(t.rank)));return((r=t.base.ability)==null?void 0:r.name)==="심술꾸러기"?n>0?s.decreaseState(e,n):s.increaseState(e,Math.abs(n)):((o=t.base.ability)==null?void 0:o.name)==="오기"?n>0?s.increaseState(e,n):(s.increaseState("spAttack",2),s.decreaseState(e,Math.abs(n))):n>0?s.increaseState(e,n):s.decreaseState(e,Math.abs(n)),{...t,rank:s.getState()}}function fae(t){const e=new dA(t.rank);return e.resetState(),{...t,rank:e.getState()}}function Rm(t,e){var i,l,u,c,h,d,p,f,m,y,g;const n=["화상","마비","잠듦","얼음","독","맹독"],s=["도발","트집","사슬묶기","회복봉인","헤롱헤롱","앵콜"],{publicEnv:r,addLog:o}=$e.getState();if((e==="독"||e==="맹독")&&(((i=t.base.ability)==null?void 0:i.name)==="면역"||t.base.types.includes("독")||t.base.types.includes("강철")))return{...t};if((e==="도발"||e==="헤롱헤롱")&&((l=t.base.ability)==null?void 0:l.name)==="둔감")return{...t};if(e==="마비"&&(((u=t.base.ability)==null?void 0:u.name)==="유연"||t.base.types.includes("전기")))return{...t};if(e==="화상"&&(((c=t.base.ability)==null?void 0:c.name)==="수의베일"||((h=t.base.ability)==null?void 0:h.name)==="수포"||t.base.types.includes("불")))return{...t};if(e==="잠듦"&&(((d=t.base.ability)==null?void 0:d.name)==="불면"||((p=t.base.ability)==null?void 0:p.name)==="의기양양"||((f=t.base.ability)==null?void 0:f.name)==="스위트베일"))return{...t};if(e==="얼음"&&(((m=t.base.ability)==null?void 0:m.name)==="마그마의무장"||t.base.types.includes("얼음")))return{...t};if(s.some(x=>x===e)&&((y=t.base.ability)==null?void 0:y.name)==="아로마베일")return{...t};if(r.weather==="쾌청"&&((g=t.base.ability)==null?void 0:g.name)==="리프가드"&&n.some(x=>x===e))return{...t};const a=new pA(t.status);return a.addStatus(e),console.log(`${t}은 ${e} 상태에 빠졌다!`),o(`🍄 ${t}은 ${e} 상태에 빠졌다!`),{...t,status:a.getStatus()}}function Va(t,e){const n=new pA(t.status);return n.removeStatus(e),{...t,status:n.getStatus()}}function $g(t,e,n){let s={...t.pp};return s[e]>0&&(n?s[e]-=2:s[e]-=1),s[e]<0&&(s[e]+=1),{...t,pp:s}}function Fk(t,e){return{...t,isActive:e}}function Cg(t,e){return{...t,base:{...t.base,ability:e}}}function Ng(t,e){return{...t,base:{...t.base,types:e}}}const Ar=hA((t,e)=>({myEffects:[],enemyEffects:[],publicEffects:[],addEffect:(n,s)=>{t(r=>{const o=`${n}Effects`,i=[...r[o].filter(l=>l.name!==s.name),s];return{[o]:i}})},removeEffect:(n,s)=>{t(r=>{const o=`${n}Effects`,a=r[o];return{[o]:a.filter(i=>i.name!==s)}})},decrementTurns:()=>{const n={my:[],enemy:[],public:[]},s=$e.getState(),r=(o,a)=>{const i=a==="my"?s.activeMy:a==="enemy"?s.activeEnemy:null;return o.map(l=>{if(l.name==="잠듦"&&l.ownerIndex!==i)return l;const u=l.remainingTurn-1;return u<=0&&n[a].push(l.name),{...l,remainingTurn:u}}).filter(l=>l.remainingTurn>0)};return t(o=>({myEffects:r(o.myEffects,"my"),enemyEffects:r(o.enemyEffects,"enemy"),publicEffects:r(o.publicEffects,"public")})),n.public.forEach(o=>{["쾌청","비","모래바람","싸라기눈"].includes(o)?s.setPublicEnv({weather:null}):["그래스필드","미스트필드","사이코필드","일렉트릭필드"].includes(o)&&s.setPublicEnv({field:null})}),n}}));function Ig(t,e){const{myEffects:n,enemyEffects:s,removeEffect:r}=Ar.getState(),{updatePokemon:o}=$e.getState(),i=(t==="my"?n:s).find(c=>c.name==="혼란");if(!i)return!1;const l=i.remainingTurn-1;return l<=0||Math.random()<1/3?(r(t,"혼란"),o(t,e,c=>Va(c,"혼란")),!0):(r(t,"혼란"),Ar.getState().addEffect(t,{name:"혼란",remainingTurn:l}),!1)}function mae(t=!1){const e=[],{myTeam:n,enemyTeam:s,activeMy:r,activeEnemy:o,publicEnv:a,turn:i}=$e.getState(),{publicEffects:l}=Ar.getState(),u=t?s:n,c=t?n:s,h=u[t?o:r],d=c[t?r:o];e.push(h.currentHp/h.base.hp);const p=["노말","불","물","풀","전기","얼음","격투","독","땅","비행","에스퍼","벌레","바위","고스트","드래곤","악","강철","페어리"];p.forEach(x=>{e.push(h.base.types.includes(x)?1:0)}),e.push(h.base.attack/255),e.push(h.base.defense/255),e.push(h.base.spAttack/255),e.push(h.base.spDefense/255),e.push(h.base.speed/255);const f=["독","마비","화상","잠듦","얼음","혼란","없음"];f.forEach(x=>{e.push(h.status.includes(x)?1:0)});const m=["attack","defense","spAttack","spDefense","speed","accuracy","dodge"];m.forEach(x=>{var b;const w=((b=h.rank)==null?void 0:b[x])??0;e.push((w+6)/12)});for(let x=0;x<4;x++){const w=h.base.moves[x];if(w){const b=h.pp[w.name]??0;e.push(b/w.pp)}else e.push(0)}e.push(d.currentHp/d.base.hp),p.forEach(x=>{e.push(d.base.types.includes(x)?1:0)}),e.push(d.base.attack/255),e.push(d.base.defense/255),e.push(d.base.spAttack/255),e.push(d.base.spDefense/255),e.push(d.base.speed/255),f.forEach(x=>{e.push(d.status.includes(x)?1:0)}),m.forEach(x=>{var b;const w=((b=d.rank)==null?void 0:b[x])??0;e.push((w+6)/12)}),[u,c].forEach(x=>{for(let w=0;w<3;w++){const b=x[w];b?(e.push(b.currentHp/b.base.hp),e.push(b.status.length>0?1:0)):(e.push(0),e.push(0))}}),e.push(Math.min(1,i/30)),["그래스필드","사이코필드","미스트필드","일렉트릭필드"].forEach(x=>{e.push(a.field===x?1:0)});const g=l.find(x=>x.name===a.field);return e.push(g?g.remainingTurn/5:0),console.log("✅ 상태 벡터 길이:",e.length),e}let bp;async function gae(){bp=await H5("/model/converted/final_tfjs/model.json"),console.log("RL 모델 로딩중..."),console.log(bp?"✅ RL 모델 로딩 완료":"✅ 모델 없었어서 다시 불러와서 RL 모델 로딩 완료")}async function yae(t){if(!bp)throw new Error("RL 모델이 로딩되지 않았습니다.");const e=Fs([t]);return(await bp.predict(e).argMax(1).data())[0]}async function xae(t){const{myTeam:e,enemyTeam:n,activeMy:s,activeEnemy:r,addLog:o,publicEnv:a}=$e.getState(),i=mae(t==="enemy"),l=await yae(i),u=t==="my"?e:n,c=t==="my"?s:r,h=u[t==="my"?s:r],d=h.base.moves.filter(f=>h.pp[f.name]>0);function p(f,m){const g=[0,1,2].filter(x=>x!==f);return m<0||m>=g.length?-1:g[m]}return l?l<4?d[l]:p(c,l)!==-1?{type:"switch",index:p(c,l)}:d[0]:d[0]}function bae({pokemon:t,onClose:e,onSelect:n,isAlreadySelected:s}){return ee("div",{style:{position:"fixed",top:0,left:0,width:"100%",height:"100%",backgroundColor:"rgba(0, 0, 0, 0.5)",display:"flex",justifyContent:"center",alignItems:"center"},children:ie("div",{style:{background:"#fff",padding:"2rem",borderRadius:"10px",width:"400px",fontSize:"0.8rem"},children:[ee("h2",{children:t.name}),ie("p",{children:["타입: ",t.types.join(", ")]}),ie("p",{children:["체력: ",t.hp+75]}),ie("p",{children:["공격력: ",t.attack+20]}),ie("p",{children:["방어력: ",t.defense+20]}),ie("p",{children:["특수공격력: ",t.spAttack+20]}),ie("p",{children:["특수방어력: ",t.spDefense+20]}),ie("p",{children:["스피드: ",t.speed+20]}),ee("p",{children:"기술:"}),ee("ul",{children:t.moves.map(r=>ie("li",{children:[r.name," (위력: ",r.power,", PP: ",r.pp,", 타입: ",r.type,", 명중율: ",r.accuracy,")"]},r.name))}),ie("div",{style:{marginTop:"1rem"},children:[!s&&ee("button",{onClick:()=>n(t),style:{marginRight:"1rem"},children:"등록하기"}),s&&ee("button",{onClick:()=>n(t),style:{marginRight:"1rem"},children:"취소하기"}),ee("button",{onClick:e,children:"닫기"})]})]})})}function wae({onSelect:t}){const[e,n]=ke.useState(!0);ke.useEffect(()=>(e?Yt.getInstance().play("main"):Yt.getInstance().mute(!0),()=>Yt.getInstance().stop()),[e]),ke.useEffect(()=>{localStorage.getItem("hideTutorial")!=="true"&&c(!0),gae()},[]),ke.useEffect(()=>{(async()=>{const v={};for(const k of $y){const $=await Cy(k.id,1);v[k.id]=$}d(v)})()},[]);const[s,r]=ke.useState([]),[o,a]=ke.useState(1),[i,l]=ke.useState(1.5),[u,c]=ke.useState(!0),[h,d]=ke.useState({}),[p,f]=ke.useState(null),[m,y]=ke.useState(!1),g=b=>{f(b),y(!0)},x=[ie("div",{children:[ee("h3",{children:"안녕하세요!"}),ee("p",{children:"본 웹페이지는 연세대학교 인공지능학회 YAI소속"}),ee("p",{children:" 기초심화RL팀의 토이프로젝트에서 탄생했습니다."})]}),ie("div",{children:[ee("p",{children:"여러분께서는 DQN과 PPO 방식으로 학습된"}),ee("p",{children:"강화학습 AI과 대전하실 수 있습니다!"})]}),ie("div",{children:[ee("p",{children:"모델 학습에 시간이 걸리는 관계로"}),ee("p",{children:"아직은 스타팅 포켓몬만 선택하실 수 있습니다..."})]}),ee("div",{children:ee("h3",{children:"그래도 재밌게 즐겨주세요!"})}),ie("div",{children:[ee("h3",{children:"튜토리얼 1"}),ee("p",{children:"포켓몬을 3마리 선택하세요."})]}),ie("div",{children:[ee("h3",{children:"튜토리얼 2"}),ee("p",{children:"관전 모드를 사용하면 AI끼리의 대전을 볼 수 있어요."}),ee("p",{children:"사용할 포켓몬을 3마리 고르고 관전할 수도 있답니다!"})]}),ie("div",{children:[ee("h3",{children:"튜토리얼 3"}),ee("p",{children:"포켓몬 선택이 끝나면 ‘배틀 시작’을 누르세요!"})]})],w=[...$y].sort((b,v)=>b.id-v.id);return ie(fi,{children:[ee("button",{onClick:()=>{n(b=>{const v=!b;return Yt.getInstance().mute(!v),v})},style:{position:"fixed",top:10,right:10,zIndex:9999,padding:"0.5rem",background:e?"#3f51b5":"#999",color:"white"},children:e?"브금 끄기":"브금 켜기"}),u&&ee(KO,{pages:x,onClose:()=>{c(!1),e&&Yt.getInstance().play("main")}}),ie("div",{style:{padding:"2rem"},children:[ee("h2",{children:"내 포켓몬 3마리 선택"}),ee("div",{style:{display:"flex",flexWrap:"wrap"},children:w.map(b=>{const v=s.indexOf(b);return ie("button",{onClick:()=>g(b),style:{backgroundColor:s.includes(b)?"#00bcd4":"#eee",margin:"0.5rem",padding:"0.5rem 1rem",position:"relative",border:"1px solid #ccc",borderRadius:"6px",minWidth:"80px"},children:[ie("div",{style:{flexDirection:"row",display:"flex"},children:[ee("img",{src:h[b.id],alt:b.name,style:{width:"25px",height:"25px",objectFit:"contain",marginRight:10,borderRadius:6}}),ie("div",{style:{flexDirection:"column",display:"flex"},children:[ee("div",{style:{fontSize:"0.7rem",color:"#333"},children:b.types.join(", ")}),b.name]})]}),v>=0&&ie("div",{style:{position:"absolute",top:"-6px",right:"-16px",fontSize:"0.75rem",color:"#fff",backgroundColor:"#333",padding:"2px 6px",borderRadius:"12px"},children:[v+1,"번째"]})]},b.id)})}),ee("br",{}),ee("div",{style:{display:"flex",flexDirection:"column",justifyContent:"center"},children:ee("button",{disabled:s.length!==3,onClick:()=>t(s,!1),style:{marginTop:"1rem",padding:"1rem 2rem",backgroundColor:s.length!==3?"#FF0000FF":"#2E6DFFFF",borderRadius:"6px",color:"#fff",fontSize:"1rem",border:"none",cursor:s.length===3?"pointer":"not-allowed"},children:"배틀 시작"})}),ie("div",{children:[ee("h3",{children:"관전 모드"}),ie("div",{style:{marginTop:"2rem",flexDirection:"row",flex:1,display:"flex"},children:[ie("div",{style:{flex:.45},children:[ee("h5",{children:"관전 딜레이 타임"}),ee("input",{type:"number",min:1,value:i,onChange:b=>l(parseFloat(b.target.value)),style:{marginRight:"0.5rem",padding:"0.25rem 0.5rem"}})]}),ee("button",{onClick:()=>t(s.length===3?s:[],!0,o,i),style:{padding:"0.5rem 1rem",flex:.55},children:"관전 시작"})]})]})]}),m&&p&&ee(bae,{pokemon:p,onClose:()=>y(!1),onSelect:b=>{if(s.length<3&&!s.includes(b))r([...s,b]);else if(s.includes(b)){const v=s.filter(k=>k!==b);r([...v])}y(!1)},isAlreadySelected:s.includes(p)})]})}function vae({winner:t}){const e=()=>{window.location.reload()},[n,s]=ke.useState(!0);return ke.useEffect(()=>(n?Yt.getInstance().play(t==="AI에게 승리!"?"win":"defeat"):Yt.getInstance().mute(!0),()=>Yt.getInstance().stop()),[n]),ie(fi,{children:[ee("button",{onClick:()=>{s(r=>{const o=!r;return Yt.getInstance().mute(!o),o})},style:{position:"fixed",top:10,right:10,zIndex:9999,padding:"0.5rem",background:n?"#3f51b5":"#999",color:"white"},children:n?"브금 끄기":"브금 켜기"}),ie("div",{style:{padding:"2rem",textAlign:"center"},children:[ee("h1",{children:t}),ee("button",{onClick:e,children:"다시 시작"})]})]})}function Sae(t,e,n){const{updatePokemon:s}=$e.getState(),{addEffect:r}=Ar.getState();s(t,e,a=>Rm(a,n)),r(t,{name:n,remainingTurn:{도발:3,앵콜:3,풀죽음:1,잠듦:3}[n],ownerIndex:e})}function Lk(t,e){const{updatePokemon:n}=$e.getState(),{addEffect:s}=Ar.getState();n(t,e,o=>Rm(o,"혼란"));const r=Math.floor(Math.random()*4)+1;s(t,{name:"혼란",remainingTurn:r})}function nu(t){const{addEffect:e}=Ar.getState();t!==null&&e("public",{name:t,remainingTurn:5}),$e.getState().setPublicEnv({weather:t})}function Ti(t){const{addEffect:e}=Ar.getState();t!==null&&e("public",{name:t,remainingTurn:5}),$e.getState().setPublicEnv({field:t})}function Pk(t){const e=$e.getState().publicEnv,n=$e.getState().setPublicEnv;e.aura.includes(t)||n({aura:[...e.aura,t]})}function kae(t){const e=$e.getState().publicEnv,n=$e.getState().setPublicEnv;n({aura:e.aura.filter(s=>s!==t)})}function $ae(t,e){const n=t==="my"?$e.getState().myEnv:$e.getState().enemyEnv,s=t==="my"?$e.getState().setMyEnv:$e.getState().setEnemyEnv;if(console.log("트랩이 설치되려한다!"),n.trap.includes("독압정")&&e==="독압정"){const r=n.trap.filter(o=>o!==e);r.push("맹독압정"),console.log("맹독압정이 설치되었다!"),$e.getState().addLog("맹독압정이 설치되었다!"),s({trap:r})}else n.trap.includes(e)||(console.log(`${e}이 설치되었다!`),$e.getState().addLog(`${e}이 설치되었다!`),s({trap:[...n.trap,e]}))}function Cae(t,e){const n=t==="my"?$e.getState().myEnv:$e.getState().enemyEnv;(t==="my"?$e.getState().setMyEnv:$e.getState().setEnemyEnv)({trap:n.trap.filter(r=>r!==e)})}function Qh(t){const{publicEnv:e,setPublicEnv:n}=$e.getState(),s=e.disaster??[],r=s.filter(o=>o===t).length;n(r===1?{disaster:s.filter(o=>o!==t)}:{disaster:[...s,t]})}function Nae(t){var s,r;const{publicEnv:e,setPublicEnv:n}=$e.getState();if((s=e.disaster)!=null&&s.includes(t))n({disaster:((r=e.disaster)==null?void 0:r.filter(o=>o!==t))??[]});else{const o=e.disaster??[];n({disaster:[...o,t]})}}function wp(t,e){const n=[],s=t.base.ability;if(!(s!=null&&s.appear))return n;const{updatePokemon:r,myTeam:o,enemyTeam:a,activeMy:i,activeEnemy:l,publicEnv:u,addLog:c}=$e.getState(),h=e==="my"?o[i]:a[l];e==="enemy"?a[l]:o[i];const d=e==="my"?"enemy":"my",p=e==="my"?l:i,f=e==="my"?i:l;for(const m of s.appear)switch(m){case"weather_change":s.name==="가뭄"&&(nu("쾌청"),c(`☀️ ${t.base.name}의 특성으로 날씨가 쾌청이 되었다!`)),s.name==="잔비"&&(nu("비"),c(`🌧️ ${t.base.name}의 특성으로 날씨가 비가 되었다!`)),s.name==="눈퍼뜨리기"&&(nu("싸라기눈"),c(`☃️ ${t.base.name}의 특성으로 날씨가 싸라기눈이 되었다!`)),s.name==="모래날림"&&(nu("모래바람"),c(`🏜️ ${t.base.name}의 특성으로 날씨가 모래바람이 되었다!`));break;case"field_change":s.name==="일렉트릭메이커"&&(Ti("일렉트릭필드"),c(`⚡️ ${t.base.name}의 특성으로 필드가 일렉트릭필드로 바뀌었다!`)),s.name==="그래스메이커"&&(Ti("그래스필드"),c(`🌱 ${t.base.name}의 특성으로 필드가 그래스필드로 바뀌었다!`)),s.name==="미스트메이커"&&(Ti("미스트필드"),c(`😶‍🌫️ ${t.base.name}의 특성으로 필드가 미스트필드로 바뀌었다!`)),s.name==="사이코메이커"&&(Ti("사이코필드"),c(`🔮 ${t.base.name}의 특성으로 필드가 사이코필드로 바뀌었다!`));break;case"aura_change":s.name==="페어리오라"?(Pk("페어리오라"),c(`😇 ${t.base.name}의 특성으로 페어리오라가 생겼다!`)):(Pk("다크오라"),c(`😈 ${t.base.name}의 특성으로 다크오라가 생겼다!`));break;case"disaster":s.name==="재앙의구슬"&&(Qh("재앙의구슬"),c(`🌋 ${t.base.name}의 특성으로 ${s.name} 효과가 발동했다!`)),s.name==="재앙의그릇"&&(Qh("재앙의그릇"),c(`🌋 ${t.base.name}의 특성으로 ${s.name} 효과가 발동했다!`)),s.name==="재앙의검"&&(Qh("재앙의검"),c(`🌋 ${t.base.name}의 특성으로 ${s.name} 효과가 발동했다!`)),s.name==="재앙의목간"&&(Qh("재앙의목간"),c(`🌋 ${t.base.name}의 특성으로 ${s.name} 효과가 발동했다!`));break;case"form_change":c(`🔃 ${t.base.name}의 폼이 변화했다!`);break;case"rank_change":if(s.name==="위협")r(d,p,g=>Kr(g,"attack",-1)),c(`🔃 ${t.base.name}의 등장으로 상대의 공격력이 떨어졌다!`);else if(s.name==="고대활성"&&u.weather==="쾌청"){const y=h.base,g=[["attack",y.attack],["defense",y.defense],["spAttack",y.spAttack],["spDefense",y.spDefense],["speed",y.speed]],[x]=g.reduce((b,v)=>v[1]>b[1]?v:b);r(e,f,b=>Kr(b,x,1)),c(`🔃 ${t.base.name}의 ${x} 능력이 상승했다!`)}else if(s.name==="쿼크차지"&&u.field==="일렉트릭필드"){const y=h.base,g=[["attack",y.attack],["defense",y.defense],["spAttack",y.spAttack],["spDefense",y.spDefense],["speed",y.speed]],[x]=g.reduce((b,v)=>v[1]>b[1]?v:b);r(e,f,b=>Kr(b,x,1)),c(`🔃 ${t.base.name}의 ${x} 능력이 상승했다!`)}break;case"heal":c(`➕ ${t.base.name}이 회복 효과를 발동했다!`);break;case"ability_change":c(`➕ ${t.base.name}의 특성이 변화했다!`);break}return n}function hl(t,e){var r;const n={불:{풀:2,얼음:2,벌레:2,강철:2,물:.5,바위:.5,불:.5,드래곤:.5},물:{불:2,땅:2,바위:2,물:.5,풀:.5,드래곤:.5},풀:{물:2,땅:2,바위:2,불:.5,풀:.5,비행:.5,벌레:.5,독:.5,드래곤:.5,강철:.5},전기:{물:2,비행:2,풀:.5,전기:.5,드래곤:.5,땅:0},얼음:{풀:2,땅:2,비행:2,드래곤:2,불:.5,물:.5,강철:.5,얼음:.5},프리즈드라이:{풀:2,땅:2,비행:2,드래곤:2,물:2,불:.5,강철:.5,얼음:.5},격투:{얼음:2,바위:2,악:2,노말:2,강철:2,벌레:.5,독:.5,비행:.5,에스퍼:.5,페어리:.5,고스트:0},독:{풀:2,페어리:2,독:.5,땅:.5,바위:.5,고스트:.5,강철:0},땅:{불:2,전기:2,독:2,바위:2,강철:2,풀:.5,벌레:.5,비행:0},비행:{풀:2,격투:2,벌레:2,전기:.5,바위:.5,강철:.5},에스퍼:{격투:2,독:2,에스퍼:.5,악:0,강철:.5},벌레:{풀:2,에스퍼:2,악:2,불:.5,격투:.5,독:.5,비행:.5,고스트:.5,강철:.5,페어리:.5},바위:{불:2,얼음:2,비행:2,벌레:2,격투:.5,땅:.5,강철:.5},고스트:{에스퍼:2,고스트:2,악:.5,노말:0},드래곤:{드래곤:2,강철:.5,페어리:0},악:{에스퍼:2,고스트:2,격투:.5,악:.5,페어리:.5},강철:{얼음:2,바위:2,페어리:2,불:.5,물:.5,전기:.5,강철:.5},페어리:{격투:2,악:2,드래곤:2,불:.5,독:.5,강철:.5},노말:{바위:.5,강철:.5,고스트:0}};let s=1;for(const o of e){const a=((r=n[t])==null?void 0:r[o])??1;if(a===0)return 0;s*=a}return s}async function Iae(t,e){var i;let n=0,s,r="";const o=t.base.types;if(((i=t.base.ability)==null?void 0:i.name)!=="매직가드")for(const l of e){if(l==="스텔스락"){const u=hl("바위",o);n+=Math.floor(t.base.hp*.125*u),n&&(s=`${t.base.name} 은 ${l}의 피해를 입었다!`,console.log(`${t.base.name} 은 ${l}의 피해를 입었다!`))}if(l==="독압정")if(o.includes("비행")||o.includes("고스트")||o.includes("강철")||o.includes("독")){s="독압정은 영향을 주지 않았다!";continue}else t.base.types.includes("독")?(r="독압정 제거",s="독압정은 제거됐다!"):(r="독",s=`${l}이 ${t.base.name}에게 ${r}을 유발했다!`);if(l==="맹독압정")if(o.includes("비행")||o.includes("고스트")||o.includes("강철")){s="맹독압정은 영향을 주지 않았다!";continue}else t.base.types.includes("독")?(r="맹독압정 제거",s="맹독압정은 제거됐다!"):(r="맹독",r&&(s=`${l}이 ${t.base.name}에게 ${r}을 유발했다!`))}return{updated:{...t,currentHp:Math.max(0,t.currentHp-n)},log:s,status_condition:r}}async function Vn(t,e){var w,b,v,k,$,N,E;const{myTeam:n,enemyTeam:s,activeMy:r,activeEnemy:o,updatePokemon:a,setActiveMy:i,setActiveEnemy:l,myEnv:u,enemyEnv:c,addLog:h}=$e.getState(),d=["도발","트집","사슬묶기","회복봉인","헤롱헤롱","앵콜","씨뿌리기"],p=t==="my"?n:s,f=t==="my"?r:o,m=t==="my"?u:c,y=p[f];let g=p[e];if(e===-1){console.log(`${t}는 더 이상 낼 포켓몬이 없음`),h(`${t}는 더 이상 낼 포켓몬이 없음`);return}console.log("1. 랭크업 초기화 "),a(t,f,T=>fae(T));for(const T in d)p[f].status.includes(T)&&a(t,f,R=>Va(R,T));if(((w=y.base.ability)==null?void 0:w.name)==="자연회복")for(const T in d)p[f].status.includes(T)&&a(t,f,R=>Va(R,T));if(console.log("2. 현재 포켓몬 비활성화"),a(t,f,T=>Fk(T,!1)),String((v=(b=y.base.ability)==null?void 0:b.appear)==null?void 0:v.includes("disaster"))&&Nae(String((k=y.base.ability)==null?void 0:k.name)),String((N=($=y.base.ability)==null?void 0:$.appear)==null?void 0:N.includes("aura_change"))&&kae(String((E=y.base.ability)==null?void 0:E.name)),console.log("3. 새 포켓몬 활성화"),a(t,e,T=>Fk(T,!0)),t==="my"?i(e):l(e),console.log("4. 트랩 데미지 적용"),m.trap.length>0){const{updated:T,log:R,status_condition:z}=await Iae(g,m.trap);a(t,e,P=>T),z&&(console.log("트랩 효과 적용"),z==="독압정 제거"?(console.log("독압정 제거됨"),Cae(t,"독압정")):a(t,e,P=>Rm(P,z))),R&&h(R),console.log(R),g=T}console.log("5. 등장 특성 적용");const x=t==="my"?"나":"상대";console.log(x+"는 "+p[e].base.name+"을/를 내보냈다!"),h(x+"는 "+p[e].base.name+"을/를 내보냈다!"),wp(g,t)}function Tae(t,e){return t.reduce((n,s)=>{const r=hl(s,e);return Math.max(n,r)},1)}function Wi(t){const{myTeam:e,enemyTeam:n,activeMy:s,activeEnemy:r}=$e.getState(),o=t==="my"?e:n,a=t==="my"?s:r,i=t==="my"?n[r]:e[s],l=o.map((d,p)=>({...d,index:p})).filter(d=>d.index!==a&&d.currentHp>0);if(l.length===0)return-1;if(l.length===1)return l[0].index;let u=null,c=null,h=null;return l.forEach(({base:d,index:p})=>{const f=Tae(d.types,i.base.types);f>1.5&&u===null?u=p:f<=1&&c===null?c=p:h===null&&(h=p)}),u??c??h??a}async function Tg(t,e,n,s,r,o){await Eae(t,e,n,s,r,o)}async function Eae(t,e,n,s,r,o){var v;const{updatePokemon:a,addLog:i,activeEnemy:l,activeMy:u,myTeam:c,enemyTeam:h}=$e.getState(),d=s.effects,p=s.demeritEffects,f=t==="my"?"enemy":"my",m=t==="my"?l:u,y=t==="my"?u:l,g=t==="my"?c:h,x=t==="my"?h:c;t==="enemy"?c[u]:h[l];let w=!1,b=null;if(p==null||p.forEach(k=>{if(k&&Math.random()<k.chance){if(console.log(`${s.name}의 디메리트 효과 발동!`),k!=null&&k.recoil&&r){const $=r*k.recoil;a(t,y,N=>At(N,-$)),i(`🤕 ${e.base.name}은/는 반동 데미지를 입었다!`)}k.statChange&&k.statChange.forEach($=>{const N=$.stat,E=$.change,T=t==="my"?c:h,R=t==="my"?u:l;a(t,R,z=>Kr(z,N,E)),console.log(`${T[R].base.name}의 ${N}이/가 ${E}랭크 변했다!`),i(`🔃 ${T[R].base.name}의 ${N}이/가 ${E}랭크 변했다!`)})}}),((v=e.base.ability)==null?void 0:v.name)!=="우격다짐"&&s.target==="opponent"&&(d==null||d.forEach(k=>{var $,N;if(k&&Math.random()<k.chance){if(console.log(`${s.name}의 부가효과 발동!`),k.statChange&&k.statChange.forEach(E=>{let T="enemy";t==="my"&&E.target==="opponent"?T="enemy":t==="my"&&E.target==="self"||t==="enemy"&&E.target==="opponent"?T="my":t==="enemy"&&E.target==="self"&&(T="enemy");const R=E.stat,z=E.change,P=T==="my"?c:h,W=T==="my"?u:l;a(T,W,M=>Kr(M,R,z)),console.log(`${P[W].base.name}의 ${R}이/가 ${z}랭크 변했다!`),i(`🔃 ${P[W].base.name}의 ${R}이/가 ${z}랭크 변했다!`)}),k.status){const E=k.status;let T=!1;E==="화상"&&n.base.types.includes("불")&&(T=!0),E==="마비"&&n.base.types.includes("전기")&&(T=!0),E==="얼음"&&n.base.types.includes("얼음")&&(T=!0),E==="독"&&(n.base.types.includes("독")||n.base.types.includes("강철"))&&(T=!0),E==="맹독"&&(n.base.types.includes("독")||n.base.types.includes("강철"))&&(T=!0),E==="풀죽음"||E==="앵콜"||E==="잠듦"?Sae(f,m,E):E==="도발"||E==="헤롱헤롱"&&(($=n.base.ability)==null?void 0:$.name)!=="둔감"||E==="혼란"&&((N=n.base.ability)==null?void 0:N.name)!=="마이페이스"?Lk(f,m):a(f,m,R=>Rm(R,E)),T||(i(`🍄 ${x[m].base.name}은/는 ${E}상태가 되었다!`),console.log(`${x[m].base.name}은/는 ${E}상태가 되었다!`))}if(k.heal&&r&&r>0){const E=r,T=k.heal;a(t,y,R=>At(R,E*T)),i(`➕ ${e.base.name}은/는 체력을 회복했다!`)}if(k.heal&&!r){const E=k.heal;a(t,y,T=>At(T,T.base.hp*E)),i(`➕ ${e.base.name}은/는 체력을 회복했다!`)}}})),s.uTurn){const{setSwitchRequest:k,clearSwitchRequest:$}=$e.getState();if(g.map((E,T)=>({...E,index:T})).filter((E,T)=>E.currentHp>0&&T!==y).length<=1)return;if(o){console.log("관전 모드에서 유턴 사용");const E=Wi(t);b=new Promise(async T=>{await Vn(t,E),T()})}else if(t==="my")console.log("내가 유턴 사용"),b=new Promise(E=>{k({side:t,reason:"uTurn",onSwitch:async T=>{await Vn(t,T),k(null),$(),E()}})}),w=!0;else{console.log("ai가 유턴 사용");const E=Wi(t);b=new Promise(async T=>{await Vn(t,E),T()})}}w&&b&&(console.log("유턴 로직 실행중...2"),await b,console.log("유턴 로직 실행중...5 (완료)"))}function li(){const{myTeam:t,enemyTeam:e,activeMy:n,activeEnemy:s,updatePokemon:r,addLog:o,publicEnv:a}=$e.getState(),{publicEffects:i,decrementTurns:l}=Ar.getState(),u=t[n],c=e[s];[u,c].forEach((d,p)=>{const f=p===0?"my":"enemy";if(a.field==="그래스필드"&&(console.log("그래스필드 효과 적용 시작"),!d.base.types.includes("비행")&&d.position!=="하늘"&&d.currentHp>0)){const m=Math.floor(d.base.hp/16);r(f,p===0?n:s,g=>At(g,m)),o(`➕ ${d.base.name}은/는 그래스필드로 회복했다!`),console.log(`${d.base.name}은/는 그래스필드로 회복했다!`)}}),[u,c].forEach((d,p)=>{const f=p===0?"my":"enemy",m=p===0?"enemy":"my",y=p===0?n:s,g=p===0?e:t,x=p===0?s:n;if(d.status.includes("화상")){const w=Math.floor(d.base.hp/16);r(f,p===0?n:s,v=>At(v,-w)),o(`🔥 ${d.base.name}은 화상으로 ${w}의 데미지를 입었다!`)}if(d.status.includes("맹독")){const w=Math.floor(d.base.hp/6);r(f,p===0?n:s,v=>At(v,-w)),o(`🍄 ${d.base.name}은 맹독의 피해를 입었다!`),console.log(`${d.base.name}은 맹독의 피해를 입었다!`)}if(d.status.includes("독")){const w=Math.floor(d.base.hp/8);r(f,y,v=>At(v,-w)),o(`🍄 ${d.base.name}은 독의 피해를 입었다!`),console.log(`${d.base.name}은 독의 피해를 입었다!`)}if(d.status.includes("씨뿌리기")){const w=Math.floor(d.base.hp/8),b=k=>At(k,-w),v=k=>At(k,w);r(f,y,b),g[x].currentHp>0&&r(m,x,v),o(`🌱 ${g[x].base.name}은 씨뿌리기로 회복했다!`),o(`🌱 ${d.base.name}은 씨뿌리기의 피해를 입었다!`),console.log(`${d.base.name}은 씨뿌리기의 피해를 입었다!`)}});const h=l();h.my.forEach(d=>{r("my",n,p=>Va(p,d)),o(`🏋️‍♂️ 내 포켓몬의 ${d} 상태가 해제되었다!`)}),h.enemy.forEach(d=>{r("enemy",s,p=>Va(p,d)),o(`🏋️‍♂️ 상대 포켓몬의 ${d} 상태가 해제되었다!`)}),a.weather&&h.public.includes(a.weather)&&(nu(null),o(`날씨(${a.weather})의 효과가 사라졌다!`)),a.field&&h.public.includes(a.field)&&(Ti(null),o(`필드(${a.field})의 효과가 사라졌다!`)),[u,c].forEach((d,p)=>{var y,g;const f=p===0?"my":"enemy",m=p===0?n:s;((y=d.base.ability)==null?void 0:y.name)==="포이즌힐"&&(d.status.includes("독")?(r(f,m,x=>At(x,x.base.hp*3/16)),o(`➕ ${d.base.name}은 포이즌힐로 체력을 회복했다!`)):d.status.includes("맹독")&&(r(f,m,x=>At(x,x.base.hp*22/96)),o(`➕ ${d.base.name}은 포이즌힐로 체력을 회복했다!`))),((g=d.base.ability)==null?void 0:g.name)==="가속"&&(r(f,m,x=>Kr(x,"speed",1)),o(`🦅 ${d.base.name}의 가속 특성 발동!`))})}function Vr(t){return t>0&&t<=6?(t*1+2)/2:t>6?4:t<-6?1/4:2/(Math.abs(t*1)+2)}function Rae(t,e,n,s){let r=1;r*=t;const o=n-s;return o>6?r*=3:o>=0&&o<=6?r*=(o+3)/3:o>=-6&&o<0?r*=3/Math.abs(o)+3:r*=1/3,r*=e/100,r=Math.min(1,r),Math.random()<r}function Dae(t,e,n){let s=0,r;return(e==null?void 0:e.name)==="대운"&&(s+=1),s+=t,s+=n,s===0?r=1/24:r=s**2*2/16,Math.random()<r}async function Aae(t,e){let n;const{publicEnv:s,myTeam:r,activeMy:o,enemyTeam:a,activeEnemy:i,addLog:l}=$e.getState(),u=r[o],c=a[i];let h=u.base.speed;h*=Vr(u.rank.speed),u.status.includes("마비")&&(h*=.5);let d=c.base.speed;d*=Vr(c.rank.speed),c.status.includes("마비")&&(d*=.5),s.room==="트릭룸"&&(h*=-1,d*=-1);let p=h-d;if(p===0&&(p=Math.random()-.5),n=p>=0?"my":"enemy",t&&t.name==="그래스슬라이더"?s.field!=="그래스필드"&&(t.priority=0):e&&e.name==="그래스슬라이더"&&s.field!=="그래스필드"&&(e.priority=0),t&&t.priority&&e&&e.priority){const f=t.priority,m=e.priority,y=f-m;y>0?n="my":y===0?n=p>=0?"my":"enemy":y<0&&(n="enemy")}else e&&e.priority?e.priority<0?(console.log("무조건 느리게 공격하는 기술 사용"),n="my"):n="enemy":t&&t.priority&&(t.priority<0?(console.log("무조건 느리게 공격하는 기술 사용"),n="enemy"):n="my");return l(`🦅 ${n}의 선공!`),console.log(`${n}의 선공!`),n}function _ae(t,e,n,s){const r=Ar.getState(),{activeMy:o,activeEnemy:a,addLog:i,updatePokemon:l,myTeam:u,enemyTeam:c}=$e.getState(),h=s==="my"?u:c,d=s==="my"?o:a,p=l;if(t.includes("잠듦")){const m=(s==="my"?r.myEffects:r.enemyEffects).find(y=>y.name==="잠듦");if(m){const y=m.remainingTurn;let g=0;return y===2?g=1/3:y===1?g=1/2:y<=0&&(g=1),Math.random()<g?(r.removeEffect(s,"잠듦"),p(s,d,x=>Va(x,"잠듦")),i(`🏋️‍♂️ ${h[d].base.name}은/는 잠에서 깼다!`),console.log(`${h[d]}.base.name은/는 잠에서 깼다!`),{rate:e,isHit:!0}):{rate:e,isHit:!1}}}return t.includes("화상")&&n.category==="물리"?{rate:e*.5,isHit:!0}:t.includes("마비")?Math.random()>.25?{rate:e,isHit:!0}:(i(`${h[d].base.name}은/는 몸이 저렸다!`),console.log(`${h[d].base.name}은/는 몸이 저렸다!`),{rate:e,isHit:!1}):t.includes("풀죽음")?{rate:e,isHit:!1}:t.includes("얼음")?Math.random()>.1||n.type==="불"?(p(s,d,f=>Va(f,"얼음")),i(`🏋️‍♂️ ${h[d].base.name}의 얼음이 녹았다!`),console.log(`${h[d].base.name}의 얼음이 녹았다!`),{rate:e,isHit:!0}):(i(`☃️ ${h[d].base.name}은/는 얼어있다!`),console.log(`${h[d].base.name}은/는 얼어있다!`),{rate:e,isHit:!1}):t.includes("헤롱헤롱")?Math.random()>.5?{rate:e,isHit:!0}:(i(`😍 ${h[d].base.name}은/는 헤롱헤롱해있다!`),console.log(`${h[d].base.name}은/는 헤롱헤롱해있다!`),{rate:e,isHit:!1}):{rate:e,isHit:!0}}function Ui(t,e){return e.includes(t.name)}const Oae=["배짱","심안"];function Fae(t,e,n){const s=n.type;let r=[...e.types];return t.ability&&Ui(t.ability,Oae)&&(r=r.filter(o=>!fA(o,s))),hl(s,r)}function fA(t,e){var s;return((s={노말:["고스트"],격투:["고스트"],독:["강철"],전기:["땅"],땅:["비행"],고스트:["노말"],드래곤:["페어리"]}[e])==null?void 0:s.includes(t))??!1}function zk(t,e){var p;const{enemyTeam:n,activeEnemy:s,myTeam:r,activeMy:o,updatePokemon:a,addLog:i}=$e.getState();e==="my"?r[o]:n[s];const l=e==="my"?n[s]:r[o],u=l.base.ability;l.currentHp;const c=e==="my"?"enemy":"my",h=e==="my"?s:o;let d=1;return(p=u==null?void 0:u.defensive)==null||p.forEach(f=>{switch(f){case"type_nullification":u.name==="저수"&&t.type==="물"?(d=0,console.log(`${l.base.name}의 ${u==null?void 0:u.name} 발동!`),a(c,h,m=>At(m,Math.round(m.base.hp/4)))):u.name==="흙먹기"&&t.type==="땅"?(d=0,console.log(`${l.base.name}의 ${u==null?void 0:u.name} 발동!`),a(c,h,m=>At(m,Math.round(m.base.hp/4)))):u.name==="축전"&&t.type==="전기"?(d=0,console.log(`${l.base.name}의 ${u==null?void 0:u.name} 발동!`),a(c,h,m=>At(m,Math.round(m.base.hp/4)))):u.name==="건조피부"&&(t.type==="물"?(d=0,console.log(`${l.base.name}의 ${u==null?void 0:u.name} 발동!`),a(c,h,m=>At(m,Math.round(m.base.hp/4)))):t.type==="불"&&(console.log(`${l.base.name}의 ${u==null?void 0:u.name} 발동!`),d*=1.25));break;case"damage_nullification":u.name==="방진"&&t.affiliation==="가루"?(console.log(`${l.base.name}의 ${u==null?void 0:u.name} 발동!`),i(`🤪 ${l.base.name}의 ${u==null?void 0:u.name} 발동!`),d=0):u.name==="방탄"&&t.affiliation==="폭탄"&&(console.log(`${l.base.name}의 ${u==null?void 0:u.name} 발동!`),d=0);break;case"damage_reduction":break;default:d=1;break}}),d}function mA(t,e){var c;const{enemyTeam:n,activeEnemy:s,myTeam:r,activeMy:o,updatePokemon:a}=$e.getState(),i=e==="my"?r[o]:n[s];e==="enemy"?n[s]:r[o];const l=i.base.ability;r[o];let u=1;return(c=l==null?void 0:l.offensive)==null||c.forEach(h=>{var d;switch(h){case"damage_buff":l.name==="우격다짐"&&t.effects&&(u*=1.3,console.log(`${i.base.name}의 ${l==null?void 0:l.name} 발동!`)),l.name==="이판사판"&&((d=t.demeritEffects)!=null&&d.some(p=>p.recoil))&&(u*=1.2,console.log(`${i.base.name}의 ${l==null?void 0:l.name} 발동!`)),l.name==="철주먹"&&t.affiliation==="펀치"&&(u*=1.2,console.log(`${i.base.name}의 ${l==null?void 0:l.name} 발동!`)),l.name==="단단한발톱"&&t.isTouch&&(u*=1.3,console.log(`${i.base.name}의 ${l==null?void 0:l.name} 발동!`)),l.name==="맹화"&&t.type==="불"&&i.currentHp<=i.base.hp/3&&(u*=1.5,console.log(`${i.base.name}의 ${l==null?void 0:l.name} 발동!`)),l.name==="급류"&&t.type==="물"&&i.currentHp<=i.base.hp/3&&(u*=1.5,console.log(`${i.base.name}의 ${l==null?void 0:l.name} 발동!`)),l.name==="심록"&&t.type==="풀"&&i.currentHp<=i.base.hp/3&&(u*=1.5,console.log(`${i.base.name}의 ${l==null?void 0:l.name} 발동!`));break}}),u}async function Zh({moveName:t,side:e,isAlwaysHit:n,additinalDamage:s}){var re,Y,J,oe,se,ce,me,pe,Ie,_e,ze,Te,Ee,Ke,Qe,ys,Tt,Hs,fn,dr,Pn;const{myTeam:r,enemyTeam:o,activeMy:a,activeEnemy:i,publicEnv:l,updatePokemon:u,addLog:c}=$e.getState(),h=e==="my"?r[a]:o[i],d=e==="enemy"?r[a]:o[i],p=e==="my"?r[a].base:o[i].base,f=e==="enemy"?r[a].base:o[i].base,m=Pae(p,t),y=l.weather,g=l.field,x=l.disaster,w=e==="my"?"enemy":"my",b=e==="my"?i:a,v=e==="my"?a:i;let k=1,$=m.power+(s??0),N=1,E=0,T=1,R=!1,z=!1,P=0,W=!1,M=h.rank,U=d.rank,j=h.status,_=m.category==="물리"?p.attack:p.spAttack;t==="바디프레스"&&(_=p.defense);let B=m.category==="물리"?f.defense:f.spDefense;if(j){const Ne=_ae(j,T,m,e);if(T=Ne.rate,!Ne.isHit)return c(`🚫 ${h.base.name}의 기술은 실패했다!`),console.log(`${h.base.name}의 기술은 실패했다!`),{success:!1}}if(m.target==="self"||m.target==="none")return console.log("자신에게 거는 기술"),Lae(m,e),R=!0,{success:!0};let H=[...f.types];if(p.ability&&Ui(p.ability,["배짱","심안"])&&(H=H.filter(Ne=>!fA(Ne,m.type))),p.ability&&Ui(p.ability,["틀깨기","터보블레이즈","테라볼티지"])&&(f.ability=null),n)R=!0;else if(Rae(N,m.accuracy,(M==null?void 0:M.accuracy)??0,(U==null?void 0:U.dodge)??0))R=!0;else{R=!1,c(`🚫 ${h.base.name}의 공격은 빗나갔다!`),console.log(`${h.base.name}의 공격은 빗나갔다!`);let Ze;(re=m.demeritEffects)==null||re.forEach(on=>{on.fail&&(Ze=on.fail,u(e,v,js=>At(js,-(js.base.hp*Ze))),c(`🤕 ${h.base.name}은 반동으로 데미지를 입었다...`))});return}if(m.target==="opponent"&&(m.category==="변화"?m.type==="풀"&&f.types.includes("풀")&&(k*=0):(Y=f.ability)!=null&&Y.defensive&&((oe=(J=f.ability)==null?void 0:J.defensive)==null||oe.forEach(Ne=>{(Ne==="damage_nullification"||Ne==="type_nullification"||Ne==="damage_reduction")&&(console.log(`${f.name}의 방어적 특성이 적용되었다!`),k*=zk(m,e))})),k*=Fae(p,f,m)),m.category==="변화"&&R){if(k===0){W=!0,c(`🚫 ${h.base.name}의 공격은 효과가 없었다...`),console.log(`${h.base.name}의 공격은 효과가 없었다...`),u(e,v,Ne=>{var Ze;return $g(Ne,t,((Ze=d.base.ability)==null?void 0:Ze.name)==="프레셔")});return}return c(`🥊 ${e}는 ${m.name}을/를 사용했다!`),console.log(`${e}는 ${m.name}을/를 사용했다!`),{success:!0}}if(c(`🥊 ${e}는 ${t}을/를 사용했다!`),console.log(`${e}는 ${t}을/를 사용했다!`),k>=2&&(P=1,c(`👍 ${h.base.name}의 공격은 효과가 굉장했다!`),console.log(`${h.base.name}의 공격은 효과가 굉장했다!`)),k>0&&k<=.5&&(P=-1,c(`👎 ${h.base.name}의 공격은 효과가 별로였다...`),console.log(`${h.base.name}의 공격은 효과가 별로였다...`)),k===0){W=!0,c(`🚫 ${h.base.name}의 공격은 효과가 없었다...`),console.log(`${h.base.name}의 공격은 효과가 없었다...`),u(e,v,Ze=>{var on;return $g(Ze,t,((on=d.base.ability)==null?void 0:on.name)==="프레셔")});let Ne;(se=m.demeritEffects)==null||se.forEach(Ze=>{Ze.fail&&(Ne=Ze.fail,u(e,v,on=>At(on,-(on.base.hp*Ne))),c(`🤕 ${h.base.name}은 반동으로 데미지를 입었다...`))});return}p.types.some(Ne=>Ne===m.type)&&(((ce=p.ability)==null?void 0:ce.name)==="적응력"?k*=2:k*=1.5),y&&(y==="모래바람"?f.types.includes("바위")&&m.category==="특수"?T*=2/3:T*=1:y==="싸라기눈"&&(f.types.includes("얼음")&&m.category==="물리"?T*=2/3:T*=1)),g&&!p.types.some(Ne=>Ne==="비행")&&((me=p.ability)==null?void 0:me.name)!=="부유"&&(g==="그래스필드"?m.type==="풀"?(console.log("그래스필드에서 기술이 강화됐다!"),T*=1.3):(m.name==="지진"||m.name==="땅고르기"||m.name==="지진")&&(T*=.5):g==="사이코필드"?m.type==="에스퍼"&&(T*=1.3):g==="일렉트릭필드"&&m.type==="전기"&&(T*=1.3)),x&&(x.includes("재앙의검")&&m.category==="물리"||x.includes("재앙의구슬")&&m.category==="특수"?B*=.75:(x.includes("재앙의그릇")&&m.category==="특수"||x.includes("재앙의목간")&&m.category==="물리")&&(_*=.75)),T*=mA(m,e),T*=zk(m,e),((pe=p.ability)==null?void 0:pe.name)=="무모한행동"&&j.some(Ne=>Ne==="독"||Ne==="맹독")&&(z=!0),(((Ie=f.ability)==null?void 0:Ie.name)==="전투무장"||((_e=f.ability)==null?void 0:_e.name)==="조가비갑옷")&&(E=0,z=!1),z=Dae(m.criticalRate+E,p.ability,(M==null?void 0:M.critical)??0),z&&((ze=p.ability)==null?void 0:ze.name)==="스나이퍼"?(T*=2.25,M.attack=Math.max(0,M.attack),M.spAttack=Math.max(0,M.spAttack),c(`👍 ${t}은/는 급소에 맞았다!`),console.log(`${t}은/는 급소에 맞았다!`)):z&&(T*=1.5,M.attack=Math.max(0,M.attack),M.spAttack=Math.max(0,M.spAttack),c(`👍 ${t}은/는 급소에 맞았다!`),console.log(`${t}은/는 급소에 맞았다!`)),M.attack&&m.category==="물리"&&((Te=d.base.ability)==null?void 0:Te.name)!=="천진"&&(t==="바디프레스"?(_*=Vr(M.defense),c(`${h.base.name}의 방어 랭크 변화가 적용되었다!`),console.log(`${h.base.name}의 방어 랭크 변화가 적용되었다!`)):(_*=Vr(M.attack),c(`${h.base.name}의 공격 랭크 변화가 적용되었다!`),console.log(`${h.base.name}의 공격 랭크 변화가 적용되었다!`))),M.spAttack&&m.category==="특수"&&((Ee=d.base.ability)==null?void 0:Ee.name)!=="천진"&&(_*=Vr(M.spAttack),c(`${h.base.name}의 특수공격 랭크 변화가 적용되었다!`),console.log(`${h.base.name}의 특수공격 랭크 변화가 적용되었다!`)),U.defense&&m.category==="물리"&&((Ke=h.base.ability)==null?void 0:Ke.name)!=="천진"&&!((Qe=m.effects)!=null&&Qe.some(Ne=>Ne.rank_nullification))&&(B*=Vr(U.defense),c(`${d.base.name}의 방어 랭크 변화가 적용되었다!`),console.log(`${d.base.name}의 방어 랭크 변화가 적용되었다!`)),U.spDefense&&m.category==="특수"&&((ys=h.base.ability)==null?void 0:ys.name)!=="천진"&&!((Tt=m.effects)!=null&&Tt.some(Ne=>Ne.rank_nullification))&&(B*=Vr(U.spDefense),c(`${d.base.name}의 특수방어 랭크 변화가 적용되었다!`),console.log(`${d.base.name}의 특수방어 랭크 변화가 적용되었다!`));const X=B*f.hp/.411;console.log(`${d.base.name}의 내구력: ${X}`);const Q=_*$*T*k;console.log(`${h.base.name}의 결정력: ${Q}`);const Z=Math.min(d.currentHp,Math.round(Q/X*f.hp));if(W){if((Hs=m.effects)!=null&&Hs.some(Ne=>Ne.fail)){let Ne;m.effects.forEach(Ze=>{Ze.fail&&(Ne=Ze.fail)}),u(e,v,Ze=>At(Ze,-(Ze.base.hp*Ne))),c(`🤕 ${h.base.name}은 반동으로 데미지를 입었다...`),console.log(`${h.base.name}은 반동으로 데미지를 입었다...`)}return}if(R)return Z>=d.currentHp&&(((fn=h.base.ability)==null?void 0:fn.name)==="자기과신"||((dr=h.base.ability)==null?void 0:dr.name)==="백의울음"?u(e,v,Ne=>Kr(Ne,"attack",1)):((Pn=h.base.ability)==null?void 0:Pn.name)==="흑의울음"&&u(e,v,Ne=>Kr(Ne,"spAttack",1))),u(w,b,Ne=>At(Ne,-Z)),u(e,v,Ne=>{var Ze;return $g(Ne,t,((Ze=d.base.ability)==null?void 0:Ze.name)==="프레셔")}),{success:!0,damage:Z,wasEffective:P}}function Lae(t,e,n,s){var p;const{updatePokemon:r,activeMy:o,activeEnemy:a,addLog:i,myTeam:l,enemyTeam:u}=$e.getState(),c=e==="my"?l:u,h=e==="my"?o:a,d=e==="my"?"enemy":"my";t.category==="변화"&&(t.target==="self"?(i(`🥊 ${e}는 ${t.name}을/를 사용했다!`),console.log(`${e}는 ${t.name}을/를 사용했다!`),(p=t.effects)==null||p.forEach(f=>{if(f.statChange&&f.statChange.forEach(m=>{r(e,h,y=>Kr(y,m.stat,m.change)),console.log(`${c[h].base.name}의 ${m.stat}이/가 ${m.change}랭크 변했다!`),i(`🔃 ${c[h].base.name}의 ${m.stat}이/가 ${m.change}랭크 변했다!`)}),f.heal&&f.heal>0){const m=f.heal;r(e,h,y=>At(y,y.base.hp*m))}})):t.target==="none"&&(t.trap&&($ae(d,t.trap),i(`🥊 ${e}는 ${t.name}을/를 사용했다!`),console.log(`${e}는 ${t.name}을/를 사용했다!`)),t.field&&(Ti(t.field),i(`⛰️ ${e}는 필드를 ${t.name}로 바꿨다!`),console.log(`${e}는 필드를 ${t.name}로 바꿨다!`))))}function Pae(t,e){let n=null;if(t.moves.forEach(s=>{e===s.name&&(n=s)}),!n)throw new Error(`Move with name: ${e} not found.`);return n}function Jh(t){return new Promise(e=>setTimeout(e,t))}function ed(t){return t.power!==void 0}function td(t){return t.type==="switch"}async function Mk(t,e,n){const{addLog:s,myTeam:r,enemyTeam:o,activeEnemy:a,activeMy:i}=$e.getState();r[i],o[a],s("우선도 및 스피드 계산중..."),console.log("우선도 및 스피드 계산중...");const l=await Aae(ed(t)?t:void 0,ed(e)?e:void 0);if(td(t)&&td(e)){l==="my"?(await Vn("my",t.index),await Jh(1500),await Vn("enemy",e.index)):(await Vn("enemy",e.index),await Jh(1500),await Vn("my",t.index)),li();return}if(td(t)){await Vn("my",t.index),ed(e)&&await ui("enemy",e,n),li();return}if(td(e)){await Vn("enemy",e.index),ed(t)&&(await Jh(1500),await ui("my",t,n)),li();return}if(l==="my"){if(await ui("my",t,n),$e.getState().enemyTeam[$e.getState().activeEnemy].currentHp<=0){li();return}await ui("enemy",e,n)}else{if(await ui("enemy",e,n),$e.getState().myTeam[$e.getState().activeMy].currentHp<=0){li();return}await Jh(1500),await ui("my",t,n)}li()}async function ui(t,e,n){var m,y;const{myTeam:s,enemyTeam:r,activeMy:o,activeEnemy:a,addLog:i,updatePokemon:l}=$e.getState(),u=(m=e.effects)==null?void 0:m.some(g=>g.multiHit===!0),c=(y=e.effects)==null?void 0:y.some(g=>g.doubleHit===!0),h=["트리플킥","트리플악셀"].includes(e.name),d=t==="my"?s[o]:r[a],p=t==="my"?r[a]:s[o],f=t==="my"?o:a;if(h){const g=Vk(e);for(let x=0;x<g;x++){d.base.ability&&Ui(d.base.ability,["리베로","변환자재"])&&(l(t,f,b=>Ng(b,[e.type])),l(t,f,b=>Cg(b,null)),i(`🔃 ${d.base.name}의 타입은 ${e.type}타입으로 변했다!`),console.log(`${d.base.name}의 타입은 ${e.type}타입으로 변했다!`));const w=await Zh({moveName:e.name,side:t});if(w!=null&&w.success)Ig(t,f)&&(i(`🏋️‍♂️ ${d}는 혼란에서 회복했다!`),console.log(`${d}는 혼란에서 회복했다!`)),e.power+=e.name==="트리플킥"?10:20,await Tg(t,d,p,e,w.damage,n);else break}return}else if(c||u){d.base.ability&&Ui(d.base.ability,["리베로","변환자재"])&&(l(t,f,x=>Ng(x,[e.type])),l(t,f,x=>Cg(x,null)),i(`${d.base.name}의 타입은 ${e.type}타입으로 변했다!`),console.log(`${d.base.name}의 타입은 ${e.type}타입으로 변했다!`));const g=await Zh({moveName:e.name,side:t});if(console.log("1번째 타격!"),g!=null&&g.success){Ig(t,f)&&(i(`🏋️‍♂️ ${d}는 혼란에서 회복했다!`),console.log(`${d}는 혼란에서 회복했다!`));const w=Vk(e);console.log(w);for(let b=0;b<w-1;b++){console.log(`${b+2}번째 타격!`);const v=await Zh({moveName:e.name,side:t,isAlwaysHit:!0});v!=null&&v.success&&await Tg(t,d,p,e,v==null?void 0:v.damage,n)}i("📊 총 "+w+"번 맞았다!"),console.log("총 "+w+"번 맞았다!")}return}else{d.base.ability&&Ui(d.base.ability,["리베로","변환자재"])&&(l(t,f,x=>Ng(x,[e.type])),l(t,f,x=>Cg(x,null)),i(`🔃 ${d.base.name}의 타입은 ${e.type}타입으로 변했다!`),console.log(`${d.base.name}의 타입은 ${e.type}타입으로 변했다!`));const g=await Zh({moveName:e.name,side:t});g!=null&&g.success&&(Ig(t,f)&&(i(`🏋️‍♂️ ${d}는 혼란에서 회복했다!`),console.log(`${d}는 혼란에서 회복했다!`)),await Tg(t,d,p,e,g==null?void 0:g.damage,n));return}}async function Bk(t){const{myTeam:e,enemyTeam:n}=$e.getState(),r=(t==="my"?e:n).findIndex(o=>o.currentHp>0);r!==-1&&await Vn(t,r)}function Vk(t){var s;let e=0;if((s=t.effects)==null||s.forEach(r=>{r.doubleHit&&(console.log("2회 공격 시도"),e=2),r.tripleHit&&(console.log("3회 공격 시도"),e=3),r.multiHit&&console.log("다회 공격 시도")}),e>0)return e;const n=Math.random();return t.name==="스킬링크"||n<.15?5:n<.3?4:n<.65?3:2}function zae({turn:t}){const{publicEnv:e,myEnv:n,enemyEnv:s}=$e(),{publicEffects:r}=Ar(),{weather:o,field:a,room:i,aura:l,disaster:u}=e,c=[],h=d=>{const p=r.find(f=>f.name===d);return p?` ${p.remainingTurn} / 5`:""};return o&&c.push(`☀️ 날씨: ${o}${h(o)}`),a&&c.push(`🌱 필드: ${a}${h(a)}`),i&&c.push(`⏳ 룸: ${i}${h(i)}`),l.length>0&&c.push(`✨ 오라: ${l.join(", ")}`),n.trap&&n.trap.forEach(d=>{}),s.trap&&s.trap.forEach(d=>{}),ie("div",{className:"turn-banner",children:[ie("div",{children:["턴 ",t]}),c.length>0&&ee("div",{className:"public-env",children:c.map((d,p)=>ee("div",{children:d},p))}),ie("div",{style:{flexDirection:"row"},children:[ee("div",{}),ee("div",{})]})]})}function Mae({team:t,activeIndex:e,onSwitch:n,watchMode:s}){const[r,o]=ke.useState(null),[a,i]=ke.useState(null);$e.getState();const l=u=>{i(c=>c===u?null:u)};return ie("div",{className:"swap-panel",children:[ee("h3",{children:"교체하기"}),t.map((u,c)=>{const h=c===e,d=u.currentHp<=0,p=c===r,f=c===a;return ie("div",{className:"swap-slot",children:[ie("button",{onClick:()=>o(c),disabled:d||s,children:[u.base.name," ",h?"(현재)":""]}),p&&ie("div",{style:{marginTop:"0.5rem"},children:[ee("button",{onClick:()=>l(c),children:f?"닫기":"상세보기"}),ee("button",{disabled:h,onClick:()=>n(c),style:{marginLeft:"0.5rem"},children:"교체하기"}),f&&ie("div",{className:"status-card",style:{marginTop:"0.5rem",padding:"0.5rem",border:"1px solid #ccc"},children:[ie("p",{children:["타입: ",u.base.types.join(", ")]}),ie("p",{children:["체력: ",u.currentHp," / ",u.base.hp]}),ie("p",{children:["상태이상: ",u.status.join(", ")||"없음"]}),ie("p",{children:["위치: ",u.position||"없음"]}),ie("div",{children:[ee("strong",{children:"기술 정보"}),ee("ul",{children:u.base.moves.map(m=>ie("li",{children:[m.name,": ",u.pp[m.name],", (",m.power,", ",m.accuracy,"), ",m.type]},m.name))})]})]})]})]},u.base.name)})]})}function Bae({myPokemon:t,myTeam:e,activeMy:n,isTurnProcessing:s,onAction:r,watchMode:o}){const a=t.currentHp<=0,[i,l]=ke.useState(null),[u,c]=ke.useState(!0),{turn:h,enemyTeam:d,activeEnemy:p}=$e.getState(),f=d[p].base.types;ke.useEffect(()=>{l(null)},[h]);const m=window.innerWidth<=768;return ie("div",{className:"action-panel",children:[ee("button",{className:"hint-toggle",onClick:()=>c(!u),children:"타입 상성 힌트 모드 전환"}),m&&i===null&&ie("div",{className:"action-toggle",children:[ee("button",{className:"action-toggle-btn",onClick:()=>l("fight"),disabled:a||s,children:"싸운다"}),ee("button",{className:"action-toggle-btn",onClick:()=>l("switch"),disabled:s,children:"교체"})]}),(!m||i==="fight")&&ie(fi,{children:[ie("div",{className:"move-grid",children:[u&&ee(fi,{children:t.base.moves.map(y=>{var w;const g=hl(y.type,f);let x="";return g===4&&y.category!=="변화"?x="very-effective":g===2&&y.category!=="변화"?x="effective":g===.5&&y.category!=="변화"?x="not-effective":g===.25&&y.category!=="변화"?x="not-very-effective":g===0&&y.category!=="변화"&&(x="no-effect"),ie("button",{className:`move-button ${x}`,onClick:()=>r(y),disabled:s||a||o,children:[ee("span",{className:"move-name",children:y.name}),ie("span",{className:"move-pp",children:["pp: ",t.pp[y.name]," / ",((w=t.base.moves.find(b=>b.name===y.name))==null?void 0:w.pp)??"?"]}),ie("span",{className:"move-power",children:["위력: ",y.power]}),ie("span",{className:"move-accuracy",children:["명중율: ",y.accuracy]}),ee("span",{className:`move-type ${y.type}`,children:y.type})]},y.name)})}),!u&&ee(fi,{children:t.base.moves.map(y=>{var g;return ie("button",{className:"move-button",onClick:()=>r(y),disabled:s||a||o,children:[ee("span",{className:"move-name",children:y.name}),ie("span",{className:"move-pp",children:["pp: ",t.pp[y.name]," / ",((g=t.base.moves.find(x=>x.name===y.name))==null?void 0:g.pp)??"?"]}),ie("span",{className:"move-power",children:["위력: ",y.power]}),ie("span",{className:"move-accuracy",children:["명중율: ",y.accuracy]}),ee("span",{className:`move-type ${y.type}`,children:y.type})]},y.name)})})]}),m&&ee("button",{className:"action-toggle-btn",onClick:()=>l("switch"),disabled:s,children:"교체"})]}),(!m||i==="switch")&&ie(fi,{children:[ee(Mae,{team:e,activeIndex:n,onSwitch:y=>r({type:"switch",index:y}),watchMode:o}),m&&ee("button",{className:"action-toggle-btn",onClick:()=>l("fight"),disabled:s,children:"싸운다"})]})]})}function Wk({logs:t}){const e=ke.useRef(null);return ke.useEffect(()=>{var n;(n=e.current)==null||n.scrollIntoView({behavior:"smooth"})},[t]),ie("div",{className:"log-panel",children:[ee("h4",{children:"전투 로그"}),ee("ul",{children:t.map((n,s)=>ee("li",{children:n},s))}),ee("div",{ref:e})," "]})}const Uk=t=>{const{myTeam:e,enemyTeam:n,activeMy:s,activeEnemy:r,addLog:o,publicEnv:a}=$e.getState(),i=t==="my"?e:n,l=t==="my"?s:r,u=t==="my"?n:e,c=i[t==="my"?s:r],h=u[t==="my"?r:s],d=h.base.speed*Vr(h.rank.speed)*(h.status.includes("마비")?.5:1),p=c.base.speed*Vr(c.rank.speed)*(c.status.includes("마비")?.5:1),f=a.room==="트릭룸"?p<d:p>d,m=Math.random(),y=c.currentHp/c.base.hp,g=h.currentHp/h.base.hp,x=c.base.moves.filter(se=>c.pp[se.name]>0),w=(se,ce)=>se.reduce((me,pe)=>Math.max(me,hl(pe,ce)),1),b=()=>{let se=null,ce=-1,me=1;return x.forEach(pe=>{var Ee;const Ie=c.base.types.includes(pe.type)?1.5:1;me=mA(pe,t);const _e=hl(pe.type,h.base.types);let ze;(Ee=pe.effects)==null||Ee.forEach(Ke=>{Ke.doubleHit?ze=2*pe.power:Ke.multiHit&&(ze=3*pe.power)}),ze=pe.power??0;const Te=ze*Ie*me*_e;Te>ce&&(ce=Te,se=pe)}),se},v=()=>{var ce;const se=((ce=c.base.ability)==null?void 0:ce.name)==="심술꾸러기";return x.find(me=>{var pe;return(pe=me.effects)==null?void 0:pe.some(Ie=>{var _e,ze,Te;return Ie.chance>.5&&((_e=Ie.statChange)==null?void 0:_e.some(Ee=>Ee.target==="self"&&Ee.stat==="speed"&&Ee.change>0))||((ze=Ie.statChange)==null?void 0:ze.some(Ee=>Ee.target==="opponent"&&Ee.stat==="speed"&&Ee.change<0))||se&&((Te=Ie.statChange)==null?void 0:Te.some(Ee=>Ee.target==="self"&&Ee.stat==="speed"&&Ee.change<0))})})||null},k=()=>{var ce;const se=((ce=c.base.ability)==null?void 0:ce.name)==="심술꾸러기";return x.find(me=>{var pe;return(pe=me.effects)==null?void 0:pe.some(Ie=>{var _e,ze;return Ie.chance>.5&&((_e=Ie.statChange)==null?void 0:_e.some(Te=>Te.target==="self"&&(Te.stat==="attack"||Te.stat==="spAttack"||Te.stat==="critical")&&Te.change>0))||se&&((ze=Ie.statChange)==null?void 0:ze.some(Te=>Te.target==="self"&&(Te.stat==="attack"||Te.stat==="spAttack")&&Te.change<0))})})||null},$=()=>x.find(se=>se.uTurn&&se.pp>0)||null,N=()=>x.find(se=>se.priority&&se.pp>0)||null,E=()=>x.find(se=>{var ce;return(ce=se.effects)==null?void 0:ce.some(me=>me.heal)})||null,T=()=>{const se=x.filter(ce=>{var me;return(me=ce.effects)==null?void 0:me.forEach(pe=>{var Ie;return pe.chance>.5&&((Ie=pe.statChange)==null?void 0:Ie.some(_e=>_e.target==="self"&&_e.change>0))})});return se.length===0?null:se[0]},R=w(c.base.types,h.base.types),z=w(h.base.types,c.base.types),P=b(),W=T(),M=$(),U=v(),j=k(),_=N(),B=E(),H=x.find(se=>se.category==="변화"&&se!==W),X=i.some((se,ce)=>ce!==r&&se.currentHp>0),Q=y<.35,Z=y>.8,re=g<.35,Y=g<.2,J=i[l].rank.attack>1||i[l].rank.spAttack>1,oe=Wi(t);return c.currentHp<=0?{type:"switch",index:oe}:f?R>1&&!(z>1)?m<.5&&Z&&j?(o(`🦅 ${t}는 빠르므로 공격 상승 기술 사용!`),j):!Z&&J?(o(`🥊 ${t}는 강화된 공격력으로 공격!`),P):re?(o(`🦅 ${t}는 상대 포켓몬의 빈틈을 포착!`),P):Q&&B?(o(`➕ ${t}는 빠르지만 체력이 낮으므로 회복 기술 사용!`),B):m<.1&&X&&oe!==-1?(o(`🛼 ${t}는 상대 교체 예상하고 맞교체`),{type:"switch",index:oe}):m<.2&&H?(o(`🤸‍♀️ ${t}는 변화 기술 사용`),H):(o(`🥊 ${t}는 가장 강한 기술로 공격`),P):!(R>1)&&z>1?re?(o(`🦅 ${t}는 상대 포켓몬의 빈틈을 포착!`),P):M?(o(`🛼 ${t}는 빠르지만 불리하므로 유턴으로 교체!`),M):Q?(o(`🥊 ${t}는 일단은 강하게 공격!`),P):m<.15&&H?(o(`🤸‍♀️ ${t}는 변화 기술을 사용`),H):m<.55&&(X||Q)&&oe!==-1?(o(`🛼 ${t}는 빠르지만 상성상 유리한 포켓몬이 있으므로 교체`),{type:"switch",index:oe}):(o(`🥊 ${t}는 가장 강한 공격 시도`),P):R>1&&z>1?m<.1&&Z&&j?(o(`🏋️‍♂️ ${t}는 빠르므로 공격 상승 기술 사용!`),j):re?(o(`🦅 ${t}는 상대 포켓몬의 빈틈을 포착!`),P):Q&&B?(o(`➕ ${t}는 빠르지만 체력이 낮으므로 회복 기술 사용!`),B):m<.1&&X&&oe!==-1?(o(`🛼 ${t}는 상대 교체 예상하고 맞교체`),{type:"switch",index:oe}):m<.2&&H?(o(`🤸‍♀️ ${t}는 변화 기술 사용`),H):(o(`🥊 ${t}는 가장 강한 기술로 공격`),P):re?(o(`🦅 ${t}는 상대 포켓몬의 빈틈을 포착!`),P):Z&&j?(o(`🏋️‍♂️ ${t}는 공격 상승 기술 사용`),j):m<.3&&X&&oe!==-1?(o(`🦅 ${t}는 빠르지만 상대의 약점을 찌르기 위해 상대에게 유리한 포켓몬으로 교체`),{type:"switch",index:oe}):(o(`🥊 ${t}는 더 빠르기에 가장 강한 공격 시도`),P):z>1&&!(R>1)?Y&&_?(o(`🦅 ${t}는 상대 포켓몬의 빈틈을 포착하여 선공기 사용!`),P):m<.2&&U?(o(`🦅 ${t}는 상대의 맞교체 또는 랭크업을 예측하고 스피드 상승을 시도!`),U):m<.4&&X&&oe!==-1?(o(`🐢 ${t}는 느리고 불리하므로 교체 선택`),{type:"switch",index:oe}):(o(`🥊 ${t}는 최고 위력기를 선택`),P):R>1&&!(z>1)?m<.4&&Q&&X&&oe!==-1?(o(`🐢 ${t}는 느리고 상성은 유리하지만 체력이 낮아 교체를 시도한다!`),{type:"switch",index:oe}):U&&Z?(o(`🐢 ${t}는 느리지만 상성이 유리하고 체력이 높아 스피드 상승을 시도한다!`),U):m<.1&&Z&&X&&M?(o(`🐢 ${t}는 상성은 유리하지만 상대의 교체를 예상하고 유턴을 사용한다!`),M):m<.4?(o(`🥊 ${t}는 상성 우위를 살려 가장 강한 기술로 공격한다!`),P):m<.6&&H?(o(`🤸‍♀️ ${t}는 변화를 시도한다!`),H):m<.75&&X&&oe!==-1?(o(`🛼 ${t}는 상대의 교체를 예상하고 맞교체한다!`),{type:"switch",index:oe}):(o(`🥊 ${t}는 예측샷으로 최고 위력기를 사용한다!`),P):Z&&U?(o(`🦅 ${t}는 스피드 상승을 시도한다!`),U):Z&&g<.5?(o(`🥊 ${t}는 상대의 체력이 적고 상성이 같아서 가장 강한 기술로 공격한다!`),P):m<.2&&X&&oe!==-1?(o(`🐢 ${t}는 상성이 같지만 느려서 상대에게 유리한 포켓몬으로 교체한다!`),{type:"switch",index:oe}):(o(`🥊 ${t}는 상성이 같아서 가장 강한 기술로 공격한다!`),P)};function Vae({watchMode:t,watchCount:e,watchDelay:n}){const{myTeam:s,enemyTeam:r,activeMy:o,activeEnemy:a,logs:i,turn:l,isSwitchWaiting:u,switchRequest:c,setTurn:h,setMyTeam:d,setEnemyTeam:p,clearSwitchRequest:f,addLog:m}=$e.getState(),[y,g]=ke.useState("battle"),[x,w]=ke.useState(!0);ke.useEffect(()=>{(()=>{const J=s.filter(se=>se.currentHp>0).length,oe=r.filter(se=>se.currentHp>0).length;(J===1||oe===1)&&g("last_one")})()},[s,r,l]),ke.useEffect(()=>(x?Yt.getInstance().play(y):Yt.getInstance().mute(!0),()=>Yt.getInstance().stop()),[y]);const[b,v]=ke.useState(0),k=s[o],$=r[a],[N,E]=ke.useState(null),[T,R]=ke.useState(!1),[z,P]=ke.useState(!1),[W,M]=ke.useState(null);ke.useEffect(()=>{u&&(c==null?void 0:c.side)==="my"&&(console.log("유턴 효과 실행중...3"),P(!0),M(()=>Y=>{c!=null&&c.onSwitch&&(c.onSwitch(Y),console.log("유턴 효과 실행중...4")),f(),P(!1)}))},[u,c]);const U=!s.some(Y=>Y.currentHp>0)||!r.some(Y=>Y.currentHp>0),j=ke.useRef(!1);ke.useEffect(()=>{t&&!T&&!U&&!j.current&&(j.current=!0,(async()=>{if(await new Promise(se=>{setTimeout(()=>{console.log("관전모드 턴 시작 전 기다림"),se()},1e3)}),t&&s[o].currentHp<=0&&r[a].currentHp>0){console.log("my는 포켓몬이 쓰러졌기에 새 포켓몬을 냄");const se=Wi("my");await Vn("my",se)}else if(t&&s[o].currentHp>0&&r[a].currentHp<=0){console.log("enemy는 포켓몬이 쓰러졌기에 새 포켓몬을 냄");const se=Wi("enemy");await Vn("enemy",se)}else if(t&&s[o].currentHp<=0&&r[a].currentHp<=0){console.log("양쪽 포켓몬이 다 쓰러졌기에 새 포켓몬을 냄");const{activeMy:se}=$e.getState();Bk("my"),Bk("enemy"),wp(s[se],"my")}await new Promise(se=>{setTimeout(()=>{console.log("관전모드 포켓몬 내보낸 후 기다림"),se()},1e3)}),R(!0);const J=Uk("my");console.log("왼쪽 플레이어 행동:",J);const oe=Uk("enemy");console.log("오른쪽 플레이어 행동:",oe),await Mk(J,oe,t),console.log(`${l}턴 종료`),m(`${l}번째 턴 종료`),h(l+1),R(!1),j.current=!1})()),t&&U&&b<e-1&&setTimeout(()=>{window.location.reload()},1e3)},[l,U,t,b]);let _=!1;_=s[o].currentHp<=0,ke.useEffect(()=>{_&&(P(!0),M(()=>async Y=>{console.log("my 포켓몬이 쓰러져서 교체 실행"),await Vn("my",Y),f(),P(!1)}))},[_]);const B=async Y=>{if(!t){R(!0);const J=await xae("enemy");console.log("ai행동:"+J),await Mk(Y,J),console.log(`${l}턴 종료`),m(`${l}번째 턴 종료`),h(l+1),E(null);const{enemyTeam:oe,activeEnemy:se}=$e.getState(),ce=oe[se];if(await new Promise(me=>{setTimeout(()=>{console.log("asdsad"),me()},1e3)}),!t&&ce.currentHp<=0){console.log("ai 포켓몬 쓰러져서 교체");const me=Wi("enemy");await Vn("enemy",me)}R(!1)}},[H,X]=ke.useState(null),[Q,Z]=ke.useState(null),re=Y=>{Z(J=>J===Y?null:Y)};if(U){let Y="승리";return s.some(J=>J.currentHp>0)?Y="AI에게 승리!":r.some(J=>J.currentHp>0)&&(Y="AI에게 패배..."),t&&(s.some(J=>J.currentHp>0)?Y="왼쪽 플레이어 승리":r.some(J=>J.currentHp>0)&&(Y="오른쪽 플레이어 승리")),ie("div",{children:[ee(vae,{winner:Y}),ee(Wk,{logs:i})]})}return ie("div",{className:"battle-layout",children:[ee("button",{onClick:()=>{w(Y=>{const J=!Y;return Yt.getInstance().mute(!J),J})},style:{position:"fixed",top:10,right:10,zIndex:9999,padding:"0.5rem",background:x?"#3f51b5":"#999",color:"white"},children:x?"브금 끄기":"브금 켜기"}),z&&!t&&ee("div",{style:{position:"fixed",top:0,left:0,width:"100%",height:"100%",backgroundColor:"rgba(0, 0, 0, 0.5)",display:"flex",justifyContent:"center",alignItems:"center",zIndex:9999},children:ie("div",{className:"switch-modal",children:[_&&ee("h3",{children:"포켓몬이 쓰러졌습니다... 어느 포켓몬으로 교체하시겠습니까?"}),!_&&ee("h3",{children:"어느 포켓몬으로 교체하시겠습니까?"}),s.map((Y,J)=>{const oe=J===o,se=Y.currentHp<=0,ce=J===H,me=J===Q;return ie("div",{className:"swap-slot",children:[ie("button",{disabled:se,onClick:()=>X(J),children:[Y.base.name," ",oe?"(현재)":""]}),ce&&ie("div",{style:{marginTop:"0.5rem"},children:[ee("button",{onClick:()=>re(J),children:me?"닫기":"상세보기"}),ee("button",{disabled:oe,onClick:()=>{W&&W(J)},style:{marginLeft:"0.5rem"},children:"교체하기"}),me&&ie("div",{className:"status-card",style:{marginTop:"0.5rem",padding:"0.5rem",border:"1px solid #ccc"},children:[ie("p",{children:["타입: ",Y.base.types.join(", ")]}),ie("p",{children:["체력: ",Y.currentHp," / ",Y.base.hp]}),ie("p",{children:["상태이상: ",Y.status.join(", ")||"없음"]}),ie("p",{children:["위치: ",Y.position||"없음"]}),ie("div",{children:[ee("strong",{children:"기술 정보"}),ee("ul",{children:Y.base.moves.map(pe=>ie("li",{children:[pe.name,": ",Y.pp[pe.name],", (",pe.power,", ",pe.accuracy,"), ",pe.type]},pe.name))})]})]})]})]},Y.base.name)})]})}),ee(zae,{turn:l}),ie("div",{className:"main-area",children:[ie("div",{className:"pokemon_log",children:[ee(Wk,{logs:i}),ee(XO,{my:k,enemy:$})]}),ee("div",{className:"side-panel",children:ee(Bae,{myPokemon:k,myTeam:s,activeMy:o,isTurnProcessing:T,onAction:t?()=>{}:B,watchMode:t})})]})]})}const Wae={attack:0,spAttack:0,defense:0,spDefense:0,speed:0,accuracy:0,dodge:0,critical:0};function Eg(t){if(!t||!t.moves)throw new Error(`createBattlePokemon: 유효하지 않은 포켓몬 데이터: ${JSON.stringify(t)}`);const e={};return t.moves.forEach(n=>{const s=n.pp??10;e[n.name]=s}),{base:{...t,hp:t.hp+75,attack:t.attack+20,spAttack:t.spAttack+20,defense:t.defense+20,spDefense:t.spDefense+20,speed:t.speed+20},currentHp:t.hp+75,pp:e,rank:Wae,status:[],position:null,lockedMove:null,isActive:!1}}const Gk=()=>ie("div",{style:Hk.container,children:[ie("p",{style:Hk.text,children:["© ",new Date().getFullYear()," Yakemon. All rights reserved."]}),ee("a",{href:"https://github.com/Dindb-dong/Yakemon",target:"_blank",rel:"noopener noreferrer",style:{color:"#007bff",textDecoration:"none"},children:"Visit my GitHub"})]}),Hk={container:{width:"100%",backgroundColor:"#f8f9fa",textAlign:"center",padding:"10px 0",boxShadow:"0 -2px 5px rgba(0, 0, 0, 0.1)"},text:{margin:0,fontSize:"14px",color:"#6c757d"}};function Uae(){const[t,e]=ke.useState(!1),{setMyTeam:n,setEnemyTeam:s}=$e(),[r,o]=ke.useState(!1),[a,i]=ke.useState(1),[l,u]=ke.useState(1.5),{addLog:c}=$e.getState(),h=ke.useCallback((d,p,f,m)=>{o(p),i(f||1),u(m||1.5),p&&console.log("관전모드 시작");const y=(k,$=[])=>{const N=$y.filter(E=>E.types.includes(k)&&!$.includes(E));return N[Math.floor(Math.random()*N.length)]},g=["불","물","풀"].map(k=>y(k)),w=[...["불","물","풀"].map(k=>y(k,g))].sort(()=>Math.random()-.5);let b=[];d.length!==3?(console.log("선택된 포켓몬:",g),b=g.map((k,$)=>((!k||!k.moves)&&console.error(`playerPokemons[${$}]가 이상함:`,k),Eg(k)))):(console.log("선택된 포켓몬:",d),b=d.map((k,$)=>((!k||!k.moves)&&console.error(`playerPokemons[${$}]가 이상함:`,k),Eg(k)))),console.log("AI 포켓몬:",w);const v=w.map((k,$)=>((!k||!k.moves)&&console.error(`aiPokemons[${$}]가 이상함:`,k),Eg(k)));n(b),s(v),e(!0),wp(b[0],"my"),c(`🐶 my ${b[0].base.name}이/가 전투에 나왔다!`),console.log(`my ${b[0].base.name}이/가 전투에 나왔다!`),wp(v[0],"enemy"),c(`🐱 enemy ${v[0].base.name}이/가 전투에 나왔다!`),console.log(`enemy ${v[0].base.name}이/가 전투에 나왔다!`)},[n,s]);return ee("div",{className:"app",children:t?ie("div",{children:[ee(Vae,{watchMode:r,watchCount:a,watchDelay:l}),ee(Gk,{})]}):ie("div",{children:[ee(wae,{onSelect:h}),ee(Gk,{})]})})}Dg.createRoot(document.getElementById("root")).render(ee(Rg.StrictMode,{children:ee(Uae,{})}));
